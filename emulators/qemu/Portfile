# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0
PortGroup compiler_blacklist_versions 1.0
PortGroup legacysupport 1.1

# clock_gettime
legacysupport.newest_darwin_requires_legacy 16

name                    qemu
version                 7.1.0
revision                1
categories              emulators
license                 GPL-2+
maintainers             {raimue @raimue} \
                        openmaintainer

description             Emulator for various architectures
long_description        QEMU is a generic and open source machine emulator. \
                        It can run OSes and programs made for one machine on a \
                        different machine. By using dynamic translation, it \
                        achieves very good performance.

homepage                https://www.qemu.org
master_sites            https://download.qemu.org/
use_xz                  yes

checksums               rmd160  01c82bed8b0219935c00981e16b573004b3802d0 \
                        sha256  a0634e536bded57cf38ec8a751adb124b89c776fe0846f21ab6c6728f1cbbbe6 \
                        size    121833004

depends_build           port:texinfo \
                        port:libtool \
                        port:meson \
                        port:ninja \
                        port:pkgconfig \
                        port:py39-sphinx

# perl5 is only used for build scripts, no linking
depends_build-append    port:perl5

license_noconflict      perl5

depends_lib             path:lib/pkgconfig/glib-2.0.pc:glib2 \
                        port:zlib \
                        path:lib/pkgconfig/pixman-1.pc:libpixman

# This patch sets the python interpreter from meson's shebang line
patchfiles-append       patch-qemu-configure.diff

# "error: unknown type name 'fpunchhole_t'" pre-10.12.4
patchfiles-append       patch-qemu-punchhole.diff

# IPPROTO workarounds
patchfiles-append       patch-qemu-net-colo.diff

# MADV_DONTNEED workaround
patchfiles-append       patch-qemu-include-qemu-madvise_h.diff

# MAP_JIT workaround
patchfiles-append       patch-qemu-tcg-region.diff

# "ERROR: You need at least GCC v7.5 or Clang v6.0 (or XCode Clang v10.0)"
compiler.blacklist      {clang < 1000} {macports-clang-[3-5].*} {macports-gcc-[56]} {*gcc-[34].*}
if {${os.platform} eq "darwin" && ${os.major} < 11 && [string match *clang* ${configure.compiler}]} {
    # Emulated TLS needed, which was added in LLVM 3.8
    configure.cflags-append     -femulated-tls
}

if {"${configure.build_arch}" eq "arm64"} {
    set host_cpu "aarch64"
} else {
    set host_cpu "${configure.build_arch}"
}
# Select compiler
configure.args          --cpu=${host_cpu} \
                        --cc=${configure.cc} \
                        --objcc=${configure.objc} \
                        --host-cc=${configure.cc} \
                        --sphinx-build=${prefix}/bin/sphinx-build-3.9

# Use MacPorts meson, which includes platform-specific fixes
configure.args-append   --meson=${prefix}/bin/meson

# Do not use iasl, even if it is installed, #43911
configure.args-append   --iasl=/usr/bin/false

# Select features
configure.args-append   --disable-cocoa \
                        --disable-curses \
                        --disable-capstone \
                        --disable-sdl \
                        --disable-gtk \
                        --disable-opengl \
                        --enable-bzip2 \
                        --enable-hvf \
                        --disable-curl \
                        --disable-attr \
                        --disable-vde \
                        --disable-brlapi \
                        --disable-cap-ng \
                        --disable-spice-protocol \
                        --disable-spice \
                        --disable-libiscsi \
                        --disable-rbd \
                        --disable-smartcard \
                        --disable-libusb \
                        --disable-usb-redir \
                        --disable-seccomp \
                        --disable-linux-aio \
                        --disable-glusterfs \
                        --disable-rdma \
                        --disable-libssh \
                        --disable-vnc \
                        --disable-gnutls \
                        --disable-gcrypt \
                        --disable-nettle \
                        --disable-numa \
                        --disable-xen \
                        --disable-snappy \
                        --disable-lzo \
                        --disable-lzfse \
                        --disable-png \
                        --disable-zstd \
                        --disable-dbus-display \
                        --enable-virtfs

# Use 'smbd' installed by samba port, rather than macOS; latter does not work with qemu.
configure.args-append   --smbd=${prefix}/sbin/smbd

# Hypervisor.framework introduced in 10.10
if {${os.platform} eq "darwin" && ${os.major} < 14} {
    configure.args-replace --enable-hvf --disable-hvf
}

# pthread_fchdir_np introduced in 10.12
if {${os.platform} eq "darwin" && ${os.major} < 16} {
    configure.args-replace --enable-virtfs --disable-virtfs
}

# libtool: unknown option character `-' in: --mode=compile
configure.env-append   LIBTOOL=${prefix}/bin/glibtool

set target_list {}
pre-configure {
    configure.args-append --target-list=${target_list}
    configure.args-append --extra-ldflags="${configure.ldflags}"
}

# The qemu build system bugs out when using in-source-tree builds.
# During builds, files are generated in directories such as pc-bios, which are
# prerequites to the config-host.mak file. The latter gets generated during a
# configure run and can (in theory) be used for reconfiguring the package.
# Practically, this reconfiguration fails because it doesn't take special flags
# into account like LDFLAGS and the like, so we have to avoid reconfiguring
# qemu.
# Additionally, just "touch"ing the file doesn't work either, because it is a
# prerequisite of other generated file which will, likewise, be generated twice.
# Using out-of-source builds we can work around this issue in a pretty nice way.
configure.dir   "${workpath}/build"

configure.cmd   "${worksrcpath}/configure"
build.dir       "${workpath}/build"

pre-configure {
    file mkdir ${configure.dir}
}

# disable silent rules
build.args-append       V=1

default_variants        +usb

# https://trac.macports.org/ticket/62164#comment:10
if {${os.platform} eq "darwin" && ${os.major} < 18} {
    default_variants-append +curses
}

foreach t {i386 x86_64 alpha {arm aarch64} cris hppa m68k {microblaze microblazeel} {mips mipsel mips64 mips64el} \
           nios2 moxie or1k {ppc ppc64} riscv32 riscv64 rx s390x {sh4 sh4eb} {sparc sparc64} tricore {xtensa xtensaeb}} {
    variant target_[lindex $t 0] description "Add target support for [join $t {, }]" "append target_list \",[join $t -softmmu,]-softmmu\""
}
default_variants-append +target_i386 +target_x86_64 +target_arm

if {![variant_isset curses]} {
    default_variants-append +cocoa
}

variant cocoa description {Use the native Mac OS X graphical user interface} {
    configure.args-replace  --disable-cocoa --enable-cocoa
}

variant curses description {Use the curses text-only user interface} {
    configure.args-replace  --disable-curses --enable-curses
    configure.args-append   --extra-cflags=-DNCURSES_WIDECHAR=1
    depends_lib-append      port:ncurses
}

# XXX: gtk/sdl need libepoxy for OpenGL

variant gtk3 description {Use the GTK+3 graphical user interface} conflicts cocoa {
    configure.args-replace --disable-gtk --enable-gtk
    depends_lib-append     path:lib/pkgconfig/gtk+-3.0.pc:gtk3 port:vte
}

variant sdl2 description {Use the SDL 2 graphical user interface} conflicts cocoa {
    configure.args-replace --disable-sdl --enable-sdl
    depends_lib-append      port:libsdl2
}

variant usb description {Support forwarding of USB devices to the guest} {
    configure.args-replace  --disable-libusb --enable-libusb
    depends_lib-append      path:lib/pkgconfig/libusb-1.0.pc:libusb
}

variant curl description {Support network block devices using CURL} {
    # Factored to a separate variant to enable binary packages, as the
    # CURL port defaults to using OpenSSL for cryptography, which triggers
    # a licensing conflict.
    configure.args-replace  --disable-curl --enable-curl
    depends_lib-append      port:curl
}

variant vnc description {Support VNC server} {
    configure.args-replace  --disable-png --enable-png \
                            --disable-vnc --enable-vnc
    configure.args-append   --enable-gnutls \
                            --enable-vnc-jpeg \
                            --enable-vnc-sasl
    depends_lib-append      path:lib/pkgconfig/gnutls.pc:gnutls \
                            port:cyrus-sasl2 \
                            path:include/turbojpeg.h:libjpeg-turbo \
                            port:libpng
}

variant spice_protocol description {Support Spice protocol} {
    configure.args-replace  --disable-spice-protocol --enable-spice-protocol
    depends_lib-append      port:spice-protocol
}

variant spice requires spice_protocol description {Support Spice server} {
    configure.args-replace  --disable-spice --enable-spice
    configure.args-append   --enable-gnutls
    depends_lib-append      path:lib/pkgconfig/gnutls.pc:gnutls \
                            port:spice-server
}

variant vde description {Support VDE networking} {
    configure.args-replace  --disable-vde --enable-vde
    depends_lib-append      port:vde2
}

variant lzo description {Support LZO compression} {
    configure.args-replace  --disable-lzo --enable-lzo
    depends_lib-append      port:lzo
}

variant lzfse description {Support lzfse compression} {
    configure.args-replace  --disable-lzfse --enable-lzfse
    depends_lib-append      port:lzfse
}

variant snappy description {Support Snappy compression} {
    configure.args-replace  --disable-snappy --enable-snappy
    depends_lib-append      port:snappy
}

variant zstd description {Support zstd compression} {
    configure.args-replace  --disable-zstd --enable-zstd
    depends_lib-append      port:zstd
}

variant ssh description {Support remote block devices over SSH} {
    configure.args-replace  --disable-libssh --enable-libssh
    depends_lib-append      port:libssh
}

variant dbus description {Export the VM display through D-Bus} {
    configure.args-replace  --disable-dbus-display --enable-dbus-display
    configure.args-append   --enable-modules
}

# Default universal variant does not work
universal_variant       no

platform darwin 8 {
    depends_build-append port:gmake
    build.cmd ${prefix}/bin/gmake
}

livecheck.type  regex
livecheck.url   [lindex ${master_sites} 0]
livecheck.regex ${name}-(\\d+(?:\\.\\d+)*)(?:-\\d+)*\\.tar
