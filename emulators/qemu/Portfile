PortSystem 1.0

name                    qemu
version                 2.10.1
categories              emulators
license                 GPL-2+
platforms               darwin
maintainers             {raimue @raimue} \
                        openmaintainer

description             Emulator for various architectures
long_description        QEMU is a generic and open source machine emulator. \
                        It can run OSes and programs made for one machine on a \
                        different machine. By using dynamic translation, it \
                        achieves very good performance.

homepage                https://www.qemu.org
master_sites            https://download.qemu.org/
use_bzip2               yes

checksums               rmd160  4134191b7de8484a3e995ca08a2edd51fd8152d7 \
                        sha256  8e040bc7556401ebb3a347a8f7878e9d4028cf71b2744b1a1699f4e741966ba8 \
                        size    30821108

# Due to the bundled u-boot sources, the qemu tarball cannot be extracted on
# a case-insensitive file system. The sources are not used, just shipped along
# with the compiled rom. Excluding the conflicting file to allow extraction.
# https://bugs.launchpad.net/qemu/+bug/1714750
extract.post_args-append --exclude qemu-${version}/roms/u-boot/scripts/Kconfig

patchfiles              patch-configure.diff

depends_build           port:texinfo \
                        port:libtool \
                        port:pkgconfig

# python is only used for build scripts, no linking
depends_build-append    port:python27
license_noconflict      python27

depends_lib             port:curl \
                        path:lib/pkgconfig/glib-2.0.pc:glib2 \
                        port:zlib \
                        path:lib/pkgconfig/pixman-1.pc:libpixman

# see #39058
compiler.blacklist      gcc-4.0 gcc-3.3 apple-gcc-4.0

# Select compiler
configure.args          --cpu=${configure.build_arch} \
                        --cc=${configure.cc} \
                        --objcc=${configure.objc} \
                        --host-cc=${configure.cc} \
                        --python=${prefix}/bin/python2.7

# Do not use iasl, even if it is installed, #43911
configure.args-append   --iasl=/usr/bin/false

# Select features
configure.args-append   --disable-cocoa \
                        --disable-curses \
                        --disable-sdl \
                        --disable-gtk \
                        --disable-opengl \
                        --enable-curl \
                        --enable-bzip2 \
                        --with-system-pixman \
                        --disable-attr \
                        --disable-vde \
                        --disable-brlapi \
                        --disable-bluez \
                        --disable-cap-ng \
                        --disable-spice \
                        --disable-libiscsi \
                        --disable-rbd \
                        --disable-smartcard \
                        --disable-libusb \
                        --disable-usb-redir \
                        --disable-seccomp \
                        --disable-linux-aio \
                        --disable-glusterfs \
                        --disable-rdma \
                        --disable-libssh2 \
                        --disable-vnc \
                        --disable-gnutls \
                        --disable-gcrypt \
                        --disable-nettle \
                        --disable-numa \
                        --disable-xen \
                        --disable-snappy \
                        --disable-lzo

# libtool: unknown option character `-' in: --mode=compile
configure.env-append   LIBTOOL=${prefix}/bin/glibtool

set target_list {}
pre-configure {
    configure.args-append --target-list=${target_list}
}

# disable silent rules
build.args-append       V=1

default_variants        +usb

foreach t {i386 x86_64 alpha {arm aarch64} cris lm32 m68k {microblaze microblazeel} {mips mipsel mips64 mips64el} \
           moxie or32 {ppc ppcemb ppc64} s390x {sh4 sh4eb} {sparc sparc64} tricore unicore32 {xtensa xtensaeb}} {
    variant target_[lindex $t 0] description "Add target support for [join $t {, }]" "append target_list \",[join $t -softmmu,]-softmmu\""
}
default_variants-append +target_i386 +target_x86_64

if {![variant_isset curses]} {
    default_variants-append +cocoa
}

variant cocoa description {Use the native Mac OS X graphical user interface} {
    configure.args-replace  --disable-cocoa --enable-cocoa
}

variant curses description {Use the curses text-only user interface} {
    configure.args-replace  --disable-curses --enable-curses
    configure.args-append   --extra-cflags=-DNCURSES_WIDECHAR=1
    depends_lib-append      port:ncurses
}

# XXX: gtk/sdl need libepoxy for OpenGL

# XXX: Builds, but does not work as expected at runtime
#variant gtk3 description {Build GTK+ GUI for GTK+ 3 (experimental)} conflicts cocoa curses gtk2 sdl sdl2 {
#    configure.args-replace --disable-gtk --enable-gtk
#    configure.args-append --with-gtkabi=3.0
#    depends_lib-append     port:gtk3 port:vte
#}

# XXX: Builds, but user input does not work at runtime
#variant gtk2 description {Use the GTK+ 2 graphical user interface} conflicts cocoa curses gtk3 sdl sdl2 {
#    configure.args-replace --disable-gtk --enable-gtk
#    configure.args-append  --with-gtkabi=2.0
#    depends_lib-append     port:gtk2 port:vte
#}

# XXX: Build broken due to missing X11 symbols
#variant sdl description {Use the SDL graphical user interface} conflicts cocoa curses gtk2 gtk3 sdl sdl2 {
#    configure.args-replace --disable-sdl --enable-sdl
#    depends_lib-append      port:libsdl
#}

# XXX: Broken at runtime, screen flickers and input does not work
#variant sdl2 description {Use the SDL 2 graphical user interface} conflicts cocoa curses {
#    configure.args-replace --disable-sdl --enable-sdl
#    configure.args-append --with-sdlabi=2.0
#    depends_lib-append      port:libsdl2
#}

variant usb description {Support forwarding of USB devices to the guest} {
    configure.args-replace  --disable-libusb --enable-libusb
    depends_lib-append      path:lib/pkgconfig/libusb-1.0.pc:libusb
}

variant vnc description {Support VNC server} {
    configure.args-replace  --disable-vnc --enable-vnc
    configure.args-append   --enable-gnutls \
                            --enable-vnc-sasl \
                            --enable-vnc-jpeg \
                            --enable-vnc-png
    depends_lib-append      port:gnutls \
                            port:cyrus-sasl2 \
                            path:lib/libjpeg.dylib:jpeg \
                            port:libpng
}

variant vde description {Support VDE networking} {
    configure.args-replace  --disable-vde --enable-vde
    depends_lib-append      port:vde2
}

variant lzo description {Support LZO compression} {
    configure.args-replace  --disable-lzo --enable-lzo
    depends_lib-append      port:lzo
}

variant snappy description {Support Snappy compression} {
    configure.args-replace  --disable-snappy --enable-snappy
    depends_lib-append      port:snappy
}

variant ssh description {Support remote block devices over SSH} {
    configure.args-replace  --disable-libssh2 --enable-libssh2
    depends_lib-append      port:libssh2
}

# Default universal variant does not work
universal_variant       no

platform darwin 8 {
    depends_build-append port:gmake
    build.cmd ${prefix}/bin/gmake
}

livecheck.type  regex
livecheck.url   [lindex ${master_sites} 0]
livecheck.regex ${name}-(\\d+(?:\\.\\d+)*)(?:-\\d+)*\\.tar
