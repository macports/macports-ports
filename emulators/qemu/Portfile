# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0
PortGroup compiler_blacklist_versions 1.0

# https://trac.macports.org/ticket/58700
PortGroup legacysupport 1.0

name                    qemu
version                 5.0.0
revision                1
categories              emulators
license                 GPL-2+
platforms               darwin
maintainers             {raimue @raimue} \
                        openmaintainer

description             Emulator for various architectures
long_description        QEMU is a generic and open source machine emulator. \
                        It can run OSes and programs made for one machine on a \
                        different machine. By using dynamic translation, it \
                        achieves very good performance.

homepage                https://www.qemu.org
master_sites            https://download.qemu.org/
use_xz                  yes

checksums               rmd160  58a704960cd712cf6c218216e8426a05948f6526 \
                        sha256  2f13a92a0fa5c8b69ff0796b59b86b080bbb92ebad5d301a7724dd06b5e78cb6 \
                        size    62426192

patchfiles              patch-configure.diff
patch.pre_args          -p1

depends_build           port:texinfo \
                        port:libtool \
                        port:pkgconfig

# python is only used for build scripts, no linking
depends_build-append    port:python38
license_noconflict      python38

depends_lib             path:lib/pkgconfig/glib-2.0.pc:glib2 \
                        port:zlib \
                        path:lib/pkgconfig/pixman-1.pc:libpixman

# see #39058
compiler.blacklist      {clang < 500} *gcc-4.2 *gcc-4.0 gcc-3.3
if {${os.platform} eq "darwin" && ${os.major} < 11} {
    # Emulated TLS needed, which was added in LLVM 3.8
    compiler.blacklist-append   macports-clang-3.4 macports-clang-3.3 macports-clang-3.7
    compiler.fallback-append    macports-clang-8.0 macports-clang-7.0 macports-clang-6.0 macports-clang-5.0
    configure.cflags-append     -femulated-tls
}

# Select compiler
configure.args          --cpu=${configure.build_arch} \
                        --cc=${configure.cc} \
                        --objcc=${configure.objc} \
                        --host-cc=${configure.cc} \
                        --python=${prefix}/bin/python3.8

# Do not use iasl, even if it is installed, #43911
configure.args-append   --iasl=/usr/bin/false

# Select features
configure.args-append   --disable-cocoa \
                        --disable-curses \
                        --disable-capstone \
                        --disable-sdl \
                        --disable-gtk \
                        --disable-opengl \
                        --enable-bzip2 \
                        --disable-curl \
                        --disable-attr \
                        --disable-vde \
                        --disable-brlapi \
                        --disable-cap-ng \
                        --disable-spice \
                        --disable-libiscsi \
                        --disable-rbd \
                        --disable-smartcard \
                        --disable-libusb \
                        --disable-usb-redir \
                        --disable-seccomp \
                        --disable-linux-aio \
                        --disable-glusterfs \
                        --disable-rdma \
                        --disable-libssh \
                        --disable-vnc \
                        --disable-gnutls \
                        --disable-gcrypt \
                        --disable-nettle \
                        --disable-numa \
                        --disable-xen \
                        --disable-snappy \
                        --disable-lzo \
                        --disable-lzfse \
                        --disable-zstd

# libtool: unknown option character `-' in: --mode=compile
configure.env-append   LIBTOOL=${prefix}/bin/glibtool

set target_list {}
pre-configure {
    configure.args-append --target-list=${target_list}
    configure.args-append --extra-ldflags="${configure.ldflags}"
}

# The qemu build system bugs out when using in-source-tree builds.
# During builds, files are generated in directories such as pc-bios, which are
# prerequites to the config-host.mak file. The latter gets generated during a
# configure run and can (in theory) be used for reconfiguring the package.
# Practically, this reconfiguration fails because it doesn't take special flags
# into account like LDFLAGS and the like, so we have to avoid reconfiguring
# qemu.
# Additionally, just "touch"ing the file doesn't work either, because it is a
# prerequisite of other generated file which will, likewise, be generated twice.
# Using out-of-source builds we can work around this issue in a pretty nice way.
configure.dir   "${workpath}/build"

configure.cmd   "${worksrcpath}/configure"
build.dir       "${workpath}/build"

pre-configure {
    file mkdir ${configure.dir}
}

# disable silent rules
build.args-append       V=1

default_variants        +usb

foreach t {i386 x86_64 alpha {arm aarch64} cris hppa lm32 m68k {microblaze microblazeel} {mips mipsel mips64 mips64el} \
           nios2 moxie or1k {ppc ppc64} riscv32 riscv64 rx s390x {sh4 sh4eb} {sparc sparc64} tricore unicore32 {xtensa xtensaeb}} {
    variant target_[lindex $t 0] description "Add target support for [join $t {, }]" "append target_list \",[join $t -softmmu,]-softmmu\""
}
default_variants-append +target_i386 +target_x86_64

if {![variant_isset curses]} {
    default_variants-append +cocoa
}

variant cocoa description {Use the native Mac OS X graphical user interface} {
    configure.args-replace  --disable-cocoa --enable-cocoa
}

variant curses description {Use the curses text-only user interface} {
    configure.args-replace  --disable-curses --enable-curses
    configure.args-append   --extra-cflags=-DNCURSES_WIDECHAR=1
    depends_lib-append      port:ncurses
}

# XXX: gtk/sdl need libepoxy for OpenGL

# XXX: Builds, but does not work as expected at runtime
#variant gtk3 description {Build GTK+ GUI for GTK+ 3 (experimental)} conflicts cocoa curses gtk2 sdl sdl2 {
#    configure.args-replace --disable-gtk --enable-gtk
#    configure.args-append --with-gtkabi=3.0
#    depends_lib-append     port:gtk3 port:vte
#}

# XXX: Builds, but user input does not work at runtime
#variant gtk2 description {Use the GTK+ 2 graphical user interface} conflicts cocoa curses gtk3 sdl sdl2 {
#    configure.args-replace --disable-gtk --enable-gtk
#    configure.args-append  --with-gtkabi=2.0
#    depends_lib-append     port:gtk2 port:vte
#}

# XXX: Build broken due to missing X11 symbols
#variant sdl description {Use the SDL graphical user interface} conflicts cocoa curses gtk2 gtk3 sdl sdl2 {
#    configure.args-replace --disable-sdl --enable-sdl
#    depends_lib-append      port:libsdl
#}

# XXX: Broken at runtime, screen flickers and input does not work
#variant sdl2 description {Use the SDL 2 graphical user interface} conflicts cocoa curses {
#    configure.args-replace --disable-sdl --enable-sdl
#    configure.args-append --with-sdlabi=2.0
#    depends_lib-append      port:libsdl2
#}

variant usb description {Support forwarding of USB devices to the guest} {
    configure.args-replace  --disable-libusb --enable-libusb
    depends_lib-append      path:lib/pkgconfig/libusb-1.0.pc:libusb
}

variant curl description {Support network block devices using CURL} {
    # Factored to a separate variant to enable binary packages, as the
    # CURL port defaults to using OpenSSL for cryptography, which triggers
    # a licensing conflict.
    configure.args-replace  --disable-curl --enable-curl
    depends_lib-append      port:curl
}

variant vnc description {Support VNC server} {
    configure.args-replace  --disable-vnc --enable-vnc
    configure.args-append   --enable-gnutls \
                            --enable-vnc-sasl \
                            --enable-vnc-jpeg \
                            --enable-vnc-png
    depends_lib-append      port:gnutls \
                            port:cyrus-sasl2 \
                            path:lib/libjpeg.dylib:jpeg \
                            port:libpng
}

variant vde description {Support VDE networking} {
    configure.args-replace  --disable-vde --enable-vde
    depends_lib-append      port:vde2
}

variant lzo description {Support LZO compression} {
    configure.args-replace  --disable-lzo --enable-lzo
    depends_lib-append      port:lzo
}

variant lzfse description {Support lzfse compression} {
    configure.args-replace  --disable-lzfse --enable-lzfse
    depends_lib-append      port:lzfse
}

variant snappy description {Support Snappy compression} {
    configure.args-replace  --disable-snappy --enable-snappy
    depends_lib-append      port:snappy
}

variant zstd description {Support zstd compression} {
    configure.args-replace  --disable-zstd --enable-zstd
    depends_lib-append      port:zstd
}

variant ssh description {Support remote block devices over SSH} {
    configure.args-replace  --disable-libssh --enable-libssh
    depends_lib-append      port:libssh
}

# Default universal variant does not work
universal_variant       no

platform darwin 8 {
    depends_build-append port:gmake
    build.cmd ${prefix}/bin/gmake
}

platform darwin {
    if {${os.major} < 15} {
        depends_build-append    port:coreutils
        patchfiles-append       patch-Makefile-legacy-mktemp-to-coreutils.diff
    }
}

livecheck.type  regex
livecheck.url   [lindex ${master_sites} 0]
livecheck.regex ${name}-(\\d+(?:\\.\\d+)*)(?:-\\d+)*\\.tar
