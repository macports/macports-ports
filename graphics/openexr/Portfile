# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                      1.0
PortGroup                       cmake 1.1
PortGroup                       github 1.0
PortGroup                       legacysupport 1.1

github.setup                    AcademySoftwareFoundation openexr 3.1.9 v
revision                        0

categories                      graphics
license                         BSD
maintainers                     {mcalhoun @MarcusCalhoun-Lopez} {mascguy @mascguy} openmaintainer

description                     OpenEXR Graphics Library
long_description                OpenEXR is a high dynamic-range (HDR) image file format developed \
                                by Industrial Light & Magic for use in computer imaging applications.

homepage                        https://www.openexr.com

github.tarball_from             tarball

checksums                       rmd160  ae1fcc23410f0065c2e5722b3d7d3a866c3dd16a \
                                sha256  18ae17ac09c5b03dedaf1d4e6da97cd247c012541a87e5f062c75ebeaaf5d326 \
                                size    20540364

# NOTE: legacysupport needed for 'sys/fcntl.h'
legacysupport.newest_darwin_requires_legacy 12
platform darwin {
    # Also need macports-libcxx for 10.7/10.8
    if { (${os.major} >= 11) && (${os.major} <= 12) } {
        legacysupport.use_mp_libcxx         yes
    }
}

if { (!(${universal_possible} && [variant_isset universal]) && ${configure.build_arch} eq "ppc")
     ||
     ((${universal_possible} && [variant_isset universal]) && "ppc" in ${configure.universal_archs}) } {
    # see description in patch file; bug in GCC, fixed in current branches, but not backported yet:
    # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=110044
    patchfiles-append           patch-ensure_pack.diff
}

depends_build-append            port:pkgconfig
depends_lib-append              port:imath \
                                port:zlib

compiler.cxx_standard           2014

test.run                        yes
test.target                     test

# only allow numbers, to avoid pre-release versions
github.livecheck.regex          {([0-9.]+)}
