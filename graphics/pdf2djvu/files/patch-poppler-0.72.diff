From 82699eee6b071c1f80682987d6842f4b61d024be Mon Sep 17 00:00:00 2001
From: Jakub Wilk <jwilk@jwilk.net>
Date: Mon, 12 Nov 2018 10:41:41 +0100
Subject: [PATCH] Use GooString::c_str() as alternative to
 GooString::getCString().
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes:

    pdf-unicode.cc: In function ‘std::__cxx11::string pdf::string_as_utf8(const String*)’:
    pdf-unicode.cc:56:35: error: ‘const String {aka const class GooString}’ has no member named ‘getCString’; did you mean ‘GooString’?

    pdf-backend.cc: In member function ‘const string pdf::Document::get_xmp()’:
    pdf-backend.cc:229:34: error: ‘const class GooString’ has no member named ‘getCString’; did you mean ‘GooString’?

    pdf-backend.cc: In constructor ‘pdf::Metadata::Metadata(pdf::Document&)’:
    pdf-backend.cc:396:45: error: ‘const class GooString’ has no member named ‘getCString’; did you mean ‘GooString’?

    pdf2djvu.cc: In member function ‘virtual void MutedRenderer::draw_link(pdf::link::Link*, const string&)’:
    pdf2djvu.cc:459:68: error: ‘const class GooString’ has no member named ‘getCString’; did you mean ‘GooString’?

    pdf2djvu.cc: In function ‘int xmain(int, char* const*)’:
    pdf2djvu.cc:1399:41: error: ‘const class GooString’ has no member named ‘getCString’; did you mean ‘GooString’?

with Poppler > 0.71.0.
---
 pdf-backend.cc | 19 +++++++++++++++++--
 pdf-backend.hh |  8 ++++++++
 pdf-unicode.cc |  2 +-
 pdf2djvu.cc    |  4 ++--
 4 files changed, 28 insertions(+), 5 deletions(-)

diff --git a/pdf-backend.cc b/pdf-backend.cc
index 52c9716..76c85d6 100644
--- pdf-backend.cc
+++ pdf-backend.cc
@@ -226,7 +226,7 @@ const std::string pdf::Document::get_xmp()
   mstring.reset(this->readMetadata());
   if (mstring.get() == nullptr)
     return "";
-  const char *cstring = mstring->getCString();
+  const char *cstring = pdf::get_c_string(*mstring);
   if (strncmp(cstring, "<?xpacket begin=", 16) != 0)
     return "";
   cstring += 16;
@@ -393,7 +393,7 @@ pdf::Metadata::Metadata(pdf::Document &document)
     char tzs = 0; int tzh = 0, tzm = 0;
     if (!pdf::dict_lookup(info_dict, field.first, &object)->isString())
       continue;
-    const char *input = object.getString()->getCString();
+    const char *input = pdf::get_c_string(object.getString());
     if (input[0] == 'D' && input[1] == ':')
       input += 2;
     int year = scan_date_digits(input, 4);
@@ -619,4 +619,19 @@ namespace pdf
   }
 }
 
+template<typename S> static auto get_c_string_impl(const S &str) -> decltype(str.c_str())
+{
+  return str.c_str();
+}
+
+template<typename S> static auto get_c_string_impl(const S &str) -> decltype(str.getCString())
+{
+  return str.getCString();
+}
+
+const char * pdf::get_c_string(const pdf::String &str)
+{
+  return get_c_string_impl<pdf::String>(str);
+}
+
 // vim:ts=2 sts=2 sw=2 et
diff --git a/pdf-backend.hh b/pdf-backend.hh
index d4c8419..8683f53 100644
--- pdf-backend.hh
+++ pdf-backend.hh
@@ -433,6 +433,14 @@ namespace pdf
 
   double get_path_area(pdf::splash::Path &path);
 
+  const char * get_c_string(const pdf::String &str);
+
+  inline const char * get_c_string(const pdf::String *str)
+  {
+    return get_c_string(*str);
+  }
+
+
 }
 
 #endif
diff --git a/pdf-unicode.cc b/pdf-unicode.cc
index a0eaaf8..19d8c40 100644
--- pdf-unicode.cc
+++ pdf-unicode.cc
@@ -53,7 +53,7 @@ std::string pdf::string_as_utf8(const pdf::String *string)
      * for description of both UTF-16 and UTF-8.
      */
     const static uint32_t replacement_character = 0xFFFD;
-    const char *cstring = string->getCString();
+    const char *cstring = pdf::get_c_string(string);
 #if POPPLER_VERSION < 3500
     size_t clength = const_cast<pdf::String *>(string)->getLength();
 #else
diff --git a/pdf2djvu.cc b/pdf2djvu.cc
index b07f287..669eba5 100644
--- pdf2djvu.cc
+++ pdf2djvu.cc
@@ -456,7 +456,7 @@ class MutedRenderer: public pdf::Renderer
     switch (link_action->getKind())
     {
     case actionURI:
-      uri += dynamic_cast<pdf::link::URI*>(link_action)->getURI()->getCString();
+      uri += pdf::get_c_string(dynamic_cast<pdf::link::URI*>(link_action)->getURI());
       break;
     case actionGoTo:
     {
@@ -1396,7 +1396,7 @@ static int xmain(int argc, char * const argv[])
       #pragma omp critical
       {
         debug(0)--;
-        debug(1) << doc->getFileName()->getCString() << ":" << std::endl;
+        debug(1) << pdf::get_c_string(doc->getFileName()) << ":" << std::endl;
         debug(0)++;
       }
       out1.reset(new MainRenderer(paper_color, config.monochrome));
