# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           muniversal 1.0

name                libjpeg-turbo
version             2.0.6
categories          graphics
platforms           darwin
license             BSD
maintainers         {larryv @larryv}

conflicts           mozjpeg

description         SIMD-accelerated libjpeg-compatible JPEG codec \
                    library
long_description    libjpeg-turbo is a JPEG image codec that uses SIMD \
                    instructions (MMX, SSE2, NEON) to accelerate \
                    baseline JPEG compression and decompression on \
                    x86, x86-64, and ARM systems. On such systems, \
                    libjpeg-turbo is generally 2-6x as fast as \
                    libjpeg, all else being equal. On other types of \
                    systems, libjpeg-turbo can still outperform \
                    libjpeg by a significant amount, by virtue of its \
                    highly-optimized Huffman coding routines. In many \
                    cases, the performance of libjpeg-turbo rivals \
                    that of proprietary high-speed JPEG codecs.
homepage            https://www.${name}.org
master_sites        sourceforge:project/${name}/${version}

checksums           sha1    5406c7676d7df89fb4da791ad5af51202910fb25 \
                    rmd160  efc242b0c43fd245093939f45bc6cc2fb951ba6e \
                    sha256  d74b92ac33b0e3657123ddcf6728788c90dc84dcb6a52013d758af3c4af481bb \
                    size    2192315

# Allow overriding CMAKE_SYSTEM_PROCESSOR
patchfiles          CMakeLists.txt.patch

if {![info exists universal_possible]} {
    set universal_possible [expr {${os.universal_supported} && [llength ${configure.universal_archs}] >= 2}]
}
if {${universal_possible} && [variant_isset universal]} {
    if {"x86_64" in ${configure.universal_archs} || "i386" in ${configure.universal_archs}} {
        depends_build-append port:nasm
    }
    set merger_configure_env(i386)  ASM_NASM=${prefix}/bin/nasm
    set merger_configure_env(x86_64)    ASM_NASM=${prefix}/bin/nasm
    foreach uarch {arm64 i386 ppc ppc64 x86_64} {
        set merger_configure_args(${uarch}) -DOVERRIDE_SYSTEM_PROCESSOR=${uarch}
    }
} elseif {${configure.build_arch} in {i386 x86_64}} {
    depends_build-append port:nasm
    configure.env       ASM_NASM=${prefix}/bin/nasm
}
configure.args      -DWITH_JPEG8=1

variant java description "Add Java support" {
    PortGroup           java 1.0
    java.version        1.8
    java.fallback       openjdk8
    configure.args-append -DWITH_JAVA=ON
}

test.run            yes
test.env            CTEST_OUTPUT_ON_FAILURE=1

pre-activate {
    # deactivate older, conflicting jpeg if present
    if {[file exists ${prefix}/bin/cjpeg] && [registry_file_registered ${prefix}/bin/cjpeg] eq "jpeg"} {
        registry_deactivate_composite jpeg "" [list ports_nodepcheck 1]
    }
}
