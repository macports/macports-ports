# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0
PortGroup           muniversal 1.0

name                libjpeg-turbo
set my_name         libjpeg-turbo
github.setup        ${my_name} ${my_name} 3.1.0
revision            0
categories          graphics
license             BSD
maintainers         {larryv @larryv} {mascguy @mascguy} {jmr @jmroot}

conflicts           libjpeg-turbo-devel mozjpeg

description         SIMD-accelerated libjpeg-compatible JPEG codec \
                    library
long_description    libjpeg-turbo is a JPEG image codec that uses SIMD \
                    instructions (MMX, SSE2, NEON) to accelerate \
                    baseline JPEG compression and decompression on \
                    x86, x86-64, and ARM systems. On such systems, \
                    libjpeg-turbo is generally 2-6x as fast as \
                    libjpeg, all else being equal. On other types of \
                    systems, libjpeg-turbo can still outperform \
                    libjpeg by a significant amount, by virtue of its \
                    highly-optimized Huffman coding routines. In many \
                    cases, the performance of libjpeg-turbo rivals \
                    that of proprietary high-speed JPEG codecs.
homepage            https://www.${my_name}.org

github.tarball_from releases
checksums           rmd160  229da818176b6bc9ab9b39fd98febd1765385a6a \
                    sha256  9564c72b1dfd1d6fe6274c5f95a8d989b59854575d4bbee44ade7bc17aa9bc93 \
                    size    2507094

configure.args-append \
                    -DENABLE_SHARED:BOOL=ON \
                    -DENABLE_STATIC:BOOL=ON \
                    -DWITH_JPEG8:BOOL=ON

if {${universal_possible} && [variant_isset universal]} {
    if {"x86_64" in ${configure.universal_archs} || "i386" in ${configure.universal_archs}} {
        depends_build-append port:nasm
    }
    set merger_configure_env(i386)  ASM_NASM=${prefix}/bin/nasm
    set merger_configure_env(x86_64)    ASM_NASM=${prefix}/bin/nasm
} elseif {${configure.build_arch} in {i386 x86_64}} {
    depends_build-append port:nasm
    configure.env       ASM_NASM=${prefix}/bin/nasm
} elseif {${configure.build_arch} eq "ppc"} {
    if {[catch {sysctl hw.vectorunit} result] || $result == 0} {
        configure.args-append   -DWITH_SIMD=OFF
        archive_sites
    }
}

variant java description {Add Java support} {
    PortGroup           java 1.0

    java.version        1.8
    java.fallback       openjdk8
    configure.args-append \
                        -DWITH_JAVA:BOOL=ON
}

variant tests description {Enable tests} {
    configure.pre_args-replace \
                        -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON \
                        -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF

    test.run            yes
    test.env-append \
                        CTEST_OUTPUT_ON_FAILURE=1
}

# Betas are numbered x.x.9x
github.livecheck.regex  {(\d+\.\d+\.(?:\d|[0-8]\d)(?:\.[0-9]+)*)}
