--- CMake/3rdparty.cmake.orig	2021-10-15 16:07:42.000000000 -0500
+++ CMake/3rdparty.cmake	2021-10-15 16:08:08.000000000 -0500
@@ -19,6 +19,37 @@
 mark_as_advanced(DCMTK_USE_FIND_PACKAGE)
 
 if(DCMTK_USE_FIND_PACKAGE)
+  # Find OpenSSL
+  if(DCMTK_WITH_OPENSSL)
+    find_package(OpenSSL QUIET)
+    if(NOT OPENSSL_FOUND)
+      message(STATUS "Warning: OPENSSL support will be disabled because openssl was not found.")
+      set(WITH_OPENSSL "")
+      set(DCMTK_WITH_OPENSSL OFF CACHE BOOL "" FORCE)
+    else()
+      include(CheckLibraryExists)
+      include(CheckCXXSourceCompiles)
+      set(TEMP_INCLUDES "${CMAKE_REQUIRED_INCLUDES}")
+      list(APPEND CMAKE_REQUIRED_INCLUDES "${OPENSSL_INCLUDE_DIR}")
+      CHECK_CXX_SOURCE_COMPILES("extern \"C\" {\n#include <openssl/ssl.h>\n}\nint main(){\n#if OPENSSL_VERSION_NUMBER < 0x10001000L\n#error OpenSSL too old\n#endif\n}\n" OPENSSL_VERSION_CHECK)
+      set(CMAKE_REQUIRED_INCLUDES "${TEMP_INCLUDES}")
+      if(OPENSSL_VERSION_CHECK)
+        message(STATUS "Info: DCMTK OPENSSL support will be enabled")
+        set(WITH_OPENSSL 1)
+        include_directories(${OPENSSL_INCLUDE_DIR})
+        set(OPENSSL_LIBS ${OPENSSL_LIBRARIES})
+        CHECK_LIBRARY_EXISTS(dl dlopen "" HAVE_LIBDL)
+        if(HAVE_LIBDL)
+          set(OPENSSL_LIBS ${OPENSSL_LIBS} dl)
+        endif()
+      else()
+        message(STATUS "Info: DCMTK OPENSSL support will be disabled: DCMTK requires OpenSSL version 1.0.1 or newer")
+        set(DCMTK_WITH_OPENSSL OFF CACHE BOOL "" FORCE)
+        set(WITH_OPENSSL "")
+      endif()
+    endif()
+  endif()
+
   # Find TIFF
   if(DCMTK_WITH_TIFF)
     find_package(TIFF QUIET)
@@ -57,37 +88,6 @@
     endif()
   endif()
 
-  # Find OpenSSL
-  if(DCMTK_WITH_OPENSSL)
-    find_package(OpenSSL QUIET)
-    if(NOT OPENSSL_FOUND)
-      message(STATUS "Warning: OPENSSL support will be disabled because openssl was not found.")
-      set(WITH_OPENSSL "")
-      set(DCMTK_WITH_OPENSSL OFF CACHE BOOL "" FORCE)
-    else()
-      include(CheckLibraryExists)
-      include(CheckCXXSourceCompiles)
-      set(TEMP_INCLUDES "${CMAKE_REQUIRED_INCLUDES}")
-      list(APPEND CMAKE_REQUIRED_INCLUDES "${OPENSSL_INCLUDE_DIR}")
-      CHECK_CXX_SOURCE_COMPILES("extern \"C\" {\n#include <openssl/ssl.h>\n}\nint main(){\n#if OPENSSL_VERSION_NUMBER < 0x10001000L\n#error OpenSSL too old\n#endif\n}\n" OPENSSL_VERSION_CHECK)
-      set(CMAKE_REQUIRED_INCLUDES "${TEMP_INCLUDES}")
-      if(OPENSSL_VERSION_CHECK)
-        message(STATUS "Info: DCMTK OPENSSL support will be enabled")
-        set(WITH_OPENSSL 1)
-        include_directories(${OPENSSL_INCLUDE_DIR})
-        set(OPENSSL_LIBS ${OPENSSL_LIBRARIES})
-        CHECK_LIBRARY_EXISTS(dl dlopen "" HAVE_LIBDL)
-        if(HAVE_LIBDL)
-          set(OPENSSL_LIBS ${OPENSSL_LIBS} dl)
-        endif()
-      else()
-        message(STATUS "Info: DCMTK OPENSSL support will be disabled: DCMTK requires OpenSSL version 1.0.1 or newer")
-        set(DCMTK_WITH_OPENSSL OFF CACHE BOOL "" FORCE)
-        set(WITH_OPENSSL "")
-      endif()
-    endif()
-  endif()
-
   # Find libXML2
   if(DCMTK_WITH_XML)
     find_package(LibXml2 QUIET)
