From b7b5503b8e7845b36945af7e4d444268edb5561a Mon Sep 17 00:00:00 2001
From: Jan Schlamelcher <dicom@offis.de>
Date: Thu, 10 Nov 2016 12:24:05 +0100
Subject: [PATCH] Enhanced C++11 compliance of OFvariant.

Moved a type definition from the inside of a constexpr function to the
enclosing class, since this is only allowed by C++14 and later but not C++11.
Fixed potentially too weak alignment specifier used while determining the
common alignment of all variant alternatives.
---
 ofstd/include/dcmtk/ofstd/ofvriant.h | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/ofstd/include/dcmtk/ofstd/ofvriant.h b/ofstd/include/dcmtk/ofstd/ofvriant.h
index f617b4e..d7eb225 100644
--- a/ofstd/include/dcmtk/ofstd/ofvriant.h
+++ b/ofstd/include/dcmtk/ofstd/ofvriant.h
@@ -40,8 +40,9 @@
 #include <limits>
 
 template<std::size_t,typename... Alternatives>
-struct OFvariant_traits
+class OFvariant_traits
 {
+public:
     using is_constructible = std::false_type;
     static constexpr inline std::size_t alignment() { return 1; }
     static constexpr inline std::size_t size() { return 0; }
@@ -49,17 +50,17 @@ struct OFvariant_traits
 };
 
 template<std::size_t Index,typename Alternative0,typename... Alternatives>
-struct OFvariant_traits<Index,Alternative0,Alternatives...>
+class OFvariant_traits<Index,Alternative0,Alternatives...>
 : OFvariant_traits<Index+1,Alternatives...>
 {
+public:
     using OFvariant_traits<Index+1,Alternatives...>::index_of;
 
     using first_alternative = Alternative0;
 
     static constexpr inline std::size_t alignment()
     {
-        struct test { alignas(OFvariant_traits<Index+1,Alternatives...>::alignment()) first_alternative a; };
-        return alignof(test);
+        return alignof(aligned);
     }
 
     static constexpr inline std::size_t size()
@@ -73,6 +74,9 @@ struct OFvariant_traits<Index,Alternative0,Alternatives...>
     }
 
     static std::integral_constant<std::size_t,Index> index_of( first_alternative );
+
+private:
+    struct aligned { alignas(OFvariant_traits<Index+1,Alternatives...>::alignment()) char c; first_alternative a; };
 };
 
 template<std::size_t AlternativeCount,typename... IndexAlternatives>
-- 
2.1.4

