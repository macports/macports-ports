# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0

name                feh
version             3.8
revision            0
categories          graphics
platforms           darwin
maintainers         nomaintainer
license             MIT

description         Fast lightweight image viewer

long_description    Simple and fast image viewer using imlib2 with file list \
                    and recursive file opening.

homepage            https://feh.finalrewind.org/
master_sites        ${homepage}
use_bzip2           yes

checksums           rmd160  b7572041c7b68c8634fed241f25b8f1754a0bd44 \
                    sha256  7f3c34552b39336d7ebee2d7c4bf5697aaaa2c6c102c357f6e82ea240bd62ba9 \
                    size    2122631

depends_lib-append  port:curl \
                    port:imlib2 \
                    path:include/turbojpeg.h:libjpeg-turbo \
                    port:libexif \
                    port:libpng \
                    port:xorg-libXinerama \
                    port:xorg-libXt \
                    port:zlib

# Correct permissions
post-extract {
    system "chmod -R 755 ${worksrcpath}"
}

patchfiles          implicit.patch

# per config.mk
compiler.c_standard 2011

use_configure       no

# exif=1 - enable auto-rotate
# verscmp=0 - disable strverscmp
build.args          PREFIX=${prefix} \
                    'exif=1' \
                    'verscmp=0'

if {![info exists universal_possible]} {
    set universal_possible [expr {${os.universal_supported} && [llength ${configure.universal_archs}] >= 2}]
}
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${universal_archs_supported} {
        lappend merger_build_env(${arch}) \
                    CC=${configure.cc} \
                    "CFLAGS=${configure.cflags} [muniversal_get_arch_flag ${arch}]" \
                    CPPFLAGS=${configure.cppflags} \
                    "LDFLAGS=${configure.ldflags} [muniversal_get_arch_flag ${arch}]"
    }
} else {
    build.env       CC=${configure.cc} \
                    "CFLAGS=${configure.cflags} [get_canonical_archflags cc]" \
                    CPPFLAGS=${configure.cppflags} \
                    "LDFLAGS=${configure.ldflags} [get_canonical_archflags ld]"
}

destroot.args       PREFIX=${prefix}

livecheck.type      regex
livecheck.regex     ${name}-(\[0-9.\]+)${extract.suffix}
