--- src/lights/pathlight.cc	Tue Feb  3 16:42:26 2004
+++ /Users/krug/Desktop/yafray-0.0.6-2/src/lights/pathlight.cc	Thu Feb 19 15:44:11 2004
@@ -110,11 +110,11 @@
 	if(imap!=NULL)
 	{
 		bool present;
-		data=state.context.get(photonData,present);
+		data=state.context.get_d(photonData,present);
 		if(!present)
 		{
 			data=new photonData_t(imap->getMaxRadius(),new vector<foundPhoton_t>(5+1));
-			state.context.store(photonData,data);
+			state.context.store_d(photonData,data);
 		}
 	}
 	return data;
@@ -621,7 +621,7 @@
 	point3d_t pP=toRealPolar(sp.P(),s);
 	PFLOAT radius;
 	bool present;
-	radius=state.context.get(lastRadius,present);
+	radius=state.context.get_nd(lastRadius,present);
 	if(!present) radius=cache_size;
 	
 	vector<foundSample_t> samples;
@@ -636,7 +636,7 @@
 	else
 		farest=gatherSamples(sp.P(),pP,N,samples,search,radius,3);
 	
-	state.context.store(lastRadius,radius);
+	state.context.store_nd(lastRadius,(float&) radius);
 	if(samples.size()==1) farest=0;
 	else if(farest>0.8/shadow_threshold) farest=0.8/shadow_threshold;
 
@@ -995,7 +995,7 @@
 hemiSampler_t *pathLight_t::getSampler(renderState_t &state,const scene_t &sc)const
 {
 	bool present;
-	hemiSampler_t *sam=state.context.get(_sampler,present);
+	hemiSampler_t *sam=state.context.get_d(_sampler,present);
 	if(!present)
 	{
 		//const globalPhotonMap_t *pmap;
@@ -1004,7 +1004,7 @@
 		else 
 		if(use_QMC) sam=new haltonSampler_t(maxdepth,samples);
 		else sam=new randomSampler_t(samples);
-		state.context.store(_sampler,sam);
+		state.context.store_d(_sampler,sam);
 	}
 	return sam;
 }
