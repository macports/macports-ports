# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           gobject_introspection 1.0
PortGroup           muniversal 1.0

name                gegl
conflicts           gegl-devel
set git_name        gegl
set git_commit      b7a93b6835adcd486e236bc79e7deb7003de60bf
set git_date        20180218
version             0.2.0-${git_date}
revision            2
license             {GPL-3+ LGPL-3+}
categories          graphics
maintainers         {devans @dbevans}
platforms           darwin

description         GEGL is a graph based image processing framework.

long_description    GEGL is a graph based image processing framework offering image processing and \
                    compositing on large images. GEGL is suitable for projects ranging from small \
                    one-off projects to interactive applications.

homepage            http://gegl.org/
master_sites        https://git.gnome.org/browse/${git_name}/snapshot/

distname            ${git_name}-${git_commit}
 
checksums           rmd160  3005242c48a3ad069ff34ee6c9cf91976112e035 \
                    sha256  30bd5828f4be7b8347aa9b8ab870125ca331f0788d7c38f995b412974044c187 \
                    size    8816280

depends_build       port:autoconf \
                    port:automake \
                    port:libtool \
                    port:pkgconfig \
                    port:intltool \
                    port:w3m \
                    port:python27

depends_lib         port:babl \
                    port:gdk-pixbuf2 \
                    port:gtk2 \
                    port:jasper \
                    port:jpeg \
                    port:lua \
                    port:openexr \
                    port:libopenraw \
                    port:librsvg \
                    path:lib/libavcodec.dylib:ffmpeg \
                    port:libspiro \
                    port:vala

patchfiles          libopenraw-0.1.patch \
                    patch-configure.ac.diff \
                    patch-use-intltoolize.diff \
                    patch-examples-Makefile.am.diff \
                    rename-for-altivec.patch \
                    patch-ffmpeg.diff

# Avoid error: use of undeclared identifier 'GEGL'
# See https://git.gnome.org/browse/gegl/commit/?id=81fb956b221e4b1f919788d8a5f6a3a5462b86ae
patchfiles-append   patch-g_log_domain.diff

post-patch {
    # http://trac.macports.org/ticket/35148
    if {${os.major} < 10} {
        reinplace "s|OpenGL/CGLDevice.h|OpenGL/CGLTypes.h|" ${worksrcpath}/gegl/opencl/cl_gl.h
    }

    # Not sure what they expected by using these macros... they only belong in system headers...
    reinplace "s/AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER//" ${worksrcpath}/gegl/opencl/cl_platform.h

    # Install pre-generated gegl/gegl-enums.c
    # Avoids build time generation error
    xinstall -m 755 ${filespath}/gegl-enums.c ${worksrcpath}/gegl
}

# reconfigure using upstream autogen.sh for intltool 0.51 compatibility

configure.cmd       ./autogen.sh

compiler.blacklist  *gcc-3.* *gcc-4.*

gobject_introspection yes

configure.python    ${prefix}/bin/python2.7

configure.args      --disable-docs \
                    --disable-silent-rules \
                    --without-exiv2 \
                    --without-graphviz \
                    --without-sdl \
                    --without-umfpack

# disable parallel build, see #31498
use_parallel_build no

platform darwin {
    if {[variant_isset universal]} {
        set merger_configure_args(x86_64) --build=${build_arch}-apple-${os.platform}${os.version}
        set merger_configure_cflags(ppc) -fno-altivec
        set merger_configure_cxxflags(ppc) -fno-altivec
    } elseif {${build_arch} eq "ppc"} {
        configure.cflags-append -fno-altivec
        configure.cxxflags-append -fno-altivec
    } elseif {${build_arch} eq "x86_64"} {
        configure.args-append --build=${build_arch}-apple-${os.platform}${os.version}
    }
}

variant html_doc description {Build html docs with enscript and asciidoc} {
    depends_build-append port:asciidoc
    configure.args-delete --disable-docs
    configure.args-append --enable-docs
}

variant workshop description {Enable build of workshop operations} {
    depends_lib-append port:lensfun
    configure.args-append --enable-workshop
}

variant graphviz description {Build with graphviz support} {
    depends_lib-append    path:bin/dot:graphviz
    configure.args-delete --without-graphviz
}

#
# the following dummy variants are used
# to identify this port's binary dependencies
# inherited from libsdl and librsvg
#

variant x11 conflicts quartz {}
variant quartz conflicts x11 {}

if {![variant_isset quartz]} {
    default_variants +x11
}

livecheck.type      none
