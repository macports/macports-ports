# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           gobject_introspection 1.0
PortGroup           muniversal 1.0

name                gegl
conflicts           gegl-devel
version             0.2.0
revision            25
license             {GPL-3+ LGPL-3+}
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          graphics
maintainers         {devans @dbevans}
platforms           darwin
homepage            http://gegl.org/
master_sites        gimp:${name}/${branch}/

use_bzip2           yes

description         GEGL is a graph based image processing framework.

long_description    GEGL is a graph based image processing framework offering image processing and \
                    compositing on large images. GEGL is suitable for projects ranging from small \
                    one-off projects to interactive applications.

checksums           sha1    764cc66cb3c7b261b8fc18a6268a0e264a91d573 \
                    rmd160  cc10365cff27dd42b002bf305f82de54d8c158fa

depends_build       port:autoconf \
                    port:automake \
                    port:libtool \
                    port:pkgconfig \
                    port:intltool \
                    port:w3m \
                    port:python27

depends_lib         port:babl \
                    port:gdk-pixbuf2 \
                    port:gtk2 \
                    port:jasper \
                    port:jpeg \
                    port:lua \
                    port:openexr \
                    port:libopenraw \
                    port:librsvg \
                    path:lib/libavcodec.dylib:ffmpeg \
                    port:libspiro \
                    port:vala

patchfiles          patch-fix-introspection.diff \
                    gegl-enums.c.patch \
                    libopenraw-0.1.patch \
                    patch-configure.ac.diff \
                    patch-use-intltoolize.diff \
                    patch-examples-Makefile.am.diff \
                    rename-for-altivec.patch \
                    patch-ffmpeg.diff

# Avoid error: use of undeclared identifier 'GEGL'
# See https://git.gnome.org/browse/gegl/commit/?id=81fb956b221e4b1f919788d8a5f6a3a5462b86ae
patchfiles-append   patch-g_log_domain.diff

post-patch {
    # http://trac.macports.org/ticket/35148
    if {${os.major} < 10} {
        reinplace "s|OpenGL/CGLDevice.h|OpenGL/CGLTypes.h|" ${worksrcpath}/gegl/opencl/cl_gl.h
    }

    # Not sure what they expected by using these macros... they only belong in system headers...
    reinplace "s/AVAILABLE_MAC_OS_X_VERSION_10_6_AND_LATER//" ${worksrcpath}/gegl/opencl/cl_platform.h
}

# reconfigure using upstream autogen.sh for intltool 0.51 compatibility

configure.cmd       ./autogen.sh

compiler.blacklist  *gcc*

gobject_introspection yes

configure.python    ${prefix}/bin/python2.7

configure.args      --disable-docs \
                    --disable-silent-rules \
                    --without-exiv2 \
                    --without-graphviz \
                    --without-sdl \
                    --without-umfpack

# disable parallel build, see #31498
use_parallel_build no

platform darwin {
    if {[variant_isset universal]} {
        set merger_configure_args(x86_64) --build=${build_arch}-apple-${os.platform}${os.version}
        set merger_configure_cflags(ppc) -fno-altivec
        set merger_configure_cxxflags(ppc) -fno-altivec
    } elseif {${build_arch} eq "ppc"} {
        configure.cflags-append -fno-altivec
        configure.cxxflags-append -fno-altivec
    } elseif {${build_arch} eq "x86_64"} {
        configure.args-append --build=${build_arch}-apple-${os.platform}${os.version}
    }
}

variant html_doc description {Build html docs with enscript and asciidoc} {
    depends_build-append port:asciidoc
    configure.args-delete --disable-docs
    configure.args-append --enable-docs
}

variant workshop description {Enable build of workshop operations} {
    depends_lib-append port:lensfun
    configure.args-append --enable-workshop
}

variant graphviz description {Build with graphviz support} {
    depends_lib-append    path:bin/dot:graphviz
    configure.args-delete --without-graphviz
}

#
# the following dummy variants are used
# to identify this port's binary dependencies
# inherited from libsdl and librsvg
#

variant x11 conflicts quartz {}
variant quartz conflicts x11 {}

if {![variant_isset quartz]} {
    default_variants +x11
}

livecheck.type      regex
livecheck.url       http://download.gimp.org/pub/${name}/${branch}/
livecheck.regex     "${name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
