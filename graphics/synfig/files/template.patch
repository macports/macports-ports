https://github.com/synfig/synfig/issues/298
https://github.com/synfig/synfig/commit/8406fe911df74868cfcc449ae94fbe364a8290e1
--- src/synfig/rendering/software/function/array.h.orig	2016-11-30 05:00:57.000000000 -0600
+++ src/synfig/rendering/software/function/array.h	2017-01-13 01:00:35.000000000 -0600
@@ -432,23 +432,23 @@
 	void assign(const Array<TT, Rank> &x) const
 	{
 		typename Array<TT, Rank>::Iterator j(x);
-		for(Iterator i(*this); i && j; ++i, ++j) i.get_array().assign<TT>(j.get_array());
+		for(Iterator i(*this); i && j; ++i, ++j) i.get_array().template assign<TT>(j.get_array());
 	}
 
 	template<typename function>
 	void process(const Type &x) const
-		{ for(Iterator i(*this); i; ++i) i.get_array().process<function>(x); }
+		{ for(Iterator i(*this); i; ++i) i.get_array().template process<function>(x); }
 
 	template<typename function, typename TT>
 	void process(const Array<TT, Rank> &x) const
 	{
 		typename Array<TT, Rank>::Iterator j(x);
-		for(Iterator i(*this); i && j; ++i, ++j) i.get_array().process<function, TT>(j.get_array());
+		for(Iterator i(*this); i && j; ++i, ++j) i.get_array().template process<function, TT>(j.get_array());
 	}
 
 	template<typename function>
 	void process() const
-		{ for(Iterator i(*this); i; ++i) i.get_array().process<function>(); }
+		{ for(Iterator i(*this); i; ++i) i.get_array().template process<function>(); }
 };
 
 template<typename T>
