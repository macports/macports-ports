--- source/MaterialXView/CMakeLists.txt.orig	2020-06-04 18:21:04.000000000 -0400
+++ source/MaterialXView/CMakeLists.txt	2020-09-01 15:07:36.000000000 -0400
@@ -1,38 +1,15 @@
-if (NOT IS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/NanoGUI/ext/glfw/src")
-    message(FATAL_ERROR "Building the MaterialX viewer requires the NanoGUI submodule "
-        "to be present. Update your repository by calling the following:\n"
-        "git submodule update --init --recursive")
-endif()
-
 file(GLOB materialx_source "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp")
 file(GLOB materialx_headers "${CMAKE_CURRENT_SOURCE_DIR}/*.h*")
 
-set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
-set(NANOGUI_BUILD_SHARED OFF CACHE BOOL " " FORCE)
-set(NANOGUI_BUILD_PYTHON OFF CACHE BOOL " " FORCE)
-set(NANOGUI_INSTALL OFF CACHE BOOL " " FORCE)
-
-# Locally disable additional warnings for NanoGUI and its dependencies
-set(PREV_CMAKE_C_FLAGS ${CMAKE_C_FLAGS})
-set(PREV_CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
-if(MSVC)
-    add_compile_options(-wd4389 -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -DEIGEN_DONT_VECTORIZE)
-elseif(APPLE)
-    add_compile_options(-Wno-objc-multiple-method-names -DGL_SILENCE_DEPRECATION)
-elseif(UNIX AND CMAKE_CXX_COMPILER_ID MATCHES "GNU")
-    add_compile_options(-Wno-format-truncation -Wno-implicit-fallthrough -Wno-int-in-bool-context
-                        -Wno-maybe-uninitialized -Wno-misleading-indentation)
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-copy")
-endif()
-
-add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/NanoGUI external/NanoGUI)
-set_property(TARGET nanogui nanogui-obj glfw glfw_objects PROPERTY FOLDER "External")
-
-# Restore warnings for MaterialXView
-set(CMAKE_C_FLAGS ${PREV_CMAKE_C_FLAGS})
-set(CMAKE_CXX_FLAGS ${PREV_CMAKE_CXX_FLAGS})
-
-add_definitions(${NANOGUI_EXTRA_DEFS})
+# We remove the CMake code that compiles NanoGUI from source and replace
+# it with code that points to the pre-compiled NanoGUI package that is
+# available through MacPorts.
+set(MACPORTS_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
+set(NANOGUI_EXTRA_INCS
+    ${MACPORTS_INCLUDE_DIR}
+    ${MACPORTS_INCLUDE_DIR}/eigen3
+    ${MACPORTS_INCLUDE_DIR}/nanovg
+    ${MACPORTS_INCLUDE_DIR}/GLFW)
 
 add_executable(MaterialXView ${materialx_source} ${materialx_headers})
 
@@ -46,13 +23,12 @@
     MaterialXGenGlsl
     MaterialXRenderGlsl
     nanogui
+    glfw
     ${NANOGUI_EXTRA_LIBS})
 
 target_include_directories(
     MaterialXView
     PRIVATE
-    ${CMAKE_CURRENT_SOURCE_DIR}/../
-    ${CMAKE_CURRENT_SOURCE_DIR}/NanoGUI/include
     ${NANOGUI_EXTRA_INCS})
 
 if(MATERIALX_BUILD_OIIO AND OPENIMAGEIO_ROOT_DIR)
