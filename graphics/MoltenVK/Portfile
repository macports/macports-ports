# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cxx11 1.1
PortGroup           github 1.0
PortGroup           xcode 1.0
PortGroup           xcodeversion 1.0

github.setup        KhronosGroup MoltenVK 1.0.18 v
set submodules {
                    USCiLab cereal 51cbda5f30e56c801c07fe3d3aba5d7fb9e6cca4 cereal
                    KhronosGroup Vulkan-Headers c4e056d365472174471a243dfefbfe66a03564af Vulkan-Headers
                    KhronosGroup SPIRV-Cross 973e2e6e42f0414a304c84a19353cc4719a2bf9f SPIRV-Cross
                    KhronosGroup glslang ec5c11931bcfc1f438ae4aec46e1783a42cec7e6 glslang
                    KhronosGroup SPIRV-Tools 9ecbcf5fc87db00d3d6275522c735b5667007647 glslang/External/spirv-tools
                    KhronosGroup SPIRV-Headers ff684ffc6a35d2a58f0f63108877d0064ea33feb glslang/External/spirv-tools/external/spirv-headers
                    KhronosGroup Vulkan-Tools 5caab21c8d228a94a2f897cbe9447de48736eed7 Vulkan-Tools
                    LunarG VulkanSamples be8253962e5a60d35c8568be8499405f0b0dac76 VulkanSamples
}
checksums           ${distfiles} \
                    rmd160  dbb68d0d7b6f52c50277a750be07868a9d8106cc \
                    sha256  6ef34e23f5c1134300b543a5e79d6f1841c10a10ed9a26c9bf51b096d66eb753 \
                    size    1127077 \
                    cereal-51cbda5f30e56c801c07fe3d3aba5d7fb9e6cca4.tar.gz \
                    rmd160  33a8f9bd682f36387d3d589410113c6dd1e18bc4 \
                    sha256  26361b539fe50eee308b564faa2742166d2922a7ab0bd4870ac55708581228c8 \
                    size    336138 \
                    Vulkan-Headers-c4e056d365472174471a243dfefbfe66a03564af.tar.gz \
                    rmd160  fcbfaf26604416074360518e45922493403eb87a \
                    sha256  a027b689b269b1659283b7ddfb2d86a6c8074e9525386aa253b69e40772e3806 \
                    size    472739 \
                    SPIRV-Cross-973e2e6e42f0414a304c84a19353cc4719a2bf9f.tar.gz \
                    rmd160  edeb0a53d5d09e0c4c9357b9809a0575f98d57af \
                    sha256  03250a396da473dded40f733737f548e4c13376ea04337b7e5bcc1394431001f \
                    size    542131 \
                    glslang-ec5c11931bcfc1f438ae4aec46e1783a42cec7e6.tar.gz \
                    rmd160  d697c62ce7a3f2ba95af804f81d00eb2186bb209 \
                    sha256  4857a22f62813a99c3f09adb7d38dd8d7aec98133990a8dd7d93b728412760a0 \
                    size    2355007 \
                    SPIRV-Tools-9ecbcf5fc87db00d3d6275522c735b5667007647.tar.gz \
                    rmd160  3966fca19f35f60b65d7bbbae61f4ea451193d96 \
                    sha256  5eeb8d8cd9330aa3b0508c1a9e89201c1e2d9bb5a8dbc3c6b865a63f8b90628d \
                    size    1311678 \
                    SPIRV-Headers-ff684ffc6a35d2a58f0f63108877d0064ea33feb.tar.gz \
                    rmd160  5f9738fa8c1f9a0822b85f1fb940a54026a5a162 \
                    sha256  e36d21ec9e20b2a15aee4a817b6558d85dfa01f2c216adf24eabfc2dff874a39 \
                    size    281382 \
                    Vulkan-Tools-5caab21c8d228a94a2f897cbe9447de48736eed7.tar.gz \
                    rmd160  a83195ddbf0221feab5c8e737e0bd947234718dc \
                    sha256  0312e73e10b81d6110700fe30f920847c666cd96522cbf452b5c18b6ce85e573 \
                    size    335068 \
                    VulkanSamples-be8253962e5a60d35c8568be8499405f0b0dac76.tar.gz \
                    rmd160  b25703bc69263dfb91d8bd3e1e5184e8ce1a362a \
                    sha256  e1745e6c1437c3a738e37fed972a944ae149b8ecc3deeb293ef0c57392a42bee \
                    size    3920349

categories          graphics
maintainers         {ryandesign @ryandesign} openmaintainer
license             Apache-2

# MoltenVK would build for i386, but it uses Metal which only works on x86_64.
supported_archs     x86_64

description         an implementation of Vulkan for Metal

long_description    ${name} is an implementation of the high-performance, \
                    industry-standard Vulkan graphics and compute API, that \
                    runs on Apple's Metal graphics framework.

master_sites        ${master_sites}:${name}
distfiles           ${distfiles}:${name}

foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
    master_sites-append https://github.com/${sub_author}/${sub_project}/archive/${sub_commit}.tar.gz?dummy=:${sub_project}
    distfiles-append    ${sub_project}-${sub_commit}.tar.gz:${sub_project}
}

post-extract {
    ln -s {*}[glob -directory ${workpath} -tails ${github.author}-${github.project}-*] ${worksrcpath}
    foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
        set commit_file ${worksrcpath}/ExternalRevisions/${sub_project}_repo_revision
        if [file exists ${commit_file}] {
            set commit_re {^(\S+)}
        } else {
            set commit_file ${worksrcpath}/External/glslang/known_good.json
            set commit_re "\"subrepo\" : \"${sub_author}/${sub_project}\".*?\"commit\" : \"(\[^\"\]+)\""
        }
        set fp [open ${commit_file} r]
        set commit_file_data [read ${fp}]
        close ${fp}
        regexp ${commit_re} ${commit_file_data} -> commit
        if {${commit} ne ${sub_commit}} {
            ui_error "Submodule ${sub_author}/${sub_project} should use commit ${commit}"
            return -code error "incorrect submodule commit"
        }
        file mkdir [file dirname ${worksrcpath}/External/${sub_dest}]
        ln -s {*}[glob ${workpath}/${sub_project}-*] ${worksrcpath}/External/${sub_dest}
    }
}

depends_build-append \
                    path:bin/cmake:cmake

patchfiles          MoltenVK.xcodeproj-project.pbxproj.patch

build.pre_args      -derivedDataPath ./DerivedData

xcode.destroot.path ${prefix}/lib
xcode.configuration Release
xcode.scheme        MoltenVKSPIRVToMSLConverter-macOS \
                    MoltenVK-macOS \
                    MoltenVKGLSLToSPIRVConverter-macOS

pre-build {
    set build_dir ${worksrcpath}/External/glslang/build
    file mkdir ${build_dir}
    system -W ${build_dir} "${prefix}/bin/cmake -DCMAKE_BUILD_TYPE=MacPorts -DCMAKE_INSTALL_PREFIX=install -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib -DCMAKE_C_COMPILER=\"${configure.cc}\" -DCMAKE_CXX_COMPILER=\"${configure.cxx}\" -DCMAKE_OSX_ARCHITECTURES=\"[join [get_canonical_archs] \;]\" -DCMAKE_VERBOSE_MAKEFILE=ON .. && make -j${build.jobs} VERBOSE=ON && make install/fast"
}

destroot {
    copy ${worksrcpath}/MoltenVK/build/${xcode.configuration}/libMoltenVK.dylib ${destroot}${xcode.destroot.path}
    copy ${worksrcpath}/MoltenVK/build/${xcode.configuration}/MoltenVK.framework \
        ${worksrcpath}/MoltenVKShaderConverter/build/${xcode.configuration}/MoltenVKGLSLToSPIRVConverter.framework \
        ${worksrcpath}/MoltenVKShaderConverter/build/${xcode.configuration}/MoltenVKSPIRVToMSLConverter.framework \
        ${destroot}${frameworks_dir}
}

# TODO: Add (a subport for?) the command line conversion tool.

minimum_xcodeversions   {16 9}

platform darwin {
    if {${os.major} < 16} {
        archive_sites
        distfiles
        depends_build
        pre-fetch {
            ui_error "${subport} @${version} requires macOS Sierra or later"
            return -code error "incompatible OS X version"
        }
    }
}
