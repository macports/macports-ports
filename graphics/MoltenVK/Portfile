# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cxx11 1.1
PortGroup           github 1.0
PortGroup           xcode 1.0
PortGroup           xcodeversion 1.0

github.setup        KhronosGroup MoltenVK 1.0.21 v
set submodules {
                    USCiLab cereal 51cbda5f30e56c801c07fe3d3aba5d7fb9e6cca4 cereal
                    KhronosGroup Vulkan-Headers db09f95ac00e44149f3894bf82c918e58277cfdb Vulkan-Headers
                    KhronosGroup SPIRV-Cross 9ffd4172b46408ab6b03625b0f4f9cfafa5aaa71 SPIRV-Cross
                    KhronosGroup glslang 1323bf8e39fa17da3e0901a4b1ab5dfd61ee5460 glslang
                    KhronosGroup SPIRV-Tools 714bf84e58abd9573488fc365707fb8f288ca73c glslang/External/spirv-tools
                    KhronosGroup SPIRV-Headers ff684ffc6a35d2a58f0f63108877d0064ea33feb glslang/External/spirv-tools/external/spirv-headers
                    KhronosGroup Vulkan-Tools ca05ec7c9706eb2949e489b4719fe499b0059d36 Vulkan-Tools
                    LunarG VulkanSamples d5acfc4caff55764ec9a1fd485fef60296da9666 VulkanSamples
}
checksums           ${distfiles} \
                    rmd160  96b71dcda7b73fbfbfa10bf088e3e7584c54a3a4 \
                    sha256  7e084f00f6fef0d9385d7a44077ca684fbf17e8aaf59793f604e50105b94b568 \
                    size    1137682 \
                    cereal-51cbda5f30e56c801c07fe3d3aba5d7fb9e6cca4.tar.gz \
                    rmd160  33a8f9bd682f36387d3d589410113c6dd1e18bc4 \
                    sha256  26361b539fe50eee308b564faa2742166d2922a7ab0bd4870ac55708581228c8 \
                    size    336138 \
                    Vulkan-Headers-db09f95ac00e44149f3894bf82c918e58277cfdb.tar.gz \
                    rmd160  8cbf53ffbba79437875b985a7f488044aa615527 \
                    sha256  1ceeeb89b7659c038d4580aeb145cb41bf6d20c717d4641549890ca409238ebb \
                    size    473222 \
                    SPIRV-Cross-9ffd4172b46408ab6b03625b0f4f9cfafa5aaa71.tar.gz \
                    rmd160  2a739a21511fbb0f1a88b7e4b941ee3c230bb767 \
                    sha256  b35fb1b1a42fc89cb818ea7eeee8287c2cc260422a9095dfbeb4456bb0dfc9c0 \
                    size    558507 \
                    glslang-1323bf8e39fa17da3e0901a4b1ab5dfd61ee5460.tar.gz \
                    rmd160  da10f16290a446f09b036aaace8c022e678a16e9 \
                    sha256  6d47ab85c8077ee91a1edbcf836ac48c5abb12964b666aa3ed6f6bda0fd19a20 \
                    size    2356391 \
                    SPIRV-Tools-714bf84e58abd9573488fc365707fb8f288ca73c.tar.gz \
                    rmd160  23b7dc76d60161ec4e704dfaf304a170d9454d8d \
                    sha256  23cc5f046ce6898aa2b9274334dc76d15a30363d6a6bb5fb554f97b22fa5e7fc \
                    size    1342560 \
                    SPIRV-Headers-ff684ffc6a35d2a58f0f63108877d0064ea33feb.tar.gz \
                    rmd160  5f9738fa8c1f9a0822b85f1fb940a54026a5a162 \
                    sha256  e36d21ec9e20b2a15aee4a817b6558d85dfa01f2c216adf24eabfc2dff874a39 \
                    size    281382 \
                    Vulkan-Tools-ca05ec7c9706eb2949e489b4719fe499b0059d36.tar.gz \
                    rmd160  0f72e9a831df6aa6fe0c8acafae052bfab651542 \
                    sha256  bdafcb8ae91c552952f9024a43b7f8f7f4adda8840211b3fdceb76ece16a9608 \
                    size    342411 \
                    VulkanSamples-d5acfc4caff55764ec9a1fd485fef60296da9666.tar.gz \
                    rmd160  7e016c5965e8cd1c4b542a6689871b7bb38ae501 \
                    sha256  f0f6c857212f362ddaffa0ba0f093639684ac75713a16b7738ac423c4298fb43 \
                    size    3921216

categories          graphics
maintainers         {ryandesign @ryandesign} openmaintainer
license             Apache-2

# MoltenVK would build for i386, but it uses Metal which only works on x86_64.
supported_archs     x86_64

description         an implementation of Vulkan for Metal

long_description    ${name} is an implementation of the high-performance, \
                    industry-standard Vulkan graphics and compute API, that \
                    runs on Apple's Metal graphics framework.

master_sites        ${master_sites}:${name}
distfiles           ${distfiles}:${name}

foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
    master_sites-append https://github.com/${sub_author}/${sub_project}/archive/${sub_commit}.tar.gz?dummy=:${sub_project}
    distfiles-append    ${sub_project}-${sub_commit}.tar.gz:${sub_project}
}

post-extract {
    ln -s {*}[glob -directory ${workpath} -tails ${github.author}-${github.project}-*] ${worksrcpath}
    set bad_submodule no
    foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
        set commit_file ${worksrcpath}/ExternalRevisions/${sub_project}_repo_revision
        if [file exists ${commit_file}] {
            set commit_re {^(\S+)}
        } else {
            set commit_file ${worksrcpath}/External/glslang/known_good.json
            set commit_re "\"subrepo\" : \"${sub_author}/${sub_project}\".*?\"commit\" : \"(\[^\"\]+)\""
        }
        set fp [open ${commit_file} r]
        set commit_file_data [read ${fp}]
        close ${fp}
        regexp ${commit_re} ${commit_file_data} -> commit
        if {${commit} ne ${sub_commit}} {
            set bad_submodule yes
            set submodules [string map "${sub_commit} ${commit}" ${submodules}]
        }
        file mkdir [file dirname ${worksrcpath}/External/${sub_dest}]
        ln -s {*}[glob ${workpath}/${sub_project}-*] ${worksrcpath}/External/${sub_dest}
    }
    if ${bad_submodule} {
        ui_error "The submodules should be:\n${submodules}"
        return -code error "incorrect submodule commit"
    }
}

depends_build-append \
                    path:bin/cmake:cmake

patchfiles          MoltenVK-scripts-create_dylib_macos.sh.patch

build.pre_args      -derivedDataPath ./DerivedData

xcode.configuration Release
xcode.scheme        "MoltenVK Package (macOS only) (${xcode.configuration})"

pre-build {
    set build_dir ${worksrcpath}/External/glslang/build
    file mkdir ${build_dir}
    system -W ${build_dir} "${prefix}/bin/cmake -DCMAKE_BUILD_TYPE=MacPorts -DCMAKE_INSTALL_PREFIX=install -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib -DCMAKE_C_COMPILER=\"${configure.cc}\" -DCMAKE_CXX_COMPILER=\"${configure.cxx}\" -DCMAKE_OSX_ARCHITECTURES=\"[join [get_canonical_archs] \;]\" -DCMAKE_VERBOSE_MAKEFILE=ON .. && make -j${build.jobs} VERBOSE=ON && make install/fast"
}

destroot {
    set output_dir ${worksrcpath}/build/${xcode.configuration}
    copy ${output_dir}/MoltenVKShaderConverter ${destroot}${prefix}/bin
    copy ${output_dir}/libMoltenVK.dylib ${destroot}${prefix}/lib
    copy {*}[glob ${output_dir}/*.framework] ${destroot}${frameworks_dir}
}

minimum_xcodeversions   {16 9}

platform darwin {
    if {${os.major} < 16} {
        archive_sites
        distfiles
        depends_build
        pre-fetch {
            ui_error "${subport} @${version} requires macOS Sierra or later"
            return -code error "incompatible OS X version"
        }
    }
}
