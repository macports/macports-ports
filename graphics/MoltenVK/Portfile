# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           xcode 1.0
PortGroup           xcodeversion 1.0

github.setup        KhronosGroup MoltenVK 1.0.27 v
set submodules {
                    USCiLab cereal 51cbda5f30e56c801c07fe3d3aba5d7fb9e6cca4 cereal
                    KhronosGroup Vulkan-Headers 114c3546e195819bd53a34b39f5194b2989a5b12 Vulkan-Headers
                    KhronosGroup SPIRV-Cross ea6bdacd056b77ec1004822482d08b6f31473f25 SPIRV-Cross
                    KhronosGroup glslang 1bc601c674aecc2fee0dee8ff7a118db76b4c439 glslang
                    KhronosGroup SPIRV-Tools a29a9947ac96d811b310f481b24e293f67fedf32 glslang/External/spirv-tools
                    KhronosGroup SPIRV-Headers a2c529b5dda18838ab4b52f816acfebd774eaab3 glslang/External/spirv-tools/external/spirv-headers
                    KhronosGroup Vulkan-Tools d74a02234851dfacf6b140c1ab4d81becf704098 Vulkan-Tools
                    LunarG VulkanSamples 1a849458db984f77c9ecfa79041ede550094c2f2 VulkanSamples
}
checksums           ${distfiles} \
                    rmd160  bf730c3309e9ffe7a86b51cf12f134bc0408772e \
                    sha256  1ea200d81efd22ffdda8f9b4d85d6f0396c6c84359a369fa72bc05b5bb580333 \
                    size    1141156 \
                    cereal-51cbda5f30e56c801c07fe3d3aba5d7fb9e6cca4.tar.gz \
                    rmd160  33a8f9bd682f36387d3d589410113c6dd1e18bc4 \
                    sha256  26361b539fe50eee308b564faa2742166d2922a7ab0bd4870ac55708581228c8 \
                    size    336138 \
                    Vulkan-Headers-114c3546e195819bd53a34b39f5194b2989a5b12.tar.gz \
                    rmd160  dbc97e37760758f0902faab9ad5185e1115db293 \
                    sha256  c95bf023ee271378c340307f079e15b8b54061cdbe051e3a82c80ed08eefd7dd \
                    size    541278 \
                    SPIRV-Cross-ea6bdacd056b77ec1004822482d08b6f31473f25.tar.gz \
                    rmd160  9655067d18c6201cad14bb93d64a7b6257311e24 \
                    sha256  21bd2d4a3841c0b492328a9d31044dd29a56d1ef694c2a071f3890231b31ed33 \
                    size    612660 \
                    glslang-1bc601c674aecc2fee0dee8ff7a118db76b4c439.tar.gz \
                    rmd160  0e87e789a80e270e4fded2d051fc1a1c318c438a \
                    sha256  856b5532cd40585fe5037ce7c33fe4775d37f68cfce0ca09e40f33e1dbc0e5e3 \
                    size    2442979 \
                    SPIRV-Tools-a29a9947ac96d811b310f481b24e293f67fedf32.tar.gz \
                    rmd160  0a93dad3f73154555361a3d4a46d5a5b833d0393 \
                    sha256  3e04ab9623891e571ae65efcc3f18405f3f749d1eece4a89484c28adfdd2f167 \
                    size    1412706 \
                    SPIRV-Headers-a2c529b5dda18838ab4b52f816acfebd774eaab3.tar.gz \
                    rmd160  ec8e6ac15f35273c9e68842378df42991ac88d78 \
                    sha256  ff732d21622bb7b2180c794949a5ad2cda71850e2f46cce70b02556d7c789342 \
                    size    319089 \
                    Vulkan-Tools-d74a02234851dfacf6b140c1ab4d81becf704098.tar.gz \
                    rmd160  c17e293680fc7ad0320a3a119629a6c76f18dcd2 \
                    sha256  f40d3dead03236779f906c80e14bf2356a820d4851c38e9e6510c6ad36d6d2b9 \
                    size    344326 \
                    VulkanSamples-1a849458db984f77c9ecfa79041ede550094c2f2.tar.gz \
                    rmd160  0decf1f6db2b337a1f034b6f3222876c2da7d89d \
                    sha256  4b435a60259cc188680bbb0c2bf1ad81fe6a3979861fb11b17c73382d86517f9 \
                    size    3832089

categories          graphics
maintainers         {ryandesign @ryandesign} openmaintainer
license             Apache-2

# MoltenVK would build for i386, but it uses Metal which only works on x86_64.
supported_archs     x86_64

description         an implementation of Vulkan for Metal

long_description    ${name} is an implementation of the high-performance, \
                    industry-standard Vulkan graphics and compute API, that \
                    runs on Apple's Metal graphics framework.

master_sites        ${master_sites}:${name}
distfiles           ${distfiles}:${name}

foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
    master_sites-append https://github.com/${sub_author}/${sub_project}/archive/${sub_commit}.tar.gz?dummy=:${sub_project}
    distfiles-append    ${sub_project}-${sub_commit}.tar.gz:${sub_project}
}

post-extract {
    ln -s {*}[glob -directory ${workpath} -tails ${github.author}-${github.project}-*] ${worksrcpath}
    set bad_submodule no
    foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
        set commit_file ${worksrcpath}/ExternalRevisions/${sub_project}_repo_revision
        if [file exists ${commit_file}] {
            set commit_re {^(\S+)}
        } else {
            set commit_file ${worksrcpath}/External/glslang/known_good.json
            set commit_re "\"subrepo\" : \"${sub_author}/${sub_project}\".*?\"commit\" : \"(\[^\"\]+)\""
        }
        set fp [open ${commit_file} r]
        set commit_file_data [read ${fp}]
        close ${fp}
        regexp ${commit_re} ${commit_file_data} -> commit
        if {${commit} ne ${sub_commit}} {
            set bad_submodule yes
            set submodules [string map "${sub_commit} ${commit}" ${submodules}]
        }
        file mkdir [file dirname ${worksrcpath}/External/${sub_dest}]
        ln -s {*}[glob ${workpath}/${sub_project}-*] ${worksrcpath}/External/${sub_dest}
    }
    if ${bad_submodule} {
        ui_error "The submodules should be:\n${submodules}"
        return -code error "incorrect submodule commit"
    }
}

depends_build-append \
                    path:bin/cmake:cmake

build.pre_args      -derivedDataPath ./DerivedData

compiler.cxx_standard 2011

xcode.configuration Release
xcode.scheme        "MoltenVK Package (macOS only)"

pre-build {
    set build_dir ${worksrcpath}/External/glslang/build
    file mkdir ${build_dir}
    system -W ${build_dir} "${prefix}/bin/cmake -DCMAKE_BUILD_TYPE=MacPorts -DCMAKE_INSTALL_PREFIX=install -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib -DCMAKE_C_COMPILER=\"${configure.cc}\" -DCMAKE_CXX_COMPILER=\"${configure.cxx}\" -DCMAKE_OSX_ARCHITECTURES=\"[join [get_canonical_archs] \;]\" -DCMAKE_VERBOSE_MAKEFILE=ON .. && make -j${build.jobs} VERBOSE=ON && make install/fast"
}

destroot {
    set output_dir ${worksrcpath}/build/${xcode.configuration}
    copy ${output_dir}/MoltenVKShaderConverter ${destroot}${prefix}/bin
    copy ${output_dir}/libMoltenVK.dylib ${destroot}${prefix}/lib
    copy {*}[glob ${output_dir}/*.framework] ${destroot}${frameworks_dir}
}

minimum_xcodeversions   {16 9}

platform darwin {
    if {${os.major} < 16} {
        archive_sites
        distfiles
        depends_build
        known_fail  yes
        pre-fetch {
            ui_error "${subport} @${version} requires macOS Sierra or later"
            return -code error "incompatible OS X version"
        }
    }
}
