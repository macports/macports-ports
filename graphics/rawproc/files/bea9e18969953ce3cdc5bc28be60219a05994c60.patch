From bea9e18969953ce3cdc5bc28be60219a05994c60 Mon Sep 17 00:00:00 2001
From: Glenn Butcher <glenn.butcher@gmail.com>
Date: Wed, 5 Jun 2024 11:11:09 -0600
Subject: [PATCH] fix: spaces between '> >'

---
 src/gimage.cpp         | 2 +-
 src/gimage/gimage.h    | 2 +-
 src/gimage_process.cpp | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/gimage.cpp b/src/gimage.cpp
index 4a1523e..8b951ec 100644
--- a/src/gimage.cpp
+++ b/src/gimage.cpp
@@ -5854,7 +5854,7 @@ GIMAGE_ERROR gImage::ApplyDistortionCorrectionAdobeWarpRetilinear(float kr0, flo
 // definition by their numerical sequence in the definition.  The vector<vector<float>> contains the correction parameters 
 // for each of the red, green and blue planes
 
-GIMAGE_ERROR gImage::ApplyDistortionCorrectionAdobeWarpRetilinear(std::vector<std::vector<float>> kr, std::vector<std::vector<float>> kt, float cpx, float cpy, int threadcount)
+GIMAGE_ERROR gImage::ApplyDistortionCorrectionAdobeWarpRetilinear(std::vector<std::vector<float> > kr, std::vector<std::vector<float> > kt, float cpx, float cpy, int threadcount)
 {	
 	//the blank destination image:
 	std::vector<pix> src = image;
diff --git a/src/gimage/gimage.h b/src/gimage/gimage.h
index 6b677cd..78a7aca 100644
--- a/src/gimage/gimage.h
+++ b/src/gimage/gimage.h
@@ -352,7 +352,7 @@ class gImage
 		GIMAGE_ERROR ApplyDistortionCorrectionPTLens(float a, float b, float c, float d, int threadcount);
 		GIMAGE_ERROR ApplyDistortionCorrectionAdobe(float k0, float k1, float k2, float k3, int threadcount);  //simple
 		GIMAGE_ERROR ApplyDistortionCorrectionAdobeWarpRetilinear(float kr0, float kr1, float kr2, float kr3, float kt0, float kt1, float cpx, float cpy, int threadcount);  //full implementation of the adobe opcode, except all channels are manipulated by a single coefficient set.
-		GIMAGE_ERROR ApplyDistortionCorrectionAdobeWarpRetilinear(std::vector<std::vector<float>> kr, std::vector<std::vector<float>> kt, float cpx, float cpy, int threadcount);  //full adobe opcode implementation, including distinct sets of k parameters for each plane of the image
+		GIMAGE_ERROR ApplyDistortionCorrectionAdobeWarpRetilinear(std::vector<std::vector<float> > kr, std::vector<std::vector<float> > kt, float cpx, float cpy, int threadcount);  //full adobe opcode implementation, including distinct sets of k parameters for each plane of the image
 		GIMAGE_ERROR ApplyVignettingCorrectionAdobeFixVignetteRadial(float k0, float k1, float k2, float k3, float k4,  float cpx, float cpy, int threadcount);  //full implementation of the adobe opcode, except all channels are manipulated by a single coefficient set.
 
 #ifdef USE_GMIC
diff --git a/src/gimage_process.cpp b/src/gimage_process.cpp
index cbb54d9..bb0297e 100644
--- a/src/gimage_process.cpp
+++ b/src/gimage_process.cpp
@@ -1029,12 +1029,12 @@ std::map<std::string,std::string> process_lensdistortion(gImage &dib, std::map<s
 			
 			//full three-pane lensdistortion:adobe
 			std::vector<float> k_r = {k0, k1, k2, k3};
-			std::vector<std::vector<float>> kr;
+			std::vector<std::vector<float> > kr;
 			kr.push_back(k_r);
 			kr.push_back(k_r);
 			kr.push_back(k_r);
 			std::vector<float> k_t = {0.0, 0.0}; //hard-code no tangential distortion correction
-			std::vector<std::vector<float>> kt;
+			std::vector<std::vector<float> > kt;
 			kt.push_back(k_t);
 			kt.push_back(k_t);
 			kt.push_back(k_t);
