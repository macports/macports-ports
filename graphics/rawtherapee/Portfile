# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           cmake 1.1
PortGroup           active_variants 1.1

github.setup        Beep6581 RawTherapee 5.9
github.tarball_from releases
name                rawtherapee
revision            1

categories          graphics
supported_archs     x86_64 arm64
license             GPL-3
maintainers         @jasonliu-- openmaintainer

homepage            https://www.${name}.com
description         raw photo processing program
long_description    ${github.project} is a powerful, cross-platform \
                    ${description}. It is designed for developing raw \
                    files from a broad range of digital cameras, as \
                    well as HDR DNG files and non-raw image formats \
                    (JPEG, TIFF, and PNG).

use_xz              yes
distname            ${name}-${github.version}
checksums           rmd160  fab8e47b9d4836c349b4d054382b7b54316e33b6 \
                    sha256  8eaf28c428185c165ef5a28f69595dc77a1c98826065a1f51a28c86c7b0d4823 \
                    size    16219076

compiler.cxx_standard   2011
compiler.openmp_version 3.1

depends_build-append    port:pkgconfig
depends_lib-append      path:lib/pkgconfig/glib-2.0.pc:glib2 \
                        port:glibmm-2.4 \
                        path:lib/pkgconfig/gtk+-3.0.pc:gtk3 \
                        port:gtkmm3 \
                        port:gtk-osx-application-gtk3 \
                        port:adwaita-icon-theme \
                        path:lib/pkgconfig/cairo.pc:cairo \
                        path:lib/pkgconfig/cairomm-1.0.pc:cairomm-1.0 \
                        port:fftw-3 \
                        port:fftw-3-single \
                        path:lib/pkgconfig/gdk-pixbuf-2.0.pc:gdk-pixbuf2 \
                        port:lcms2 \
                        port:lensfun \
                        port:libiptcdata \
                        path:include/turbojpeg.h:libjpeg-turbo \
                        port:libpng \
                        path:lib/pkgconfig/librsvg-2.0.pc:librsvg \
                        port:libsigcxx2 \
                        port:tiff \
                        port:zlib

require_active_variants gtk3    quartz
require_active_variants gtkmm3  quartz
require_active_variants fftw-3          openmp
require_active_variants fftw-3-single   openmp

patchfiles-append       no-modified-project_source_dir.diff \
                        patch-config_h_in.diff

post-patch {
    copy ${filespath}/FindGtkMacIntegration.cmake \
         ${worksrcpath}/cmake/modules/
    reinplace {s/MacIntegration/GtkMacIntegration/} \
        ${worksrcpath}/rtgui/CMakeLists.txt
}

set app_contents ${applications_dir}/${github.project}.app/Contents

configure.args-append   -DBUNDLE_BASE_INSTALL_DIR=$app_contents/MacOS \
                        -DDATADIR=$app_contents/Resources \
                        -DLIBDIR=$app_contents/Frameworks \
                        -DBUILD_SHARED_LIBS=ON

if {${build_arch} eq "x86_64"} {
    configure.args-append   -DPROC_TARGET_NUMBER=1 \
                            -DPROC_LABEL="generic processor"
} elseif {${build_arch} eq "arm64"} {
    configure.args-append   -DPROC_TARGET_NUMBER=2
}

if {[variant_isset debug]} {
    cmake.build_type    Debug
    configure.optflags  -O0
} else {
    cmake.build_type    RelWithDebInfo

    # Clear optflags for non-debug build; controlled by project
    configure.optflags
}

post-destroot {
    # The following steps somewhat mimic certain parts of the
    # ${worksrcpath}/tools/osx/macosx_bundle.sh script. However, we only
    # selectively perform some of the steps from the upstream-provided
    # script because the 'macosx_bundle.sh' script performs many
    # undesirable actions, such as actually copying ALL of RawTherapee's
    # dependencies' library files directly into the .app bundle, and
    # then using install_name_tool to retroactively modify the @rpaths
    # in the binary executable to point to these local copies of dylibs.
    # In addition, their script also packs the .app bundle into a DMG,
    # so it's pretty safe to assume that their script is meant to be
    # used to generate a fully portable installer for distribution.

    # XDG = X Desktop Group, now known as freedesktop.org
    set xdg_share_root ${destroot}${prefix}/share

    set rt_data_home $xdg_share_root/${name}
    ln -s $app_contents/Resources $rt_data_home

    set xdg_desktop_entries $xdg_share_root/applications
    xinstall -d $xdg_desktop_entries
    ln -s $app_contents/Resources/applications/${name}.desktop \
          $xdg_desktop_entries/

    set xdg_desktop_icons $xdg_share_root/icons/hicolor
    xinstall -d $xdg_desktop_icons
    set icon_resolutions [list \
        16x16 24x24 32x32 48x48 64x64 128x128 256x256 scalable \
    ]
    foreach ico_res $icon_resolutions {
        xinstall -d $xdg_desktop_icons/$ico_res/apps
        ln -s $app_contents/Resources/icons/hicolor/$ico_res/apps/${name}.png \
              $xdg_desktop_icons/$ico_res/apps/
    }

    set xdg_metainfo $xdg_share_root/metainfo
    xinstall -d $xdg_metainfo
    ln -s $app_contents/Resources/metainfo/com.${name}.${github.project}.appdata.xml \
          $xdg_metainfo/

    set relative_manpath man/man1
    ln -s $app_contents/Resources/$relative_manpath/${name}.1 \
          $xdg_share_root/$relative_manpath/

    set osx_tools ${worksrcpath}/tools/osx

    copy $osx_tools/PkgInfo ${destroot}$app_contents/

    # We overwrite the Info.plist file generated by the CMake build
    # with the one provided in the RawTherapee source code, because the
    # one provided by the devs is more complete than the one generated
    # during the course of the build.
    xinstall -m 644 $osx_tools/Info.plist.in \
        ${destroot}$app_contents/Info.plist
    set regexes [list \
        "s/@minimum_arm64_version@/11.0/" \
        "s/@minimum_x86_64_version@/10.6/" \
        "s/@version@/${version}/" \
        "s/@shortVersion@/${version}/" \
        "/XDG_CONFIG_HOME/,/XDG_DATA_DIRS/s|\(<string>\).*\(</string>\)|\\1${prefix}/share/${name}\\2|" \
        "/XDG_DATA_HOME/,/GSETTINGS_SCHEMA_DIR/s|\(<string>\).*\(</string>\)|\\1${prefix}/share/${name}\\2|" \
        "s|/Applications/${github.project}.app/Contents/Resources|${prefix}|" \
        "/GDK_PIXBUF_MODULEDIR/,/LIBDIR/s|\(<string>\).*\(</string>\)|\\1${prefix}/lib/gdk-pixbuf-2.0/2.10.0/loaders\\2|" \
        "/DATADIR/,/GDK_RENDERING/s|${prefix}|$app_contents/Resources|" \
    ]
    foreach re $regexes {
        reinplace -E $re ${destroot}$app_contents/Info.plist
    }

    # Copy the .icns files into the app bundle
    set icns_files [list ${name} profile]
    foreach icns_file $icns_files {
        copy $osx_tools/${icns_file}.icns \
             ${destroot}$app_contents/Resources/
    }

    ln -s $app_contents/MacOS/${name}     ${destroot}${prefix}/bin/
    ln -s $app_contents/MacOS/${name}-cli ${destroot}${prefix}/bin/
}

proc update_desktop_env {} {
    global prefix

    if {![catch {registry_active desktop-file-utils}]} {
        system [join [list \
            ${prefix}/bin/update-desktop-database \
            ${prefix}/share/applications \
        ] " "]
    }
    system [join [list \
        ${prefix}/bin/glib-compile-schemas \
        ${prefix}/share/glib-2.0/schemas \
    ] " "]
    if {![catch {registry_active shared-mime-info}]} {
        system [join [list \
            "env XDG_DATA_DIRS=${prefix}/share" \
            "${prefix}/bin/update-mime-database -V ${prefix}/share/mime" \
        ] " "]
    }
}

post-activate {
    update_desktop_env
}

post-deactivate {
    update_desktop_env
}

variant tcmalloc \
    description {Use Google's TCMalloc library for memory allocation} \
{
    depends_lib-append      port:gperftools
    configure.args-append   -DENABLE_TCMALLOC=ON
}

# Exclude beta/rc releases from livecheck
github.livecheck.regex {([0-9\.]+)}
