# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4; truncate-lines: t -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           qmake5 1.0

name                qwt-qt5
categories          graphics science
# actually a little more permissive than the standard LGPL, but the
# distinction doesn't matter to us.
license             LGPL-2.1
maintainers         {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
homepage            http://qwt.sourceforge.net

master_sites        sourceforge:qwt
use_bzip2           yes
use_parallel_build  no

platforms           darwin

version         6.1.3
distname        qwt-${version}
checksums       sha1    90ec21bc42f7fae270482e1a0df3bc79cb10e5c7 \
                sha256  f3ecd34e72a9a2b08422fb6c8e909ca76f4ce5fa77acad7a2883b701f4309733

# get qwt's version numbers
global qwt_major, qwt_minor, qwt_patch
set qwt_vers [split ${version} "."]
set qwt_major [lindex ${qwt_vers} 0]
set qwt_minor [lindex ${qwt_vers} 1]
set qwt_patch [lindex ${qwt_vers} 2]
set qwt_maj_min ${qwt_major}.${qwt_minor}

description         QWT: Qt Widgets for Technical Applications

long_description ${description}\nThe Qwt library contains GUI \
    Components and utility classes which are primarily useful for \
    programs with a technical background. Beside a 2D plot widget it \
    provides scales, sliders, dials, compasses, thermometers, wheels \
    and knobs to control or display values, arrays, or ranges of type \
    double. QWT version ${qwt_maj_min} contains source incompatible \
    changes versus other versions of QWT.

#install in the correct locations
patchfiles-append patch-qwtconfig.pri.diff

# have correct install_name in libraries
# install pkgconfig files
configure.args-append       \
    CONFIG+=absolute_library_soname \
    QWT_CONFIG+=QwtPkgConfig

configure.args-append \
    QWT_CONFIG+=QwtMathML

# ${worksrcpath}/textengines/mathml/mathml.pro does not define QMAKE_PKGCONFIG_DESTDIR
configure.args-append QMAKE_PKGCONFIG_DESTDIR=pkgconfig

if {${subport} eq ${name}} {
    revision 1

    qt5.depends_component qtsvg

    # put link to pkgconfig files in place where pkgconfig will find it
    post-destroot {
    if { ${qt_libs_dir} ne "${prefix}/lib" } {
        xinstall -d -m 0755 ${destroot}${prefix}/lib/pkgconfig
        foreach pcfile [glob -nocomplain -tails -directory ${destroot}${qt_libs_dir}/pkgconfig *.pc] {
            ln -s ${qt_libs_dir}/pkgconfig/${pcfile} ${destroot}${prefix}/lib/pkgconfig
        }
    }
    }
}

subport ${name}-examples {
    #revision 0

    depends_lib-append port:${name}

    patch.dir  ${worksrcpath}
    worksrcdir ${worksrcdir}/examples

    # muniversal PG requires Makefile
    post-extract {
        set plist [open "${worksrcpath}/makefile_macports_install" w 0644]
        puts ${plist} "install:"
        puts ${plist} "\t/usr/bin/install -d -m 0755 \$(INSTALL_ROOT)${qt_examples_dir}/${name}"
        foreach example [glob -tails -directory ${worksrcpath} *] {
            if {[file isdirectory ${worksrcpath}/${example}]} {
                puts ${plist} "\t/usr/bin/install -d -m 0755 \$(INSTALL_ROOT)${qt_examples_dir}/${name}/${example}"
                if {${example} ne "stylesheets"} {
                    puts ${plist} "\t/bin/cp -R bin/${example}.app \$(INSTALL_ROOT)${qt_examples_dir}/${name}/${example}"
                    puts ${plist} "\t/usr/bin/make --directory=${example} distclean"
                    puts ${plist} "\t/bin/rm -rf ${example}/moc ${example}/obj"
                }
                puts ${plist} "\t/usr/bin/install -m 0644 ${example}/* \$(INSTALL_ROOT)${qt_examples_dir}/${name}/${example}"
            }
        }
        close ${plist}
    }
    destroot.cmd /usr/bin/make
    destroot.args \
        -f makefile_macports_install
}

livecheck.url   http://sourceforge.net/api/file/index/project-id/13693/mtime/desc/rss
livecheck.regex \\/qwt\\/(\\d+\\.\\d+\\.\\d+)\\/
