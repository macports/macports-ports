Some fixes needed when building in C++11 mode
https://github.com/lensfun/lensfun/commit/694542f350fc7c9ccafa2d9acb4d4e00e690cbdc
--- libs/lensfun/cpuid.cpp.orig	2015-11-15 11:07:26.000000000 -0600
+++ libs/lensfun/cpuid.cpp	2020-03-28 18:34:05.000000000 -0500
@@ -92,9 +92,9 @@
 {
 #define cpuid(cmd) \
     __asm volatile ( \
-        "push %%"R_BX"\n" \
+        "push %%" R_BX "\n" \
         "cpuid\n" \
-        "pop %%"R_BX"\n" \
+        "pop %%" R_BX "\n" \
        : "=a" (ax), "=c" (cx),  "=d" (dx) \
        : "0" (cmd))
 
--- tests/test_modifier.cpp.orig	2015-11-15 11:07:26.000000000 -0600
+++ tests/test_modifier.cpp	2020-03-28 18:31:49.000000000 -0500
@@ -77,8 +77,8 @@
 // check if output becomes NaN when processing geometry conversion
 void test_mod_projection_borders(lfFixture* lfFix, gconstpointer data)
 {
-    float in[2]  = {lfFix->img_width, lfFix->img_height};
-    float in2[2] = {(lfFix->img_width-1)/2, (lfFix->img_height-1)/2};
+    float in[2]  = {(float) lfFix->img_width, (float) lfFix->img_height};
+    float in2[2] = {(float) (lfFix->img_width-1)/2, (float) (lfFix->img_height-1)/2};
     float res[2] = {0, 0};
 
     lfLensType geom_types [] = {LF_RECTILINEAR, LF_PANORAMIC, LF_EQUIRECTANGULAR, LF_FISHEYE_STEREOGRAPHIC, LF_FISHEYE, LF_FISHEYE_EQUISOLID, LF_FISHEYE_ORTHOGRAPHIC, LF_FISHEYE_THOBY, LF_UNKNOWN};
