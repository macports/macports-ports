# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           mpi 1.0
PortGroup           muniversal 1.0
PortGroup           compiler_blacklist_versions 1.0

# Require C++11
compiler.cxx_standard 2011

# some older Clang say they support C++11 when they don't
# this is the same blacklisting as for jsoncpp, on which vtk depends.
compiler.blacklist-append {clang < 900}

name                vtk
version             8.2.0
revision            6
categories          graphics devel
platforms           darwin
license             BSD

set branch          [join [lrange [split ${version} .] 0 1] .]

maintainers         {stromnov @stromnov} {rubendibattista gmail.com:rubendibattista} openmaintainer

description         Visualization Toolkit (VTK)

long_description    Visualization Toolkit (VTK) is an open-source, freely \
                    available software system for 3D computer graphics, \
                    image processing and visualization.

homepage            http://www.vtk.org
master_sites        http://www.vtk.org/files/release/${branch}

distname            VTK-${version}

checksums           rmd160  9c566529757081d65d439d37dadbb533f0b55162 \
                    sha256  34c3dc775261be5e45a8049155f7228b6bd668106c72a3c435d95730d17d57bb \
                    size    35511819

mpi.setup

depends_lib-append \
    port:double-conversion \
    port:eigen3 \
    port:expat \
    port:freetype \
    port:gl2ps \
    port:glew \
    port:hdf5 \
    path:include/turbojpeg.h:libjpeg-turbo \
    port:jsoncpp \
    port:libharu \
    port:libogg \
    port:libtheora \
    port:lz4 \
    port:netcdf-cxx \
    port:pugixml \
    port:tiff \
    port:zlib

mpi.enforce_variant hdf5

# FT_CALLBACK_DEF: https://gitlab.kitware.com/vtk/vtk/-/issues/18033 
patchfiles          patch-pugixml.diff \
                    patch-IOMovie-module.cmake.diff \
                    patch-FT_CALLBACK_DEF.diff \
                    patch-qpainter.diff



configure.pre_args-delete \
                    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON

configure.args-append \
                    ../${distname}/ \
                    -DBUILD_SHARED_LIBS=ON \
                    -DBUILD_EXAMPLES:BOOL=OFF \
                    -DVTK_WRAP_PYTHON:BOOL=OFF \
                    -DVTK_WRAP_JAVA:BOOL=OFF \
                    -DVTK_USE_SYSTEM_LIBRARIES:BOOL=ON \
                    -DVTK_USE_SYSTEM_LIBPROJ:BOOL=OFF \
                    -DVTK_USE_SYSTEM_DIY2:BOOL=OFF \
                    -DVTK_USE_COCOA:BOOL=ON

# As proposed at #46890
if {${os.major} <= 10} {
    configure.args-append \
                        -DIOKit:FILEPATH=/System/Library/Frameworks/IOKit.framework
}

variant ffmpeg description {Add support for ffmpeg} {
    depends_lib-append port:ffmpeg
    configure.args-append \
        -DModule_vtkIOFFMPEG:BOOL=ON
}

# As proposed at #46853
variant qt4 description {Add Qt4 support.} {
    PortGroup           qt4 1.0
    
    configure.args-append \
                        -DQT_QMAKE_EXECUTABLE:PATH=${qt_qmake_cmd} \
                        -DVTK_Group_Qt:BOOL=ON
}

variant qt5 description {Add Qt5 support.} {
    PortGroup           qt5 1.0
    
    configure.args-append \
                        -DQT_QMAKE_EXECUTABLE:PATH=${qt_qmake_cmd} \
                        -DVTK_Group_Qt:BOOL=ON \
                        -DVTK_BUILD_QT_DESIGNER_PLUGIN=OFF
}

# Supported pythons
set python_versions {27 36 37 38}

foreach pyver ${python_versions} {
    # Conflicting python versions
    set other_python_versions {}
    foreach other_pyver ${python_versions} {
        if {${other_pyver} ne ${pyver}} {
            if {${other_pyver} ni ${other_python_versions}} {
                lappend other_python_versions python${other_pyver}
            }
        }
    }

    # Get python branch
    set python_branch  "[string range ${pyver} 0 end-1].[string index ${pyver} end]"

    variant python${pyver} conflicts {*}${other_python_versions} description "Add Python ${python_branch} support" "
            depends_lib-append  port:python${pyver}
            configure.args-delete \
                -DVTK_WRAP_PYTHON:BOOL=OFF

            configure.args-append \
                -DVTK_WRAP_PYTHON:BOOL=ON \
                -DPYTHON_EXECUTABLE:STRING=${prefix}/bin/python${python_branch} \
                -DPYTHON_INCLUDE_DIR=${frameworks_dir}/Python.framework/Versions/${python_branch}/Headers/ \
                -DPYTHON_LIBRARY=${frameworks_dir}/Python.framework/Versions/${python_branch}/lib/libpython${python_branch}.dylib \
                -DVTK_INSTALL_PYTHON_MODULES_DIR=${frameworks_dir}/Python.framework/Versions/${python_branch}/lib/python${python_branch}/site-packages \

            if {[mpi_variant_isset]} {
                depends_lib-append port:py${pyver}-mpi4py
                configure.args-append \
                    -DVTK_USE_SYSTEM_MPI4PY:BOOL=ON
            }
    "

    if {[variant_isset python${pyver}]} {
        if {[vercmp $pyver 37] > 0} {
            # https://gitlab.kitware.com/vtk/vtk/-/commit/257b9d7b18d5f3db3fe099dc18f230e23f7dfbab
            # Remove this when upgrading the version, because it was merged for VTK9
            patchfiles-append  patch-python38-tp_print.diff
        }
    }
}

variant xdmf description {Add XDMF readers} {
    depends_lib-append port:boost \
                       port:xdmf
    configure.args-append \
    -DVTK_USE_SYSTEM_XDMF2:BOOL=OFF \
    -DNETCDF_DIR=${prefix} \
    -DBOOST_ROOT=${prefix} \
    -DModule_vtkIOXdmf2:BOOL=ON \
    -DModule_vtkxdmf2:BOOL=ON \
    -DModule_vtkxdmf3:BOOL=ON \
    -DModule_vtkIOXdmf3:BOOL=ON
}

if {[mpi_variant_isset]} {
    configure.args-append \
        -DVTK_Group_MPI:BOOL=ON

}

livecheck.type      regex
livecheck.url       http://www.vtk.org/VTK/resources/software.html
livecheck.regex     {[vV][tT][kK]-(\d+(?:\.\d+)*)\.[tz]}
