# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

name                nanovg

categories          graphics
platforms           darwin
maintainers         @jasonliu-- openmaintainer

if {$subport eq "nanovg"} {

set shorthash       2bead03
set fullhash        2bead03bea43b2418060aaa154f972829995e663
set lastcommit      20200320
github.setup        memononen $subport $shorthash
version             $lastcommit
license             zlib
homepage            ${github.homepage}
description         antialiased 2-D vector drawing library on top of \
                    OpenGL for UI and visualizations
long_description    NanoVG is a small antialiased vector graphics \
                    rendering library for OpenGL. It has a lean API \
                    modeled after the HTML5 <canvas> API. It is \
                    intended to be a practical toolset for building \
                    scalable user interfaces and visualizations.

checksums           rmd160  b2b619156f4321b67df34e3ca8aab41e972c8328 \
                    sha256  6467b3274d148ed550b2f148dfad0c342fa948665b15b5f3e662ae17a04443c4 \
                    size    2032399

}

subport metalnanovg {

set shorthash       615df90
set fullhash        615df90de566f25e25522abaadf9ea063a433a36
set lastcommit      20200228
github.setup        ollix MetalNanoVG ${shorthash}
name                $subport
version             $lastcommit
license             MIT
homepage            ${github.homepage}
description         Metal port of NanoVG
long_description    MetalNanoVG is the native Metal port of NanoVG \
                    that tries to get the most out of Apple's Graphics \
                    API.

checksums           rmd160  e61e19a5ccb0519974080affbb88b9095f195ed3 \
                    sha256  efc132489a075d329cc8e2e9433a016690b17efb5bfbbec5ab0ba8f2b89d5e60 \
                    size    81691

depends_lib-append  port:nanovg

}

post-patch {
    foreach f [ \
        exec find ${worksrcpath}/src -name "*.c" -or -name "*.m" \
    ] {
        reinplace -q -E "s|\(#.*include \)\"\(.*\)\"|\\1<\\2>|g" $f
    }
}

# Note: This is a no-compile/source-only library. All we need to do is
# move the various files into place.
use_configure       no
build {}
if {$subport eq "nanovg"} { set name.filesystem $subport }
if {$subport eq "metalnanovg"} { set name.filesystem nanovg_metal }
set destroot_src    ${destroot}${prefix}/src/${name.filesystem}
set destroot_inc    ${destroot}${prefix}/include/${name.filesystem}
set destroot_share  ${destroot}${prefix}/share/${name.filesystem}
set destroot_doc    ${destroot}${prefix}/share/doc/${name.filesystem}
destroot {
    xinstall -d $destroot_src
    xinstall -d $destroot_inc
    xinstall -d $destroot_share
    xinstall -d $destroot_doc
    copy ${worksrcpath}/README.md $destroot_doc/
}

if {$subport eq "nanovg"} {
    post-destroot {
        copy ${worksrcpath}/src/${subport}.c $destroot_src/

        set includes [glob -directory ${worksrcpath}/src *.h]
        foreach i $includes { copy $i $destroot_inc/ }

        copy ${worksrcpath}/example $destroot_share/
        copy ${worksrcpath}/premake4.lua $destroot_share/

        copy ${worksrcpath}/LICENSE.txt $destroot_doc/
    }
}

if {$subport eq "metalnanovg"} {
    post-destroot {
        copy ${worksrcpath}/src/nanovg_mtl.m $destroot_src/
        copy ${worksrcpath}/src/nanovg_mtl_shaders.metal \
             $destroot_src/

        copy ${worksrcpath}/src/nanovg_mtl.h $destroot_inc/
        copy ${worksrcpath}/src/mnvg_bitcode $destroot_inc/

        copy ${worksrcpath}/tools $destroot_share/

        copy ${worksrcpath}/LICENSE $destroot_doc/
    }
}
