diff --git a/numlib/numsup.c b/numlib/numsup.c
index 435e1ec..12f2a73 100755
--- a/numlib/numsup.c
+++ b/numlib/numsup.c
@@ -841,17 +841,17 @@ void osx_userinitiated_start() {
 	}
 
 	/* Get the process instance */
-	if ((pi = objc_msgSend((id)pic, pis)) == nil) {
+	if ((pi = ((id (*)(id, SEL))objc_msgSend)((id)pic, pis)) == nil) {
 		return;
 	}
 
 	/* Create a reason string */
-	str = objc_msgSend((id)objc_getClass("NSString"), sel_getUid("alloc"));
-	str = objc_msgSend(str, sel_getUid("initWithUTF8String:"), "ArgyllCMS");
+	str = ((id (*)(id, SEL))objc_msgSend)((id)objc_getClass("NSString"), sel_getUid("alloc"));
+	str = ((id (*)(id, SEL, char*))objc_msgSend)(str, sel_getUid("initWithUTF8String:"), "ArgyllCMS");
 			
 	/* Start activity that tells App Nap to mind its own business. */
 	/* NSActivityUserInitiatedAllowingIdleSystemSleep */
-	osx_userinitiated_activity = objc_msgSend(pi, bawo, 0x00FFFFFFULL, str);
+	osx_userinitiated_activity = ((id (*)(id, SEL, uint64_t, id))objc_msgSend)(pi, bawo, 0x00FFFFFFULL, str);
 }
 
 /* Done with user initiated */
@@ -860,8 +860,8 @@ void osx_userinitiated_end() {
 		osx_userinitiated_cnt--;
 		if (osx_userinitiated_cnt == 0 && osx_userinitiated_activity != nil) {
 			a1logd(g_log, 7, "OS X - User Initiated Activity end");
-			objc_msgSend(
-			             objc_msgSend((id)objc_getClass("NSProcessInfo"),
+			((id (*)(id, SEL, id))objc_msgSend)(
+			             ((id (*)(id, SEL))objc_msgSend)((id)objc_getClass("NSProcessInfo"),
 			             sel_getUid("processInfo")), sel_getUid("endActivity:"),
 			             osx_userinitiated_activity);
 			osx_userinitiated_activity = nil;
@@ -900,17 +900,17 @@ void osx_latencycritical_start() {
 	}
 
 	/* Get the process instance */
-	if ((pi = objc_msgSend((id)pic, pis)) == nil) {
+	if ((pi = ((id (*)(id, SEL))objc_msgSend)((id)pic, pis)) == nil) {
 		return;
 	}
 
 	/* Create a reason string */
-	str = objc_msgSend((id)objc_getClass("NSString"), sel_getUid("alloc"));
-	str = objc_msgSend(str, sel_getUid("initWithUTF8String:"), "Measuring Color");
+	str = ((id (*)(id, SEL))objc_msgSend)((id)objc_getClass("NSString"), sel_getUid("alloc"));
+	str = ((id (*)(id, SEL, char*))objc_msgSend)(str, sel_getUid("initWithUTF8String:"), "Measuring Color");
 			
 	/* Start activity that tells App Nap to mind its own business. */
 	/* NSActivityUserInitiatedAllowingIdleSystemSleep | NSActivityLatencyCritical */
-	osx_latencycritical_activity = objc_msgSend(pi, bawo, 0x00FFFFFFULL | 0xFF00000000ULL, str);
+	osx_latencycritical_activity = ((id (*)(id, SEL, uint64_t, id))objc_msgSend)(pi, bawo, 0x00FFFFFFULL | 0xFF00000000ULL, str);
 }
 
 /* Done with latency critical */
@@ -919,8 +919,8 @@ void osx_latencycritical_end() {
 		osx_latencycritical_cnt--;
 		if (osx_latencycritical_cnt == 0 && osx_latencycritical_activity != nil) {
 			a1logd(g_log, 7, "OS X - Latency Critical Activity end");
-			objc_msgSend(
-			             objc_msgSend((id)objc_getClass("NSProcessInfo"),
+			((id (*)(id, SEL, id))objc_msgSend)(
+			             ((id (*)(id, SEL))objc_msgSend)((id)objc_getClass("NSProcessInfo"),
 			             sel_getUid("processInfo")), sel_getUid("endActivity:"),
 			             osx_latencycritical_activity);
 			osx_latencycritical_activity = nil;
