--- spectro/dispwin.c.orig	2022-06-28 16:42:04.000000000 +0800
+++ spectro/dispwin.c	2023-02-24 00:22:41.000000000 +0800
@@ -1620,7 +1620,7 @@
 #ifdef UNIX_APPLE
 	/* Various support functions */
 
-#if __MAC_OS_X_VERSION_MAX_ALLOWED < 1060
+#if __MAC_OS_X_VERSION_MAX_ALLOWED < 1060 || defined(__POWERPC__)
 
 /* Given a location, return a string for it's path */
 static char *plocpath(CMProfileLocation *ploc) {
@@ -1659,7 +1659,7 @@
 
 #endif /* < 10.6 */
 
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 
 /* There doesn't seem to be any means of determining the locations */
 /* of profiles using current OS X API's, so we simply hard code them. */
@@ -1836,7 +1836,7 @@
 static void *cur_colorsync_ref(dispwin *p) {
 	void *cspr = NULL;
  
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 	CFURLRef url;
 	ColorSyncProfileRef ref;
 	CFErrorRef ev;
@@ -1968,7 +1968,7 @@
 	/* to rename the currently selected profile file, ie. because it is a system profile. */
 	/* [ Would a workaround be to use a link, or copy of the system file ? ] */
 	if (persist)
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 	if (persist) {					/* Persistent */
 		int rv = 0;
 		CFStringRef id;
@@ -2838,7 +2838,7 @@
 
 #ifdef UNIX_APPLE
 
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 	{
 		char *dpath;		/* Install file path */
 		CFUUIDRef dispuuid;
@@ -3361,7 +3361,7 @@
 #endif /* NT */
 
 #ifdef UNIX_APPLE
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 	{
 		char *dpath; 			/* Read file path */
 		struct stat sbuf;
@@ -4030,7 +4030,7 @@
 		}
 
 		if (cspr != NULL) {
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 			CFRelease((ColorSyncProfileRef)cspr);
 #else
 			CMCloseProfile((CMProfileRef)cspr);
@@ -4039,7 +4039,7 @@
 	}
 #endif /* >= 10.6 */
 
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1040
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 	/* >= 10.6+ device colors don't work on secondary displays and need a null transform. */
 	/*  < 10.6 null transform doesn't work, but isn't needed. */
 
@@ -5080,7 +5080,7 @@
 	}
 	p->ddid = disp->ddid;		/* Display we're working on */
 
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 	{
 		CGDisplayModeRef dispmode;
 		CFStringRef pixenc;

--- spectro/dispcal.c.orig	2022-06-28 16:42:00.000000000 +0800
+++ spectro/dispcal.c	2023-02-24 00:30:57.000000000 +0800
@@ -1770,7 +1770,7 @@
 		/* Hmm. Maybe this should actually be 1.72 ?? */
 		g_def_gamma = 1.8;
 
-#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1040
+#if __MAC_OS_X_VERSION_MAX_ALLOWED >= 1060 && !defined(__ppc__)
 		/* "Gestalt(gestaltSystemVersion, &MacVers)" is supported for early */
 		/* systems, but was deprecated in 10.8 and causes warnings in 10.10. */
 		/* gestaltSystemVersionMajor etc. isn't supported on older systems. */
