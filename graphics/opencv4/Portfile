# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github 1.0

github.setup        opencv opencv 4.5.0
name                opencv4
revision            2
categories          graphics science
platforms           darwin
license             BSD

maintainers         \
                    {stromnov @stromnov} \
                    {@mascguy} \
                    openmaintainer

description         Open Source Computer Vision Library

long_description    OpenCV (Open Source Computer Vision Library) is an \
                    open source computer vision and machine learning \
                    software library. OpenCV was built to provide a \
                    common infrastructure for computer vision \
                    applications and to accelerate the use of machine \
                    perception in the commercial products. Being a \
                    BSD-licensed product, OpenCV makes it easy for \
                    businesses to utilize and modify the code.

homepage            https://opencv.org/

master_sites        ${github.master_sites}:${github.project}

distfiles           [lindex ${distfiles} 0]:${github.project}

checksums           ${distname}${extract.suffix} \
                    rmd160  fadb405b7d38f829775da60a62d29368b2159ce4 \
                    sha256  03d9f7d777d8a62a5481934dbba2fd692b6cb43f1690a8546e45f9bdb1ee0863 \
                    size    90119002

# recognize dylib as a valid library suffix
patchfiles-append   patch-dylib_suffix.diff

# modify from _resources/port1.0/group/github-1.0.tcl to avoid file tag issue
proc move_gh_repo {repo_dir_patt new_name} {
    global distfiles workpath worksrcpath
    if {(![file exists ${worksrcpath}] || ![file exists ${workpath}/${new_name}]) && \
            [llength ${distfiles}] > 0 && \
            [llength [glob -nocomplain ${workpath}/*]] > 0} {
        if {[file exists [glob -nocomplain ${workpath}/${repo_dir_patt}]] && \
            [file isdirectory [glob -nocomplain ${workpath}/${repo_dir_patt}]]} {
            move [glob ${workpath}/${repo_dir_patt}] ${workpath}/${new_name}
        } else {
            # tarball is not "${repo_dir_patt}"
            ui_error "\n\ngithub PortGroup: Error: \${worksrcpath} does not exist after extracting distfiles. This might indicate that the author or project is different than set in the Portfile due to a rename at GitHub. Please examine the extracted directory in ${workpath} and try to correct the Portfile by either changing the author or project or adding the worksrcdir option with the correct directory name.\n"
            return -code error "Unexpected github tarball extract."
        }
    }
}

post-extract {
    move_gh_repo ${github.author}-${github.project}-* ${distname}
}

compiler.cxx_standard 2011

compiler.blacklist-append \
                    *gcc* \
                    {clang < 900} \
                    {macports-clang-3.[0-9]} \
                    {macports-clang-[4-6].0}

depends_build-append \
                    port:pkgconfig

depends_lib-append  \
                    port:ffmpeg \
                    port:zlib \
                    port:libpng \
                    path:include/turbojpeg.h:libjpeg-turbo \
                    port:openjpeg \
                    port:tiff \
                    port:webp \
                    port:openexr \
                    port:ilmbase \
                    port:ade

configure.args-append \
                    -DCMAKE_RULE_MESSAGES:BOOL=OFF \
                    -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
                    \
                    -DENABLE_CONFIG_VERIFICATION:BOOL=OFF \
                    \
                    -DOPENCV_BIN_INSTALL_PATH=${prefix}/libexec/opencv4/bin \
                    -DOPENCV_SBIN_INSTALL_PATH=${prefix}/libexec/opencv4/sbin \
                    -DOPENCV_TEST_INSTALL_PATH=${prefix}/libexec/opencv4/test \
                    -DOPENCV_SAMPLES_BIN_INSTALL_PATH=${prefix}/libexec/opencv4/samples \
                    -DOPENCV_SETUPVARS_INSTALL_PATH=${prefix}/libexec/opencv4/scripts \
                    -DCMAKE_BINARY_DIR=${prefix}/libexec/opencv4/bin \
                    -DCMAKE_INSTALL_BINDIR=libexec/opencv4/bin \
                    -DCMAKE_INSTALL_SBINDIR=libexec/opencv4/sbin \
                    -DCMAKE_INSTALL_LIBEXECDIR=libexec/opencv4 \
                    -DCMAKE_INSTALL_LIBDIR=lib/opencv4 \
                    -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib/opencv4 \
                    -DCMAKE_INSTALL_RPATH=${prefix}/lib/opencv4 \
                    \
                    -DWITH_ADE:BOOL=ON \
                    -Dade_DIR:PATH=${prefix}/share/ade/ \
                    \
                    -DBUILD_WITH_DEBUG_INFO:BOOL=OFF \
                    -DHAVE_CXX11:BOOL=ON \
                    -DENABLE_CXX11:BOOL=ON \
                    -DENABLE_PIC:BOOL=OFF \
                    -DBUILD_SHARED_LIBS:BOOL=ON \
                    -DBUILD_opencv_apps:BOOL=ON \
                    -DBUILD_DOCS:BOOL=OFF \
                    -DBUILD_EXAMPLES:BOOL=OFF \
                    -DINSTALL_C_EXAMPLES:BOOL=OFF \
                    -DBUILD_TESTS:BOOL=OFF \
                    -DBUILD_PERF_TESTS:BOOL=OFF \
                    \
                    -DENABLE_CCACHE:BOOL=OFF \
                    -DBUILD_JAVA:BOOL=OFF \
                    -DENABLE_LTO:BOOL=OFF \
                    -DENABLE_THIN_LTO:BOOL=OFF \
                    -DENABLE_PRECOMPILED_HEADERS:BOOL=ON \
                    \
                    -DOPENCV_ENABLE_NONFREE:BOOL=OFF \
                    -DOPENCV_FORCE_3RDPARTY_BUILD:BOOL=OFF \
                    \
                    -DBUILD_ZLIB:BOOL=OFF \
                    -DBUILD_TIFF:BOOL=OFF -DWITH_TIFF:BOOL=ON \
                    -DBUILD_JASPER:BOOL=OFF -DWITH_JASPER:BOOL=OFF \
                    -DBUILD_JPEG:BOOL=OFF -DWITH_JPEG:BOOL=ON \
                    -DBUILD_OPENJPEG:BOOL=OFF -DWITH_OPENJPEG:BOOL=ON \
                    -DBUILD_PNG:BOOL=OFF -DWITH_PNG:BOOL=ON \
                    -DBUILD_OPENEXR:BOOL=OFF -DWITH_OPENEXR:BOOL=ON \
                    -DBUILD_WEBP:BOOL=OFF -DWITH_WEBP:BOOL=ON \
                    -DBUILD_TBB:BOOL=OFF -DWITH_TBB:BOOL=OFF \
                    -DBUILD_FFMPEG:BOOL=OFF -DWITH_FFMPEG:BOOL=ON \
                    \
                    -DWITH_OPENCL:BOOL=OFF \
                    -DWITH_OPENCL_SVM:BOOL=OFF \
                    -DWITH_OPENCLAMDFFT:BOOL=OFF \
                    -DWITH_OPENCLAMDBLAS:BOOL=OFF \
                    \
                    -DWITH_LAPACK:BOOL=ON \
                    \
                    -DBUILD_IPP_IW:BOOL=OFF \
                    -DBUILD_ITT:BOOL=OFF \
                    -DWITH_1394:BOOL=OFF \
                    -DWITH_AVFOUNDATION:BOOL=ON \
                    -DWITH_VTK:BOOL=OFF \
                    -DWITH_EIGEN:BOOL=OFF \
                    -DWITH_GSTREAMER:BOOL=OFF \
                    -DWITH_GTK:BOOL=OFF \
                    -DWITH_IPP:BOOL=OFF \
                    -DWITH_HALIDE:BOOL=OFF \
                    -DWITH_VULKAN:BOOL=OFF \
                    -DWITH_INF_ENGINE:BOOL=OFF \
                    -DWITH_OPENGL:BOOL=OFF \
                    -DWITH_OPENVX:BOOL=OFF \
                    -DWITH_OPENNI:BOOL=OFF \
                    -DWITH_OPENNI2:BOOL=OFF \
                    -DWITH_GDCM:BOOL=OFF \
                    -DWITH_PVAPI:BOOL=OFF \
                    -DWITH_ARAVIS:BOOL=OFF \
                    -DWITH_QT:BOOL=OFF \
                    -DWITH_HPX:BOOL=OFF \
                    -DWITH_OPENMP:BOOL=OFF \
                    -DWITH_PTHREADS_PF:BOOL=ON \
                    -DWITH_XIMEA:BOOL=OFF \
                    \
                    -DWITH_LIBREALSENSE:BOOL=OFF \
                    -DWITH_VA:BOOL=OFF \
                    -DWITH_VA_INTEL:BOOL=OFF \
                    -DWITH_MFX:BOOL=OFF \
                    -DWITH_GDAL:BOOL=OFF \
                    -DWITH_GPHOTO2:BOOL=OFF \
                    -DWITH_ITT:BOOL=OFF \
                    -DWITH_PROTOBUF:BOOL=OFF \
                    -DWITH_IMGCODEC_HDR:BOOL=OFF \
                    -DWITH_IMGCODEC_SUNRASTER:BOOL=OFF \
                    -DWITH_IMGCODEC_PXM:BOOL=OFF \
                    -DWITH_IMGCODEC_PFM:BOOL=OFF \
                    -DWITH_QUIRC:BOOL=OFF \
                    \
                    -DHAVE_COCOA:BOOL=ON \
                    \
                    -DBUILD_opencv_python2:BOOL=OFF \
                    -DBUILD_opencv_python3:BOOL=OFF \
                    -DBUILD_opencv_aruco:BOOL=ON \
                    -DOPENCV_PYTHON_SKIP_DETECTION:BOOL=OFF \
                    -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python \
                    -DPYTHON_DEFAULT_EXECUTABLE:FILEPATH=/usr/bin/python

universal_variant   no

# PCH broken when universal
# Keep around, for when universal support is fixed/enabled
if {[variant_isset universal]} {
    configure.args-replace \
                    -DENABLE_PRECOMPILED_HEADERS:BOOL=ON \
                    -DENABLE_PRECOMPILED_HEADERS:BOOL=OFF
}

if { ${configure.ccache} } {
    configure.args-replace \
                    -DENABLE_CCACHE:BOOL=OFF \
                    -DENABLE_CCACHE:BOOL=ON
}

platform darwin {
    configure.args-append \
                    -DZLIB_LIBRARY:FILEPATH=${prefix}/lib/libz.dylib

    # do not opportunistically find other LAPACK implementations
    # see cmake/OpenCVFindLAPACK.cmake
    configure.args-append \
                    -DLAPACK_IMPL=Apple \
                    -DLAPACK_LIBRARIES="-framework Accelerate" \
                    -DLAPACK_CBLAS_H=Accelerate/Accelerate.h \
                    -DLAPACK_LAPACKE_H=Accelerate/Accelerate.h

    # the AVFoundation backend is failing to build up to 10.8
    # it might be possible to work around or repair this on 10.7 and 10.8
    # there as a qtkit video implementation prior to the AVFoundation version
    # that is about 2016 vintage. This could possibly be resuscitated if there
    # is motivation or interest in so doing
    if {${os.major} < 13} {
        ui_debug "AVFoundation not supported on this MacOS release; disabling"
        configure.args-replace \
                    -DWITH_AVFOUNDATION:BOOL=ON \
                    -DWITH_AVFOUNDATION:BOOL=OFF
    }
}

# Python bindings
# name consistency with ${python.branch} and ${python.version} in ${prefix}/var/macports/sources/rsync.macports.org/macports/release/tarballs/ports/_resources/port1.0/group/python-1.0.tcl
set python_branches {3.5 3.6 3.7 3.8 3.9}
foreach python_branch ${python_branches} {
    set python_version [join [lrange [split ${python_branch} .] 0 1] ""]
    subport py${python_version}-${github.project} {
        depends_lib-append \
                    port:opencv4 \
                    port:python${python_version} \
                    port:py${python_version}-numpy

        configure.args-delete \
                    -DINSTALL_PYTHON_EXAMPLES:BOOL=OFF \
                    -DBUILD_opencv_python3:BOOL=OFF

        configure.args-replace \
                    -DBUILD_opencv_apps:BOOL=ON \
                    -DBUILD_opencv_apps:BOOL=OFF

        configure.args-replace \
                    -DBUILD_opencv_aruco:BOOL=ON \
                    -DBUILD_opencv_aruco:BOOL=OFF
        
        configure.args-append \
                    -DINSTALL_PYTHON_EXAMPLES:BOOL=ON \
                    -DPYTHON3_EXECUTABLE=${prefix}/bin/python${python_branch} \
                    -DPYTHON3_LIBRARY=${frameworks_dir}/Python.framework/Versions/${python_branch}/lib/libpython${python_branch}.dylib \
                    -DPYTHON3_INCLUDE_DIR=${frameworks_dir}/Python.framework/Versions/${python_branch}/Headers \
                    -DPYTHON3_PACKAGES_PATH=${frameworks_dir}/Python.framework/Versions/${python_branch}/lib/python${python_branch}/site-packages

        # Deconflict with port:opencv4 contents
        post-destroot {
            opencv4_post_destroot

            foreach f [exec port contents ${name}] {
                delete ${destroot}${f}
            }
        }
    }
}

if {${name} eq ${subport}} {
    notes {
        opencv4 binaries are now prefixed with 'opencv4_', to prevent \
        conflicts with opencv.

        opencv4 libraries have changed from static to dynamic.
    }

    variant openmp description {Include OpenMP support} {
        compiler.openmp_version \
                    4.0
        configure.args-replace \
                    -DWITH_OPENMP:BOOL=OFF \
                    -DWITH_OPENMP:BOOL=ON
    }

    variant openni description {Enable OpenNI support} {
        depends_lib-append \
                    port:openni
        configure.args-replace  \
                    -DWITH_OPENNI:BOOL=OFF \
                    -DWITH_OPENNI:BOOL=ON
        configure.args-append \
                    -DOPENNI_INCLUDE_DIR:PATH=${prefix}/include/ni \
                    -DOPENNI_LIB_DIR:PATH=${prefix}/lib
    }

    variant nonfree description {Include nonfree algorithms} {
        configure.args-replace \
                    -DOPENCV_ENABLE_NONFREE:BOOL=OFF \
                    -DOPENCV_ENABLE_NONFREE:BOOL=ON
    }

    # Respect legacy variant name 'opencv_contrib', and replace with 'contrib'
    if {[variant_isset opencv_contrib]} {
        ui_debug "Legacy variant 'opencv_contrib' set; enabling 'contrib'"

        default_variants-append \
                    +contrib
    }

    variant contrib description {Build OpenCV with extra modules (untested)} {
        master_sites-append \
                    https://github.com/${github.author}/${github.project}_contrib/tarball/${version}:${github.project}_contrib
        distfiles-append \
                    ${github.project}_contrib-${version}${extract.suffix}:${github.project}_contrib
        checksums-append \
                    ${github.project}_contrib-${version}${extract.suffix} \
                    rmd160  179e9842172a67db96c976e6ab4944b826835970 \
                    sha256  f16aa7c7960e6a0d855b681d19437d4e05bc8abd6af5adf5ab86f37d1019d663 \
                    size    60120338

        depends_lib-append \
                    port:protobuf3-cpp \
                    port:google-glog \
                    port:gflags \
                    port:ceres-solver

        post-extract {
            move_gh_repo ${github.author}-${github.project}-* ${distname}
            move_gh_repo ${github.author}-${github.project}_contrib-* ${github.project}_contrib-${version}
        }

        pre-patch {
            delete ${worksrcpath}/${github.project}_contrib
            ln -s ${workpath}/${github.project}_contrib-${version} ${worksrcpath}/${github.project}_contrib
        }

        configure.args-append \
                    -DOPENCV_EXTRA_MODULES_PATH=${worksrcpath}/${github.project}_contrib/modules
    }

    variant qt4 conflicts qt5 description {Build with Qt4 Backend support} {
        PortGroup   qt4 1.0
        configure.args-replace \
                    -DWITH_QT:BOOL=OFF \
                    -DWITH_QT=4
    }

    variant qt5 conflicts qt4 description {Build with Qt5 Backend support} {
        PortGroup   qt5 1.0
        configure.args-replace \
                    -DWITH_QT:BOOL=OFF \
                    -DWITH_QT=5
    }

    variant java description {Add Java bindings} {
        PortGroup   java 1.0
        # OpenCV appears to support older Java versions,
        # and MacPorts users have requested Java 8 support:
        # see https://trac.macports.org/ticket/60193
        java.version    1.6+
        # Use latest LTS Java version as fallback
        java.fallback   openjdk11
        depends_build-append \
                    port:apache-ant
        configure.args-replace \
                    -DBUILD_JAVA:BOOL=OFF \
                    -DBUILD_JAVA:BOOL=ON
    }

    variant tbb description {Use Intel TBB} {
        depends_lib-append \
                    port:tbb
        configure.args-replace \
                    -DWITH_TBB:BOOL=OFF \
                    -DWITH_TBB:BOOL=ON
        configure.args-append \
                    -DHAVE_TBB:BOOL=ON \
                    -DTBB_INCLUDE_DIRS=${prefix}/include
    }

    variant vtk description {Include VTK support} {
        depends_lib-append \
                    port:vtk
        configure.args-replace \
                    -DWITH_VTK:BOOL=OFF \
                    -DWITH_VTK:BOOL=ON
    }
}

variant debug description {Build with debugging info} {
    configure.args-replace \
                    -DBUILD_WITH_DEBUG_INFO:BOOL=OFF \
                    -DBUILD_WITH_DEBUG_INFO:BOOL=ON
}

variant eigen description {Enable eigen support} {
    depends_lib-append  port:eigen3
    configure.args-replace \
                    -DWITH_EIGEN:BOOL=OFF \
                    -DWITH_EIGEN:BOOL=ON
    configure.args-append \
                    -DEIGEN_INCLUDE_PATH:PATH=${prefix}/include/eigen3
}

variant tests description {Enable tests} {
    configure.args-replace \
                    -DBUILD_TESTS:BOOL=OFF \
                    -DBUILD_TESTS:BOOL=ON

    configure.args-replace \
                    -DBUILD_PERF_TESTS:BOOL=OFF \
                    -DBUILD_PERF_TESTS:BOOL=ON

    test.run        yes
    test.target     test
}

proc opencv4_move_binaries {p_bin_main_dir p_bin_port_dir} {
    set bin_main_files \
        [glob -nocomplain -type f \
            -directory ${p_bin_main_dir} \
            *]
    ui_debug "opencv4_move_binaries: bin_main_files: ${bin_main_files}"

    foreach f ${bin_main_files} {
        set fn [file tail ${f}]
        set f_dest "${p_bin_port_dir}/${fn}"
        ui_debug "opencv4_move_binaries: moving file: ${f} -> ${f_dest}"
        move ${f} ${f_dest}
    }

    return 0
}

proc opencv4_soft_link_binaries {p_bin_main_dir p_bin_port_dir p_destroot p_prefix} {
    set bin_prefix_old "opencv_"
    set bin_prefix_new "opencv4_"
    set bin_port_files \
        [glob -nocomplain -type f \
            -directory ${p_bin_port_dir} \
            *]
    ui_debug "opencv4_soft_link_binaries: bin_port_files: ${bin_port_files}"

    # Links: Remove prefix 'opencv_', if any; add prefix 'opencv4_'.
    foreach f ${bin_port_files} {
        set fn [file tail ${f}]
        set fn_new \
            [regsub ***=${bin_prefix_old} ${fn} ""]
        set f_dest \
            [regsub ***=${p_destroot} ${f} ""]
        set f_link \
            "${p_bin_main_dir}/${bin_prefix_new}${fn_new}"
        ui_debug "opencv4_soft_link_binaries: soft-linking file: ${f_link} -> ${f_dest}"
        ln -s ${f_dest} ${f_link}
    }

    return 0
}

proc opencv4_post_destroot {} {
    global prefix
    global destroot

    set bin_main_dir \
                    "${destroot}${prefix}/bin"
    set bin_port_dir \
                    "${destroot}${prefix}/libexec/opencv4/bin"

    # While the various configure-related options should catch everything, one or more
    # files may be missed. If so, ensure they're moved to the opencv4 bin area.
    opencv4_move_binaries \
                    ${bin_main_dir} \
                    ${bin_port_dir}

    # Create soft links for binaries, each prefixed with 'opencv4_'.
    opencv4_soft_link_binaries \
                    ${bin_main_dir} \
                    ${bin_port_dir} \
                    ${destroot} \
                    ${prefix}
}

post-destroot {
    opencv4_post_destroot
}

if {[string match "py*" ${subport}]} {
    livecheck.type  none
} else {
    livecheck.type  regex
    livecheck.url   https://opencv.org/releases.html
    livecheck.regex {/archive/([0-9.]+)[a-z]?\.[tz]}
}
