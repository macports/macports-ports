Fix build with python 3. Includes relevant parts of:
https://github.com/google/skia/commit/7bc4c9a8d1389fd3188d9bff46726ffc3d9bebb9
--- skia/gn/codesign_ios.py.orig
+++ skia/gn/codesign_ios.py
@@ -23,7 +23,8 @@
 
 # Find the signing identity.
 identity = None
-for line in subprocess.check_output(['security', 'find-identity']).split('\n'):
+for line in subprocess.check_output([
+    'security', 'find-identity']).decode('utf-8').split('\n'):
   m = re.match(r'''.*\) (.*) "''' + identstr + '"', line)
   if m:
     identity = m.group(1)
--- skia/gn/compile_ib_files.py.orig
+++ skia/gn/compile_ib_files.py
@@ -40,9 +40,9 @@ def main():
   ibtool_section_re = re.compile(r'/\*.*\*/')
   ibtool_re = re.compile(r'.*note:.*is clipping its content')
   try:
-    stdout = subprocess.check_output(ibtool_args)
+    stdout = subprocess.check_output(ibtool_args).decode('utf-8')
   except subprocess.CalledProcessError as e:
-    print(e.output)
+    print(e.output.decode('utf-8'))
     raise
   current_section_header = None
   for line in stdout.splitlines():
--- skia/gn/compile_sksl_tests.py.orig
+++ skia/gn/compile_sksl_tests.py
@@ -28,11 +28,12 @@ def executeWorklist(input, worklist):
     # Invoke skslc, passing in the worklist.
     worklist.close()
     try:
-        output = subprocess.check_output([skslc, worklist.name], stderr=subprocess.STDOUT)
+        output = subprocess.check_output([
+            skslc, worklist.name], stderr=subprocess.STDOUT).decode('utf-8')
     except subprocess.CalledProcessError as err:
         if err.returncode != 1:
             print("### " + input + " skslc error:\n")
-            print("\n".join(err.output.splitlines()))
+            print("\n".join(err.output.decode('utf-8').splitlines()))
             sys.exit(err.returncode)
         pass  # Compile errors (exit code 1) are expected and normal in test code
 
--- skia/gn/copy_git_directory.py.orig
+++ skia/gn/copy_git_directory.py
@@ -21,7 +21,8 @@ def copy_git_directory(src, dst, out=None):
     raise Exception('Directory "%s" does not exist.' % src)
   if not os.path.isdir(dst):
     os.makedirs(dst)
-  ls_files = subprocess.check_output(['git', 'ls-files', '-z', '.'], cwd=src)
+  ls_files = subprocess.check_output([
+      'git', 'ls-files', '-z', '.'], cwd=src).decode('utf-8')
   src_files = set(p for p in ls_files.split('\0') if p)
   abs_src = os.path.abspath(src)
   cwd = os.getcwd()
--- skia/gn/dehydrate_sksl.py.orig
+++ skia/gn/dehydrate_sksl.py
@@ -20,7 +20,8 @@
         if not os.path.isdir(targetDir):
             os.mkdir(targetDir)
         target = os.path.join(targetDir, tail)
-        subprocess.check_output([skslc, inc, target + ".dehydrated.sksl"])
+        subprocess.check_output([
+            skslc, inc, target + ".dehydrated.sksl"]).decode('utf-8')
     except subprocess.CalledProcessError as err:
         print("### Error compiling " + inc + ":")
         print(err.output)
--- skia/gn/find_headers.py.orig
+++ skia/gn/find_headers.py
@@ -34,9 +34,9 @@
 
 desc_json_txt = ''
 try:
-  desc_json_txt = subprocess.check_output(gn_desc_cmd)
+  desc_json_txt = subprocess.check_output(gn_desc_cmd).decode('utf-8')
 except subprocess.CalledProcessError as e:
-  print(e.output)
+  print(e.output.decode('utf-8'))
   raise
 
 desc_json = {}
--- skia/gn/find_xcode_sysroot.py.orig
+++ skia/gn/find_xcode_sysroot.py
@@ -12,4 +12,5 @@
 
 (sdk,) = sys.argv[1:]
 
-print(subprocess.check_output(['xcrun', '--sdk', sdk, '--show-sdk-path']))
+print(subprocess.check_output([
+    'xcrun', '--sdk', sdk, '--show-sdk-path']).decode('utf-8'))
