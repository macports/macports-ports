# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           meson 1.0

name                babl
conflicts           babl-devel
version             0.1.80
license             LGPL-3+
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          graphics
maintainers         {devans @dbevans} openmaintainer
platforms           darwin

description         Babl is a library for dynamically handling pixel formats and managing \
                    conversions between them.
long_description    ${description}

homepage            http://gegl.org/babl
master_sites        gimp:${name}/${branch}/

use_xz              yes

checksums           rmd160  2b9b8d8e4db08a7099fc8da8b57a0bfba1a148c8 \
                    sha256  f75ccc39af42585099bcb4731071dc5316b7542c5e232f63e278cd1ea2c04f8e \
                    size    299116

depends_build-append \
                    port:pkgconfig \
                    port:librsvg \
                    port:w3m

depends_lib-append  port:lcms2 \
                    port:gobject-introspection

# require C11 (typedef redefinition)
# babl-icc.c:1031:25: error: redefinition of typedef 'UTF8' is invalid in C
compiler.c_standard 2011

# In 0.1.12, i386 fails to compile with SL's gcc-4.2:
#    babl-cpuaccel.c:169: error: ‘asm’ operand has impossible constraints
compiler.blacklist-append *gcc-3.* *gcc-4.*

# babl-0.1.72 default compiler on macOS 10.10 (clang-700.1.81) has trouble with extension sse-half
# babl-0.1.72/extensions/sse-half.c:49:24: error: invalid conversion between vector type '__v4sf' (vector of 4 'float' values) and integer type 'int' of different size
#       __v4sf out_val = (__v4sf)_mm_cvtph_ps(in_val);
#                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
compiler.blacklist-append {clang > 700 < 800}

# gobject-introspection uses g-ir-scanner, which uses $CC from env
if {[variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})  "CC=${configure.cc} -arch ${arch}"
        lappend merger_destroot_env(${arch})  "CC=${configure.cc} -arch ${arch}"
    }
} else {
    build.env-append       "CC=${configure.cc} ${configure.cc_archflags}"
    destroot.env-append    "CC=${configure.cc} ${configure.cc_archflags}"
}

livecheck.type      regex
livecheck.url       http://download.gimp.org/pub/${name}/${branch}/
livecheck.regex     "${name}-(\\d+(?:\\.\\d+)+)"
