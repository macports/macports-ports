diff --git src/extension/internal/pdfinput/pdf-parser.cpp src/extension/internal/pdfinput/pdf-parser.cpp
index 604b7f80795ff10cce26b2581ba961f4dd4a0750..721524e10afcb9979fbbab5292ac9f973f316412 100644
--- src/extension/internal/pdfinput/pdf-parser.cpp
+++ src/extension/internal/pdfinput/pdf-parser.cpp
@@ -2582,7 +2582,7 @@ void PdfParser::opShowSpaceText(Object args[], int /*numArgs*/)
   }
 }
 
-void PdfParser::doShowText(GooString *s) {
+void PdfParser::doShowText(const GooString *s) {
   GfxFont *font;
   int wMode;
   double riseX, riseY;
@@ -2601,7 +2601,7 @@ void PdfParser::doShowText(GooString *s) {
   font = state->getFont();
   wMode = font->getWMode();
 
-  builder->beginString(state, s);
+  builder->beginString(state);
 
   // handle a Type 3 char
   if (font->getType() == fontType3 && 0) {//out->interpretType3Chars()) {
@@ -2631,7 +2631,7 @@ void PdfParser::doShowText(GooString *s) {
     double lineX = state->getLineX();
     double lineY = state->getLineY();
     oldParser = parser;
-    p = s->getCString();
+    p = g_strdup(s->getCString());
     len = s->getLength();
     while (len > 0) {
       n = font->getNextChar(p, len, &code,
@@ -2686,7 +2686,7 @@ void PdfParser::doShowText(GooString *s) {
 
   } else {
     state->textTransformDelta(0, state->getRise(), &riseX, &riseY);
-    p = s->getCString();
+    p = g_strdup(s->getCString());
     len = s->getLength();
     while (len > 0) {
       n = font->getNextChar(p, len, &code,
@@ -2732,7 +2732,7 @@ void PdfParser::opXObject(Object args[], int /*numArgs*/)
 {
   Object obj1, obj2, obj3, refObj;
 
-  char *name = args[0].getName();
+  char *name = g_strdup(args[0].getName());
 #if defined(POPPLER_NEW_OBJECT_API)
   if ((obj1 = res->lookupXObject(name)).isNull()) {
 #else
diff --git src/extension/internal/pdfinput/pdf-parser.h src/extension/internal/pdfinput/pdf-parser.h
index e28fecc2e155af155d3e84205bb28d269cdda6be..f985b15cad7aa4354d0108127ecedaebb95ea540 100644
--- src/extension/internal/pdfinput/pdf-parser.h
+++ src/extension/internal/pdfinput/pdf-parser.h
@@ -287,7 +287,7 @@ private:
   void opMoveShowText(Object args[], int numArgs);
   void opMoveSetShowText(Object args[], int numArgs);
   void opShowSpaceText(Object args[], int numArgs);
-  void doShowText(GooString *s);
+  void doShowText(const GooString *s);
 
   // XObject operators
   void opXObject(Object args[], int numArgs);
diff --git src/extension/internal/pdfinput/svg-builder.cpp src/extension/internal/pdfinput/svg-builder.cpp
index a448be639761b81a62aa5b95482f11e6c54045fd..617861928d964a66e88a43666905bab5c9e7ef10 100644
--- src/extension/internal/pdfinput/svg-builder.cpp
+++ src/extension/internal/pdfinput/svg-builder.cpp
@@ -1020,7 +1020,7 @@ void SvgBuilder::updateFont(GfxState *state) {
     GfxFont *font = state->getFont();
     // Store original name
     if (font->getName()) {
-        _font_specification = font->getName()->getCString();
+        _font_specification = g_strdup(font->getName()->getCString());
     } else {
         _font_specification = (char*) "Arial";
     }
@@ -1361,7 +1361,7 @@ void SvgBuilder::_flushText() {
     _glyphs.clear();
 }
 
-void SvgBuilder::beginString(GfxState *state, GooString * /*s*/) {
+void SvgBuilder::beginString(GfxState *state) {
     if (_need_font_update) {
         updateFont(state);
     }
diff --git src/extension/internal/pdfinput/svg-builder.h src/extension/internal/pdfinput/svg-builder.h
index ad15c9c06fecba95ada6b7beb4184be2456a95a8..ed2a4d48e07b3ee4cd8a4b88c0ea4a685c2ff5b5 100644
--- src/extension/internal/pdfinput/svg-builder.h
+++ src/extension/internal/pdfinput/svg-builder.h
@@ -29,7 +29,6 @@ namespace Inkscape {
 #include <glibmm/ustring.h>
 
 #include "CharTypes.h"
-class GooString;
 class Function;
 class GfxState;
 struct GfxColor;
@@ -136,7 +135,7 @@ public:
     void clearSoftMask(GfxState *state);
 
     // Text handling
-    void beginString(GfxState *state, GooString *s);
+    void beginString(GfxState *state);
     void endString(GfxState *state);
     void addChar(GfxState *state, double x, double y,
                  double dx, double dy,
