# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               compiler_blacklist_versions 1.0
PortGroup               legacysupport 1.1

name                    capnproto
version                 0.10.4
revision                0
checksums               rmd160  d1d3e8894004c94b0c8df5e509197c3459719a07 \
                        sha256  981e7ef6dbe3ac745907e55a78870fbb491c5d23abd4ebc04e20ec235af4458c \
                        size    1701486

maintainers             {cal @neverpanic} openmaintainer
platforms               darwin
categories              devel

homepage                https://capnproto.org/
description             \
    Capâ€™n Proto is an insanely fast data interchange format and \
    capability-based RPC system. Think JSON, except binary. Or think Protocol \
    Buffers, except faster.
long_description        {*}${description}
license                 BSD

master_sites            ${homepage}
distname                ${name}-c++-${version}

use_autoreconf          yes

compiler.cxx_standard   2014

# clang 3.2 - clang-3.5 and all clangs from Xcode < 5 crash while compiling this.
# see http://llvm.org/bugs/show_bug.cgi?id=18340
compiler.blacklist-append \
                        {clang < 500.2.75} \
                        macports-clang-3.3 \
                        macports-clang-3.4
# ./src/kj/time.h:48:31: error: invalid operands to binary expression ('int' and 'const Duration' (aka 'const Quantity<int64_t, _::NanosecondLabel>'))
# constexpr Duration HOURS = 60 * MINUTES;
#                            ~~ ^ ~~~~~~~
compiler.blacklist-append {clang < 1000}

configure.cppflags-replace \
                        -I${prefix}/include "-isystem${prefix}/include"

if {[string match *clang* ${configure.compiler}]} {
    configure.cxx_stdlib        libc++
    configure.ldflags-append    -stdlib=libc++
} elseif {[string match *gcc* ${configure.compiler}]} {
    # Partly merged: https://github.com/capnproto/capnproto/pull/1711
    # Re other hacks, see:
    # https://github.com/capnproto/capnproto/issues/1710
    # https://github.com/capnproto/capnproto/issues/1712
    # With these, 946 test cases pass, 11 fail.
    # FIXME: judging by test results, mutices and filesystem require attention.
    patchfiles-append   0001-message.h-fix-for-Darwin-ppc.patch \
                        0002-filesystem.c-a-hack-to-fix-overloaded-set.patch \
                        0003-async-io-unix.c-fix-for-missing-SOL_LOCAL.patch \
                        0004-capability.c-a-hack-for-capability.patch \
                        0005-Darwin-PPC-disable-negative-broken-asserts.patch \
                        0006-capability-test-fix-for-macOS-with-GCC.patch \
                        0007-mutex.c-fix-for-Apple.patch

    configure.cxxflags-append   -std=gnu++17
    # ___atomic_load_8
    # https://github.com/capnproto/capnproto/issues/1713
    configure.ldflags-append    -latomic
}

default_variants            +openssl
variant openssl description {Support TLS using the OpenSSL library} {
    configure.args-append   --with-openssl=${prefix}
    depends_lib-append      path:lib/libssl.dylib:openssl
}

test.run                    yes
test.target                 check

livecheck.type              regex
livecheck.url               https://capnproto.org/install.html
livecheck.regex             "[quotemeta ${name}]-c\\+\\+-(\\d+(\\.\\d+)*)[quotemeta ${extract.suffix}]"
