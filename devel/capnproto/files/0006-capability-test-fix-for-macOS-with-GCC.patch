From 6e3d2c3ddd9739c8e00361b4abffdda4c87657e3 Mon Sep 17 00:00:00 2001
From: barracuda156 <vital.had@gmail.com>
Date: Tue, 11 Jul 2023 09:10:09 +0800
Subject: [PATCH 6/7] capability-test: fix for macOS with GCC

---
 c++/src/capnp/capability-test.c++ | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git c++/src/capnp/capability-test.c++ c++/src/capnp/capability-test.c++
index a645abce..e6f26e01 100644
--- src/capnp/capability-test.c++
+++ src/capnp/capability-test.c++
@@ -653,7 +653,7 @@ public:
             // Too lazy to write a whole separate test for each of these cases...  so just make
             // sure they both compile here, and only actually test the latter.
             box.set("cap", kj::heap<TestExtendsDynamicImpl>(callCount));
-#if __GNUG__ && !__clang__ && __GNUG__ == 4 && __GNUC_MINOR__ == 9
+#if __GNUG__ && !__clang__ && ((__GNUG__ == 4 && __GNUC_MINOR__ == 9) || __APPLE__)
             // The last line in this block tickles a bug in Debian G++ 4.9.2 that is not present
             // in 4.8.x nor in 4.9.4:
             //     https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=781060
@@ -662,9 +662,12 @@ public:
             //
             // For the moment, we can get away with skipping the last line as the previous line
             // will set things up in a way that allows the test to complete successfully.
+            //
+            // The issue also arises on macOS when building with GCC.
             return;
-#endif
+#else
             box.set("cap", kj::heap<TestExtendsImpl>(callCount));
+#endif
           });
     } else {
       KJ_FAIL_ASSERT("Method not implemented", methodName);
