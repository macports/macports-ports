Coerce the testsuite into using our Libtool executables, which are
"glibtool" and "glibtoolize".

Index: t/ar-lib4.sh
===================================================================
--- t/ar-lib4.sh.orig
+++ t/ar-lib4.sh
@@ -33,7 +33,7 @@ lib_LTLIBRARIES = libfoo.la
 libfoo_la_SOURCES = foo.c
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 AUTOMAKE_fails
 
Index: t/ar-lib6a.sh
===================================================================
--- t/ar-lib6a.sh.orig
+++ t/ar-lib6a.sh
@@ -27,7 +27,7 @@ m4_ifdef([LT_INIT], [LT_INIT], [AC_PROG_
 AM_PROG_AR
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF 2>stderr || { cat stderr >&2; exit 1; }
 cat stderr >&2
Index: t/ar-lib6b.sh
===================================================================
--- t/ar-lib6b.sh.orig
+++ t/ar-lib6b.sh
@@ -27,7 +27,7 @@ AC_PROG_LIBTOOL
 AM_PROG_AR
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF 2>stderr || { cat stderr >&2; exit 1; }
 cat stderr >&2
Index: t/ax/am-test-lib.sh
===================================================================
--- t/ax/am-test-lib.sh.orig
+++ t/ax/am-test-lib.sh
@@ -862,6 +862,12 @@ require_tool ()
       $AR -out:defstest.lib \
         || skip_all_ "Microsoft 'lib' utility not available"
       ;;
+    libtool|libtoolize)
+      # Look for MacPorts' "g-" prefixed executables.
+      echo "$me: running g$1 --version"
+      (g$1 --version) </dev/null \
+        || skip_all_ "MacPorts' GNU Libtool not available"
+      ;;
     makedepend)
       echo "$me: running makedepend -f-"
       makedepend -f- \
Index: t/ax/depcomp.sh
===================================================================
--- t/ax/depcomp.sh.orig
+++ t/ax/depcomp.sh
@@ -258,7 +258,7 @@ cat > src/sub2/sub2foo.c <<'END'
 int sub2foo (void) { return 0; }
 END
 
-test $depcomp_with_libtool = no || libtoolize \
+test $depcomp_with_libtool = no || glibtoolize \
   || fatal_ "libtoolize failed"
 $ACLOCAL && $AUTOCONF && $AUTOMAKE -a \
   || fatal_ "autotools failed"
Index: t/canon7.sh
===================================================================
--- t/canon7.sh.orig
+++ t/canon7.sh
@@ -88,7 +88,7 @@ echo 'const char *dummy_func(void);' > l
 echo 'const char *dummy_func(void) { return "Dynamic"; }' > libd.c
 echo 'const char *dummy_func(void) { return "Static"; }' > libs.c
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a
Index: t/ccnoco-lt.sh
===================================================================
--- t/ccnoco-lt.sh.orig
+++ t/ccnoco-lt.sh
@@ -43,7 +43,7 @@ END
 # Make sure the compiler doesn't understand '-c -o'.
 CC=$am_testaux_builddir/cc-no-c-o; export CC
 
-libtoolize --verbose --install
+glibtoolize --verbose --install
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --copy --add-missing
Index: t/cxx-lt-demo.sh
===================================================================
--- t/cxx-lt-demo.sh.orig
+++ t/cxx-lt-demo.sh
@@ -88,7 +88,7 @@ else
 fi
 END
 
-libtoolize --copy
+glibtoolize --copy
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing --copy
Index: t/depcomp8b.sh
===================================================================
--- t/depcomp8b.sh.orig
+++ t/depcomp8b.sh
@@ -42,7 +42,7 @@ mkdir sub
 echo 'int foo (void) { return 0; }' > foo.c
 echo 'int bar (void) { return 0; }' > sub/bar.c
 
-libtoolize
+glibtoolize
 
 $ACLOCAL
 # FIXME: stop disabling the warnings in the 'unsupported' category
Index: t/extra-deps-lt.sh
===================================================================
--- t/extra-deps-lt.sh.orig
+++ t/extra-deps-lt.sh
@@ -56,7 +56,7 @@ extern int libfoo ();
 int main () { return libfoo (); }
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOMAKE --add-missing
 $AUTOCONF
Index: t/fort5.sh
===================================================================
--- t/fort5.sh.orig
+++ t/fort5.sh
@@ -73,7 +73,7 @@ libgoodbye_la_FCFLAGS =
 LDADD = $(FCLIBS)
 END
 
-libtoolize --force
+glibtoolize --force
 $ACLOCAL
 # FIXME: stop disabling the warnings in the 'unsupported' category
 # FIXME: once the 'subdir-objects' option has been mandatory.
Index: t/instdir-ltlib.sh
===================================================================
--- t/instdir-ltlib.sh.orig
+++ t/instdir-ltlib.sh
@@ -53,7 +53,7 @@ cp p.c libpy.c
 cp p.c libnpy.c
 cp p.c sub/libnpy.c
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing
Index: t/instfail-libtool.sh
===================================================================
--- t/instfail-libtool.sh.orig
+++ t/instfail-libtool.sh
@@ -50,7 +50,7 @@ for n in 1 2 3; do
   echo "int fooltn$n () { return 0; }" > libltn$n.c
 done
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing
Index: t/libtoo10.sh
===================================================================
--- t/libtoo10.sh.orig
+++ t/libtoo10.sh
@@ -46,7 +46,7 @@ extern int foo ();
 int main () { return foo (); }
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOMAKE --add-missing
 $AUTOCONF
Index: t/libtoo11.sh
===================================================================
--- t/libtoo11.sh.orig
+++ t/libtoo11.sh
@@ -28,7 +28,7 @@ END
 
 : > Makefile.am
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOMAKE --add-missing
 $AUTOCONF
Index: t/libtool-macros.sh
===================================================================
--- t/libtool-macros.sh.orig
+++ t/libtool-macros.sh
@@ -26,7 +26,7 @@ echo : >> get.sh
 # The 'libtoolize' script will look into Makefile.am.
 echo ACLOCAL_AMFLAGS = -I m4 > Makefile.am
 
-if libtoolize --copy --install && test -f m4/libtool.m4; then
+if glibtoolize --copy --install && test -f m4/libtool.m4; then
   echo "ACLOCAL_PATH='$(pwd)/m4':\$ACLOCAL_PATH" >> get.sh
   echo "export ACLOCAL_PATH" >> get.sh
 else
Index: t/libtool3.sh
===================================================================
--- t/libtool3.sh.orig
+++ t/libtool3.sh
@@ -74,7 +74,7 @@ END
 # 'cp -p' tries to preserve group and owner of the source and fails
 # to do so under normal accounts.  With --copy we ensure we own all files.
 
-libtoolize --force --copy
+glibtoolize --force --copy
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing --copy
Index: t/libtool5.sh
===================================================================
--- t/libtool5.sh.orig
+++ t/libtool5.sh
@@ -39,6 +39,6 @@ if COND2
 endif
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOMAKE --add-missing
Index: t/libtool6.sh
===================================================================
--- t/libtool6.sh.orig
+++ t/libtool6.sh
@@ -38,7 +38,7 @@ if COND2
 endif
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOMAKE --add-missing
 # am_liba_la_rpath is defined twice, and used once
Index: t/libtool7.sh
===================================================================
--- t/libtool7.sh.orig
+++ t/libtool7.sh
@@ -73,7 +73,7 @@ int main (void)
 }
 END
 
-libtoolize --force --copy
+glibtoolize --force --copy
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing --copy
Index: t/libtool8.sh
===================================================================
--- t/libtool8.sh.orig
+++ t/libtool8.sh
@@ -43,7 +43,7 @@ LIBTOOLFLAGS = ouch
 endif
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 AUTOMAKE_fails --add-missing
 grep libb stderr && exit 1
Index: t/libtool9.sh
===================================================================
--- t/libtool9.sh.orig
+++ t/libtool9.sh
@@ -78,7 +78,7 @@ int main (void)
 }
 END
 
-libtoolize --force --copy
+glibtoolize --force --copy
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing --copy
Index: t/ltcond.sh
===================================================================
--- t/ltcond.sh.orig
+++ t/ltcond.sh
@@ -56,7 +56,7 @@ echo 'int two () { return 2; }' >bar.c
 
 mkdir empty
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing
Index: t/ltcond2.sh
===================================================================
--- t/ltcond2.sh.orig
+++ t/ltcond2.sh
@@ -80,7 +80,7 @@ int main (void)
 }
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing
Index: t/ltconv.sh
===================================================================
--- t/ltconv.sh.orig
+++ t/ltconv.sh
@@ -105,7 +105,7 @@ int main ()
 }
 EOF
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing
Index: t/ltinit.sh
===================================================================
--- t/ltinit.sh.orig
+++ t/ltinit.sh
@@ -43,7 +43,7 @@ int foo (void)
 }
 END
 
-libtoolize
+glibtoolize
 # Skip if older libtool (pre-2.0) is used.
 { $ACLOCAL && $AUTOCONF; } || {
   if test $? -eq 63; then
Index: t/ltinstloc.sh
===================================================================
--- t/ltinstloc.sh.orig
+++ t/ltinstloc.sh
@@ -38,7 +38,7 @@ endif
 AUTOMAKE_OPTIONS = subdir-objects
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 AUTOMAKE_fails --add-missing
Index: t/ltlibsrc.sh
===================================================================
--- t/ltlibsrc.sh.orig
+++ t/ltlibsrc.sh
@@ -49,7 +49,7 @@ END
 cp foo.c zoo.d/bar.c
 cp foo.c old_la.c
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 AUTOMAKE_fails -a
Index: t/ltorder.sh
===================================================================
--- t/ltorder.sh.orig
+++ t/ltorder.sh
@@ -45,7 +45,7 @@ echo 'extern int a3 (); int a4 () { retu
 echo 'extern int a4 (); int a5 () { return a4 (); }' >liba5.c
 echo 'extern int a5 (); int main () { return a5 (); }' >p.c
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --add-missing
Index: t/nobase-libtool.sh
===================================================================
--- t/nobase-libtool.sh.orig
+++ t/nobase-libtool.sh
@@ -63,7 +63,7 @@ cp source.c source2.c
 
 rm -f install-sh
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a --copy
Index: t/objc-megademo.sh
===================================================================
--- t/objc-megademo.sh.orig
+++ t/objc-megademo.sh
@@ -84,7 +84,7 @@ END
 
 ## Run Autotools.
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOHEADER
 $AUTOCONF
Index: t/posixsubst-ltlibraries.sh
===================================================================
--- t/posixsubst-ltlibraries.sh.orig
+++ t/posixsubst-ltlibraries.sh
@@ -50,7 +50,7 @@ END
 echo 'int bar1(void) { return 0; }' > libfoo1.c
 echo 'int bar2(void) { return 0; }' > libfoo2.c
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a
Index: t/pr211.sh
===================================================================
--- t/pr211.sh.orig
+++ t/pr211.sh
@@ -43,7 +43,7 @@ helldl_SOURCES = foo.c
 libfoo_la_SOURCES = foo.c
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 AUTOMAKE_fails -Wnone -a
 $FGREP 'foo.$(OBJEXT)' stderr
Index: t/pr300-ltlib.sh
===================================================================
--- t/pr300-ltlib.sh.orig
+++ t/pr300-ltlib.sh
@@ -39,7 +39,7 @@ cat > a.c << 'END'
 int i = 3;
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE --copy --add-missing
Index: t/pr307.sh
===================================================================
--- t/pr307.sh.orig
+++ t/pr307.sh
@@ -64,7 +64,7 @@ for i in a b c d e f g h; do
 EOF
 done
 
-libtoolize --force
+glibtoolize --force
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a
Index: t/pr401b.sh
===================================================================
--- t/pr401b.sh.orig
+++ t/pr401b.sh
@@ -79,7 +79,7 @@ EOF
 
 cp "$am_scriptdir/ar-lib" . || fatal_ "fetching auxiliary script 'ar-lib'"
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a
Index: t/reqd2.sh
===================================================================
--- t/reqd2.sh.orig
+++ t/reqd2.sh
@@ -45,7 +45,7 @@ lib0_la_SOURCES = 0.c
 END
 
 : > ar-lib
-libtoolize --force --copy
+glibtoolize --force --copy
 $ACLOCAL
 $AUTOCONF
 
Index: t/silent-lt.sh
===================================================================
--- t/silent-lt.sh.orig
+++ t/silent-lt.sh
@@ -54,7 +54,7 @@ cp libfoo.c libbar.c
 cp libfoo.c sub/libbaz.c
 cp libfoo.c sub/libbla.c
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOMAKE --add-missing
 $AUTOCONF
Index: t/strip3.sh
===================================================================
--- t/strip3.sh.orig
+++ t/strip3.sh
@@ -36,7 +36,7 @@ END
 echo 'int main (void) { return 0; }' > foo.c
 echo 'int foo (void) { return 0; }' > libfoo.c
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a
Index: t/subobj-clean-lt-pr10697.sh
===================================================================
--- t/subobj-clean-lt-pr10697.sh.orig
+++ t/subobj-clean-lt-pr10697.sh
@@ -95,7 +95,7 @@ echo '  return 0;' >> main.c
 echo '}' >> main.c
 cat main.c # For debugging.
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a
Index: t/subobj9.sh
===================================================================
--- t/subobj9.sh.orig
+++ t/subobj9.sh
@@ -61,7 +61,7 @@ int doit2 (void)
 END
 
 
-libtoolize --force
+glibtoolize --force
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a
@@ -72,7 +72,7 @@ $AUTOMAKE -a
 export AUTOCONF AUTOMAKE
 
 # Opportunistically check that --tag=CXX is used when supported.
-if ./libtool --help | grep tag=TAG; then
+if ./glibtool --help | grep tag=TAG; then
   run_make -O print
   grep 'BEG1: .*--tag=CXX.*--mode=compile.* :1END' stdout
   grep 'BEG2: .*--tag=CXX.*--mode=link.* :2END' stdout
Index: t/suffix10.tap
===================================================================
--- t/suffix10.tap.orig
+++ t/suffix10.tap
@@ -68,7 +68,7 @@ run_configure ()
   test $st -eq 0
 }
 
-command_ok_ "libtoolize" libtoolize --force
+command_ok_ "libtoolize" glibtoolize --force
 command_ok_ "aclocal"    $ACLOCAL
 command_ok_ "autoconf"   $AUTOCONF
 command_ok_ "automake"   $AUTOMAKE --add-missing
Index: t/suffix8.tap
===================================================================
--- t/suffix8.tap.orig
+++ t/suffix8.tap
@@ -86,7 +86,7 @@ protect_output ()
   test $st -eq 0
 }
 
-command_ok_ "libtoolize" libtoolize
+command_ok_ "libtoolize" glibtoolize
 command_ok_ "aclocal"    $ACLOCAL
 command_ok_ "autoconf"   $AUTOCONF
 command_ok_ "automake"   $AUTOMAKE -a
Index: t/vala-libs.sh
===================================================================
--- t/vala-libs.sh.orig
+++ t/vala-libs.sh
@@ -44,7 +44,7 @@ src/zardoz-bar.vala: src/zardoz-foo.vala
 	sed 's/Foo/Bar/g' $< >$@
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 $AUTOCONF
 $AUTOMAKE -a
Index: t/vartypo2.sh
===================================================================
--- t/vartypo2.sh.orig
+++ t/vartypo2.sh
@@ -35,7 +35,7 @@ libfoo_la_DEPENDENCIES = unused
 EXTRA_libfoo_la_DEPENDENCIES = unused
 END
 
-libtoolize
+glibtoolize
 $ACLOCAL
 AUTOMAKE_fails --add-missing
 # The expected diagnostic is:
