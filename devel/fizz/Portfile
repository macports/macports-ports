# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim: fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           boost 1.0
PortGroup           cmake 1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github 1.0
PortGroup           legacysupport 1.1
PortGroup           openssl 1.0

# O_CLOEXEC
legacysupport.newest_darwin_requires_legacy 10

boost.version       1.81

github.setup        facebookincubator fizz 2024.08.26.00 v
revision            0
checksums           rmd160  557d44c811bef79f5f2d96be31dd142a89728b18 \
                    sha256  551523d0630c51f9df38c1e3029403299aad2540bf06b78fda69ccae56db6d5d \
                    size    761530

categories          devel
license             BSD
maintainers         {@barracuda156 gmail.com:vital.had} openmaintainer

description         Fizz is a TLS 1.3 implementation
long_description    {*}${description}

github.tarball_from releases
distname            ${name}-v${version}
extract.mkdir       yes

set port_libfmt     libfmt11
cmake.module_path-append \
                    ${prefix}/lib/${port_libfmt}/cmake

depends_lib-append  port:bzip2 \
                    port:double-conversion \
                    port:folly \
                    port:gflags \
                    port:google-glog \
                    port:libevent \
                    port:liboqs \
                    port:libsodium \
                    port:libunwind \
                    port:lz4 \
                    port:zlib \
                    port:zstd \
                    port:${port_libfmt}

cmake.source_dir    ${worksrcpath}/${name}

# Fix error: invalid output constraint '=@ccc' in asm
compiler.blacklist-append \
                    {clang < 1200}

compiler.cxx_standard   2017
cmake.generator     Ninja

configure.args-append \
                    -DBUILD_TESTS=OFF \
                    -DBUILD_SHARED_LIBS=ON

# There is a configure check, but it is broken:
# https://github.com/facebookincubator/fizz/issues/139
if {[string match *gcc* ${configure.compiler}]} {
    # ___atomic_fetch_add_8
    configure.ldflags-append  -latomic
}
