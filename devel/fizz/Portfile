# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim: fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0
PortGroup           boost 1.0
PortGroup           openssl 1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           legacysupport 1.1

# O_CLOEXEC
legacysupport.newest_darwin_requires_legacy 10

github.setup        facebookincubator fizz 2022.08.08.00 v
revision            0
checksums           rmd160  29842d0e52671fdc3d9449d9df4ac37241ab3535 \
                    sha256  74cf7c76289f0eed76e6a000b6161d9e7ef27264f7d05d6bd3c2597313d68e03 \
                    size    580953

categories          devel
license             BSD
maintainers         nomaintainer

description         Fizz is a TLS 1.3 implementation
long_description    {*}${description}

github.tarball_from releases
distname            ${name}-v${version}
extract.mkdir       yes

set port_libfmt     libfmt9
cmake.module_path-append \
                    ${prefix}/lib/${port_libfmt}/cmake

depends_lib-append  port:folly \
                    port:libsodium \
                    port:libevent \
                    port:google-glog \
                    port:double-conversion \
                    port:zlib \
                    port:lz4 \
                    port:bzip2 \
                    port:zstd \
                    port:gflags \
                    port:libunwind \
                    port:${port_libfmt}

cmake.source_dir    ${worksrcpath}/${name}

# Fix error: invalid output constraint '=@ccc' in asm
compiler.blacklist-append \
                    {clang < 1200}

compiler.cxx_standard   2017
cmake.generator     Ninja

configure.args-append \
                    -DBUILD_TESTS=OFF \
                    -DBUILD_SHARED_LIBS=ON

platform darwin {
    # https://kumasento.github.io/2020-06-12-glog-gflags-and-c-abi/
    if {${os.major} < 16} {
        configure.cxxflags-append -D_GLIBCXX_USE_CXX11_ABI=0
    }
    if {[string match *gcc* ${configure.compiler}]} {
        # ___atomic_fetch_add_8
        configure.ldflags-append  -latomic
    }
}
