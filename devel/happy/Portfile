# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           haskell_stack 1.0

name                happy
version             1.19.12
categories          devel haskell
maintainers         nomaintainer
license             GPL-3
platforms           macosx
homepage            https://github.com/simonmar/happy

description         A parser generator for Haskell
long_description    \
            Happy is a parser generator for Haskell. Given a grammar \
            specification in BNF, Happy generates Haskell code to parse \
            the grammar. Happy works in a similar way to the yacc tool for C.

master_sites        https://hackage.haskell.org/package/${name}-${version}

conflicts           hs-happy

checksums           rmd160  34fff4797b87496a0493960b784df96385d4d6c0 \
                    sha256  fb9a23e41401711a3b288f93cf0a66db9f97da1ce32ec4fffea4b78a0daeb40f \
                    size    183254

# relative paths to ${prefix}
set happy_datadir   share/${name}

post-extract {
    xinstall -m 0755 -d \
        "[option haskell_stack.stack_root]" \
        ${destroot}${prefix}/${happy_datadir}

    # Fix for cabal data-files hardcoded path in binary
    # See:
    # https://github.com/commercialhaskell/stack/issues/848
    # https://github.com/commercialhaskell/stack/issues/4857
    # https://github.com/haskell/cabal/issues/462
    # https://github.com/haskell/cabal/issues/3586
    xinstall -m 0644 -W ${worksrcpath} \
        ${filespath}/Paths_NAME.hs ./src/Paths_${name}.hs

    reinplace "s|@PREFIX@|${prefix}|g" \
        ${worksrcpath}/src/Paths_${name}.hs
    reinplace "s|@NAME@|${name}|g" \
        ${worksrcpath}/src/Paths_${name}.hs
}

post-destroot {
    # install cabal data-files
    fs-traverse f ${worksrcpath}/.stack-work {
        if { [file isdirectory ${f}]
            && [file tail ${f}] eq "${name}-${version}" } {
            set stack_happy_datadir ${f}
            xinstall -m 0644 {*}[glob ${stack_happy_datadir}/*] \
                ${destroot}${prefix}/${happy_datadir}
        }
    }
}
