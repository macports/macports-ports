# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           codeberg 1.0
PortGroup           conflicts_build 1.0

codeberg.setup      emzeat xdispatch2 2.1.3 v
revision            0
categories          devel
license             Apache-2
maintainers         {@barracuda156 gmail.com:vital.had} openmaintainer
description         Grand Central Dispatch-like C++ threading library
long_description    {*}${description}, built around queues, thread pools \
                    and flexible backends.
homepage            https://emzeat.de/xdispatch2
checksums           rmd160  a9932cebcd42c04c3cbd0da8ac3cdd2ba451d01c \
                    sha256  de7085d506630dc680205a46ec94b832ebaca87b942f795abc5d556b0df5a64a \
                    size    122979

compiler.cxx_standard   2011

depends_build-append \
                    port:mz-cmaketools

conflicts_build     libunwind

# See: https://github.com/emzeat/xdispatch2/issues/1
patchfiles-append   0001-Avoid-a-need-for-Conan.patch

# https://github.com/emzeat/xdispatch2/commit/d7805c0750b2ed30b92844c15f8a309d2d67c00c
patchfiles-append   0002-Add-missing-stdexcept-header.patch

post-patch {
    reinplace "s,@PREFIX@,${prefix}," ${worksrcpath}/CMakeLists.txt
    reinplace "s,@VERSION@,${version}," ${worksrcpath}/CMakeLists.txt
}

# Backends
configure.args-append \
                    -DBUILD_XDISPATCH2_BACKEND_NAIVE=ON \
                    -DBUILD_XDISPATCH2_BACKEND_LIBDISPATCH=OFF \
                    -DBUILD_XDISPATCH2_BACKEND_QT5=OFF
# Build options
configure.args-append \
                    -DBUILD_XDISPATCH2_AS_FRAMEWORK=OFF \
                    -DBUILD_XDISPATCH2_STATIC=OFF \
                    -DBUILD_XDISPATCH2_TESTS=OFF

variant libdispatch description "Enable libdispatch back-end" {
    configure.args-replace \
                    -DBUILD_XDISPATCH2_BACKEND_LIBDISPATCH=OFF \
                    -DBUILD_XDISPATCH2_BACKEND_LIBDISPATCH=ON
}

platform darwin {
    variant framework description "Build as a framework" {
        configure.args-replace \
                    -DBUILD_XDISPATCH2_AS_FRAMEWORK=OFF \
                    -DBUILD_XDISPATCH2_AS_FRAMEWORK=ON
    }

    default_variants-append \
                    +framework

    # Does not yet build with libdispatch on 10.6:
    # https://github.com/emzeat/xdispatch2/issues/2
    if {${os.major} > 10} {
            default_variants-append \
                    +libdispatch
    }

#     variant libdispatch_legacy description "Enable libdispatch support for legacy systems" {
#         depends_lib-append \
#                     port:libdispatch-legacy
#         configure.cppflags-append \
#                     -I${prefix}/libexec/dispatch/usr/include
#         configure.ldflags-append \
#                     ${prefix}/libexec/dispatch/usr/lib/libdispatch.a
#     }
}

variant tests description "Enable testing" {
    configure.pre_args-replace \
                    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON \
                    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF
    configure.args-replace \
                    -DBUILD_XDISPATCH2_TESTS=OFF -DBUILD_XDISPATCH2_TESTS=ON

    # runner.c: error: variable 'no' set but not used [-Werror,-Wunused-but-set-variable]
    # MUnit_tools.h: error: 'vsprintf' is deprecated: This function is provided
    # for compatibility reasons only [-Werror,-Wdeprecated-declarations]
    patchfiles-append \
                    0003-Fix-tests.patch \
                    0004-Tests-no-qt5.patch

    test.run        yes
    test.cmd        ${cmake.build_dir}/bin/xdispatch2_tests
    test.target
}
