--- configure.ac.orig	2023-04-29 03:53:52.000000000 +0200
+++ configure.ac	2023-07-31 16:17:59.000000000 +0200
@@ -319,16 +319,41 @@
 ])
 
 need_arc4random=yes
+need_bitstring=yes
 need_bsd_getopt=yes
-need_progname=yes
+need_byteorder=yes
+need_bzero=yes
+need_err=yes
+need_fgetln=yes
+need_fmtcheck=yes
+need_fparseln=yes
+need_fpurge=yes
+need_funopen=yes
+need_getbsize=yes
+need_getpeereid=yes
+need_heapsort=yes
+need_id_from_name=yes
+need_inet_net_pton=yes
 need_md5=yes
 need_nlist=yes
+need_queue=yes
+need_progname=yes
+need_radixsort=yes
+need_readpassphrase=yes
+need_reallocf=yes
+need_setmode=yes
+need_stringlist=yes
 need_strl=yes
-need_wcsl=yes
 need_strmode=yes
-need_id_from_name=yes
-need_fpurge=yes
-need_funopen=yes
+need_strnstr=yes
+need_strtonum=yes
+# need_transparent_libmd was addressed by checks for libraries above.
+need_timeradd=yes
+need_timeval=yes
+need_tree=yes
+need_vis=yes
+need_wcsl=yes
+
 AS_CASE([$host_os],
   [*-musl*], [
     # On musl >= 0.5.0, strlcpy() and strlcat() were already implemented,
@@ -349,33 +374,53 @@
     # On macOS these are provided by the system, and libbsd has never built
     # there, so we can avoid providing these with no ABI breakage.
     need_arc4random=no
+    need_bitstring=no
     need_bsd_getopt=no
-    need_progname=no
-    need_transparent_libmd=no
+    need_byteorder=no
+    need_bzero=no
+    need_err=no
+    need_fgetln=no
+    need_fmtcheck=no
+    need_fparseln=no
+    need_fpurge=no
+    # On macOS we do not have fopencookie(), and cannot implement it.
+    need_funopen=no
+    need_getbsize=no
+    need_getpeereid=no
+    need_heapsort=no
+    need_id_from_name=no
+    need_inet_net_pton=no
     need_md5=no
     need_nlist=no
+    need_progname=no
+    need_queue=no
+    need_radixsort=no
+    need_readpassphrase=no
+    need_reallocf=no
+    need_setmode=no
+    need_stringlist=no
     need_strl=no
-    need_wcsl=no
     need_strmode=no
-    need_id_from_name=no
-    need_fpurge=no
-    # On macOS we do not have fopencookie(), and cannot implement it.
-    need_funopen=no
+    need_strnstr=no
+    need_strtonum=no
+    need_transparent_libmd=no
+    need_vis=no
+    need_wcsl=no
   ],
 )
 
 AM_CONDITIONAL([HAVE_GETENTROPY], [test "x$ac_cv_func_getentropy" = "xyes"])
 
 AM_CONDITIONAL([NEED_ARC4RANDOM], [test "x$need_arc4random" = "xyes"])
+AM_CONDITIONAL([NEED_BITSTRING], [test "x$need_bitstring" = "xyes"])
 AM_CONDITIONAL([NEED_BSD_GETOPT], [test "x$need_bsd_getopt" = "xyes"])
-AM_CONDITIONAL([NEED_PROGNAME], [test "x$need_progname" = "xyes"])
-AM_CONDITIONAL([NEED_TRANSPARENT_LIBMD], [test "x$need_transparent_libmd" = "xyes"])
-AM_CONDITIONAL([NEED_MD5], [test "x$need_md5" = "xyes"])
-AM_CONDITIONAL([NEED_NLIST], [test "x$need_nlist" = "xyes"])
-AM_CONDITIONAL([NEED_STRL], [test "x$need_strl" = "xyes"])
-AM_CONDITIONAL([NEED_WCSL], [test "x$need_wcsl" = "xyes"])
-AM_CONDITIONAL([NEED_STRMODE], [test "x$need_strmode" = "xyes"])
-AM_CONDITIONAL([NEED_ID_FROM_NAME], [test "x$need_id_from_name" = "xyes"])
+AM_CONDITIONAL([NEED_BYTEORDER], [test "x$need_byteorder" = "xyes"])
+AM_CONDITIONAL([NEED_BZERO], [test "x$need_bzero" = "xyes"])
+AM_CONDITIONAL([NEED_ERR], [test "x$need_err" = "xyes"])
+AM_CONDITIONAL([NEED_FGETLN], [test "x$need_fgetln" = "xyes"])
+AM_CONDITIONAL([NEED_FMTCHECK], [test "x$need_fmtcheck" = "xyes"])
+AM_CONDITIONAL([NEED_FPARSELN], [test "x$need_fparseln" = "xyes"])
+
 AM_CONDITIONAL([NEED_FPURGE], [test "x$need_fpurge" = "xyes"])
 AM_CONDITIONAL([NEED_FUNOPEN], [test "x$need_funopen" = "xyes"])
 AS_IF([test "x$need_funopen" = "xno" && \
@@ -384,6 +429,31 @@
   AC_MSG_WARN([[can implement funopen() now based on newly added fopencooke(), report upstream]])
 ])
 
+AM_CONDITIONAL([NEED_GETBSIZE], [test "x$need_getbsize" = "xyes"])
+AM_CONDITIONAL([NEED_GETPEEREID], [test "x$need_getpeereid" = "xyes"])
+AM_CONDITIONAL([NEED_HEAPSORT], [test "x$need_heapsort" = "xyes"])
+AM_CONDITIONAL([NEED_ID_FROM_NAME], [test "x$need_id_from_name" = "xyes"])
+AM_CONDITIONAL([NEED_INET_NET_PTON], [test "x$need_inet_net_pton" = "xyes"])
+AM_CONDITIONAL([NEED_MD5], [test "x$need_md5" = "xyes"])
+AM_CONDITIONAL([NEED_NLIST], [test "x$need_nlist" = "xyes"])
+AM_CONDITIONAL([NEED_PROGNAME], [test "x$need_progname" = "xyes"])
+AM_CONDITIONAL([NEED_QUEUE], [test "x$need_queue" = "xyes"])
+AM_CONDITIONAL([NEED_RADIXSORT], [test "x$need_radixsort" = "xyes"])
+AM_CONDITIONAL([NEED_READPASSPHRASE], [test "x$need_readpassphrase" = "xyes"])
+AM_CONDITIONAL([NEED_REALLOCF], [test "x$need_reallocf" = "xyes"])
+AM_CONDITIONAL([NEED_SETMODE], [test "x$need_setmode" = "xyes"])
+AM_CONDITIONAL([NEED_STRINGLIST], [test "x$need_stringlist" = "xyes"])
+AM_CONDITIONAL([NEED_STRL], [test "x$need_strl" = "xyes"])
+AM_CONDITIONAL([NEED_STRMODE], [test "x$need_strmode" = "xyes"])
+AM_CONDITIONAL([NEED_STRNSTR], [test "x$need_strnstr" = "xyes"])
+AM_CONDITIONAL([NEED_STRTONUM], [test "x$need_strtonum" = "xyes"])
+AM_CONDITIONAL([NEED_TIMERADD], [test "x$need_timeradd" = "xyes"])
+AM_CONDITIONAL([NEED_TIMEVAL], [test "x$need_timeval" = "xyes"])
+AM_CONDITIONAL([NEED_TRANSPARENT_LIBMD], [test "x$need_transparent_libmd" = "xyes"])
+AM_CONDITIONAL([NEED_TREE], [test "x$need_tree" = "xyes"])
+AM_CONDITIONAL([NEED_VIS], [test "x$need_vis" = "xyes"])
+AM_CONDITIONAL([NEED_WCSL], [test "x$need_wcsl" = "xyes"])
+
 AC_SUBST([MD5_LIBS])
 AC_SUBST([LIBBSD_LIBS])
 
