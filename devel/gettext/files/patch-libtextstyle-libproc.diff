Combination of:
https://github.com/coreutils/gnulib/commit/8e3d5944a4c6fca1ecf1d76f669da83861eb0ca0
https://github.com/coreutils/gnulib/commit/119622a83d47b01b5a9fb2af4542cdb45f4eb83b
--- libtextstyle/lib/get_ppid_of.c.orig
+++ libtextstyle/lib/get_ppid_of.c
@@ -33,7 +33,19 @@
 #endif
 
 #if defined __APPLE__ && defined __MACH__                   /* Mac OS X */
-# include <libproc.h>
+/* Get MAC_OS_X_VERSION_MIN_REQUIRED, MAC_OS_X_VERSION_MAX_ALLOWED.
+   The version at runtime satisfies
+   MAC_OS_X_VERSION_MIN_REQUIRED <= version <= MAC_OS_X_VERSION_MAX_ALLOWED.  */
+# include <AvailabilityMacros.h>
+# if MAC_OS_X_VERSION_MAX_ALLOWED >= 1050
+#  include <libproc.h>
+#  if MAC_OS_X_VERSION_MIN_REQUIRED < 1050
+/* Mac OS X versions < 10.5 don't have this function.  Therefore declare it as
+   weak, in order to avoid a runtime error when the binaries are run on these
+   older versions.  */
+extern int proc_pidinfo (int, int, uint64_t, void *, int) WEAK_IMPORT_ATTRIBUTE;
+#  endif
+# endif
 #endif
 
 #if defined _AIX                                            /* AIX */
@@ -226,24 +238,40 @@ get_ppid_of (pid_t pid)
 #endif
 
 #if defined __APPLE__ && defined __MACH__                   /* Mac OS X */
+# if MAC_OS_X_VERSION_MAX_ALLOWED >= 1050
+
+  /* Mac OS X >= 10.7 has PROC_PIDT_SHORTBSDINFO.  */
+#  if defined PROC_PIDT_SHORTBSDINFO
+#   if MAC_OS_X_VERSION_MIN_REQUIRED < 1050
+  if (proc_pidinfo != NULL) /* at runtime Mac OS X >= 10.5 ? */
+#   endif
+    {
+      struct proc_bsdshortinfo info;
 
-# if defined PROC_PIDT_SHORTBSDINFO
-  struct proc_bsdshortinfo info;
+      if (proc_pidinfo (pid, PROC_PIDT_SHORTBSDINFO, 0, &info, sizeof (info))
+          == sizeof (info))
+        return info.pbsi_ppid;
+    }
+#  endif
 
-  if (proc_pidinfo (pid, PROC_PIDT_SHORTBSDINFO, 0, &info, sizeof (info))
-      == sizeof (info))
-    return info.pbsi_ppid;
-# else
+#  if MAC_OS_X_VERSION_MIN_REQUIRED < 1070
+  /* For older versions, use PROC_PIDTBSDINFO instead.  */
   /* Note: The second part of 'struct proc_bsdinfo' differs in size between
      32-bit and 64-bit environments, and the kernel of Mac OS X 10.5 knows
      only about the 32-bit 'struct proc_bsdinfo'.  Fortunately all the info
      we need is in the first part, which is the same in 32-bit and 64-bit.  */
-  struct proc_bsdinfo info;
+#   if MAC_OS_X_VERSION_MIN_REQUIRED < 1050
+  if (proc_pidinfo != NULL) /* at runtime Mac OS X >= 10.5 ? */
+#   endif
+    {
+      struct proc_bsdinfo info;
 
-  if (proc_pidinfo (pid, PROC_PIDTBSDINFO, 0, &info, 128) == 128)
-    return info.pbi_ppid;
-# endif
+      if (proc_pidinfo (pid, PROC_PIDTBSDINFO, 0, &info, 128) == 128)
+        return info.pbi_ppid;
+    }
+#  endif
 
+# endif
 #endif
 
 #if defined _AIX                                            /* AIX */
--- libtextstyle/lib/get_progname_of.c.orig
+++ libtextstyle/lib/get_progname_of.c
@@ -41,7 +41,19 @@
 #endif
 
 #if defined __APPLE__ && defined __MACH__                   /* Mac OS X */
-# include <libproc.h>
+/* Get MAC_OS_X_VERSION_MIN_REQUIRED, MAC_OS_X_VERSION_MAX_ALLOWED.
+   The version at runtime satisfies
+   MAC_OS_X_VERSION_MIN_REQUIRED <= version <= MAC_OS_X_VERSION_MAX_ALLOWED.  */
+# include <AvailabilityMacros.h>
+# if MAC_OS_X_VERSION_MAX_ALLOWED >= 1050
+#  include <libproc.h>
+#  if MAC_OS_X_VERSION_MIN_REQUIRED < 1050
+/* Mac OS X versions < 10.5 don't have this function.  Therefore declare it as
+   weak, in order to avoid a runtime error when the binaries are run on these
+   older versions.  */
+extern int proc_pidinfo (int, int, uint64_t, void *, int) WEAK_IMPORT_ATTRIBUTE;
+#  endif
+# endif
 #endif
 
 #if defined _AIX                                            /* AIX */
@@ -266,24 +278,40 @@ get_progname_of (pid_t pid)
 #endif
 
 #if defined __APPLE__ && defined __MACH__                   /* Mac OS X */
+# if MAC_OS_X_VERSION_MAX_ALLOWED >= 1050
+
+  /* Mac OS X >= 10.7 has PROC_PIDT_SHORTBSDINFO.  */
+#  if defined PROC_PIDT_SHORTBSDINFO
+#   if MAC_OS_X_VERSION_MIN_REQUIRED < 1050
+  if (proc_pidinfo != NULL) /* at runtime Mac OS X >= 10.5 ? */
+#   endif
+    {
+      struct proc_bsdshortinfo info;
 
-# if defined PROC_PIDT_SHORTBSDINFO
-  struct proc_bsdshortinfo info;
+      if (proc_pidinfo (pid, PROC_PIDT_SHORTBSDINFO, 0, &info, sizeof (info))
+          == sizeof (info))
+        return strdup (info.pbsi_comm);
+    }
+#  endif
 
-  if (proc_pidinfo (pid, PROC_PIDT_SHORTBSDINFO, 0, &info, sizeof (info))
-      == sizeof (info))
-    return strdup (info.pbsi_comm);
-# else
+#  if MAC_OS_X_VERSION_MIN_REQUIRED < 1070
+  /* For older versions, use PROC_PIDTBSDINFO instead.  */
   /* Note: The second part of 'struct proc_bsdinfo' differs in size between
      32-bit and 64-bit environments, and the kernel of Mac OS X 10.5 knows
      only about the 32-bit 'struct proc_bsdinfo'.  Fortunately all the info
      we need is in the first part, which is the same in 32-bit and 64-bit.  */
-  struct proc_bsdinfo info;
+#   if MAC_OS_X_VERSION_MIN_REQUIRED < 1050
+  if (proc_pidinfo != NULL) /* at runtime Mac OS X >= 10.5 ? */
+#   endif
+    {
+      struct proc_bsdinfo info;
 
-  if (proc_pidinfo (pid, PROC_PIDTBSDINFO, 0, &info, 128) == 128)
-    return strdup (info.pbi_comm);
-# endif
+      if (proc_pidinfo (pid, PROC_PIDTBSDINFO, 0, &info, 128) == 128)
+        return strdup (info.pbi_comm);
+    }
+#  endif
 
+# endif
 #endif
 
 #if defined _AIX                                            /* AIX */
