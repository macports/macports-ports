# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/operator-framework/operator-sdk 1.34.1 v
revision            0
categories          devel
platforms           darwin
license             Apache-2
maintainers         {emcrisostomo @emcrisostomo} \
                    openmaintainer

description         The Operator Framework is an open source toolkit to \
                    manage Kubernetes native applications, called \
                    Operators, in an effective, automated, and scalable \
                    way.
long_description    The goal of an Operator is to put operational knowledge \
                    into software. Previously this knowledge only resided in \
                    the minds of administrators, various combinations of \
                    shell scripts or automation software like Ansible. It was \
                    outside of your Kubernetes cluster and hard to integrate. \
                    With Operators, CoreOS changed that.

checksums           rmd160  ec2c8cd862634c5c1b93f738945028607da3c15b \
                    sha256  e7055237693a76e329d843a1e53bfcaaeaf9b254cc83eed7cc3a49c550cd6312 \
                    size    2458265

# Allow deps to fetched at build time
go.offline_build no
build.target        ${go.package}/cmd/operator-sdk ${go.package}/cmd/helm-operator

pre-build {
    set worksrcpath_parent [exec dirname [exec dirname ${worksrcpath}]]
    set simple_version v${version}
    set git_version v${version}
    set git_commit edaed1e5057db0349568e0b02df3743051b54e68
    set k8s_version v1.28.0
    set image_version ${version}
    build.cmd ${go.bin} \
        build -o ${worksrcpath} \
        -gcflags "all=-trimpath=${worksrcpath_parent}" \
        -asmflags "all=-trimpath=${worksrcpath_parent}" \
        -ldflags \
        "\"-X '${go.package}/internal/version.Version=${simple_version}' \
        -X '${go.package}/internal/version.GitVersion=${git_version}' \
        -X '${go.package}/internal/version.GitCommit=${git_commit}' \
        -X '${go.package}/internal/version.KubernetesVersion=${k8s_version}' \
        -X '${go.package}/internal/version.ImageVersion=${image_version}'\""
}

destroot {
    xinstall -m 755 ${worksrcpath}/${name} ${destroot}${prefix}/bin
    xinstall -m 755 ${worksrcpath}/helm-operator ${destroot}${prefix}/bin
}

github.livecheck.regex  {([^"r]+)}
