# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/aws/copilot-cli 1.22.1 v
github.tarball_from archive
name                copilot
revision            0

homepage            https://aws.github.io/copilot-cli

description         AWS Copilot CLI allows developers to build, release and \
                    operate containerized applications on Amazon ECS and AWS \
                    Fargate.

long_description    The AWS Copilot CLI is a tool for developers to create, \
                    release and manage production ready containerized \
                    applications on Amazon ECS and AWS Fargate. From getting \
                    started, pushing to a test environment and releasing to \
                    production, Copilot helps you through the entire life of \
                    your app development.

categories          devel
installs_libs       no
license             Apache-2
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

depends_build-append \
                    port:go-mockgen \
                    path:bin/npm:npm8 \
                    port:packr

# allow Go to fetch deps at run-time
build.env-delete    GO111MODULE=off GOPROXY=off

build.cmd           make
build.pre_args      VERSION=${version}
build.args          release

use_parallel_build  no

checksums           rmd160  34435ab57e5f62a04d21a834b981f15177e84c20 \
                    sha256  76ff51c0ef38949683977ee89634ef3f5cc2d9913d69b8cae6ebc7e5ab853cf6 \
                    size    14297848

patch {
    # Remove Windows and Linux builds for the release target
    reinplace -E {/^release:/ s/compile-(linux|windows)[[:space:]]+//g} \
        ${worksrcpath}/Makefile

    # Delete all 'go get' lines, to prohibit the Makefile from installing
    # build utilities on its own (we want it to use those MacPorts provides).
    reinplace -E {/go get/d} ${worksrcpath}/Makefile

    # Modify custom Go tools path to use binaries provided by MacPorts
    reinplace -E "s|^GOBIN=.*|GOBIN=${prefix}/bin|g" ${worksrcpath}/Makefile
}

destroot {
    xinstall -m 0755 \
        ${worksrcpath}/bin/local/${name}-${goos}-${goarch} \
        ${destroot}${prefix}/bin/${name}
}
