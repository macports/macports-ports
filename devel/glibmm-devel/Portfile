# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           active_variants 1.1

name                glibmm-devel
conflicts           glibmm

# this version should match glib2-devel
version             2.62.0
set branch          [join [lrange [split ${version} .] 0 1] .]
description         C++ interface to glib
long_description    {*}${description}
maintainers         nomaintainer
categories          devel x11
platforms           darwin
license             LGPL-2.1+
homepage            http://www.gtkmm.org/
distname            glibmm-${version}
master_sites        gnome:sources/glibmm/${branch}/

use_xz              yes

checksums           rmd160  440f4c2edcc7501917df1d6cd344697f95d7e727 \
                    sha256  36659f13cc73282392d1305858f3bbca46fbd1ce2f078cc9db8b9f79b2e93cfe \
                    size    7398144

depends_build       port:pkgconfig \
                    port:mm-common

# this version of glibmm is meant to match only glib2-devel; glib2 is too old
depends_lib         port:glib2-devel \
                    port:libsigcxx2

# glibmm > 2.44.0 requires C++11 or better
compiler.cxx_standard 2011

configure.perl      /usr/bin/perl

configure.args      --disable-silent-rules

post-destroot {
    set mmdoctooldir ${prefix}/share/glibmm-2.4/doctool
    xinstall -d ${destroot}${mmdoctooldir}
    xinstall -m 0644 -W ${worksrcpath}/docs doc-install.pl doc-postprocess.pl \
                                            tagfile-to-devhelp2.xsl \
                                            ${destroot}${mmdoctooldir}
    xinstall -m 0644 -W ${worksrcpath}/docs/reference/html doxygen.css \
                                            ${destroot}${mmdoctooldir}
}

variant quartz conflicts x11 {
    require_active_variants port:glib2-devel quartz
}

variant x11 conflicts quartz {
    require_active_variants port:glib2-devel x11
    patchfiles-append patch-no_cocoa.diff
}

if {![variant_isset quartz]} {
    default_variants +x11
}

test.run            yes
test.target         check

livecheck.type      gnome
