# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           compilers 1.0
PortGroup           github 1.0
PortGroup           linear_algebra 1.0
PortGroup           legacysupport 1.1
PortGroup           mpi 1.0

# clock_gettime
legacysupport.newest_darwin_requires_legacy 15

# Until next release switching to commit-based setup due to several important fixes by upstream. See:
# https://github.com/starpu-runtime/starpu/issues/15
# https://github.com/starpu-runtime/starpu/issues/16
github.setup        starpu-runtime starpu e8f83a290384fd9453bac3cb0e3b2cb35e4091b6
version             1.4.0
revision            1
categories          devel
license             LGPL-2.1
maintainers         {@barracuda156 gmail.com:vital.had} openmaintainer
description         Unified runtime system for heterogeneous multicore architectures
long_description    StarPU is a runtime system that offers support for heterogeneous multicore machines. \
                    While many efforts are devoted to design efficient computation kernels \
                    for those architectures (e.g. to implement BLAS kernels on GPUs), StarPU \
                    not only takes care of offloading such kernels (and implementing data coherency \
                    across the machine), but it also makes sure the kernels are executed as efficiently as possible.
homepage            https://starpu.gitlabpages.inria.fr
checksums           rmd160  fe19314a671bcd3e04b24fbebd6c7708d11b18f7 \
                    sha256  0adedaad4d9f01efa1230c32454a44d70b19466f26bc85d501ea39576438fc92 \
                    size    13696760

patchfiles          autogen.sh.patch

# https://github.com/starpu-runtime/starpu/issues/21
# https://gitlab.inria.fr/starpu/starpu/-/commit/68ad5cd770bc4e1cc079062630be3617977c57b6
patchfiles-append   patch-starpu_mpi_world_rank.diff

compiler.blacklist-append \
                    *gcc-4.* {clang < 400}
compilers.choose    fc f90 f77 cc

# Until mpich-defailt is enabled with gcc:
if {${os.platform} eq "darwin" && ${os.arch} eq "powerpc"} {
    mpi.setup       require require_fortran \
                    -gcc44 -gcc45 -gcc46 -gcc47 -gcc48 -gcc49 \
                    -clang -fortran
} else {
    mpi.setup       require require_fortran \
                    -gcc44 -gcc45 -gcc46 -gcc47 -gcc48 -gcc49
}

use_autoreconf      yes
autoreconf.cmd      ./autogen.sh

depends_build-append \
                    port:autoconf \
                    port:automake \
                    port:libtool \
                    port:pkgconfig
depends_lib-append  port:hdf5 \
                    port:hwloc

configure.args-append \
                    --disable-silent-rules \
                    --with-mpiexec=${prefix}/bin/${mpi.exec} \
                    --with-mpicc=${prefix}/bin/${mpi.cc} \
                    --with-mpicxx=${prefix}/bin/${mpi.cxx} \
                    --with-mpifort=${prefix}/bin/${mpi.f90}

test.run            yes
test.target         check
