# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0
PortGroup           openssl 1.0

github.setup        avast retdec 4.0 v
revision            3
conflicts           ${name}-devel

categories          devel
license             MIT
platforms           darwin
maintainers         {@catap korins.ky:kirill} openmaintainer

description         RetDec is a retargetable machine-code decompiler based on LLVM
long_description    {*}${description}. The decompiler is not limited to any particular \
                    target architecture, operating system, or executable file format.

checksums           rmd160  305e901b37441337d5c0dada1ccc5e737831ef1e \
                    sha256  b0e3172d9d232899b71dac41446592c03abe089b8e9c7c1a9c8e8bfe92cf8b49 \
                    size    8732003

post-patch {
    reinplace "s|\${CMAKE_INSTALL_PREFIX}|${destroot}\${CMAKE_INSTALL_PREFIX}|" ${worksrcpath}/CMakeLists.txt
    reinplace "s|\${CMAKE_INSTALL_PREFIX}|${destroot}\${CMAKE_INSTALL_PREFIX}|" ${worksrcpath}/support/CMakeLists.txt
    reinplace "s|DESTINATION \${SUPPORT_TARGET_DIR}/|DESTINATION \${RETDEC_INSTALL_SUPPORT_DIR}|" ${worksrcpath}/support/CMakeLists.txt

    if {${name} eq ${subport}} {
        # v4.0 requires stricly to use AppleClang
        # anyway, it can be build by macports clang at old system
        reinplace "s|\"AppleClang\"|\"AppleClang\" AND NOT \"\${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\"|" ${worksrcpath}/deps/openssl/CMakeLists.txt
    }
}

if {${name} eq ${subport}} {
    # v4.0 includes OpenSSL 1.1.1l => use the same version.
    # See https://github.com/avast/retdec/pull/807
    openssl.branch  1.1

    patch.pre_args  -p1
    patchfiles      patch-openssl-v40.diff \
                    patch-python3.diff \
                    patch-yara-syntax-error.diff

    if {${os.platform} eq "darwin" && ${os.major} < 18} {
        known_fail  yes
        pre-fetch {
            ui_error "${subport} requires macOS 10.14 or later."
            return -code error "incompatible macOS version"
        }
    }
}

compiler.cxx_standard \
                    2017

build.args-append   CC=${configure.cc} \
                    CXX=${configure.cxx}

build.env-append    CC=${configure.cc} \
                    CXX=${configure.cxx}

depends_build-append \
                    port:autoconf \
                    port:automake \
                    port:git \
                    port:gmake \
                    port:libtool

depends_lib-append  port:python39 \
                    port:zlib

depends_run-append  path:bin/dot:graphviz \
                    port:upx

# NOTE: Force use of gmake; otherwise, macOS' make will be used for top-level
# subprocesses, while gmake will be used for lower-level ones. And jobserver
# coordination doesn't work between them, preventing proper limiting of parallel
# jobs!
# See: https://trac.macports.org/ticket/63999
build.cmd           gmake

subport retdec-devel {
    conflicts       $name

    github.setup    avast retdec d6dee5807ea3d24c5ec1e7f1bf759e95ba3862c7
    version         20211115
    revision        0
    epoch           1

    checksums       rmd160  91ab301f2a02ed93d9ba47cb0f96db4b79e61200 \
                    sha256  a0db993d9f41a0ae5a6ab649271f913105e618781452fa5ef9f4ff5fe80cca8a \
                    size    12133669

    # Before Catalina it also requires macports-libcxx
    if {${os.platform} eq "darwin" && ${os.major} < 19} {
        depends_lib-append          port:macports-libcxx
        configure.cxxflags-append   -nostdinc++ -I${prefix}/include/libcxx/v1
        configure.ldflags-append    -L${prefix}/lib/libcxx
    }

    if {${os.platform} eq "darwin" && ${os.major} < 17} {
        known_fail  yes
        pre-fetch {
            ui_error "${subport} requires macOS 10.13 or later."
            return -code error "incompatible macOS version"
        }
    }
}

github.livecheck.regex  {([^"v]+)}
