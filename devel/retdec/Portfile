# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           github 1.0
PortGroup           openssl 1.0
PortGroup           compiler_blacklist_versions 1.0

github.setup        avast retdec 4.0 v
revision            8
conflicts           ${name}-devel

categories          devel
license             MIT
platforms           darwin
maintainers         {@catap korins.ky:kirill} openmaintainer

description         RetDec is a retargetable machine-code decompiler based on LLVM
long_description    {*}${description}. The decompiler is not limited to any particular \
                    target architecture, operating system, or executable file format.

checksums           rmd160  305e901b37441337d5c0dada1ccc5e737831ef1e \
                    sha256  b0e3172d9d232899b71dac41446592c03abe089b8e9c7c1a9c8e8bfe92cf8b49 \
                    size    8732003

post-patch {
    reinplace "s|\${CMAKE_INSTALL_PREFIX}|${destroot}\${CMAKE_INSTALL_PREFIX}|" ${worksrcpath}/CMakeLists.txt
    reinplace "s|\${CMAKE_INSTALL_PREFIX}|${destroot}\${CMAKE_INSTALL_PREFIX}|" ${worksrcpath}/support/CMakeLists.txt
    reinplace "s|DESTINATION \${SUPPORT_TARGET_DIR}/|DESTINATION \${RETDEC_INSTALL_SUPPORT_DIR}|" ${worksrcpath}/support/CMakeLists.txt
}

set python_branch   3.10
set python_version  [string map {. {}} ${python_branch}]

configure.python    ${prefix}/bin/python${python_branch}

# It can't be linked only against libc++
# this force is OK as node does not link against any other c++ libs
depends_lib-append   port:libcxx
configure.cxx_stdlib libc++

if {${name} eq ${subport}} {
    patch.pre_args  -p1
    patchfiles      patch-hardcoded-make-v40.diff \
                    patch-python3.diff \
                    cmake-libtool-v4.0.diff \
                    patch-system-openssl.diff \
                    patch-yara-syntax-error.diff \
                    yara-inherits-linker-flags-v40.diff

    # 4.0's yara uses std::variant<>, which is broken on macOS <= 10.12
    if {${os.platform} eq "darwin" && ${os.major} <= 16} {
        depends_lib-append          port:macports-libcxx
        configure.cxxflags-append   -nostdinc++ -isystem${prefix}/include/libcxx/v1
        configure.ldflags-append    -L${prefix}/lib/libcxx
    }
}

subport retdec-devel {
    conflicts       $name

    github.setup    avast retdec f76d20031d8106eb69fc56cff9505f7a0f819470
    version         20221107
    revision        0
    epoch           1

    checksums       rmd160  4bd42fd53b80c71e2607fd3888bf180329b5abff \
                    sha256  ab2f35f31e795e04f573fe4e2d8bb7f5865564d57106a2db93dca6f02ef07029 \
                    size    27192555

    # NOTE: patch-hardcoded-make-devel.diff was merged and reverted
    # See: https://github.com/avast/retdec/commit/a1d7a5793d590bec9fce3ee33cd4f0eacb47eda6
    patch.pre_args  -p1
    patchfiles      patch-hardcoded-make-devel.diff

    # Before Catalina it also requires macports-libcxx
    if {${os.platform} eq "darwin" && ${os.major} < 19} {
        depends_lib-append          port:macports-libcxx
        configure.cxxflags-append   -nostdinc++ -isystem${prefix}/include/libcxx/v1
        configure.ldflags-append    -L${prefix}/lib/libcxx
    }

    # retdec depends on yaramod which had hardcoded `python`
    # unfortently patching yaramod isn't easy because it's downloaded and upacked by cmake.
    # The only way is provides python2.7 with correct ENV variables, until the fix is merged.
    # See: https://github.com/avast/yaramod/pull/225
    depends_build-append \
                    port:python27
    build.env-append \
                    PATH=${prefix}/Library/Frameworks/Python.framework/Versions/2.7/bin:$env(PATH)
}


compiler.cxx_standard \
                    2017

# Extend blacklist to cover macOS10.13
compiler.blacklist-append \
                    {clang < 1100} {macports-clang-[4-9].0} macports-clang-10

build.args-append   CC=${configure.cc} \
                    CXX=${configure.cxx}

build.env-append    CC=${configure.cc} \
                    CXX=${configure.cxx}

depends_build-append \
                    port:autoconf \
                    port:automake \
                    port:cctools \
                    port:git \
                    port:gmake \
                    port:ld64

depends_lib-append  port:python${python_version} \
                    port:zlib

depends_run-append  path:bin/dot:graphviz \
                    path:bin/upx:upx

# NOTE: both available PG legacysupport brokes build with error
# libstdc++ version must be at least 4.8.
if {${os.platform} eq "darwin" && ${os.major} < 11} {
    depends_lib-append \
                    path:lib/libMacportsLegacySupport.dylib:legacy-support

    configure.cflags-append \
                    -isystem${prefix}/include/LegacySupport
    configure.cxxflags-append \
                    -isystem${prefix}/include/LegacySupport
    configure.ldflags-append \
                    -L${prefix}/lib -lMacportsLegacySupport

    # NOTE: bin2pat and pat2yara compilation by MacPort's clang-11 is failed on 10.6 as
    # clang: error: unable to execute command: Segmentation fault
    # Right now it is impossible to disable specified project.
    # Here the list of projects for 4.0 and devel version.
    # See: https://github.com/avast/retdec/issues/1112
    configure.args-append \
                    -DRETDEC_ENABLE_ALL:BOOL=OFF \
                    -DRETDEC_ENABLE_AR_EXTRACTOR:BOOL=ON \
                    -DRETDEC_ENABLE_AR_EXTRACTORTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_BIN2LLVMIR:BOOL=ON \
                    -DRETDEC_ENABLE_BIN2LLVMIRTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_BIN2PAT:BOOL=OFF \
                    -DRETDEC_ENABLE_CAPSTONE2LLVMIR:BOOL=ON \
                    -DRETDEC_ENABLE_CAPSTONE2LLVMIRTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_COMMON:BOOL=ON \
                    -DRETDEC_ENABLE_CONFIG:BOOL=ON \
                    -DRETDEC_ENABLE_CONFIGTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_CPDETECT:BOOL=ON \
                    -DRETDEC_ENABLE_CRYPTO:BOOL=ON \
                    -DRETDEC_ENABLE_CTYPES:BOOL=ON \
                    -DRETDEC_ENABLE_CTYPESPARSER:BOOL=ON \
                    -DRETDEC_ENABLE_DEBUGFORMAT:BOOL=ON \
                    -DRETDEC_ENABLE_DEMANGLER:BOOL=ON \
                    -DRETDEC_ENABLE_DEMANGLERTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_FILEFORMAT:BOOL=ON \
                    -DRETDEC_ENABLE_FILEINFO:BOOL=ON \
                    -DRETDEC_ENABLE_GETSIG:BOOL=ON \
                    -DRETDEC_ENABLE_IDR2PAT:BOOL=ON \
                    -DRETDEC_ENABLE_LLVMIR2HLL:BOOL=ON \
                    -DRETDEC_ENABLE_LLVMIR2HLLTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_LLVMIR_EMUL:BOOL=ON \
                    -DRETDEC_ENABLE_LLVM_SUPPORT:BOOL=ON \
                    -DRETDEC_ENABLE_LOADER:BOOL=ON \
                    -DRETDEC_ENABLE_MACHO_EXTRACTOR:BOOL=ON \
                    -DRETDEC_ENABLE_MACHO_EXTRACTORTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_PAT2YARA:BOOL=OFF \
                    -DRETDEC_ENABLE_PATTERNGEN:BOOL=ON \
                    -DRETDEC_ENABLE_PDBPARSER:BOOL=ON \
                    -DRETDEC_ENABLE_PELIB:BOOL=ON \
                    -DRETDEC_ENABLE_RETDEC:BOOL=ON \
                    -DRETDEC_ENABLE_RETDECTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_RETDEC_DECOMPILER:BOOL=ON \
                    -DRETDEC_ENABLE_RTTI_FINDER:BOOL=ON \
                    -DRETDEC_ENABLE_SERDES:BOOL=ON \
                    -DRETDEC_ENABLE_STACOFIN:BOOL=ON \
                    -DRETDEC_ENABLE_STACOFINTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_UNPACKER:BOOL=ON \
                    -DRETDEC_ENABLE_UNPACKERTOOL:BOOL=ON \
                    -DRETDEC_ENABLE_UTILS:BOOL=ON \
                    -DRETDEC_ENABLE_YARACPP:BOOL=ON
}

# error: /usr/bin/ranlib: unknown option character `n' in: -no_warning_for_no_symbols
# error: /Developer/usr/bin/libtool: malformed object (unknown load command 2)
configure.args-append \
                    -DCMAKE_LINKER=${prefix}/bin/ld \
                    -DCMAKE_RANLIB=${prefix}/bin/ranlib \
                    -DCMAKE_LIBTOOL=${prefix}/bin/libtool

# NOTE: Force use of gmake; otherwise, macOS' make will be used for top-level
# subprocesses, while gmake will be used for lower-level ones. And jobserver
# coordination doesn't work between them, preventing proper limiting of parallel
# jobs!
# See: https://trac.macports.org/ticket/63999
build.cmd           ${prefix}/bin/gmake
configure.args-append \
                    -DCMAKE_MAKE_PROGRAM=${prefix}/bin/gmake

post-destroot {
    reinplace "s|^#!/usr/bin/env python3|#!${configure.python}|" \
        {*}[glob ${destroot}${prefix}/bin/*.py]
}


github.livecheck.regex  {([^"v]+)}
