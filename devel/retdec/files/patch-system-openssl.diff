commit 17738d9443567412dcca418c5ef768e0e245c326
Author: Kirill A. Korinsky <kirill@korins.ky>
Date:   Fri Nov 26 03:42:42 2021 +0100

    v4.0: system openssl3

diff --git a/cmake/options.cmake b/cmake/options.cmake
index 375882ac..6e43a116 100644
--- a/cmake/options.cmake
+++ b/cmake/options.cmake
@@ -497,9 +497,6 @@ set_if_at_least_one_set(RETDEC_ENABLE_LLVM
 		RETDEC_ENABLE_CPDETECT
 		RETDEC_ENABLE_DEBUGFORMAT)
 
-set_if_at_least_one_set(RETDEC_ENABLE_OPENSLL
-		RETDEC_ENABLE_CRYPTO)
-
 set_if_at_least_one_set(RETDEC_ENABLE_RAPIDJSON
 		RETDEC_ENABLE_AR_EXTRACTOR
 		RETDEC_ENABLE_AR_EXTRACTORTOOL
diff --git a/deps/CMakeLists.txt b/deps/CMakeLists.txt
index cf5d8be5..e41dc8fc 100644
--- a/deps/CMakeLists.txt
+++ b/deps/CMakeLists.txt
@@ -22,7 +22,6 @@ cond_add_subdirectory(elfio RETDEC_ENABLE_ELFIO)
 cond_add_subdirectory(googletest RETDEC_ENABLE_GOOGLETEST)
 cond_add_subdirectory(keystone RETDEC_ENABLE_KEYSTONE)
 cond_add_subdirectory(llvm RETDEC_ENABLE_LLVM)
-cond_add_subdirectory(openssl RETDEC_ENABLE_OPENSLL)
 cond_add_subdirectory(rapidjson RETDEC_ENABLE_RAPIDJSON)
 cond_add_subdirectory(tinyxml2 RETDEC_ENABLE_TINYXML2)
 cond_add_subdirectory(whereami RETDEC_ENABLE_WHEREAMI)
diff --git a/src/crypto/CMakeLists.txt b/src/crypto/CMakeLists.txt
index 2c2a70c5..30af3fcf 100644
--- a/src/crypto/CMakeLists.txt
+++ b/src/crypto/CMakeLists.txt
@@ -6,6 +6,8 @@ add_library(crypto STATIC
 )
 add_library(retdec::crypto ALIAS crypto)
 
+find_package(OpenSSL 1.1.1 REQUIRED)
+
 target_compile_features(crypto PUBLIC cxx_std_17)
 
 target_include_directories(crypto
@@ -15,10 +17,9 @@ target_include_directories(crypto
 )
 
 target_link_libraries(crypto
-	PUBLIC
-		retdec::deps::openssl-crypto
 	PRIVATE
 		retdec::utils
+		OpenSSL::Crypto
 )
 
 set_target_properties(crypto
diff --git a/src/crypto/hash_context.cpp b/src/crypto/hash_context.cpp
index 7aac59e3..8dd8c836 100644
--- a/src/crypto/hash_context.cpp
+++ b/src/crypto/hash_context.cpp
@@ -95,7 +95,11 @@ std::string HashContext::getHash()
 	if (_currentAlgo == nullptr)
 		return {};
 
+#if OPENSSL_VERSION_NUMBER >= 0x3000000fL
+	std::vector<std::uint8_t> hash(EVP_MD_get_size(_currentAlgo));
+#else
 	std::vector<std::uint8_t> hash(EVP_MD_size(_currentAlgo));
+#endif
 	if (EVP_DigestFinal(_ctx, hash.data(), nullptr) != 1)
 		return {};
 
diff --git a/src/crypto/retdec-crypto-config.cmake b/src/crypto/retdec-crypto-config.cmake
index ed57d176..1760b3e7 100644
--- a/src/crypto/retdec-crypto-config.cmake
+++ b/src/crypto/retdec-crypto-config.cmake
@@ -5,7 +5,6 @@ if(NOT TARGET retdec::crypto)
         REQUIRED
         COMPONENTS
             utils
-            openssl-crypto
     )
 
     include(${CMAKE_CURRENT_LIST_DIR}/retdec-crypto-targets.cmake)
diff --git a/src/fileformat/types/certificate_table/certificate.cpp b/src/fileformat/types/certificate_table/certificate.cpp
index 72368257..5abdc696 100644
--- a/src/fileformat/types/certificate_table/certificate.cpp
+++ b/src/fileformat/types/certificate_table/certificate.cpp
@@ -219,11 +219,15 @@ void Certificate::loadPublicKey()
 	PEM_write_bio_PUBKEY(memBio.get(), pubKey.get());
 	publicKey = parsePublicKey(memBio.get());
 
+#if OPENSSL_VERSION_NUMBER >= 0x3000000fL
+	publicKeyAlgo = OBJ_nid2sn(EVP_PKEY_get_base_id(pubKey.get()));
+#else
 #if OPENSSL_VERSION_NUMBER >= 0x10100000L
 	publicKeyAlgo = OBJ_nid2sn(EVP_PKEY_base_id(pubKey.get()));
 #else
 	publicKeyAlgo = OBJ_nid2sn(OBJ_obj2nid(certImpl->cert_info->key->algor->algorithm));
 #endif
+#endif
 }
 
 void Certificate::loadSignatureAlgorithm()
