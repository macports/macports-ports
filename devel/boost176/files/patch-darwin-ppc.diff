--- libs/context/src/asm/jump_ppc32_sysv_macho_gas.S.orig	2021-04-14 00:21:41.000000000 +0800
+++ libs/context/src/asm/jump_ppc32_sysv_macho_gas.S	2022-10-06 09:41:54.000000000 +0800
@@ -80,122 +80,122 @@
     ; reserve space on stack
     subi  r1, r1, 244
 
-    stfd  f14, 0(r1)  # save F14
-    stfd  f15, 8(r1)  # save F15
-    stfd  f16, 16(r1)  # save F16
-    stfd  f17, 24(r1)  # save F17
-    stfd  f18, 32(r1)  # save F18
-    stfd  f19, 40(r1)  # save F19
-    stfd  f20, 48(r1)  # save F20
-    stfd  f21, 56(r1)  # save F21
-    stfd  f22, 64(r1)  # save F22
-    stfd  f23, 72(r1)  # save F23
-    stfd  f24, 80(r1)  # save F24
-    stfd  f25, 88(r1)  # save F25
-    stfd  f26, 96(r1)  # save F26
-    stfd  f27, 104(r1)  # save F27
-    stfd  f28, 112(r1)  # save F28
-    stfd  f29, 120(r1)  # save F29
-    stfd  f30, 128(r1)  # save F30
-    stfd  f31, 136(r1)  # save F31
-    mffs  f0  # load FPSCR
-    stfd  f0, 144(r1)  # save FPSCR
-
-    stw  r13, 152(r1)  # save R13
-    stw  r14, 156(r1)  # save R14
-    stw  r15, 160(r1)  # save R15
-    stw  r16, 164(r1)  # save R16
-    stw  r17, 168(r1)  # save R17
-    stw  r18, 172(r1)  # save R18
-    stw  r19, 176(r1)  # save R19
-    stw  r20, 180(r1)  # save R20
-    stw  r21, 184(r1)  # save R21
-    stw  r22, 188(r1)  # save R22
-    stw  r23, 192(r1)  # save R23
-    stw  r24, 196(r1)  # save R24
-    stw  r25, 200(r1)  # save R25
-    stw  r26, 204(r1)  # save R26
-    stw  r27, 208(r1)  # save R27
-    stw  r28, 212(r1)  # save R28
-    stw  r29, 216(r1)  # save R29
-    stw  r30, 220(r1)  # save R30
-    stw  r31, 224(r1)  # save R31
-    stw  r3,  228(r1)  # save hidden
+    stfd  f14, 0(r1)  ; save F14
+    stfd  f15, 8(r1)  ; save F15
+    stfd  f16, 16(r1)  ; save F16
+    stfd  f17, 24(r1)  ; save F17
+    stfd  f18, 32(r1)  ; save F18
+    stfd  f19, 40(r1)  ; save F19
+    stfd  f20, 48(r1)  ; save F20
+    stfd  f21, 56(r1)  ; save F21
+    stfd  f22, 64(r1)  ; save F22
+    stfd  f23, 72(r1)  ; save F23
+    stfd  f24, 80(r1)  ; save F24
+    stfd  f25, 88(r1)  ; save F25
+    stfd  f26, 96(r1)  ; save F26
+    stfd  f27, 104(r1)  ; save F27
+    stfd  f28, 112(r1)  ; save F28
+    stfd  f29, 120(r1)  ; save F29
+    stfd  f30, 128(r1)  ; save F30
+    stfd  f31, 136(r1)  ; save F31
+    mffs  f0  ; load FPSCR
+    stfd  f0, 144(r1)  ; save FPSCR
+
+    stw  r13, 152(r1)  ; save R13
+    stw  r14, 156(r1)  ; save R14
+    stw  r15, 160(r1)  ; save R15
+    stw  r16, 164(r1)  ; save R16
+    stw  r17, 168(r1)  ; save R17
+    stw  r18, 172(r1)  ; save R18
+    stw  r19, 176(r1)  ; save R19
+    stw  r20, 180(r1)  ; save R20
+    stw  r21, 184(r1)  ; save R21
+    stw  r22, 188(r1)  ; save R22
+    stw  r23, 192(r1)  ; save R23
+    stw  r24, 196(r1)  ; save R24
+    stw  r25, 200(r1)  ; save R25
+    stw  r26, 204(r1)  ; save R26
+    stw  r27, 208(r1)  ; save R27
+    stw  r28, 212(r1)  ; save R28
+    stw  r29, 216(r1)  ; save R29
+    stw  r30, 220(r1)  ; save R30
+    stw  r31, 224(r1)  ; save R31
+    stw  r3,  228(r1)  ; save hidden
 
-    # save CR
+    ; save CR
     mfcr  r0
     stw   r0, 232(r1)
-    # save LR
+    ; save LR
     mflr  r0
     stw   r0, 236(r1)
-    # save LR as PC
+    ; save LR as PC
     stw   r0, 240(r1)
 
-    # store RSP (pointing to context-data) in R6
+    ; store RSP (pointing to context-data) in R6
     mr  r6, r1
 
-    # restore RSP (pointing to context-data) from R4
+    ; restore RSP (pointing to context-data) from R4
     mr  r1, r4
 
-    lfd  f14, 0(r1)  # restore F14
-    lfd  f15, 8(r1)  # restore F15
-    lfd  f16, 16(r1)  # restore F16
-    lfd  f17, 24(r1)  # restore F17
-    lfd  f18, 32(r1)  # restore F18
-    lfd  f19, 40(r1)  # restore F19
-    lfd  f20, 48(r1)  # restore F20
-    lfd  f21, 56(r1)  # restore F21
-    lfd  f22, 64(r1)  # restore F22
-    lfd  f23, 72(r1)  # restore F23
-    lfd  f24, 80(r1)  # restore F24
-    lfd  f25, 88(r1)  # restore F25
-    lfd  f26, 96(r1)  # restore F26
-    lfd  f27, 104(r1)  # restore F27
-    lfd  f28, 112(r1)  # restore F28
-    lfd  f29, 120(r1)  # restore F29
-    lfd  f30, 128(r1)  # restore F30
-    lfd  f31, 136(r1)  # restore F31
-    lfd  f0,  144(r1)  # load FPSCR
-    mtfsf  0xff, f0  # restore FPSCR
-
-    lwz  r13, 152(r1)  # restore R13
-    lwz  r14, 156(r1)  # restore R14
-    lwz  r15, 160(r1)  # restore R15
-    lwz  r16, 164(r1)  # restore R16
-    lwz  r17, 168(r1)  # restore R17
-    lwz  r18, 172(r1)  # restore R18
-    lwz  r19, 176(r1)  # restore R19
-    lwz  r20, 180(r1)  # restore R20
-    lwz  r21, 184(r1)  # restore R21
-    lwz  r22, 188(r1)  # restore R22
-    lwz  r23, 192(r1)  # restore R23
-    lwz  r24, 196(r1)  # restore R24
-    lwz  r25, 200(r1)  # restore R25
-    lwz  r26, 204(r1)  # restore R26
-    lwz  r27, 208(r1)  # restore R27
-    lwz  r28, 212(r1)  # restore R28
-    lwz  r29, 216(r1)  # restore R29
-    lwz  r30, 220(r1)  # restore R30
-    lwz  r31, 224(r1)  # restore R31
-    lwz  r3,  228(r1)  # restore hidden
+    lfd  f14, 0(r1)  ; restore F14
+    lfd  f15, 8(r1)  ; restore F15
+    lfd  f16, 16(r1)  ; restore F16
+    lfd  f17, 24(r1)  ; restore F17
+    lfd  f18, 32(r1)  ; restore F18
+    lfd  f19, 40(r1)  ; restore F19
+    lfd  f20, 48(r1)  ; restore F20
+    lfd  f21, 56(r1)  ; restore F21
+    lfd  f22, 64(r1)  ; restore F22
+    lfd  f23, 72(r1)  ; restore F23
+    lfd  f24, 80(r1)  ; restore F24
+    lfd  f25, 88(r1)  ; restore F25
+    lfd  f26, 96(r1)  ; restore F26
+    lfd  f27, 104(r1)  ; restore F27
+    lfd  f28, 112(r1)  ; restore F28
+    lfd  f29, 120(r1)  ; restore F29
+    lfd  f30, 128(r1)  ; restore F30
+    lfd  f31, 136(r1)  ; restore F31
+    lfd  f0,  144(r1)  ; load FPSCR
+    mtfsf  0xff, f0  ; restore FPSCR
+
+    lwz  r13, 152(r1)  ; restore R13
+    lwz  r14, 156(r1)  ; restore R14
+    lwz  r15, 160(r1)  ; restore R15
+    lwz  r16, 164(r1)  ; restore R16
+    lwz  r17, 168(r1)  ; restore R17
+    lwz  r18, 172(r1)  ; restore R18
+    lwz  r19, 176(r1)  ; restore R19
+    lwz  r20, 180(r1)  ; restore R20
+    lwz  r21, 184(r1)  ; restore R21
+    lwz  r22, 188(r1)  ; restore R22
+    lwz  r23, 192(r1)  ; restore R23
+    lwz  r24, 196(r1)  ; restore R24
+    lwz  r25, 200(r1)  ; restore R25
+    lwz  r26, 204(r1)  ; restore R26
+    lwz  r27, 208(r1)  ; restore R27
+    lwz  r28, 212(r1)  ; restore R28
+    lwz  r29, 216(r1)  ; restore R29
+    lwz  r30, 220(r1)  ; restore R30
+    lwz  r31, 224(r1)  ; restore R31
+    lwz  r3,  228(r1)  ; restore hidden
 
-    # restore CR
+    ; restore CR
     lwz   r0, 232(r1)
     mtcr  r0
-    # restore LR
+    ; restore LR
     lwz   r0, 236(r1)
     mtlr  r0
-    # load PC
+    ; load PC
     lwz   r0, 240(r1)
-    # restore CTR
+    ; restore CTR
     mtctr r0
 
-    # adjust stack
+    ; adjust stack
     addi  r1, r1, 244
 
-    # return transfer_t 
+    ; return transfer_t 
     stw  r6, 0(r3)
     stw  r5, 4(r3)
 
-    # jump to context
+    ; jump to context
     bctr

--- libs/context/src/asm/jump_ppc64_sysv_macho_gas.S.orig	2021-04-14 00:21:41.000000000 +0800
+++ libs/context/src/asm/jump_ppc64_sysv_macho_gas.S	2022-10-06 09:41:54.000000000 +0800
@@ -12,7 +12,7 @@
  *  -------------------------------------------------  *
  *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
  *  -------------------------------------------------  *
- *  |    TOC    |    R14    |    R15    |    R16    |  *
+ *  |    R13    |    R14    |    R15    |    R16    |  *
  *  -------------------------------------------------  *
  *  -------------------------------------------------  *
  *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
@@ -61,7 +61,7 @@
  *  -------------------------------------------------  *
  *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
  *  -------------------------------------------------  *
- *  | TOC saved |    FCTX   |    DATA   |           |  *
+ *  |    FCTX   |    DATA   |           |           |  *
  *  -------------------------------------------------  *
  *                                                     *
  *******************************************************/
@@ -138,27 +138,27 @@
 
     ; load PC
     ld  r12, 176(r1)
-    # restore CTR
+    ; restore CTR
     mtctr  r12
 
-    # adjust stack
+    ; adjust stack
     addi  r1, r1, 184
 
-    # zero in r3 indicates first jump to context-function
+    ; zero in r3 indicates first jump to context-function
     cmpdi r3, 0
     beq use_entry_arg
 
-    # return transfer_t
+    ; return transfer_t
     std  r6, 0(r3)
     std  r5, 8(r3)
 
-    # jump to context
+    ; jump to context
     bctr
 
 use_entry_arg:
-    # copy transfer_t into transfer_fn arg registers
+    ; copy transfer_t into transfer_fn arg registers
     mr  r3, r6
     mr  r4, r5
 
-    # jump to context
+    ; jump to context
     bctr

--- libs/context/src/asm/make_ppc32_sysv_macho_gas.S.orig	2021-04-14 00:21:41.000000000 +0800
+++ libs/context/src/asm/make_ppc32_sysv_macho_gas.S	2022-10-06 11:46:02.000000000 +0800
@@ -77,61 +77,61 @@
 .globl _make_fcontext
 .align 2
 _make_fcontext:
-    # save return address into R6
+    ; save return address into R6
     mflr  r6
 
-    # first arg of make_fcontext() == top address of context-function
-    # shift address in R3 to lower 16 byte boundary
+    ; first arg of make_fcontext() == top address of context-function
+    ; shift address in R3 to lower 16 byte boundary
     clrrwi  r3, r3, 4
 
-    # reserve space for context-data on context-stack
-    # including 64 byte of linkage + parameter area (R1  16 == 0)
+    ; reserve space for context-data on context-stack
+    ; including 64 byte of linkage + parameter area (R1  16 == 0)
     subi  r3, r3, 336
 
-    # third arg of make_fcontext() == address of context-function
+    ; third arg of make_fcontext() == address of context-function
     stw  r5, 240(r3)
 
-    # set back-chain to zero
+    ; set back-chain to zero
     li   r0, 0
     stw  r0, 244(r3)
 
-    mffs  f0  # load FPSCR
-    stfd  f0, 144(r3)  # save FPSCR
+    mffs  f0  ; load FPSCR
+    stfd  f0, 144(r3)  ; save FPSCR
 
-    # compute address of returned transfer_t
+    ; compute address of returned transfer_t
     addi  r0, r3, 252
     mr    r4, r0 
     stw   r4, 228(r3) 
 
-    # load LR
+    ; load LR
     mflr  r0
-    # jump to label 1
-    bl  1f
-1:
-    # load LR into R4
+    ; jump to label 1
+    bl  l1
+l1:
+    ; load LR into R4
     mflr  r4
-    # compute abs address of label finish
-    addi  r4, r4, finish - 1b
-    # restore LR
+    ; compute abs address of label finish
+    addi  r4, r4, lo16((finish - .) + 4)
+    ; restore LR
     mtlr  r0
-    # save address of finish as return-address for context-function
-    # will be entered after context-function returns
+    ; save address of finish as return-address for context-function
+    ; will be entered after context-function returns
     stw  r4, 236(r3)
 
-    # restore return address from R6
+    ; restore return address from R6
     mtlr  r6
 
-    blr  # return pointer to context-data
+    blr  ; return pointer to context-data
 
 finish:
-    # save return address into R0
+    ; save return address into R0
     mflr  r0
-    # save return address on stack, set up stack frame
+    ; save return address on stack, set up stack frame
     stw  r0, 4(r1)
-    # allocate stack space, R1  16 == 0
+    ; allocate stack space, R1  16 == 0
     stwu  r1, -16(r1)
 
-    # exit code is zero
+    ; exit code is zero
     li  r3, 0
-    # exit application
-    bl  _exit@plt
+    ; exit application
+    bl  _exit

--- libs/context/src/asm/make_ppc64_sysv_macho_gas.S.orig	2021-04-14 00:21:41.000000000 +0800
+++ libs/context/src/asm/make_ppc64_sysv_macho_gas.S	2022-10-06 09:41:54.000000000 +0800
@@ -12,7 +12,7 @@
  *  -------------------------------------------------  *
  *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
  *  -------------------------------------------------  *
- *  |    TOC    |    R14    |    R15    |    R16    |  *
+ *  |    R13    |    R14    |    R15    |    R16    |  *
  *  -------------------------------------------------  *
  *  -------------------------------------------------  *
  *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
@@ -61,7 +61,7 @@
  *  -------------------------------------------------  *
  *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
  *  -------------------------------------------------  *
- *  | TOC saved |    FCTX   |    DATA   |           |  *
+ *  |    FCTX   |    DATA   |           |           |  *
  *  -------------------------------------------------  *
  *                                                     *
 
@@ -77,19 +77,19 @@
 
     ; reserve space for context-data on context-stack
     ; including 64 byte of linkage + parameter area (R1  16 == 0)
-    subi  r3, r3, 248
+    subi  r3, r3, 240
 
     ; third arg of make_fcontext() == address of context-function
     stw  r5, 176(r3)
 
     ; set back-chain to zero
-    li   %r0, 0
-    std  %r0, 184(%r3)
+    li   r0, 0
+    std  r0, 184(r3)
 
     ; compute address of returned transfer_t
-    addi %r0, %r3, 232
-    mr   %r4, %r0
-    std  %r4, 152(%r3)
+    addi r0, r3, 224
+    mr   r4, r0
+    std  r4, 152(r3)
 
     ; load LR
     mflr  r0

--- libs/context/src/asm/ontop_ppc32_sysv_macho_gas.S.orig	2021-04-14 00:21:41.000000000 +0800
+++ libs/context/src/asm/ontop_ppc32_sysv_macho_gas.S	2022-10-06 09:41:54.000000000 +0800
@@ -77,125 +77,125 @@
 .globl _ontop_fcontext
 .align 2
 _ontop_fcontext:
-    # reserve space on stack
+    ; reserve space on stack
     subi  r1, r1, 244
 
-    stfd  f14, 0(r1)  # save F14
-    stfd  f15, 8(r1)  # save F15
-    stfd  f16, 16(r1)  # save F16
-    stfd  f17, 24(r1)  # save F17
-    stfd  f18, 32(r1)  # save F18
-    stfd  f19, 40(r1)  # save F19
-    stfd  f20, 48(r1)  # save F20
-    stfd  f21, 56(r1)  # save F21
-    stfd  f22, 64(r1)  # save F22
-    stfd  f23, 72(r1)  # save F23
-    stfd  f24, 80(r1)  # save F24
-    stfd  f25, 88(r1)  # save F25
-    stfd  f26, 96(r1)  # save F26
-    stfd  f27, 104(r1)  # save F27
-    stfd  f28, 112(r1)  # save F28
-    stfd  f29, 120(r1)  # save F29
-    stfd  f30, 128(r1)  # save F30
-    stfd  f31, 136(r1)  # save F31
-    mffs  f0  # load FPSCR
-    stfd  f0, 144(r1)  # save FPSCR
-
-    stw  r13, 152(r1)  # save R13
-    stw  r14, 156(r1)  # save R14
-    stw  r15, 160(r1)  # save R15
-    stw  r16, 164(r1)  # save R16
-    stw  r17, 168(r1)  # save R17
-    stw  r18, 172(r1)  # save R18
-    stw  r19, 176(r1)  # save R19
-    stw  r20, 180(r1)  # save R20
-    stw  r21, 184(r1)  # save R21
-    stw  r22, 188(r1)  # save R22
-    stw  r23, 192(r1)  # save R23
-    stw  r24, 196(r1)  # save R24
-    stw  r25, 200(r1)  # save R25
-    stw  r26, 204(r1)  # save R26
-    stw  r27, 208(r1)  # save R27
-    stw  r28, 212(r1)  # save R28
-    stw  r29, 216(r1)  # save R29
-    stw  r30, 220(r1)  # save R30
-    stw  r31, 224(r1)  # save R31
-    stw  r3,  228(r1)  # save hidden
+    stfd  f14, 0(r1)  ; save F14
+    stfd  f15, 8(r1)  ; save F15
+    stfd  f16, 16(r1)  ; save F16
+    stfd  f17, 24(r1)  ; save F17
+    stfd  f18, 32(r1)  ; save F18
+    stfd  f19, 40(r1)  ; save F19
+    stfd  f20, 48(r1)  ; save F20
+    stfd  f21, 56(r1)  ; save F21
+    stfd  f22, 64(r1)  ; save F22
+    stfd  f23, 72(r1)  ; save F23
+    stfd  f24, 80(r1)  ; save F24
+    stfd  f25, 88(r1)  ; save F25
+    stfd  f26, 96(r1)  ; save F26
+    stfd  f27, 104(r1)  ; save F27
+    stfd  f28, 112(r1)  ; save F28
+    stfd  f29, 120(r1)  ; save F29
+    stfd  f30, 128(r1)  ; save F30
+    stfd  f31, 136(r1)  ; save F31
+    mffs  f0  ; load FPSCR
+    stfd  f0, 144(r1)  ; save FPSCR
+
+    stw  r13, 152(r1)  ; save R13
+    stw  r14, 156(r1)  ; save R14
+    stw  r15, 160(r1)  ; save R15
+    stw  r16, 164(r1)  ; save R16
+    stw  r17, 168(r1)  ; save R17
+    stw  r18, 172(r1)  ; save R18
+    stw  r19, 176(r1)  ; save R19
+    stw  r20, 180(r1)  ; save R20
+    stw  r21, 184(r1)  ; save R21
+    stw  r22, 188(r1)  ; save R22
+    stw  r23, 192(r1)  ; save R23
+    stw  r24, 196(r1)  ; save R24
+    stw  r25, 200(r1)  ; save R25
+    stw  r26, 204(r1)  ; save R26
+    stw  r27, 208(r1)  ; save R27
+    stw  r28, 212(r1)  ; save R28
+    stw  r29, 216(r1)  ; save R29
+    stw  r30, 220(r1)  ; save R30
+    stw  r31, 224(r1)  ; save R31
+    stw  r3,  228(r1)  ; save hidden
 
-    # save CR
+    ; save CR
     mfcr  r0
     stw   r0, 232(r1)
-    # save LR
+    ; save LR
     mflr  r0
     stw   r0, 236(r1)
-    # save LR as PC
+    ; save LR as PC
     stw   r0, 240(r1)
 
-    # store RSP (pointing to context-data) in R7
+    ; store RSP (pointing to context-data) in R7
     mr  r7, r1
 
-    # restore RSP (pointing to context-data) from R4
+    ; restore RSP (pointing to context-data) from R4
     mr  r1, r4
 
-    lfd  f14, 0(r1)  # restore F14
-    lfd  f15, 8(r1)  # restore F15
-    lfd  f16, 16(r1)  # restore F16
-    lfd  f17, 24(r1)  # restore F17
-    lfd  f18, 32(r1)  # restore F18
-    lfd  f19, 40(r1)  # restore F19
-    lfd  f20, 48(r1)  # restore F20
-    lfd  f21, 56(r1)  # restore F21
-    lfd  f22, 64(r1)  # restore F22
-    lfd  f23, 72(r1)  # restore F23
-    lfd  f24, 80(r1)  # restore F24
-    lfd  f25, 88(r1)  # restore F25
-    lfd  f26, 96(r1)  # restore F26
-    lfd  f27, 104(r1)  # restore F27
-    lfd  f28, 112(r1)  # restore F28
-    lfd  f29, 120(r1)  # restore F29
-    lfd  f30, 128(r1)  # restore F30
-    lfd  f31, 136(r1)  # restore F31
-    lfd  f0,  144(r1)  # load FPSCR
-    mtfsf  0xff, f0  # restore FPSCR
-
-    lwz  r13, 152(r1)  # restore R13
-    lwz  r14, 156(r1)  # restore R14
-    lwz  r15, 160(r1)  # restore R15
-    lwz  r16, 164(r1)  # restore R16
-    lwz  r17, 168(r1)  # restore R17
-    lwz  r18, 172(r1)  # restore R18
-    lwz  r19, 176(r1)  # restore R19
-    lwz  r20, 180(r1)  # restore R20
-    lwz  r21, 184(r1)  # restore R21
-    lwz  r22, 188(r1)  # restore R22
-    lwz  r23, 192(r1)  # restore R23
-    lwz  r24, 196(r1)  # restore R24
-    lwz  r25, 200(r1)  # restore R25
-    lwz  r26, 204(r1)  # restore R26
-    lwz  r27, 208(r1)  # restore R27
-    lwz  r28, 212(r1)  # restore R28
-    lwz  r29, 216(r1)  # restore R29
-    lwz  r30, 220(r1)  # restore R30
-    lwz  r31, 224(r1)  # restore R31
-    lwz  r4,  228(r1)  # restore hidden
+    lfd  f14, 0(r1)  ; restore F14
+    lfd  f15, 8(r1)  ; restore F15
+    lfd  f16, 16(r1)  ; restore F16
+    lfd  f17, 24(r1)  ; restore F17
+    lfd  f18, 32(r1)  ; restore F18
+    lfd  f19, 40(r1)  ; restore F19
+    lfd  f20, 48(r1)  ; restore F20
+    lfd  f21, 56(r1)  ; restore F21
+    lfd  f22, 64(r1)  ; restore F22
+    lfd  f23, 72(r1)  ; restore F23
+    lfd  f24, 80(r1)  ; restore F24
+    lfd  f25, 88(r1)  ; restore F25
+    lfd  f26, 96(r1)  ; restore F26
+    lfd  f27, 104(r1)  ; restore F27
+    lfd  f28, 112(r1)  ; restore F28
+    lfd  f29, 120(r1)  ; restore F29
+    lfd  f30, 128(r1)  ; restore F30
+    lfd  f31, 136(r1)  ; restore F31
+    lfd  f0,  144(r1)  ; load FPSCR
+    mtfsf  0xff, f0  ; restore FPSCR
+
+    lwz  r13, 152(r1)  ; restore R13
+    lwz  r14, 156(r1)  ; restore R14
+    lwz  r15, 160(r1)  ; restore R15
+    lwz  r16, 164(r1)  ; restore R16
+    lwz  r17, 168(r1)  ; restore R17
+    lwz  r18, 172(r1)  ; restore R18
+    lwz  r19, 176(r1)  ; restore R19
+    lwz  r20, 180(r1)  ; restore R20
+    lwz  r21, 184(r1)  ; restore R21
+    lwz  r22, 188(r1)  ; restore R22
+    lwz  r23, 192(r1)  ; restore R23
+    lwz  r24, 196(r1)  ; restore R24
+    lwz  r25, 200(r1)  ; restore R25
+    lwz  r26, 204(r1)  ; restore R26
+    lwz  r27, 208(r1)  ; restore R27
+    lwz  r28, 212(r1)  ; restore R28
+    lwz  r29, 216(r1)  ; restore R29
+    lwz  r30, 220(r1)  ; restore R30
+    lwz  r31, 224(r1)  ; restore R31
+    lwz  r4,  228(r1)  ; restore hidden
 
-    # restore CR
+    ; restore CR
     lwz   r0, 232(r1)
     mtcr  r0
-    # restore LR
+    ; restore LR
     lwz   r0, 236(r1)
     mtlr  r0
-    # ignore PC
+    ; ignore PC
 
-    # adjust stack
+    ; adjust stack
     addi  r1, r1, 244
 
-    # return transfer_t 
+    ; return transfer_t 
     stw  r7, 0(r4)
     stw  r5, 4(r4)
 
-    # restore CTR
+    ; restore CTR
     mtctr r6
 
-    # jump to ontop-function
+    ; jump to ontop-function
     bctr

--- libs/context/src/asm/ontop_ppc64_sysv_macho_gas.S.orig	2021-04-14 00:21:41.000000000 +0800
+++ libs/context/src/asm/ontop_ppc64_sysv_macho_gas.S	2022-10-06 09:41:54.000000000 +0800
@@ -12,7 +12,7 @@
  *  -------------------------------------------------  *
  *  |  0  |  4  |  8  |  12 |  16 |  20 |  24 |  28 |  *
  *  -------------------------------------------------  *
- *  |    TOC    |    R14    |    R15    |    R16    |  *
+ *  |    R13    |    R14    |    R15    |    R16    |  *
  *  -------------------------------------------------  *
  *  -------------------------------------------------  *
  *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
@@ -61,7 +61,7 @@
  *  -------------------------------------------------  *
  *  | 224 | 228 | 232 | 236 | 240 | 244 | 248 | 252 |  *
  *  -------------------------------------------------  *
- *  | TOC saved |    FCTX   |    DATA   |           |  *
+ *  |    FCTX   |    DATA   |           |           |  *
  *  -------------------------------------------------  *
  *                                                     *
  *******************************************************/
