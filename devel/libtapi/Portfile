# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               cmake 1.1
PortGroup               github 1.0

github.setup            tpoechtrager apple-libtapi b7b5bdbfda9e8062d405b48da3b811afad98ae76
name                    libtapi
version                 1100.0.11
revision                2
categories              devel
platforms               darwin
maintainers             {@catap korins.ky:kirill} openmaintainer

license                 APSL-2
description             ${name} adds ld64 linker support for text-based API libraries.
long_description        ${description} Newer MacOS SDKs contain only these TAPI stubs.

homepage                http://opensource.apple.com/source/tapi/

checksums               rmd160  a99aa279e626d4d638281ef9555d9b5db5f15145 \
                        sha256  66c715baaea6f28e8c079f36189027a52744138c38e83e97aeb399232365138f \
                        size    32205809

platform darwin {
    # pick a suitable python to build with
    if {${os.major} < 11} {
        # system python is too old, use python27-bootstrap to minimize dependencies
        depends_build-append    port:python27-bootstrap
        configure.args-append   -DPYTHON_EXECUTABLE=${prefix}/libexec/python27-bootstrap/bin/python2.7
        depends_skip_archcheck-append python27-bootstrap
    } elseif {${os.major} > 19} {
        # Use system python 3.x
        configure.args-append   -DPYTHON_EXECUTABLE=/usr/bin/python3
    } else {
        # use the system python, which is known to be fine for darwin 11 to 19
        configure.args-append   -DPYTHON_EXECUTABLE=/usr/bin/python2.7
    }
}

# remove need for port:libxml2 dependency
configure.args-append   -DLIBXML2_LIBRARIES=IGNORE

# avoid opportunistic linking zlib
configure.args-append   -DLLVM_ENABLE_ZLIB=OFF

# avoid opportunistic linking ncuses
configure.args-append   -DLLVM_ENABLE_TERMINFO=OFF

compiler.cxx_standard   2011

cmake.build_type        Release

# use cmake-bootstrap to minimize dependencies.
depends_build-replace   path:bin/cmake:cmake port:cmake-bootstrap
depends_skip_archcheck-append \
                        cmake-bootstrap

configure.cmd           ${prefix}/libexec/cmake-bootstrap/bin/cmake

configure.compiler.add_deps \
                        no

if {${build_arch} in "ppc ppc64"} {
    # Proxy for eliminating the dependency on native TLS
    # http://trac.macports.org/ticket/46887
    configure.args-append \
                        -DLLVM_ENABLE_BACKTRACES=OFF

    # https://llvm.org/bugs/show_bug.cgi?id=25680
    configure.cxxflags-append \
                        -U__STRICT_ANSI__

    # libtool on macOS 10.6 is too old, build it by gcc
    depends_build-append \
                        port:gcc10-bootstrap
    depends_skip_archcheck-append \
                        gcc10-bootstrap

    configure.cc        ${prefix}/libexec/gcc10-bootstrap/bin/gcc
    configure.cxx       ${prefix}/libexec/gcc10-bootstrap/bin/g++

    configure.args-append \
                        -DHAVE_LIBCXXABI=OFF \
                        -DLLVM_ENABLE_LIBCXX=OFF
} else {
    # use cctools-bootstrap's libtool
    depends_build-append    port:cctools-bootstrap
    configure.args-append \
        -DCMAKE_LIBTOOL=${prefix}/libexec/cctools-bootstrap/bin/libtool

    depends_build-append \
                        port:clang-11-bootstrap
    depends_skip_archcheck-append \
                        clang-11-bootstrap

    configure.cc        ${prefix}/libexec/clang-11-bootstrap/bin/clang
    configure.cxx       ${prefix}/libexec/clang-11-bootstrap/bin/clang++

    # libcxx is part of system or can be build by clang-11-bootstrap
    # use it to avid include into bootstrap macports-libstdc++
    configure.cxx_stdlib \
                        libc++

    if {${os.major} < 11} {
        depends_lib-append \
                        port:libcxx
    }
}

# add a missing strnlen definition if needed
patchfiles-append       patch-0006-strnlen.diff

# build manpages for tapi
patchfiles-append       patch-0007-build-manpages-for-tapi.diff

# don't try to call pthread_setname_np on 10.5
patchfiles-append       optional-pthread_setname_np.diff

configure.post_args     ${worksrcpath}/src/llvm

# needed for libtapi to find some required files
configure.cxxflags-append \
                        -I${worksrcpath}/src/llvm/projects/clang/include \
                        -I${workpath}/build/projects/clang/include

configure.args-append   -DLLVM_INCLUDE_TESTS=OFF \
                        -DTAPI_INCLUDE_DOCS=ON

build.target            libtapi tapi
destroot.target         install-libtapi install-tapi install-tapi-headers install-tapi-clang-headers install-tapi-docs

livecheck.type          regex
livecheck.regex         "tapi-(\[\\d.\]+)"
