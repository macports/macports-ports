# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           compiler_blacklist_versions 1.0

name                nettle
version             3.5.1
revision            0
checksums           rmd160  01beaf91c0eb97a2b4def7a2733e030c0aaddec1 \
                    sha256  75cca1998761b02e16f2db56da52992aef622bf55a3b45ec538bc2eedadc9419 \
                    size    1989593

categories          devel crypto
platforms           darwin
maintainers         {ryandesign @ryandesign} openmaintainer
license             LGPL-2.1+

description         low-level cryptographic library

long_description    Nettle is a cryptographic library that is designed to fit \
                    easily in more or less any context: In crypto toolkits \
                    for object-oriented languages (C++, Python, Pike, ...), \
                    in applications like LSH or GNUPG, or even in kernel \
                    space. It tries to solve a problem of providing a common \
                    set of cryptographic algorithms for higher-level \
                    applications by implementing a context-independent set of \
                    cryptographic algorithms. In that light, Nettle doesn't \
                    do any memory allocation or I/O, it simply provides the \
                    cryptographic algorithms for the application to use in \
                    any environment and in any way it needs.

homepage            https://www.lysator.liu.se/~nisse/nettle/
master_sites        gnu

depends_lib         port:gmp

patchfiles          no-fink.patch \
                    macosx-dylib.patch

use_autoreconf      yes
autoreconf.args     -fvi

# error: invalid instruction mnemonic 'sha1rnds4'
compiler.blacklist  *gcc-4.* {clang < 500}
# This works around base not adding macports-gcc to the fallback list
# automatically on ppc (nettle doesn't use C++ anyway)
# <https://trac.macports.org/ticket/59195>
compiler.cxx_standard

configure.args      --disable-openssl \
                    --enable-fat \
                    --enable-shared

test.run            yes
test.target         check
test.env            DYLD_LIBRARY_PATH=../.lib
