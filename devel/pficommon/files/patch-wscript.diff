--- wscript.orig	2013-06-25 15:51:01.000000000 +0900
+++ wscript	2013-06-26 21:21:46.000000000 +0900
@@ -45,7 +45,7 @@
 
 [Modules]
 FCGI module:             %s
-Database module:         %s
+Database module:
   have MySQL lib:          %s
   have PostgreSQL lib:     %s
 MessagePack RPC module:  %s
@@ -61,7 +61,7 @@
 Compiler version:        %s
 CXXFLAGS:                %s
 """ % (conf.env.BUILD_FCGI and 'yes' or 'no',
-       (not Options.options.disable_database) and 'yes' or 'no',
+#       (not Options.options.disable_database) and 'yes' or 'no',
        conf.env.BUILD_MYSQL and 'yes' or 'no',
        conf.env.BUILD_PGSQL and 'yes' or 'no',
        conf.env.BUILD_MPRPC and 'yes' or 'no',
--- src/database/wscript.orig	2016-03-16 23:59:36.000000000 -0500
+++ src/database/wscript	2017-11-27 07:47:27.000000000 -0600
@@ -2,15 +2,19 @@
 from waflib import Options
 
 def options(opt):
-  opt.add_option('--disable-database',
+  opt.add_option('--disable-mysql',
                  action = 'store_true',
                  default = False,
-                 help = 'disable database')
+                 help = 'disable mysql')
+  opt.add_option('--disable-postgresql',
+                 action = 'store_true',
+                 default = False,
+                 help = 'disable postgresql')
 
 def configure(conf):
   conf.env.BUILD_MYSQL = False
-  if not Options.options.disable_database:
-    if conf.check_cfg(path = 'mysql_config',
+  if not Options.options.disable_mysql:
+    if conf.check_cfg(path = '@mysql_config@',
                       args = '--cflags --libs_r',
                       package = '',
                       uselib_store = 'MYSQL',
@@ -21,10 +25,10 @@
         conf.env.BUILD_MYSQL = True
 
   conf.env.BUILD_PGSQL = False
-  if not Options.options.disable_database:
+  if not Options.options.disable_postgresql:
     try:
-      incdir = subprocess.check_output(['pg_config', '--includedir-server']).decode().rstrip()
-      libdir = subprocess.check_output(['pg_config', '--libdir']).decode().rstrip()
+      incdir = subprocess.check_output(['@pg_config@', '--includedir-server']).decode().rstrip()
+      libdir = subprocess.check_output(['@pg_config@', '--libdir']).decode().rstrip()
       if conf.check_cxx(lib = 'pq',
                         header_name = 'postgres.h',
                         cxxflags = [ '-I' + incdir ],
