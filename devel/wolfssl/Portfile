# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                wolfssl
version             5.0.0
categories          devel security
platforms           darwin
maintainers         yassl.com:chris
homepage            https://wolfssl.com/wolfSSL/Products-wolfssl.html
license             GPL-2
description         wolfSSL Embedded SSL Library

long_description    \
    The wolfSSL embedded SSL library is a lightweight SSL library written \
    in ANSI C and targeted for embedded and RTOS environments - primarily \
    because of its small size, speed, and feature set.  It is commonly \
    used in standard operating environments as well because of its \
    royalty-free pricing and excellent cross platform support.  CyaSSL \
    supports industry standards up to the current TLS and DTLS 1.2 levels, \
    is up to 20 times smaller than OpenSSL, and offers progressive ciphers \
    such as ChaCha20, Poly1305, and NTRU.

master_sites        https://www.wolfssl.com/
use_zip             yes

checksums           rmd160  f1ecfcf93cb5775a75f6b0206806f045ac802ec7 \
                    sha256  6a99c06ca0fdc6fd538df46f7bcaf8856ecd5e7db8b4eb056c117f687778bdb5 \
                    size    12325977

configure.args      --enable-distro

variant debug description {Enable wolfSSL debugging support} {
    configure.args-append \
        --enable-debug
}

variant aesni description {Enable wolfSSL Intel AES-NI support, if available} {
    configure.args-append \
        --enable-aesni
}

variant sniffer description {Enable wolfSSL sniffer support} {
    depends_lib-append \
        port:libpcap
    configure.args-append \
        --enable-sniffer
}

depends_build-append    path:libexec/coreutils/libstdbuf.so:coreutils

use_autoreconf  yes
autoreconf.args -fvi

test.run        yes

livecheck.url   https://www.wolfssl.com/wolfSSL/download/downloadForm.php
livecheck.regex "${name}-((?!.*${name}.*|\\${extract.suffix}).*)\\${extract.suffix}"

test.run    yes
test.env    RANDFILE=/tmp/wolfssl-unittest-rnd DYLD_LIBRARY_PATH=${worksrcpath}/src/.libs
test.cmd    make check
