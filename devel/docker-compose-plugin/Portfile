# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/docker/compose 2.20.2 v
revision            0
name                docker-compose-plugin
categories          devel
platforms           darwin
license             Apache-2
maintainers         {danchr @danchr} \
                    openmaintainer
description         Define and run multi-container applications with Docker
long_description    A tool for running multi-container applications on \
                    Docker defined using the Compose file format. A \
                    Compose file is used to define how one or more \
                    containers that make up your application are \
                    configured. Once you have a Compose file, you can \
                    create and start your application with a single \
                    command: docker compose up.

checksums           rmd160  19b25b07027568a39b6034c8d62f73e35886b5a7 \
                    sha256  f32c01f5f53b716866cc62054d26db7ea3ab0c204cb7dc8b98c5a60de5dcf17f \
                    size    327989

build.env-delete    GO111MODULE=off GOPROXY=off
build.target         -o ${name} ./cmd

depends_run         port:docker

pre-build {
    set distfile_dirname [exec tar tzf ${distpath}/[lindex ${distfiles} 0] | sed -n 1p]
    set docker_gitcommit [string map "${github.author}-${github.project}- {} / {}" ${distfile_dirname}]
    if {![regexp -nocase -- {^[0-9a-f]{7}$} ${docker_gitcommit}]} {
        return -code error "can't determine git commit"
    }

    set val [clock microseconds]
    set seconds_precision [expr { $val / 1000000 }]
    set build_time [clock format $seconds_precision -format "%a %b %d %H:%M:%S %Y"]

    # file rename ${worksrcpath} ${worksrcpath}~
    # file mkdir ${worksrcpath}
    # file rename ${worksrcpath}~ ${worksrcpath}/v2

    # worksrcdir ${worksrcdir}/v2

    # build.cmd ${go.bin} build -ldflags \
    #     "\"-X ${go.package}/internal.GitCommit=${docker_gitcommit} -X ${go.package}/internal.Version=${version} -X \\\"${go.package}/internal.BuildTime=${build_time}\\\"\""
}

destroot {
    xinstall -d ${destroot}${prefix}/libexec/docker/cli-plugins
    xinstall -m 755 ${worksrcpath}/${name} ${destroot}${prefix}/libexec/docker/cli-plugins/docker-compose
}

checksums           ${distname}${extract.suffix} \
                        rmd160  19b25b07027568a39b6034c8d62f73e35886b5a7 \
                        sha256  f32c01f5f53b716866cc62054d26db7ea3ab0c204cb7dc8b98c5a60de5dcf17f \
                        size    327989

github.livecheck.regex  {([^"r]+)}
