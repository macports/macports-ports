# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0

name                qscintilla2

version             2.9.3
checksums           rmd160 18c5ae739a3d62e55bf35b98a3ab893cb278e3e6 \
                    sha256 98aab93d73b05635867c2fc757acb383b5856a0b416e3fd7659f1879996ddb7e

categories          devel
license             GPL-3
maintainers         mcalhoun openmaintainer
description         QScintilla is a port to Qt of Neil Hodgson's Scintilla C++ editor control.
homepage            http://www.riverbankcomputing.com/software/qscintilla/
platforms           darwin

long_description    QScintilla is a port to Qt of Neil Hodgson's Scintilla C++ editor control. \
                	As well as features found in standard text editing components,		       \
                	QScintilla includes features especially useful when editing and		       \
                	debugging source code. These include support for syntax styling,	       \
                	error indicators, code completion and call tips. The selection		       \
                	margin can contain markers like those used in debuggers to indicate	       \
                	breakpoints and the current line. Styling choices are more open		       \
                	than with many editors, allowing the use of proportional fonts,		       \
                	bold and italics, multiple foreground and background colours and	       \
                	multiple fonts.

distname            QScintilla_gpl-${version}
master_sites        sourceforge:pyqt

if { ${subport} eq ${name} } {
    PortGroup  qmake5 1.0

    worksrcdir ${worksrcdir}/Qt4Qt5

    qt5.depends_component qtmacextras

    # see https://www.riverbankcomputing.com/pipermail/qscintilla/2016-October/001160.html
    # see https://www.riverbankcomputing.com/pipermail/qscintilla/2016-October/001167.html
    if {[vercmp ${xcodeversion} 8.0] >= 0} {
        patchfiles-append   patch-xcode-8.diff
    }

    post-destroot {
        system "install_name_tool -id ${qt_libs_dir}/libqscintilla2.12.dylib ${destroot}${qt_libs_dir}/libqscintilla2.12.0.2.dylib"
    }
}

subport ${name}-designer {
    PortGroup  qmake5 1.0

    description       Qt Designer plugin for port ${name}
    long_description  ${description}

    worksrcdir ${worksrcdir}/designer-Qt4Qt5

    qt5.depends_component qttools
    depends_lib-append        \
        port:${name}

    qt5.debug_variant no
}

set python_versions {27 34 35}

foreach pver ${python_versions} {
    subport py${pver}-${name} {
        PortGroup  qt5 1.0

        description       Python bindings for port ${name}
        long_description  ${description}

        worksrcdir ${worksrcdir}/Python

        depends_lib-append        \
            port:${name}          \
            port:python${pver}    \
            port:py${pver}-sip    \
            port:py${pver}-pyqt5

        # QScintilla2.api file is installed in the same location for all python subports
        foreach over ${python_versions} {
            if {${over} ne ${pver}} {
                conflicts-append py${over}-${name}
            }
        }

        # first part of patch allows configure.py to respect --sip=... argument
        # second part of patch passes certain environmental variables to qmake
        patchfiles-append patch-configure.py.diff

        set pbranch [string range ${pver} 0 end-1].[string index ${pver} end]
        configure.python ${prefix}/bin/python${pbranch}

        # --disable-dependency-tracking is not recognized
        configure.universal_args-delete --disable-dependency-tracking

        configure.cmd            \
            ${configure.python}  \
            configure.py

        # --prefix is not recognized
        configure.pre_args

        configure.args-append                   \
            --pyqt=PyQt5                        \
            --qmake=${qt_qmake_cmd}             \
            --sip=${prefix}/bin/sip-${pbranch}

        configure.env-append                                            \
            QMAKE_MACOSX_DEPLOYMENT_TARGET=${macosx_deployment_target}  \
            QT_CXX_STDLIB=${configure.cxx_stdlib}

        # specify build configuration (compiler, 32-bit/64-bit, etc.)
        if { ![option universal_variant] || ![variant_isset universal] } {
            configure.args-append --spec=${qt_qmake_spec}

            configure.env-append              \
                QT_ARCH=${build_arch}         \
                QT_TARGET_ARCH=${build_arch}

        } else {
            lappend merger_configure_args(i386)   --spec=${qt_qmake_spec_32}
            lappend merger_configure_args(x86_64) --spec=${qt_qmake_spec_64}

            foreach arch {i386 x86_64} {
                lappend merger_configure_env(${arch})  \
                    QT_ARCH=${arch}                    \
                    QT_TARGET_ARCH=${arch}
            }
        }
    }
}

livecheck.type      regex
livecheck.url       ${homepage}download
livecheck.regex     >QScintilla\[_-\]gpl-\(\[0-9.\]+\)${extract.suffix}<
