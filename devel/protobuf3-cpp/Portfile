# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                1.0
PortGroup       github    1.0

# NOTE: For any version number change, also
# NOTE:   Update py-protobuf3 version's number to match
# NOTE: For a minor or major version number change, also
# NOTE:   Revbump protobuf-c and mosh
github.setup    protocolbuffers protobuf 3.13.0 v
revision        0

checksums       rmd160  830be272ab19ebdabeb5e086e2a0b626f9c1611c \
                sha256  f8a547dfe143a9f61fadafba47fa6573713a33cb80909307c1502e26e1102298 \
                size    4638758

name            protobuf3-cpp
categories      devel
maintainers     nomaintainer
license         BSD

conflicts       protobuf-cpp

description     Encode data in an efficient yet extensible format.

long_description \
                Google Protocol Buffers are a flexible, efficient, \
                automated mechanism for serializing structured data -- \
                think XML, but smaller, faster, and simpler.  You \
                define how you want your data to be structured once, \
                then you can use special generated source code to \
                easily write and read your structured data to and from \
                a variety of data streams and using a variety of \
                languages.  You can even update your data structure \
                without breaking deployed programs that are compiled \
                against the "old" format.  You specify how you want \
                the information you're serializing to be structured by \
                defining protocol buffer message types in .proto \
                files.  Each protocol buffer message is a small \
                logical record of information, containing a series of \
                name-value pairs.

homepage        https://developers.google.com/protocol-buffers/

github.tarball_from releases
distname        protobuf-cpp-${version}
worksrcdir      protobuf-${version}

compiler.cxx_standard   2011
compiler.thread_local_storage   yes

# bundled libtool version doesn't recognise -stdlib
use_autoreconf  yes

platforms       darwin

depends_lib     port:zlib

# see https://trac.macports.org/wiki/UsingTheRightCompiler
configure.env-append \
    CC_FOR_BUILD=${configure.cc} \
    CXX_FOR_BUILD=${configure.cxx}

configure.cflags-append     -g
configure.cppflags-append   -g

post-destroot {
    set docdir ${destroot}${prefix}/share/doc/${name}

    xinstall -d -m 755 ${docdir}

    foreach f {CHANGES.txt CONTRIBUTORS.txt LICENSE README.md editors examples} {
        file copy ${worksrcpath}/${f} ${docdir}
    }
}

test.run    yes
test.target check

github.livecheck.regex  {([0-9.]+)}
