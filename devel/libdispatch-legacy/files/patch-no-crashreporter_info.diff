--- libdispatch-84.5.5/src/internal.h	2021-10-06 13:21:40.000000000 +0800
+++ libdispatch-84.5.5/src/internal.h	2024-04-13 21:38:05.000000000 +0800
@@ -264,7 +264,6 @@
 // 2) A hand crafted call to mach_msg*() screwed up. Use MIG.
 #define DISPATCH_VERIFY_MIG(x) do {	\
 		if ((x) == MIG_REPLY_MISMATCH) {	\
-			__crashreporter_info__ = "MIG_REPLY_MISMATCH";	\
 			_dispatch_hardware_crash();	\
 		}	\
 	} while (0)
@@ -272,24 +271,20 @@
 #if defined(__x86_64__) || defined(__i386__)
 // total hack to ensure that return register of a function is not trashed
 #define DISPATCH_CRASH(x)	do {	\
-		asm("mov	%1, %0" : "=m" (__crashreporter_info__) : "c" ("BUG IN LIBDISPATCH: " x));	\
 		_dispatch_hardware_crash();	\
 	} while (0)
 
 #define DISPATCH_CLIENT_CRASH(x)	do {	\
-		asm("mov	%1, %0" : "=m" (__crashreporter_info__) : "c" ("BUG IN CLIENT OF LIBDISPATCH: " x));	\
 		_dispatch_hardware_crash();	\
 	} while (0)
 
 #else
 
 #define DISPATCH_CRASH(x)	do {	\
-		__crashreporter_info__ = "BUG IN LIBDISPATCH: " x;	\
 		_dispatch_hardware_crash();	\
 	} while (0)
 
 #define DISPATCH_CLIENT_CRASH(x)	do {	\
-		__crashreporter_info__ = "BUG IN CLIENT OF LIBDISPATCH: " x;	\
 		_dispatch_hardware_crash();	\
 	} while (0)
 

--- libdispatch-84.5.5/src/os_shims.h	2021-10-06 13:21:40.000000000 +0800
+++ libdispatch-84.5.5/src/os_shims.h	2024-04-13 21:36:45.000000000 +0800
@@ -31,7 +31,7 @@
 #include <pthread_machdep.h>
 #include <pthread_workqueue.h>
 
-__private_extern__ const char *__crashreporter_info__;
+// extern const char *__crashreporter_info__;
 
 static const unsigned long dispatch_queue_key = __PTK_LIBDISPATCH_KEY0;
 static const unsigned long dispatch_sema4_key = __PTK_LIBDISPATCH_KEY1;
