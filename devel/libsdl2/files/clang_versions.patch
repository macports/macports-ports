https://github.com/libsdl-org/SDL/pull/4639
https://github.com/libsdl-org/SDL/pull/4640

diff --git a/include/SDL_endian.h b/include/SDL_endian.h
index 205b793579..9f88cb15b8 100644
--- include/SDL_endian.h
+++ include/SDL_endian.h
@@ -91,7 +91,7 @@ extern "C" {
 /**
  *  \file SDL_endian.h
  */
-#if (defined(__clang__) && (__clang_major__ > 3 || (__clang_major__ == 3 && __clang_minor__ >= 2))) || \
+#if (_SDL_HAS_BUILTIN(__builtin_bswap16)) || \
     (defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)))
 #define SDL_Swap16(x) __builtin_bswap16(x)
 #elif defined(__GNUC__) && defined(__i386__) && \
@@ -149,7 +149,7 @@ SDL_Swap16(Uint16 x)
 }
 #endif
 
-#if (defined(__clang__) && (__clang_major__ > 2 || (__clang_major__ == 2 && __clang_minor__ >= 6))) || \
+#if (_SDL_HAS_BUILTIN(__builtin_bswap32)) || \
     (defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3)))
 #define SDL_Swap32(x) __builtin_bswap32(x)
 #elif defined(__GNUC__) && defined(__i386__) && \
@@ -210,7 +210,7 @@ SDL_Swap32(Uint32 x)
 }
 #endif
 
-#if (defined(__clang__) && (__clang_major__ > 2 || (__clang_major__ == 2 && __clang_minor__ >= 6))) || \
+#if (_SDL_HAS_BUILTIN(__builtin_bswap64)) || \
     (defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3)))
 #define SDL_Swap64(x) __builtin_bswap64(x)
 #elif defined(__GNUC__) && defined(__i386__) && \
diff --git a/include/SDL_stdinc.h b/include/SDL_stdinc.h
index 3732854582..c7f9068170 100644
--- include/SDL_stdinc.h
+++ include/SDL_stdinc.h
@@ -115,6 +115,17 @@ char *alloca();
 # endif
 #endif
 
+/**
+ * Check if the compiler supports a given builtin.
+ * Supported by virtually all clang versions and recent gcc. Use this
+ * instead of checking the clang version if possible.
+ */
+#ifdef __has_builtin
+#define _SDL_HAS_BUILTIN(x) __has_builtin(x)
+#else
+#define _SDL_HAS_BUILTIN(x) 0
+#endif
+
 /**
  *  The number of elements in an array.
  */
--- src/audio/SDL_audiocvt.c.orig	2021-08-11 01:45:04.000000000 +1000
+++ src/audio/SDL_audiocvt.c	2021-08-13 07:29:58.000000000 +1000
@@ -47,7 +47,7 @@
 #define HAVE_AVX_INTRINSICS 1
 #endif
 #if defined __clang__
-# if (__clang_major__ < 5) || defined(_MSC_VER) || defined(__SCE__)
+# if (!__has_attribute(target)) || defined(_MSC_VER) || defined(__SCE__)
 #   undef HAVE_AVX_INTRINSICS
 # endif
 #elif defined __GNUC__
@@ -113,11 +113,8 @@ SDL_ConvertStereoToMono(SDL_AudioCVT * c
 
 #if HAVE_AVX_INTRINSICS
 /* MSVC will always accept AVX intrinsics when compiling for x64 */
-#if defined(__clang__)
-#pragma clang attribute push (__attribute__((target("avx"))), apply_to=function)
-#elif defined(__GNUC__)
-#pragma GCC push_options
-#pragma GCC target("avx")
+#if defined(__clang__) || defined(__GNUC__)
+__attribute__((target("avx")))
 #endif
 /* Convert from 5.1 to stereo. Average left and right, distribute center, discard LFE. */
 static void SDLCALL
@@ -178,11 +175,6 @@ SDL_Convert51ToStereo_AVX(SDL_AudioCVT *
         cvt->filters[cvt->filter_index] (cvt, format);
     }
 }
-#if defined(__clang__)
-#pragma clang attribute pop
-#elif defined(__GNUC__)
-#pragma GCC pop_options
-#endif
 #endif
 
 #if HAVE_SSE_INTRINSICS
