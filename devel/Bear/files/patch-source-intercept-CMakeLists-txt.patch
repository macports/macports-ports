Fix undefined __cxxabiv1::__class_type_info vtable

Linking C++ code with the C linker causes a missing vtable for in
__cxxabiv1::__class_type_info, referenced from runtime type information
in el::Linker and el::Resolver. Linking this library with clang++
instead fixes the issue.

From the upstream git log, it was not clear to me why LINKER_LANGUAGE
"C" was introduced in the first place.

Full error is:

| /usr/bin/clang  -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk -mmacosx-version-min=12.0 -dynamiclib -Wl,-headerpad_max_install_names -o libexec.dylib -install_name @rpath/libexec.dylib CMakeFiles/exec.dir/source/report/libexec/lib.cc.o CMakeFiles/exec.dir/source/report/libexec/std.cc.o CMakeFiles/exec_a.dir/source/report/libexec/Buffer.cc.o CMakeFiles/exec_a.dir/source/report/libexec/Environment.cc.o CMakeFiles/exec_a.dir/source/report/libexec/Executor.cc.o CMakeFiles/exec_a.dir/source/report/libexec/Linker.cc.o CMakeFiles/exec_a.dir/source/report/libexec/Logger.cc.o CMakeFiles/exec_a.dir/source/report/libexec/Paths.cc.o CMakeFiles/exec_a.dir/source/report/libexec/Resolver.cc.o CMakeFiles/exec_a.dir/source/report/libexec/Session.cc.o
| Undefined symbols for architecture arm64:
|   "vtable for __cxxabiv1::__class_type_info", referenced from:
|       typeinfo for el::Linker in Linker.cc.o
|       typeinfo for el::Resolver in Resolver.cc.o
|   NOTE: a missing vtable usually means the first non-inline virtual member function has no definition.
| ld: symbol(s) not found for architecture arm64
| clang: error: linker command failed with exit code 1 (use -v to see invocation)

Upstream-Status: Submitted [https://github.com/rizsotto/Bear/pull/477]
Signed-off-by: Clemens Lang <cal@macports.org>

--- ./source/intercept/CMakeLists.txt.orig	2022-08-13 14:27:26.000000000 +0200
+++ ./source/intercept/CMakeLists.txt	2022-08-13 14:27:40.000000000 +0200
@@ -180,7 +180,7 @@
             )
 elseif (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
     set_target_properties(exec PROPERTIES
-            LINKER_LANGUAGE "C"
+            LINKER_LANGUAGE "CXX"
             OSX_ARCHITECTURES:STRING "i386;x86_64"
             MACOSX_RPATH:BOOL ON
             )
