Only use arc4random_buf if the existence of that function is detected.
Fixes build on Mac OS X 10.6 and earlier which don't have arc4random_buf.
Simplify logic in _get_rand and prefer to use arc4random_buf if available.
--- src/libbson/CMakeLists.txt.orig	2021-11-17 15:33:04.000000000 -0600
+++ src/libbson/CMakeLists.txt	2021-11-25 12:02:31.000000000 -0600
@@ -71,6 +71,13 @@
    set (BSON_HAVE_GMTIME_R 1)
 endif ()
 
+CHECK_SYMBOL_EXISTS (arc4random_buf stdlib.h BSON_HAVE_ARC4RANDOM_BUF)
+if (NOT BSON_HAVE_ARC4RANDOM_BUF)
+   set (BSON_HAVE_ARC4RANDOM_BUF 0)
+else ()
+   set (BSON_HAVE_ARC4RANDOM_BUF 1)
+endif ()
+
 CHECK_FUNCTION_EXISTS (rand_r BSON_HAVE_RAND_R)
 if (NOT BSON_HAVE_RAND_R)
    set (BSON_HAVE_RAND_R 0)
--- src/libbson/src/bson/bson-config.h.in.orig	2021-11-17 15:33:04.000000000 -0600
+++ src/libbson/src/bson/bson-config.h.in	2021-11-25 12:59:29.000000000 -0600
@@ -113,11 +113,28 @@
 # undef BSON_HAVE_SYSCALL_TID
 #endif
 
+
+/*
+ * Define to 1 if you have arc4random_buf available on your platform.
+ */
+#define BSON_HAVE_ARC4RANDOM_BUF @BSON_HAVE_ARC4RANDOM_BUF@
+#if BSON_HAVE_ARC4RANDOM_BUF != 1
+# undef BSON_HAVE_ARC4RANDOM_BUF
+#endif
+
+
+/*
+ * Define to 1 if you have rand_r available on your platform.
+ */
 #define BSON_HAVE_RAND_R @BSON_HAVE_RAND_R@
 #if BSON_HAVE_RAND_R != 1
 # undef BSON_HAVE_RAND_R
 #endif
 
+
+/*
+ * Define to 1 if you have strlcpy available on your platform.
+ */
 #define BSON_HAVE_STRLCPY @BSON_HAVE_STRLCPY@
 #if BSON_HAVE_STRLCPY != 1
 # undef BSON_HAVE_STRLCPY
--- src/libbson/src/bson/bson-context.c.orig	2021-11-25 11:52:56.000000000 -0600
+++ src/libbson/src/bson/bson-context.c	2021-11-25 11:53:46.000000000 -0600
@@ -225,15 +225,14 @@
 _get_rand (unsigned int *pseed)
 {
    int32_t result = 0;
-#ifndef BSON_HAVE_RAND_R
+#ifdef BSON_HAVE_ARC4RANDOM_BUF
+   arc4random_buf (&result, sizeof (result));
+#elif defined(BSON_HAVE_RAND_R)
+   result = rand_r (pseed);
+#else
    /* ms's runtime is multithreaded by default, so no rand_r */
    /* no rand_r on android either */
    result = rand ();
-#elif defined(__FreeBSD__) || defined(__NetBSD__) || defined(__DragonFly__) || \
-   defined(__OpenBSD__) || defined(__APPLE__)
-   arc4random_buf (&result, sizeof (result));
-#else
-   result = rand_r (pseed);
 #endif
    return result;
 }
