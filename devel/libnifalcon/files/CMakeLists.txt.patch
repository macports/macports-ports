Fix Libs in libnifalcon.pc file.
https://github.com/libnifalcon/libnifalcon/issues/57

Fix Version in libnifalcon.pc file.
https://github.com/libnifalcon/libnifalcon/issues/62

Do not require existence of pkg-config executable.
https://github.com/libnifalcon/libnifalcon/issues/61
--- CMakeLists.txt.orig	2016-07-04 16:07:21.000000000 -0500
+++ CMakeLists.txt	2021-07-26 11:52:55.000000000 -0500
@@ -67,9 +67,9 @@
 ######################################################################################
 
 #library definitions
-SET(LIBNIFALCON_MAJOR_VERSION 1)
-SET(LIBNIFALCON_MINOR_VERSION 0)
-SET(LIBNIFALCON_BUILD_VERSION 2)
+SET(LIBNIFALCON_MAJOR_VERSION @v0@)
+SET(LIBNIFALCON_MINOR_VERSION @v1@)
+SET(LIBNIFALCON_BUILD_VERSION @v2@)
 SET(LIBNIFALCON_VERSION ${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION}.${LIBNIFALCON_BUILD_VERSION})
 
 # LibNiFalcon Include directory
@@ -106,20 +106,17 @@
 
 #pkg-config (use the CPack information)
 IF(UNIX)
-  FIND_PACKAGE(PkgConfig)
-  if(PKG_CONFIG_EXECUTABLE)
     set(PC_SHORT_NAME "libnifalcon")
     set(PC_LONG_NAME "libnifalcon")
-    set(PC_LIBRARY_NAME "libnifalcon")
+    set(PC_LIBRARY_NAME "nifalcon")
     set(PC_DESCRIPTION "Open Source Driver for the Novint Falcon Haptic Controller")
     set(PC_VERSION "${LIBNIFALCON_MAJOR_VERSION}.${LIBNIFALCON_MINOR_VERSION}.${LIBNIFALCON_BUILD_VERSION}")
     
     if(LIBUSB_1_FOUND)
       set(PC_REQUIRES "${PC_REQUIRES}libusb-1.0 ")
-      set(PC_LINK_FLAGS "${PC_LINK_FLAGS}-lnifalcon_comm_libusb ")
     endif(LIBUSB_1_FOUND)
     
-    set(PC_LINK_FLAGS "${lib${PC_LIBRARY_NAME}_LINK_FLAGS} ${PC_LINK_FLAGS}")
+    set(PC_LINK_FLAGS "${lib${PC_LIBRARY_NAME}_LINK_FLAGS}")
     set(PC_LINK_FLAGS "-l${PC_LIBRARY_NAME} ${PC_LINK_FLAGS}")
     set(PC_COMPILE_FLAGS "${lib${PC_LIBRARY_NAME}_COMPILE_FLAGS}")
     set(PC_CONFIGURED_FILE
@@ -133,5 +130,4 @@
       )
     set(PKG_CONFIG_DIR "${LIBRARY_INSTALL_DIR}/pkgconfig")
     install(FILES ${PC_CONFIGURED_FILE} DESTINATION ${PKG_CONFIG_DIR})
-  endif(PKG_CONFIG_EXECUTABLE)
 ENDIF()
