# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim: fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0
PortGroup           boost 1.0
PortGroup           openssl 1.0
PortGroup           legacysupport 1.1
PortGroup           compiler_blacklist_versions 1.0

github.setup        facebook fbthrift 2022.08.08.00 v
revision            0
checksums           rmd160  96f437cae0bfe52c4be7df6b04d09076906021c9 \
                    sha256  6b5165b4f5115f3537b9b5843f2dec21cd4836e6d69d8562dcdfae13ca8ff322 \
                    size    8500146

categories          devel
license             Apache-2

maintainers         nomaintainer

description         Facebook's branch of Apache Thrift, including a new C++ server.
long_description    {*}${description}

github.tarball_from archive

set port_libfmt     libfmt9
cmake.module_path-append \
                    ${prefix}/lib/${port_libfmt}/cmake

depends_build-append \
                    port:bison \
                    port:flex
depends_lib-append  port:mstch \
                    port:wangle \
                    port:fizz \
                    port:${port_libfmt}

patchfiles          patch-cpp2.diff

# Fix error: invalid output constraint '=@ccc' in asm
compiler.blacklist-append \
                    {clang < 1200}

compiler.cxx_standard   2017

cmake.generator     Ninja

legacysupport.newest_darwin_requires_legacy 19

if {[string match *clang* ${configure.compiler}]} {
    # Donâ€™t use libcxx with gcc.
    legacysupport.use_mp_libcxx yes
}

platform darwin {
    # Disable aligned_alloc support for 10.13 and earlier
    if {${os.major} < 18} {
        # gcc does not recognize -fno-aligned-allocation
        if {[string match *clang* ${configure.compiler}]} {
            configure.cxxflags-append \
                                  -fno-aligned-allocation
        }
    }

    # https://kumasento.github.io/2020-06-12-glog-gflags-and-c-abi/
    if {${os.major} < 16} {
        configure.cxxflags-append -D_GLIBCXX_USE_CXX11_ABI=0
    }
    if {[string match *gcc* ${configure.compiler}]} {
        configure.ldflags-append  -latomic
    }
}
