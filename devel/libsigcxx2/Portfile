# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                libsigcxx2
set gname           libsigc++
version             2.10.3
license             LGPL-2.1
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          devel
platforms           darwin
maintainers         {devans @dbevans} openmaintainer
description         C++ signal callback system

long_description    libsigc++ implements a typesafe callback system for standard C++. It allows you to define signals and to \
                    connect those signals to any callback function, either global or a member function, regardless of whether it is \
                    static or virtual.

homepage            http://libsigc.sourceforge.net/
master_sites        gnome:sources/${gname}/${branch}/
distname            ${gname}-${version}
use_xz              yes

checksums           rmd160  92d1c0a29a19a28633d87f61da2f7589025efeb3 \
                    sha256  0b68dfc6313c6cc90ac989c6d722a1bf0585ad13846e79746aa87cb265904786 \
                    size    4558428

depends_build       port:pkgconfig \
                    port:mm-common \
                    port:m4 \
                    path:bin/dot:graphviz \
                    port:doxygen \
                    port:libxslt

# libsigc++ > 2.4.1 requires C++11 or better
compiler.cxx_standard 2011

configure.perl      /usr/bin/perl
configure.env-append \
                    M4=${prefix}/bin/gm4
configure.args      --enable-static \
                    --disable-silent-rules

# Teach glibtool about -stdlib=libc++
use_autoreconf      yes
autoreconf.args     -fvi

post-destroot {
    set docdir ${prefix}/share/doc/${gname}-2.0
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} AUTHORS COPYING ChangeLog NEWS README \
        ${destroot}${docdir}
}

livecheck.type      gnome
livecheck.name      ${gname}
livecheck.regex     LATEST-IS-(2\\.\\d*\[02468\](?:\\.\\d+)*)
