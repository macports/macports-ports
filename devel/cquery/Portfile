# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0

PortGroup       cmake 1.1
PortGroup       xcodeversion 1.0
PortGroup       github 1.0
PortGroup       cxx11 1.1

categories      devel
license         MIT
maintainers     {wyuenho @wyuenho} openmaintainer

description     C/C++/Objective C Language Server Protocol support

long_description \
    cquery is a highly-scalable, low-latency language server for \
    C/C++/Objective-C. It is tested and designed for large code bases like \
    Chromium. cquery provides accurate and fast semantic analysis without \
    interrupting workflow. \
    \
    cquery implements almost the entire language server protocol and provides some \
    extra features.

platforms          darwin

github.setup       cquery-project cquery 20180718 v

fetch.type      git

post-fetch {
    system -W ${worksrcpath} "git submodule update --init"
}

if {${subport} eq ${name}} {
    conflicts   cquery-devel
}
subport cquery-devel {
    conflicts   ${name}
}

# needs a c++14 compatible compiler
compiler.blacklist-append   {clang < 602}

depends_lib                 port:clang-6.0

cmake.build_type            release

set llvm_path               ${prefix}/libexec/llvm-6.0

configure.pre_args-delete   -DCMAKE_INSTALL_NAME_DIR="${prefix}/lib"
configure.pre_args-replace  -DCMAKE_MODULE_PATH="${prefix}/share/cmake/Modules" -DCMAKE_MODULE_PATH="${llvm_path}/cmake/llvm\;${llvm_path}/cmake/clang"
configure.pre_args-replace  -DCMAKE_PREFIX_PATH="${prefix}/share/cmake/Modules" -DCMAKE_PREFIX_PATH="${llvm_path}"

configure.args-append       -DSYSTEM_CLANG=ON

if {${subport} eq "cquery-devel"} {
    minimum_xcodeversions {16 8.3}

    github.setup             cquery-project cquery 5b73464d0d8470a85a24f2023bf4976e492022e1
    version                  20180722
}
