# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       muniversal 1.0

name            dbus
version         1.12.2
#revision        0
maintainers     {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
categories      devel
platforms       darwin
license         {AFL-2.1 GPL-2+}
description     A message bus system, a simple way for applications to talk to one another.

long_description \
    ${description}

homepage        https://www.freedesktop.org/wiki/Software/dbus/
master_sites    https://dbus.freedesktop.org/releases/dbus/

checksums       rmd160  c032fedc852a1a6fccb11cea1f41c49df7466d8b \
                sha256  272bb5091770b047c8188b926d5e6038fa4fe6745488b2add96b23e2d9a83d88

# See r68276
# For configure
#    poll is always broken
#    see https://trac.macports.org/ticket/47741#comment:12 for EXTERNAL authentication
patchfiles      patch-bus-system.conf.in.diff \
                patch-configure.diff

# see https://bugs.freedesktop.org/show_bug.cgi?id=9449
if {$macosx_deployment_target eq "10.4"} {
    patchfiles-append patch-tiger-org.freedesktop.dbus-session.plist.in.diff
} else {
    patchfiles-append patch-org.freedesktop.dbus-session.plist.in.diff
}

depends_build       \
    port:pkgconfig

if { [variant_isset no_root] } {
    set dbus_user     ${install.user}
    set dbus_group    ${install.group}
} else {
    if { [variant_isset underscore] } {
        set dbus_user     _messagebus
    } else {
        set dbus_user     messagebus
    }
    set dbus_group    ${dbus_user}
    add_users         ${dbus_user} group=${dbus_group} realname=Message\ Bus
}

depends_lib     port:expat

configure.args  --disable-doxygen-docs \
                --disable-xml-docs \
                --disable-ducktype-docs \
                --without-x \
                --enable-launchd \
                --with-launchd-agent-dir=${prefix}/Library/LaunchAgents \
                --with-dbus-user=${dbus_user} \
                --disable-tests

post-patch {
    if {${startupitem.install} && ![variant_isset no_root]} {
        # Disable if installed into startup directory.
        reinplace "s|</array>|</array>\\\n\\\n\\\t<key>Disabled</key>\\\n\\\t<true/>|" \
            ${worksrcpath}/bus/org.freedesktop.dbus-session.plist.in
    }
}

use_parallel_build  yes

test.run        yes
test.target     check

pre-test {
    if {![variant_isset test]} {
        ui_error "test variant must be activated to enable test support."
        error "Please enable test variant."
    }
}

destroot.keepdirs \
    ${destroot}${prefix}/share/dbus-1/services \
    ${destroot}${prefix}/var/run/dbus \
    ${destroot}${prefix}/etc/dbus-1/system.d \
    ${destroot}${prefix}/etc/dbus-1/session.d

# universal_archs_to_use might not be set before pre-fetch.
pre-destroot {
    global merger_dont_diff merger_configure_env

    # PortGroup muniversal has difficulty merging three files.
    if {[info exists universal_archs_to_use] && [llength ${universal_archs_to_use}] == 3} {
        set merger_dont_diff "${prefix}/lib/dbus-1.0/include/dbus/dbus-arch-deps.h"
    }
}

post-destroot {
    # Simplify startup script over startupitem.install.
    # See #15081
    xinstall -d -m 0755 ${destroot}${prefix}/Library/LaunchDaemons
    set plist [open "${destroot}${prefix}/Library/LaunchDaemons/org.freedesktop.dbus-system.plist" w 0644]

    puts ${plist} "<?xml version='1.0' encoding='UTF-8'?>"
    puts ${plist} "<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\""
    puts ${plist} "\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\" >"
    puts ${plist} "<plist version='1.0'>"
    puts ${plist} "<dict>"

    puts ${plist} "<key>Label</key><string>org.freedesktop.dbus-system</string>"

    puts ${plist} "<key>ProgramArguments</key>"
    puts ${plist} "<array>"
    puts ${plist} "\t<string>${prefix}/bin/dbus-daemon</string>"
    puts ${plist} "\t<string>--system</string>"
    puts ${plist} "\t<string>--nofork</string>"
    puts ${plist} "</array>"
    if {$macosx_deployment_target eq "10.4"} {
        puts ${plist} "<key>OnDemand</key><false/>"
    } else {
        puts ${plist} "<key>KeepAlive</key><true/>"
    }

    if {${startupitem.install} && ![variant_isset no_root]} {
        puts ${plist} "<key>Disabled</key><true/>"
    }

    puts ${plist} "</dict>"
    puts ${plist} "</plist>"

    close ${plist}

    if {${startupitem.install} && ![variant_isset no_root]} {
        xinstall -d -m 0755 ${destroot}/Library/LaunchDaemons
        xinstall -d -m 0755 ${destroot}/Library/LaunchAgents
        ln -s ${prefix}/Library/LaunchDaemons/org.freedesktop.dbus-system.plist ${destroot}/Library/LaunchDaemons
        ln -s ${prefix}/Library/LaunchAgents/org.freedesktop.dbus-session.plist ${destroot}/Library/LaunchAgents
    }

    system "env DYLD_LIBRARY_PATH=${destroot}${prefix}/lib ${destroot}${prefix}/bin/dbus-uuidgen --ensure=${destroot}${prefix}/var/lib/dbus/machine-id"
}

post-activate {
    file attributes ${prefix}/var/run/dbus -group ${dbus_group} -owner ${dbus_user}
    file attributes ${prefix}/libexec/dbus-daemon-launch-helper -group ${dbus_group}

    if { [tbool startupitem.install] && ![variant_isset no_root] } {
        file attributes ${prefix}/Library/LaunchAgents/org.freedesktop.dbus-session.plist -owner root -group wheel
        file attributes ${prefix}/Library/LaunchDaemons/org.freedesktop.dbus-system.plist -owner root -group wheel
    }
}

#pre-deactivate {
#    if {${startupitem.install} && ![variant_isset no_root]} {
#        catch {system "launchctl unload /Library/LaunchDaemons/org.freedesktop.dbus-system.plist"}
#        catch {system "launchctl unload /Library/LaunchAgents/org.freedesktop.dbus-session.plist"}
#    }
#}

# XXX Building with tests enabled causes dbus to link with dbus-glib,
# which it shouldn't do because that port depends on this one: see #30088
variant test description {enable tests (Only Works if dbus is Already Installed)} {
    ui_warn "This variant requires circular dependencies and only works if ${name} is already installed"

    configure.args-replace  --disable-tests --enable-tests
    configure.args-append   --without-dbus-glib
    depends_build-append      port:glib2
    depends_build-append      port:python27 port:dbus-python27 port:py27-gobject port:dbus-python
    configure.python        ${prefix}/bin/python2.7
}

if {${startupitem.install} && ![variant_isset no_root]} {
    notes "############################################################################
# Startup items have been generated that will aid in
# starting ${name} with launchd. They are disabled
# by default. Execute the following commands to start them,
# and to cause them to launch at startup:
#
# sudo launchctl load -w /Library/LaunchDaemons/org.freedesktop.dbus-system.plist
# launchctl load -w /Library/LaunchAgents/org.freedesktop.dbus-session.plist
############################################################################"
} else {
    notes "############################################################################
# Startup items were not installed for ${name}
# Some programs which depend on ${name} might not function properly.
# To load ${name} manually, run
#
# launchctl load -w ${prefix}/Library/LaunchDaemons/org.freedesktop.dbus-system.plist
# launchctl load -w ${prefix}/Library/LaunchAgents/org.freedesktop.dbus-session.plist
############################################################################"
}

variant no_root conflicts underscore description {Run the DBUS daemon as MacPorts install user} {
    pre-fetch {
        if {${install.user} eq "root" || ${install.group} eq "wheel"} {
            ui_error "The DBUS daemon should not be run as root."
            error "Please do not use this variant with your MacPorts configuration."
        }
    }
}

variant underscore conflicts no_root description {Put underscore in front of DBUS daemon user} {
    # For darwin ${os.major} > 8, daemon users have an underscore in front of the usernames and groups.
    # This variant allows the user to follow that convention.
}

set cross_opts  "ac_cv_have_abstract_sockets=no"
if {${os.arch} eq "i386"} {
    if { ${os.major} >= 10 } {
        set merger_configure_env(ppc) ${cross_opts}
    }
    set merger_configure_env(ppc64)   ${cross_opts}
} else {
    set merger_configure_env(i386)    ${cross_opts}
    set merger_configure_env(x86_64)  ${cross_opts}
}

# see #50619
if {[vercmp ${os.version} 10.5.0] < 0} {
    depends_build-append port:gmake
    build.cmd ${prefix}/bin/gmake
}

livecheck.type  regex
livecheck.url   [lindex ${master_sites} 0]
livecheck.regex {dbus-(\d+\.\d*[02468](\.\d+)*)\.tar}
