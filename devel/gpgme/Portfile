# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cxx11 1.1

name                gpgme
version             1.12.0
categories          devel security crypto
license             {LGPL-2.1+ GPL-3+}
maintainers         {lbschenkel @lbschenkel} {devans @dbevans} openmaintainer
description         A library for easy acces to GnuPG.
long_description    GnuPG Made Easy (GPGME) is a library designed to make access \
                    to GnuPG easier for applications. It provides a High-Level \
                    Crypto API for encryption, decryption, signing, signature \
                    verification and key management. Currently it uses GnuPG \
                    as its backend but the API isn't restricted to this engine \
                    in fact we have already developed a backend for CMS (S/MIME).

platforms           darwin

homepage            http://www.gnupg.org/related_software/gpgme/
master_sites        gnupg
use_bzip2           yes

checksums           rmd160  f0b2b86876d622d377874e922c3eb8777818e5d3 \
                    sha256  b4dc951c3743a60e2e120a77892e9e864fb936b2e58e7c77e8581f4d050e8cd8 \
                    size    1658803

depends_build       port:pkgconfig

depends_lib         port:pth \
                    port:libgpg-error \
                    port:libassuan \
                    path:bin/gpg2:gnupg2

patchfiles          patch-configure.ac.diff \
                    patch-tests-gpg-Makefile.am.diff

post-patch {
    reinplace "s|@GPG@|${prefix}/bin/gpg2|" ${worksrcpath}/src/gpgme-config.in
    reinplace "s|thread_modules=\"\"|thread_modules=\"pthread\"|" ${worksrcpath}/src/gpgme-config.in
    reinplace "s|@GPGSM@|${prefix}/bin/gpgsm|" ${worksrcpath}/src/gpgme-config.in
}

use_autoreconf      yes
autoreconf.args     -fvi

# enable cl cpp language bindings for now to avoid opportunistic failures (#52341)
# TODO: add bindings for python
# Due to the requirement to support multiple Qt versions,
# gpgme Qt5 bindings will be handled in separate port
# see https://trac.macports.org/ticket/53122

lappend languages cl

# cpp bindings require libc++

platform darwin {
    if {${configure.cxx_stdlib} eq "libc++"} {
        lappend languages cpp
    }
}

# gpg regression tests run during build repeatedly fail with error
# gpg: can't connect to the agent: File name too long
# disable for now to avoid build error

configure.args      --enable-languages="${languages}" \
                    --enable-static \
                    --disable-gpg-test

post-configure {
    reinplace "s|CC -dynamiclib|CC -dynamiclib [get_canonical_archflags]|g" ${worksrcpath}/libtool
}

post-destroot {
    xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 -W ${worksrcpath} AUTHORS COPYING COPYING.LESSER \
        ChangeLog INSTALL NEWS README THANKS TODO \
        ${destroot}${prefix}/share/doc/${name}
}

# deactivate kdepimlibs4 earlier than 4.14.3_4 to avoid
# activation conflict on ${prefix}/include/gpgme++/*

pre-activate {
    if {![catch {set installed [lindex [registry_active kdepimlibs4] 0]}]} {
        set _version [lindex $installed 1]
        set _revision [lindex $installed 2]
        if {[vercmp $_version 4.14.3] < 0 || ([vercmp $_version 4.14.3] == 0 && $_revision < 4)} {
            registry_deactivate_composite kdepimlibs4 "" [list ports_nodepcheck 1]
        }
    }
}

livecheck.type      regex
livecheck.url       https://gnupg.org/ftp/gcrypt/gpgme/
livecheck.regex     "${name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
