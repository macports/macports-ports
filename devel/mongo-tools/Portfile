# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

# This block must be declared before the one declared by the github portgroup
# (which is included by the golang portgroup).
post-extract {
    set dir [glob ${workpath}/*]
    regexp "/${github.author}-${github.project}-(\[0-9a-f\]+)$" ${dir} -> git_commit
    reinplace -E "s|^(\[\[:space:\]\]*VersionStr=).*\$|\\1${git.branch}|" ${dir}/set_goenv.sh
    reinplace -E "s|^(\[\[:space:\]\]*Gitspec=).*\$|\\1${git_commit}|" ${dir}/set_goenv.sh
}

PortGroup           golang 1.0

# Keep mongo-tools at the same version as mongodb.

go.setup            github.com/mongodb/mongo-tools 4.0.9 r
revision            0
checksums           rmd160  8e4103ba982596481267148adeba7c47928ab05d \
                    sha256  bc496a19ad99bf4a62ecd62acb190170698afc099e38e7cc84bfa20c503a214b \
                    size    11134148

categories          devel
platforms           darwin
maintainers         {ryandesign @ryandesign} openmaintainer
license             Apache-2

description         utilities for working with mongodb databases: bsondump, \
                    mongoimport, mongoexport, mongodump, mongorestore, \
                    mongostat, mongofiles, mongooplog, mongotop

long_description    mongo-tools is a collection of utilities for working with \
                    mongodb databases: \
                    \
                    \n\n* bsondump: display BSON files in a human-readable format \
                    \n* mongoimport: Convert data from JSON, TSV or CSV and insert them into a collection \
                    \n* mongoexport: Write an existing collection to CSV or JSON format \
                    \n* mongodump: Dump MongoDB backups to disk in .BSON format \
                    \n* mongorestore: Restore MongoDB backups in .BSON format to a live database \
                    \n* mongostat: Monitor live MongoDB servers, replica sets, or sharded clusters \
                    \n* mongofiles: Read, write, delete, or update files in GridFS \
                    \n* mongotop: Monitor read/write activity on a mongo server \
                    \n* mongoreplay: Inspect and record commands sent to a MongoDB instance, and then replay the commands back onto another host at a later time

dist_subdir         ${name}

depends_build-append \
                    port:pkgconfig

depends_lib         port:libpcap \
                    path:lib/libssl.dylib:openssl

patchfiles          openssl.patch

pre-build {
    build.env       GOROOT=[exec ${go.bin} env GOROOT]
}

build.cmd           ./build.sh
build.args          ssl sasl
build.target

destroot {
    copy {*}[glob ${worksrcpath}/bin/*] ${destroot}${prefix}/bin/

    set docdir ${prefix}/share/doc/${subport}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        CONTRIBUTING.md \
        LICENSE.md \
        README.md \
        ${destroot}${docdir}
}

github.livecheck.regex  {(\d+\.\d*[02468]\.\d+)}
