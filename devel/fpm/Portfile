# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compilers 1.0
PortGroup           github 1.0

github.setup        fortran-lang fpm 0.7.0 v
revision            0
categories          devel fortran
license             MIT
maintainers         {@barracuda156 gmail.com:vital.had} openmaintainer
description         Fortran Package Manager
long_description    Fortran Package Manager (fpm) is a package manager and build system for Fortran. \
                    Its key goal is to improve the user experience of Fortran programmers. \
                    It does so by making it easier to build your Fortran program or library, \
                    run the executables, tests and examples, and distribute it as a dependency \
                    to other Fortran projects.
homepage            https://fpm.fortran-lang.org
checksums           rmd160  3c0cc8372231118277f4bd6d280f14c576dfe6ab \
                    sha256  f8d6c469bfdbecb1fbed5c5f182dcd76bc052fe6a1c485e3e7e076515ab48f52 \
                    size    169451

depends_build-append \
                    port:curl

# Change this, once older OSs are moved to gcc12/13.
platform darwin {
    if {${os.major} < 11} {
        # Lion+ (with Xcode 4.1+) have git; earlier need to bring their own.
        depends_build-append    port:git
    }
    if {${os.major} < 10} {
        depends_run-append      port:gcc7
    } else {
        depends_run-append      port:gcc12
    }
}

patchfiles          patch-install.diff \
                    patch-filesystem_utilities.diff

post-patch {
    reinplace "s,@FC@,${configure.fc}," ${worksrcpath}/install.sh
    reinplace "s,@PREFIX@,${worksrcpath}${prefix}," ${worksrcpath}/install.sh
    reinplace "s,@VERSION@,${version},g" ${worksrcpath}/install.sh
}

compiler.blacklist-append \
                    *gcc-4.* macports-gcc-5 macports-gcc-6
compilers.setup     require_fortran

use_configure       no

build.cmd           ${worksrcpath}/install.sh
build.target
build.cmd-prepend   FPM_CFLAGS="${configure.cflags} [get_canonical_archflags cc]" \
                    FPM_LDFLAGS="${configure.ldflags} [get_canonical_archflags ld]"

destroot {
    xinstall -d -m 0755 ${destroot}${prefix}/bin
    copy ${worksrcpath}${prefix}/bin/${name} ${destroot}${prefix}/bin/
}
