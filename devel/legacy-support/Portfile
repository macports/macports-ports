# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           clang_dependency 1.0
PortGroup           github 1.0
PortGroup           makefile 1.0
PortGroup           muniversal 1.1

name                legacy-support
categories          devel
platforms           darwin

maintainers         {mascguy @mascguy} \
                    {fwright.net:fw @fhgwright} \
                    openmaintainer
license             MIT BSD APSL-2

description         Installs wrapper headers to add missing functionality to legacy OSX versions.
long_description    {*}${description}

# To roll back to 1.0.13 release due to issues with 1.1.0. Must now stay.
epoch               1

# Primary release version
set release_ver     1.2.2

# Binary compatibility version
set compat_ver      1.0.0

subport ${name} {
    conflicts           ${name}-devel
    github.setup        macports macports-legacy-support ${release_ver} v
    revision            0
    checksums           rmd160  86aa4edf8de2fd011549fe4868a5d51bb6ce9d6d \
                        sha256  3fd9e012755359db44f3173d2c3eddae0021a778993661e345596d56e2085bb7 \
                        size    74875
}

subport ${name}-devel {
    conflicts           ${name}
    github.setup        macports macports-legacy-support a1d860f5201384fc81c6f28e71b0507033377849
    version             20240410
    revision            0
    livecheck.type      none
    checksums           rmd160  a6c9e0d8b086790b5e322895be947b76763a73ec \
                        sha256  af6af57673e070a20df297e999ba59d5d21609e6c4a810380a6dae8f745484f1 \
                        size    76088
    set v_split         [split ${release_ver} .]
    set release_ver     [lindex ${v_split} 0].[lindex ${v_split} 1].99
}

# Until this can be fixed disable parallel builds...
# https://build.macports.org/builders/ports-10.10_x86_64-builder/builds/141962/steps/install-port/logs/stdio
use_parallel_build  no

# This port doesn't use C++ at all, except for a couple of tests which may
# fail to build with an non-OS-default stdlib setting.  Since the cxx_stdlib
# selection is unimportant for the tests (which are actually only testing
# the C-only interface to the library), we disable the cxx_stlib setting.
# This also avoids depending on a MacPorts compiler in some OS versions.

configure.cxx_stdlib

post-extract {
    # until upstream can be fixed, do not include atexit symbols
    # under certain circumstances, infinite recursive loops can form
    delete ${worksrcpath}/src/macports_legacy_atexit.c
}

set max_darwin_reexport 19
set max_darwin_optool   20

build.env-append    LD=ld \
                    "LIPO=/usr/bin/lipo" \
                    PLATFORM=${os.major} \
                    MAX_DARWIN_REEXPORT=${max_darwin_reexport} \
                    SOCURVERSION=${release_ver} \
                    SOCOMPATVERSION=${compat_ver}

# install Tiger-specific fixes
platform darwin 8 {
    # there is no system copyfile.h, so find local copy
    configure.cflags-append -isystem${worksrcpath}/tiger_only/include
    post-destroot {
        # use Tiger version of copyfile.h
        delete ${destroot}${prefix}/include/LegacySupport/copyfile.h
        # Copy all tiger specific 'binaries' and includes
        tiger_copy ${worksrcpath}/tiger_only/bin      ${destroot}${prefix}/bin/
        tiger_copy ${worksrcpath}/tiger_only/include  ${destroot}${prefix}/include/LegacySupport/
    }
}

foreach arch ${muniversal.architectures} {
    build.env.${arch}-append    FORCE_ARCH=${arch}
}

test.env            {*}${build.env}
test.run            yes
test.target         test

proc tiger_copy {from to} {
    fs-traverse f [glob -directory ${from} *] {
        if {[file isdirectory ${f}]} {
            set base_dir [file tail ${f}]
            xinstall -d ${to}${base_dir}
            tiger_copy ${f} ${to}${base_dir}
        } else {
            ui_debug "Copying ${f} to ${to}"
            copy ${f} ${to}
        }
    }
}

# The legacy-support build cannot create the LegacySupportSystem library
# directly on newer systems as the reexport link option to
# /usr/lib/libSystem.B.dylib does not work, due to the file system
# library cache added in macOS11.
#
# Fall back to using optool here. Optool does not currently work on arm64.
# This means that LegacySupportSystem will be missing on arm64, and that
# universal builds of LegacySupportSystem will lack the arm64 slice
# (which will produce a warning).

if { ${os.major} > ${max_darwin_reexport}
     && ${os.major} <= ${max_darwin_optool} } {
     # First determine whether any non-arm64 slice will be built
    set optool_needed no
    foreach arch ${muniversal.architectures} {
        if { ${arch} ne "arm64"} {
            set optool_needed yes
        }
    }
    # If any non-arm64, add optool dependency
    if { ${optool_needed} } {
        depends_build-append port:optool
        depends_skip_archcheck-append optool
    }
    # After destroot, apply optool to any non-arm64 slice
    post-destroot {
        if { ${muniversal.build_arch} ne "arm64" } {
            set legSupp   ${prefix}/lib/libMacportsLegacySupport.dylib
            set legSystem ${prefix}/lib/libMacportsLegacySystem.B.dylib
            if {![file exists ${destroot}${legSystem}]} {
                copy ${destroot}${legSupp} ${destroot}${legSystem}
                system "${prefix}/bin/optool install -c reexport -p /usr/lib/libSystem.B.dylib -t ${destroot}${legSystem}"
            } else {
                ui_warn "${destroot}${legSystem} already exists."
            }
        }
    }
}

if {![file exists ${prefix}/libexec/mpstats]} {
    notes "
    To help make sure your system continues to be well represented by MacPorts, especially\
    if your system is not one of the latest macOS releases, please consider installing mpstats.\
    It will periodically send an anonymous synopsis of your OS settings and installed ports.\
    The information provided by this is useful to help determine how resources are allocated.

    You can install mpstats like this:    sudo port install mpstats
    "
}
