# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           clang_dependency 1.0
PortGroup           muniversal 1.0

name                legacy-support
categories          devel
platforms           darwin

maintainers         {jonesc @cjones051073} {kencu @kencu} openmaintainer
license             MIT

description         Installs wrapper headers to add missing functionality to legacy OSX versions.
long_description    {*}${description}

subport ${name} {
    conflicts           ${name}-devel
    github.setup        macports macports-legacy-support 0.11.1 v
    revision            0
    checksums           rmd160  4a072025819439b498cc143441db40c88203bf41 \
                        sha256  e5f1af5b57dc79a5227d2df2588ad91a276890af845133b29a01d48e32b74216 \
                        size    31602
}

subport ${name}-devel {
    conflicts           ${name}
    github.setup        macports macports-legacy-support 005333b9d62a6e14cd3136227ba1441e292dfdfe
    version             20200505
    revision            0
    livecheck.type      none
    checksums           rmd160  4cc24c082a59d184d1b2a26dbeaee725c7024785 \
                        sha256  8674da9ce3d76814b70b47958e00ebeda483cb6a244dd9936c1f7948420ee3ba \
                        size    35644
}

use_configure       no

test.run            yes
test.target         test

build.env           CXX=${configure.cxx} \
                    CC=${configure.cc} \
                    PREFIX=${prefix}
destroot.env        PREFIX=${prefix}
if { ${subport} eq "${name}-devel" } {
    build.env-append    "LIPO=/usr/bin/lipo" \
                        PLATFORM=${os.major}

    if {![variant_isset universal]} {
        build.env-append                        "CXXFLAGS=${configure.cxxflags} [get_canonical_archflags cxx]" \
                                                "CFLAGS=${configure.cflags} [get_canonical_archflags cc]" \
                                                "LDFLAGS=${configure.ldflags} [get_canonical_archflags ld]" \
                                                "FORCE_ARCH=${build_arch}"
    } else {
        foreach arch ${universal_archs_supported} {
            lappend merger_build_env(${arch})   "CXXFLAGS=${configure.cxxflags} [muniversal_get_arch_flag ${arch}]" \
                                                "CFLAGS=${configure.cflags} [muniversal_get_arch_flag ${arch}]" \
                                                "LDFLAGS=${configure.ldflags} [muniversal_get_arch_flag ${arch}]" \
                                                "FORCE_ARCH=${arch}"
        }
    }
} else {
    variant universal {}
    build.env-append    "CXXFLAGS=${configure.cxxflags} [get_canonical_archflags cxx]" \
                        "CFLAGS=${configure.cflags} [get_canonical_archflags cc]" \
                        "LDFLAGS=${configure.ldflags} [get_canonical_archflags ld]"
}

post-destroot {
  platform darwin 8 {
    # install Tiger-specific fixes

    # very slightly modified which command to match behaviour of 10.5+
    copy ${worksrcpath}/tiger_only/bin/which \
         ${destroot}${prefix}/bin/which

    if { ${subport} eq "${name}-devel" } {
        #copy ${worksrcpath}/tiger_only/include/libproc.h \
        #     ${destroot}${prefix}/include/LegacySupport/libproc.h

        #copy ${worksrcpath}/tiger_only/include/sys/proc_info.h \
        #     ${destroot}${prefix}/include/LegacySupport/sys/proc_info.h

    }
  }
}

if {![file exists ${prefix}/libexec/mpstats]} {
    notes "
    To help make sure your system continues to be well represented by MacPorts, especially\
    if your system is not one of the latest macOS releases, please consider installing mpstats.\
    It will periodically send an anonymous synopsis of your OS settings and installed ports.\
    The information provided by this is useful to help determine how resources are allocated.

    You can install mpstats like this:    sudo port install mpstats
    "
}
