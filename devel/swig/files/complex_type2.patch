From 638ca8152d4ff68540d74a2a173a81a96ffbaeaa Mon Sep 17 00:00:00 2001
From: William S Fulton <wsf@fultondesigns.co.uk>
Date: Sat, 10 Oct 2020 16:07:55 +0100
Subject: [PATCH] complex can now be used as an identifier

Remove final vestiges of 'complex' keyword.

Closes #252
---
 CHANGES.current                                    |  3 +++
 Examples/test-suite/common.mk                      |  1 +
 Examples/test-suite/not_c_keywords.i               | 13 +++++++++++++
 Examples/test-suite/python/not_c_keywords_runme.py |  7 +++++++
 Source/Swig/stype.c                                |  2 +-
 5 files changed, 25 insertions(+), 1 deletion(-)
 create mode 100644 Examples/test-suite/not_c_keywords.i
 create mode 100644 Examples/test-suite/python/not_c_keywords_runme.py

diff --git a/Examples/test-suite/common.mk b/Examples/test-suite/common.mk
index 55cbd2cce3a..bddae4b2fd2 100644
--- Examples/test-suite/common.mk
+++ Examples/test-suite/common.mk
@@ -718,6 +718,7 @@ C_TEST_CASES += \
 	nested_extend_c \
 	nested_structs \
 	newobject2 \
+	not_ckeywords \
 	overload_extend_c \
 	overload_extend2 \
 	preproc \
diff --git a/Examples/test-suite/not_c_keywords.i b/Examples/test-suite/not_c_keywords.i
new file mode 100644
index 00000000000..013575bc6bd
--- /dev/null
+++ Examples/test-suite/not_c_keywords.i
@@ -0,0 +1,13 @@
+%module not_c_keywords
+
+%extend ComplexStruct {
+void init() {
+  $self->complex = 123;
+}
+}
+
+%inline %{
+struct ComplexStruct {
+  int complex; /* complex as variable name */
+};
+%}
diff --git a/Examples/test-suite/python/not_c_keywords_runme.py b/Examples/test-suite/python/not_c_keywords_runme.py
new file mode 100644
index 00000000000..7f0772407fa
--- /dev/null
+++ Examples/test-suite/python/not_c_keywords_runme.py
@@ -0,0 +1,7 @@
+from not_c_keywords import *
+
+cs = ComplexStruct()
+cs.init()
+if cs.complex != 123:
+    raise RuntimeError("complex not correct")
+cs.complex = 456
diff --git a/Source/Swig/stype.c b/Source/Swig/stype.c
index 66518f50c96..fbf02bb1f1f 100644
--- Source/Swig/stype.c
+++ Source/Swig/stype.c
@@ -134,7 +134,7 @@ SwigType *NewSwigType(int t) {
     return NewString("double");
     break;
   case T_COMPLEX:
-    return NewString("complex");
+    return NewString("_Complex");
     break;
   case T_CHAR:
     return NewString("char");
