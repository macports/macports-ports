# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim: fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           boost 1.0
PortGroup           cmake 1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github 1.0
PortGroup           openssl 1.0
PortGroup           legacysupport 1.1

# O_CLOEXEC
legacysupport.newest_darwin_requires_legacy 10

boost.version       1.81

github.setup        facebookexperimental edencommon 2023.11.13.00 v
revision            0
checksums           rmd160  e5ae41740848e5ffa2a88b65fd0f7ba11f40f778 \
                    sha256  9c42c126cc650107258792b773a7e3fe0fcd4190652a343f144b5d23fd7fde6e \
                    size    151898

categories          devel
license             BSD
maintainers         nomaintainer

description         Shared library for Watchman and Eden projects
long_description    {*}${description}

distname            ${name}-v${version}

set port_libfmt     libfmt9
cmake.module_path-append \
                    ${prefix}/lib/${port_libfmt}/cmake

depends_build-append \
                    port:cpptoml \
                    port:yarn \
                    port:gtest \
                    port:pkgconfig

depends_lib-append  port:bzip2 \
                    port:double-conversion \
                    port:folly \
                    port:gflags \
                    port:google-glog \
                    port:libevent \
                    port:libsodium \
                    port:libunwind \
                    port:lz4 \
                    port:zlib \
                    port:zstd \
                    port:${port_libfmt}

patchfiles          no-tests.diff

# Fix error: invalid output constraint '=@ccc' in asm
compiler.blacklist-append \
                    {clang < 1200}

compiler.cxx_standard   2017
cmake.generator     Ninja

configure.args-append \
                    -DBUILD_TESTING=OFF \
                    -DBUILD_TESTS=OFF \
                    -DBUILD_SHARED_LIBS=ON

if {[string match *gcc* ${configure.compiler}]} {
    # ___atomic_fetch_add_8
    configure.ldflags-append  -latomic
}
