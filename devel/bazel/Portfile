# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                1.0
PortGroup                 github 1.0

github.setup              bazelbuild bazel 0.11.1
github.tarball_from       releases
categories                devel
maintainers               {tfmnet.com:mohamed.issa @RootFunction} \
                          openmaintainer
description               A tool for automating builds and tests.
long_description          ${description}
platforms                 darwin
license                   Apache-2

pre-fetch {
    # Make sure the Java compiler exists
    set cmdnm "javac"
    set param [auto_execok $cmdnm]
    if {$param == ""} {
        error "The Java compiler was not detected on this machine. \
               Please ensure JDK 8 or newer is properly installed."
    }
}

distname                  ${distname}-dist

checksums                 md5    80daac6b100b7f8e2b17d133150eba44 \
                          rmd160 c7ec01751cc053053eb87b2820cc496c41f11f62 \
                          sha256 e8d762bcc01566fa50952c8028e95cfbe7545a39b8ceb3a0d0d6df33b25b333f \
                          size   83797418

use_zip                   yes
extract.mkdir             yes

use_configure             no

depends_build-append      bin:python:python27
depends_build-append      bin:bash:bash
depends_build-append      bin:zip:zip
depends_build-append      bin:git:git

build {
    system -W ${worksrcpath} "./compile.sh"

    # Put executable in main working folder
    xinstall -m 755 -W ${worksrcpath}/output ${name} ${worksrcpath}

    # Get ready to build the bash completion script
    file delete -force /var/tmp/_${name}_root

    # build fails if it does not recognize this dir as a git repo
    system -W ${worksrcpath} "git init"
    system -W ${worksrcpath} "git add ."
    system -W ${worksrcpath} "git commit -m GitRepo"

    # note - at this point in the build, there can be a very long pause
    ui_msg "**********************************************************************"
    ui_msg "**********************************************************************"
    ui_msg "There can be a long pause in the build during the next stage."
    ui_msg "This pause can last up to four hours."
    ui_msg "We suggest you do not cancel the build as it will eventually complete."
    ui_msg "**********************************************************************"
    ui_msg "**********************************************************************"

    # Build the bash completion script
    system -W ${worksrcpath} "./${name} build //scripts:${name}-complete.bash"
}

destroot {
    # Copy compiled binary
    set bindir ${prefix}/bin
    xinstall -d ${destroot}${bindir}
    xinstall -m 755 -W ${worksrcpath}/output ${name} ${destroot}${bindir}

    # Copy bash and zsh completion scripts to designated area for on-demand usage
    set bcompldir ${prefix}/share/bash-completion/completions
    xinstall -d ${destroot}${bcompldir}
    xinstall -m 755 ${worksrcpath}/${name}-bin/scripts/${name}-complete.bash ${destroot}${bcompldir}/${name}
    set zcompldir ${prefix}/share/zsh/site-functions
    xinstall -d ${destroot}${zcompldir}
    xinstall -m 755 ${worksrcpath}/scripts/zsh_completion/_${name} ${destroot}${zcompldir}
}

post-destroot {
    # Mark documentation, source, and example directories
    set docdir ${prefix}/share/doc/${name}
    set srcdir ${prefix}/src/${name}
    set expdir ${prefix}/share/examples/${name}

    # Copy documentation files
    xinstall -d ${destroot}${docdir}
    xinstall -m 644 -W ${worksrcpath} AUTHORS \
                                      CHANGELOG.md \
                                      CONTRIBUTING.md \
                                      CONTRIBUTORS \
                                      ISSUE_TEMPLATE.md \
                                      LICENSE \
                                      README.md \
                       ${destroot}${docdir}

    # Copy source files
    xinstall -d ${destroot}${srcdir}
    file copy -force {*}[glob ${worksrcpath}/src/*] ${destroot}${srcdir}

    # Copy example files
    xinstall -d ${destroot}${expdir}
    file copy -force {*}[glob ${worksrcpath}/examples/*] ${destroot}${expdir}
}

notes "
See http://bazel.build/docs/getting-started.html to start a new project!
"
