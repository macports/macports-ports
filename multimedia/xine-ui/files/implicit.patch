Fix implicit declaration of functions.
https://sourceforge.net/p/xine/mailman/message/37402884/
--- configure.orig	2021-12-12 13:51:20.000000000 -0600
+++ configure	2021-12-16 23:56:27.000000000 -0600
@@ -8892,10 +8892,11 @@
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
+#include <xine/xineutils.h>
 int
 main ()
 {
-xine_open_cloexec();
+xine_open_cloexec(0,0);
   ;
   return 0;
 }
@@ -8924,10 +8925,11 @@
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
+#include <xine/xineutils.h>
 int
 main ()
 {
-xine_socket_cloexec();
+xine_socket_cloexec(0,0,0);
   ;
   return 0;
 }
@@ -8957,11 +8959,12 @@
 /* end confdefs.h.  */
 
 
+#include <xine/list.h>
 int
 main ()
 {
 
-xine_list_next_value ();
+xine_list_next_value(0,0);
 
   ;
   return 0;
@@ -10627,8 +10630,8 @@
   fi
 
     if test "$ac_cv_header_sys_shm_h" = "yes"; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether shmctl IPC_RMID allowes subsequent attaches" >&5
-$as_echo_n "checking whether shmctl IPC_RMID allowes subsequent attaches... " >&6; }
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether shmctl IPC_RMID allows subsequent attaches" >&5
+$as_echo_n "checking whether shmctl IPC_RMID allows subsequent attaches... " >&6; }
     if test "$cross_compiling" = yes; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: assuming no" >&5
 $as_echo "assuming no" >&6; }
@@ -10636,6 +10639,7 @@
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
+          #include <stdlib.h>
           #include <sys/types.h>
           #include <sys/ipc.h>
           #include <sys/shm.h>
@@ -12097,6 +12101,7 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 #include <aalib.h>
 
 int main () {
@@ -12207,6 +12212,7 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <string.h>
 #include <aalib.h>
 
 int main () {
--- src/aaui/main.c.orig	2021-12-12 13:49:29.000000000 -0600
+++ src/aaui/main.c	2021-12-17 00:36:53.000000000 -0600
@@ -27,7 +27,7 @@
  *
  */
 
-#ifndef __sun
+#if ! defined(__sun) && ! defined(__APPLE__)
 #define _XOPEN_SOURCE 500
 #endif
 #define _BSD_SOURCE 1
--- src/xitk/main.c.orig	2021-12-12 13:49:29.000000000 -0600
+++ src/xitk/main.c	2021-12-17 00:19:19.000000000 -0600
@@ -20,7 +20,7 @@
  *
  */
 /* required for getsubopt(); the __sun test gives us strncasecmp() on solaris */
-#if !defined(__sun) && ! defined(__FreeBSD__) && ! defined(__NetBSD__) && ! defined(__DragonFly__)
+#if ! defined(__sun) && ! defined(__FreeBSD__) && ! defined(__NetBSD__) && ! defined(__APPLE__) && ! defined(__DragonFly__)
 #define _XOPEN_SOURCE 500
 #endif
 /* required for strncasecmp() */
--- src/xitk/network.c.orig	2021-12-12 13:49:29.000000000 -0600
+++ src/xitk/network.c	2021-12-17 00:21:32.000000000 -0600
@@ -23,7 +23,7 @@
 /* required for getsubopt(); the __sun test avoids compilation problems on
     solaris. On FreeBSD defining this disable BSD functions to be visible
     and remove INADDR_NONE */
-#if ! defined (__sun__) && ! defined (__OpenBSD__)  && ! defined(__FreeBSD__) && ! defined(__NetBSD__) && ! defined(__APPLE__) && ! defined (__DragonFly__)
+#if ! defined(__sun) && ! defined(__OpenBSD__) && ! defined(__FreeBSD__) && ! defined(__NetBSD__) && ! defined(__APPLE__) && ! defined(__DragonFly__)
 #define _XOPEN_SOURCE 500
 #endif
 /* required for strncasecmp() */
--- src/xitk/session.c.orig	2021-12-12 13:49:29.000000000 -0600
+++ src/xitk/session.c	2021-12-17 00:18:53.000000000 -0600
@@ -21,7 +21,7 @@
 /* Largely inspired of xmms control socket stuff */
 
 /* required for getsubopt(); the __sun test gives us strncasecmp() on solaris */
-#if ! defined (__sun) && ! defined (__OpenBSD__) && ! defined (__FreeBSD__) && !defined(__NetBSD__) && !defined(__DragonFly__)
+#if ! defined(__sun) && ! defined(__OpenBSD__) && ! defined(__FreeBSD__) && ! defined(__NetBSD__) && ! defined(__APPLE__) && ! defined(__DragonFly__)
 #define _XOPEN_SOURCE 500
 #endif
 
