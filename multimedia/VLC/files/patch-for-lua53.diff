diff --git modules/lua/demux.c modules/lua/demux.c
index 398122957f85a9c4248b5f3d5409b541fd6d7c6f..a77ed004c93c3068a9b20fe3ded537c8eb7dc93a 100644
--- modules/lua/demux.c
+++ modules/lua/demux.c
@@ -52,7 +52,7 @@ struct vlclua_playlist
 static int vlclua_demux_peek( lua_State *L )
 {
     stream_t *s = (stream_t *)vlclua_get_this(L);
-    int n = luaL_checkint( L, 1 );
+    int n = luaL_checkinteger( L, 1 );
     const uint8_t *p_peek;
 
     ssize_t val = vlc_stream_Peek(s->p_source, &p_peek, n);
@@ -66,7 +66,7 @@ static int vlclua_demux_peek( lua_State *L )
 static int vlclua_demux_read( lua_State *L )
 {
     stream_t *s = (stream_t *)vlclua_get_this(L);
-    int n = luaL_checkint( L, 1 );
+    int n = luaL_checkinteger( L, 1 );
     char *buf = malloc(n);
 
     if (buf != NULL)
diff --git modules/lua/libs/dialog.c modules/lua/libs/dialog.c
index 144b38d7e946e66383579227ea517e2c533aa714..11b9a1b4e4a7431d48485439a8adc658dce3583d 100644
--- modules/lua/libs/dialog.c
+++ modules/lua/libs/dialog.c
@@ -382,7 +382,7 @@ static int lua_GetDialogUpdate( lua_State *L )
     /* Read entry in the Lua registry */
     lua_pushlightuserdata( L, (void*) &key_update );
     lua_gettable( L, LUA_REGISTRYINDEX );
-    return luaL_checkint( L, -1 );
+    return luaL_checkinteger( L, -1 );
 }
 
 /** Manually update a dialog
@@ -573,22 +573,22 @@ static int vlclua_create_widget_inner( lua_State *L, int i_args,
 
     /* Set common arguments: col, row, hspan, vspan, width, height */
     if( lua_isnumber( L, arg ) )
-        p_widget->i_column = luaL_checkint( L, arg );
+        p_widget->i_column = luaL_checkinteger( L, arg );
     else goto end_of_args;
     if( lua_isnumber( L, ++arg ) )
-        p_widget->i_row = luaL_checkint( L, arg );
+        p_widget->i_row = luaL_checkinteger( L, arg );
     else goto end_of_args;
     if( lua_isnumber( L, ++arg ) )
-        p_widget->i_horiz_span = luaL_checkint( L, arg );
+        p_widget->i_horiz_span = luaL_checkinteger( L, arg );
     else goto end_of_args;
     if( lua_isnumber( L, ++arg ) )
-        p_widget->i_vert_span = luaL_checkint( L, arg );
+        p_widget->i_vert_span = luaL_checkinteger( L, arg );
     else goto end_of_args;
     if( lua_isnumber( L, ++arg ) )
-        p_widget->i_width = luaL_checkint( L, arg );
+        p_widget->i_width = luaL_checkinteger( L, arg );
     else goto end_of_args;
     if( lua_isnumber( L, ++arg ) )
-        p_widget->i_height = luaL_checkint( L, arg );
+        p_widget->i_height = luaL_checkinteger( L, arg );
     else goto end_of_args;
 
 end_of_args:
diff --git modules/lua/libs/io.c modules/lua/libs/io.c
index c01cf7137d1eb2252a1675322bc5a1b2d916e215..12267e1822603e2a6dc458356d15a4b60336e772 100644
--- modules/lua/libs/io.c
+++ modules/lua/libs/io.c
@@ -139,7 +139,7 @@ static int vlclua_io_file_seek( lua_State *L )
     const char* psz_mode = luaL_optstring( L, 2, NULL );
     if ( psz_mode != NULL )
     {
-        long i_offset = luaL_optlong( L, 3, 0 );
+        long i_offset = luaL_optinteger( L, 3, 0 );
         int i_mode;
         if ( !strcmp( psz_mode, "set" ) )
             i_mode = SEEK_SET;
diff --git modules/lua/libs/net.c modules/lua/libs/net.c
index cb0d759b5d3badd0e090ca4ca9c9fff71fd9edd4..49f2aec9e84b3b4732e537edbef0065f4d590825 100644
--- modules/lua/libs/net.c
+++ modules/lua/libs/net.c
@@ -179,7 +179,7 @@ static int vlclua_net_listen_tcp( lua_State *L )
 {
     vlc_object_t *p_this = vlclua_get_this( L );
     const char *psz_host = luaL_checkstring( L, 1 );
-    int i_port = luaL_checkint( L, 2 );
+    int i_port = luaL_checkinteger( L, 2 );
     int *pi_fd = net_ListenTCP( p_this, psz_host, i_port );
     if( pi_fd == NULL )
         return luaL_error( L, "Cannot listen on %s:%d", psz_host, i_port );
@@ -251,7 +251,7 @@ static int vlclua_net_connect_tcp( lua_State *L )
 {
     vlc_object_t *p_this = vlclua_get_this( L );
     const char *psz_host = luaL_checkstring( L, 1 );
-    int i_port = luaL_checkint( L, 2 );
+    int i_port = luaL_checkinteger( L, 2 );
     int i_fd = net_ConnectTCP( p_this, psz_host, i_port );
     lua_pushinteger( L, vlclua_fd_map_safe( L, i_fd ) );
     return 1;
@@ -259,14 +259,14 @@ static int vlclua_net_connect_tcp( lua_State *L )
 
 static int vlclua_net_close( lua_State *L )
 {
-    int i_fd = luaL_checkint( L, 1 );
+    int i_fd = luaL_checkinteger( L, 1 );
     vlclua_fd_unmap_safe( L, i_fd );
     return 0;
 }
 
 static int vlclua_net_send( lua_State *L )
 {
-    int fd = vlclua_fd_get( L, luaL_checkint( L, 1 ) );
+    int fd = vlclua_fd_get( L, luaL_checkinteger( L, 1 ) );
     size_t i_len;
     const char *psz_buffer = luaL_checklstring( L, 2, &i_len );
 
@@ -278,7 +278,7 @@ static int vlclua_net_send( lua_State *L )
 
 static int vlclua_net_recv( lua_State *L )
 {
-    int fd = vlclua_fd_get( L, luaL_checkint( L, 1 ) );
+    int fd = vlclua_fd_get( L, luaL_checkinteger( L, 1 ) );
     size_t i_len = (size_t)luaL_optinteger( L, 2, 1 );
     char psz_buffer[i_len];
 
@@ -312,7 +312,7 @@ static int vlclua_net_poll( lua_State *L )
     lua_pushnil( L );
     for( int i = 0; lua_next( L, 1 ); i++ )
     {
-        luafds[i] = luaL_checkint( L, -2 );
+        luafds[i] = luaL_checkinteger( L, -2 );
         p_fds[i].fd = vlclua_fd_get( L, luafds[i] );
         p_fds[i].events = luaL_checkinteger( L, -1 );
         p_fds[i].events &= POLLIN | POLLOUT | POLLPRI;
@@ -360,7 +360,7 @@ static int vlclua_fd_open( lua_State *L )
 #ifndef _WIN32
 static int vlclua_fd_write( lua_State *L )
 {
-    int fd = vlclua_fd_get( L, luaL_checkint( L, 1 ) );
+    int fd = vlclua_fd_get( L, luaL_checkinteger( L, 1 ) );
     size_t i_len;
     const char *psz_buffer = luaL_checklstring( L, 2, &i_len );
 
@@ -371,7 +371,7 @@ static int vlclua_fd_write( lua_State *L )
 
 static int vlclua_fd_read( lua_State *L )
 {
-    int fd = vlclua_fd_get( L, luaL_checkint( L, 1 ) );
+    int fd = vlclua_fd_get( L, luaL_checkinteger( L, 1 ) );
     size_t i_len = (size_t)luaL_optinteger( L, 2, 1 );
     char psz_buffer[i_len];
 
diff --git modules/lua/libs/osd.c modules/lua/libs/osd.c
index 0f1f8fbdedaf1e26cada736bb86a269e8530e7bb..bedc464d1c1c55e4d1a640fb3c6ffb6889df454f 100644
--- modules/lua/libs/osd.c
+++ modules/lua/libs/osd.c
@@ -154,7 +154,7 @@ static int vlc_osd_slider_type_from_string( const char *psz_name )
 
 static int vlclua_osd_slider( lua_State *L )
 {
-    int i_position = luaL_checkint( L, 1 );
+    int i_position = luaL_checkinteger( L, 1 );
     const char *psz_type = luaL_checkstring( L, 2 );
     int i_type = vlc_osd_slider_type_from_string( psz_type );
     int i_chan = (int)luaL_optinteger( L, 3, VOUT_SPU_CHANNEL_OSD );
@@ -198,7 +198,7 @@ static int vlclua_spu_channel_register( lua_State *L )
 
 static int vlclua_spu_channel_clear( lua_State *L )
 {
-    int i_chan = luaL_checkint( L, 1 );
+    int i_chan = luaL_checkinteger( L, 1 );
     input_thread_t *p_input = vlclua_get_input_internal( L );
     if( !p_input )
         return luaL_error( L, "Unable to find input." );
diff --git modules/lua/libs/playlist.c modules/lua/libs/playlist.c
index a5b68d9bdd78014c3d28f8723c91474bc6702c5c..5346b5cf946e314f5ae07269fde8d15c24ee8f58 100644
--- modules/lua/libs/playlist.c
+++ modules/lua/libs/playlist.c
@@ -69,7 +69,7 @@ static int vlclua_playlist_next( lua_State * L )
 
 static int vlclua_playlist_skip( lua_State * L )
 {
-    int i_skip = luaL_checkint( L, 1 );
+    int i_skip = luaL_checkinteger( L, 1 );
     playlist_t *p_playlist = vlclua_get_playlist_internal( L );
     playlist_Skip( p_playlist, i_skip );
     return 0;
@@ -127,7 +127,7 @@ static int vlclua_playlist_random( lua_State * L )
 
 static int vlclua_playlist_gotoitem( lua_State * L )
 {
-    int i_id = luaL_checkint( L, 1 );
+    int i_id = luaL_checkinteger( L, 1 );
     playlist_t *p_playlist = vlclua_get_playlist_internal( L );
     PL_LOCK;
     playlist_ViewPlay( p_playlist, NULL,
@@ -138,7 +138,7 @@ static int vlclua_playlist_gotoitem( lua_State * L )
 
 static int vlclua_playlist_delete( lua_State * L )
 {
-    int i_id = luaL_checkint( L, 1 );
+    int i_id = luaL_checkinteger( L, 1 );
     playlist_t *p_playlist = vlclua_get_playlist_internal( L );
 
     PL_LOCK;
@@ -152,8 +152,8 @@ static int vlclua_playlist_delete( lua_State * L )
 
 static int vlclua_playlist_move( lua_State * L )
 {
-    int i_item = luaL_checkint( L, 1 );
-    int i_target = luaL_checkint( L, 2 );
+    int i_item = luaL_checkinteger( L, 1 );
+    int i_target = luaL_checkinteger( L, 2 );
     playlist_t *p_playlist = vlclua_get_playlist_internal( L );
     PL_LOCK;
     playlist_item_t *p_item = playlist_ItemGetById( p_playlist, i_item );
diff --git modules/lua/libs/stream.c modules/lua/libs/stream.c
index ab0c4a01e6744b79ed76460f7571474888824a75..5923427b84a2c508c7c6100823fe98b5d6de922a 100644
--- modules/lua/libs/stream.c
+++ modules/lua/libs/stream.c
@@ -123,7 +123,7 @@ static int vlclua_stream_read( lua_State *L )
 {
     int i_read;
     stream_t **pp_stream = (stream_t **)luaL_checkudata( L, 1, "stream" );
-    int n = luaL_checkint( L, 2 );
+    int n = luaL_checkinteger( L, 2 );
     uint8_t *p_read = malloc( n );
     if( !p_read ) return vlclua_error( L );
 
diff --git modules/lua/libs/volume.c modules/lua/libs/volume.c
index 0dba2c1e1b9a0c38321f4ccca8ce2afae19ed642..f0b7d419016e1012f68017255b86b7b953fe9ab4 100644
--- modules/lua/libs/volume.c
+++ modules/lua/libs/volume.c
@@ -48,7 +48,7 @@
 static int vlclua_volume_set( lua_State *L )
 {
     playlist_t *p_this = vlclua_get_playlist_internal( L );
-    int i_volume = luaL_checkint( L, 1 );
+    int i_volume = luaL_checkinteger( L, 1 );
     if( i_volume < 0 )
         i_volume = 0;
     int i_ret = playlist_VolumeSet( p_this, i_volume/(float)AOUT_VOLUME_DEFAULT );
