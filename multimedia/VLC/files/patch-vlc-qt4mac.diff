diff --git modules/gui/qt4/util/searchlineedit.cpp modules/gui/qt4/util/searchlineedit.cpp
index 94744ec..e83625d 100644
--- modules/gui/qt4/util/searchlineedit.cpp
+++ modules/gui/qt4/util/searchlineedit.cpp
@@ -103,7 +103,7 @@ void ClickLineEdit::focusOutEvent( QFocusEvent *ev )
 }
 #endif
 
-#ifndef Q_OS_MAC
+#ifndef Q_OS_MAC_UNUSED
 SearchLineEdit::SearchLineEdit( QWidget *parent ) : QLineEdit( parent )
 {
     clearButton = new QFramelessButton( this );
@@ -202,4 +202,14 @@ void SearchLineEdit::searchEditingFinished()
     emit searchDelayedChanged( text() );
 }
 
+// #else
+//
+// void SearchLineEdit::updateText( const QString& text )
+// {
+// }
+//
+// void SearchLineEdit::searchEditingFinished()
+// {
+// }
+
 #endif
diff --git modules/gui/qt4/util/searchlineedit.hpp modules/gui/qt4/util/searchlineedit.hpp
index a09b9bc..8d9e2b7 100644
--- modules/gui/qt4/util/searchlineedit.hpp
+++ modules/gui/qt4/util/searchlineedit.hpp
@@ -72,7 +72,7 @@ private:
 };
 #endif
 
-#ifndef Q_OS_MAC
+#ifndef Q_OS_MAC_UNUSED
 class QFramelessButton;
 class SearchLineEdit : public QLineEdit
 {
@@ -99,28 +99,33 @@ private slots:
 signals:
     void searchDelayedChanged( const QString& );
 };
-#else
-
-/* On Mac, we try to use the native NSSearchField */
-#include <QMacCocoaViewContainer>
-
-class SearchLineEdit : public QMacCocoaViewContainer
-{
-    Q_OBJECT
-
-public:
-    SearchLineEdit(QWidget *parent = 0);
-    virtual ~SearchLineEdit() {}
-
-    virtual QSize sizeHint() const { return QSize(150, 40); }
-
-public slots:
-    void clear() {}
-
-signals:
-    void searchDelayedChanged( const QString& );
-    void textEdited( const QString& );
-};
+// #else
+//
+// /* On Mac, we try to use the native NSSearchField */
+// #include <QMacCocoaViewContainer>
+//
+// class SearchLineEdit : public QMacCocoaViewContainer
+// {
+//     Q_OBJECT
+//
+// public:
+//     SearchLineEdit(QWidget *parent = 0);
+//     virtual ~SearchLineEdit() {}
+//
+//     virtual QSize sizeHint() const { return QSize(150, 40); }
+//
+// public slots:
+//     void clear() {}
+//
+// // moc does not look at #ifdefs, so we must provide the same slots and signals
+// private slots:
+//     void updateText( const QString& );
+//     void searchEditingFinished();
+//
+// signals:
+//     void searchDelayedChanged( const QString& );
+//     void textEdited( const QString& );
+// };
 #endif
 
 #endif
