diff --git compat/strverscmp.c compat/strverscmp.c
index 0487592..475531c 100644
--- compat/strverscmp.c
+++ compat/strverscmp.c
@@ -67,6 +67,11 @@ int strverscmp (const char *s1, const char *s2)
 
   if (p1 == p2)
     return 0;
+  // handle the easy inequalities:
+  else if (p1 == NULL)
+    return -999;
+  else if (p2 == NULL)
+    return 999;
 
   unsigned char c1 = *p1++;
   unsigned char c2 = *p2++;
@@ -76,8 +81,9 @@ int strverscmp (const char *s1, const char *s2)
   int diff;
   while ((diff = c1 - c2) == 0)
     {
-      if (c1 == '\0')
-	return diff;
+      // is there a reason we don't check against a nullbyte in p2 here?
+      if (c1 == '\0' || c2 == '\0')
+        return diff;
 
       state = next_state[state];
       c1 = *p1++;
@@ -94,8 +100,8 @@ int strverscmp (const char *s1, const char *s2)
 
     case LEN:
       while (isdigit (*p1++))
-	if (!isdigit (*p2++))
-	  return 1;
+        if (!isdigit (*p2++))
+          return 1;
 
       return isdigit (*p2) ? -1 : diff;
 
