# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cxx11 1.0
PortGroup           github 1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           muniversal 1.0

github.setup        mbunkus mkvtoolnix 19.0.0 release-
categories          multimedia
maintainers         {ryandesign @ryandesign} openmaintainer
license             GPL-2+ LGPL-2.1+

description         Matroska media files manipulation tools.
long_description    mkvtoolnix will evolve to a set of tools to create, \
                    alter and inspect Matroska files under Linux and other \
                    Unices, just what the OGMtools do for the OGM format.
homepage            http://www.bunkus.org/videotools/mkvtoolnix/
platforms           darwin
master_sites        ${homepage}sources/
use_xz              yes
checksums           rmd160  8e2d8f43e8a090c1b067223c1951e001b679659d \
                    sha256  4b4af84cfdf3062f8ca4ab3c37854be7cd9a71bcf5c46b8ca805a101d414b6a1 \
                    size    4616780

set version_ruby    2.4
set version_ruby_mp [join [split $version_ruby "."] ""]

depends_build       port:ruby${version_ruby_mp} \
                    port:docbook-xsl \
                    port:libxslt \
                    port:po4a

depends_lib         port:boost \
                    port:bzip2 \
                    port:expat \
                    port:flac \
                    port:gettext \
                    port:libebml \
                    port:libmagic \
                    port:libmatroska \
                    port:libogg \
                    port:libvorbis \
                    port:lzo2 \
                    port:pcre \
                    port:zlib \
                    port:pugixml

depends_run         port:ruby${version_ruby_mp}

post-patch {
    fs-traverse f ${worksrcpath} {
        set t [file tail ${f}]
        set e [file extension ${f}]
        if {${t} eq "Rakefile" || ${e} eq ".rb"} {
            reinplace -q -E "s|^#!/usr/bin/(env )?ruby|#!${prefix}/bin/ruby${version_ruby}|g" ${f}
        }
    }
}

# mkvtoolnix's configure tests for certain c++14 features.  Xcode 6.2 (clang 600.0.57)
# is known to fail.  Xcode 7.2.1 (clang 700.1.81) is known to pass.  Assume 700+ is OK.
# ToDo: test building with gcc 4.9 and later but blacklist all gcc for now
compiler.fallback-append macports-clang-3.7
compiler.blacklist-append { clang < 700 } \
    *gcc*

set cxx_stdlibflags {}
if {[string match *clang* ${configure.cxx}]} {
    set cxx_stdlibflags -stdlib=${configure.cxx_stdlib}
}

build.cmd           rake${version_ruby}
build.target        default
# disable silent rules
build.args-append   V=1

configure.args      --mandir=${prefix}/share/man \
                    --with-boost=${prefix} \
                    --with-extra-libs=${prefix}/lib \
                    --with-extra-includes=${prefix}/include \
                    --with-xsltproc=${prefix}/bin/xsltproc \
                    --with-docbook-xsl-root=${prefix}/share/xsl/docbook-xsl \
                    --with-po4a=${prefix}/bin/po4a \
                    --with-po4a-translate=${prefix}/bin/po4a-translate \
                    --disable-qt

configure.ldflags-append ${cxx_stdlibflags}

test.run            yes
test.cmd            rake
test.target         tests:unit

variant qtgui description {Build with the qt5 GUI} {
    PortGroup       app 1.0
    PortGroup       qt5 1.0
    
    app.name        MKVToolNix
    app.executable  mkvtoolnix-gui
    app.icon        ${worksrcpath}/share/icons/256x256/mkvtoolnix-gui.png

    depends_build-append port:makeicns
    qt5.depends_component qtmultimedia
    configure.args-delete --disable-qt
    configure.args-append \
                    --enable-qt \
                    --with-qmake=${qt_dir}/bin/qmake \
                    --with-moc=${qt_dir}/bin/moc \
                    --with-uic=${qt_dir}/bin/uic \
                    --with-rcc=${qt_dir}/bin/rcc
}

default_variants    +qtgui

livecheck.type      regex
livecheck.url       ${homepage}sources/
livecheck.regex     ${name}-(\[0-9.\]+)${extract.suffix}
