Remove code that looks for default Fink and MacPorts prefixes.

Patch in a placeholder for the applications directory which will be replaced
with the real value by the Portfile.

Include <stddef.h> anytime NULL is used so that tests don't fail, specifically
the xvid test.
https://github.com/gpac/gpac/pull/2822
--- configure.orig	2024-04-17 12:18:21.000000000 -0500
+++ configure	2024-04-30 23:52:39.000000000 -0500
@@ -961,20 +961,8 @@
             LDFLAGS="$LDFLAGS -L$prefix/$libdir"
         fi
 
-        if test "$is_em" != "yes" ; then
-            if test -d /sw/bin ; then
-                alt_macosx_dir="/sw"
-            elif test -d /opt/local/bin ; then
-                alt_macosx_dir="/opt/local"
-            fi
-            if test "$alt_macosx_dir" != "" ; then
-                CFLAGS_DIR="-I$alt_macosx_dir $CFLAGS_DIR"
-                LDFLAGS="-L$alt_macosx_dir $LDFLAGS"
-            fi
-        fi
-
         CFLAGS="$CFLAGS_DIR $CFLAGS"
-        Mac_Applications="/Applications"
+        Mac_Applications="@APPLICATIONS_DIR@"
         SHFLAGS="-dynamiclib"
         DYN_LIB_SUFFIX=".dylib"
         extralibs=""
@@ -1591,6 +1579,7 @@
 #include <openssl/x509.h>
 #include <openssl/err.h>
 #include <openssl/rand.h>
+#include <stddef.h>
 int main( void ) {  SSL_CTX_set_options(NULL, SSL_OP_ALL); return 0; }'
 
 
@@ -1617,6 +1606,7 @@
 fi
 
 config_package png "libpng" "" "-lpng -lz" "png" '#include <png.h>
+#include <stddef.h>
 int main( void ) {  png_struct *png_ptr = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL); return 0; }'
 
 
@@ -1633,6 +1623,7 @@
 
 
 config_package xvid "xvid" "" "-lxvidcore $PTHREAD_LDFLAGS" "" '#include <xvid.h>
+#include <stddef.h>
 int main( void ) { void *codec; xvid_decore(codec, XVID_DEC_DESTROY, NULL, NULL); return 0; }'
 
 config_package faad "faad2" "" "-lfaad -lm" "" '#include <faad.h>
@@ -1686,6 +1677,7 @@
 
 
 config_package freenect "libfreenect" "" "-lfreenect" "freenect" '#include <libfreenect/libfreenect.h>
+#include <stddef.h>
 int main( void ) { freenect_context *f_ctx; freenect_init(&f_ctx, NULL); return 0; }'
 
 
