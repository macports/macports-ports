# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           github 1.0

github.setup        mltframework mlt 6.8.0 v
github.tarball_from releases

epoch               3
revision            1
categories          multimedia
maintainers         {dennedy.org:dan @ddennedy} {gmail.com:rjvbertin @RJVB} openmaintainer
license             GPL-2+

description         Open source multimedia framework - core libraries
long_description    MLT is an open source multimedia framework, designed and developed for \
                    television broadcasting. It provides a toolkit for broadcasters, video \
                    editors, media players, transcoders, web streamers and many more types of \
                    applications. The functionality of the system is provided via an assortment \
                    of ready to use tools, xml authoring components, and an extendible plug-in \
                    based API. \
                    \
                    This package contains the files necessary for running applications that use \
                    the MLT multimedia framework.
homepage            http://www.mltframework.org/
platforms           darwin

checksums           rmd160  5aa9892ea06b2bf0e9abced6d69cf9005f05fa49 \
                    sha256  54d6c28c8eae23b77c57bc59eec441ac073c56d029f59132cce647a8ace9b0dc \
                    size    1380452

subport ${name}-qt5 {
    description     ${description} - Qt5 version
    long_description \
                    ${long_description} Built against Qt5.
}

if {${subport} eq "${name}"} {
    conflicts       ${name}-qt5
    PortGroup       qt4 1.0
} else {
    conflicts       ${name}
    PortGroup       qt5 1.0
    if {[info procs qt5.active_version] eq ""} {
        proc qt5.active_version {} {
            global prefix
            if {[file executable ${prefix}/bin/pkg-config]
                && ![catch {exec ${prefix}/bin/pkg-config --modversion Qt5Core} av]} {
                return ${av}
            } else {
                # current version of the default dependency (which probably just isn't installed yet)
                # exact version returned in this case isn't too important,
                # it's just compared with 5.7.0 below
                return 5.10.0
            }
        }
    }

    pre-fetch {
        if {${os.major} < 11} {
            ui_error "${subport} requires Qt 5.6 or newer, which is not supported on Darwin ${os.major}"
            return -code error "${subport} is not supported on this platform"
        }
    }

    qt5.depends_component \
                    qtsvg
    pre-configure {
        # qt5.active_version only works if Qt is installed; we can
        # be certain that is the case in the pre-configure phase.
        if {[vercmp [qt5.active_version] 5.7.0] >= 0} {
            ui_debug "Qt 5.7.0 and up require at least C++11"
            configure.cxxflags-append \
                    -stdlib=libc++ \
                    -std=c++11
        }
    }
    configure.env-append \
                    QTDIR=${qt_dir}
}

depends_build-append port:git \
                    port:doxygen

depends_lib-append  port:atk \
                    port:frei0r-plugins \
                    path:lib/libavcodec.dylib:ffmpeg \
                    port:libsamplerate \
                    port:libsdl2 \
                    port:libvorbis \
                    port:sox \
                    port:libxml2 \
                    port:libexif \
                    port:fftw-3 \
                    port:libebur128

if {[variant_isset opencv]} {
    PortGroup       active_variants 1.1
    if {${subport} eq "${name}"} {
        require_active_variants opencv qt4
    } else {
        require_active_variants opencv qt5
    }
}

# NB: qt-includedir can and should be set to ${qt_includes_dir},
# not ${qt_includes_dir}/Qt !!
configure.args-append \
                    --enable-gpl \
                    --qt-libdir=${qt_frameworks_dir} \
                    --qt-includedir=${qt_includes_dir} \
                    --disable-jackrack \
                    --disable-mmx \
                    --disable-gtk2 \
                    --disable-swfdec \
                    --disable-opencv \
                    --disable-sdl \
                    --without-kde

platform darwin 10 {
    if {${build_arch} eq "x86_64"} {
        configure.args-delete --disable-mmx
    }
}

configure.cflags-append     "-I${prefix}/include"
configure.cflags-append     "-I${qt_includes_dir}"
configure.ldflags-delete    "-L${prefix}/lib"

# make sure the build system actually sees our settings by amending the toplevel config.mak.
post-configure {
    set config.mak [open ${worksrcpath}/config.mak "a"]
    puts ${config.mak} "CC=${configure.cc}"
    puts ${config.mak} "CXX=${configure.cxx}"
    puts ${config.mak} "CFLAGS+=${configure.cflags} ${configure.cppflags}"
    puts ${config.mak} "CXXFLAGS+=${configure.cxxflags} ${configure.cppflags}"
    puts ${config.mak} "LDLAGS+=${configure.ldflags}"
    close ${config.mak}
}

build.args-append           CC="${configure.cc}" CXX="${configure.cxx}" CPP="${configure.cpp}"

if {[variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})   {*}"CFLAGS='${configure.cflags} -arch ${arch}'"
        lappend merger_build_env(${arch})   {*}"CXXFLAGS='${configure.cxxflags} -arch ${arch}'"
        lappend merger_build_env(${arch})   {*}"LDFLAGS='${configure.ldflags} -L${worksrcpath}-${arch}/src/framework -L${prefix}/lib -arch ${arch}'"
    }
} else {
    build.env-append                        CFLAGS="${configure.cflags} [get_canonical_archflags cc]"
    build.env-append                        CXXFLAGS="${configure.cxxflags} [get_canonical_archflags cxx]"
    build.env-append                        LDFLAGS="${configure.ldflags} -L${worksrcpath}/src/framework -L${prefix}/lib [get_canonical_archflags ld]"
}

variant gtk2 description {include the gtk2 module (for additional image and text producers)} {
    configure.args-delete   --disable-gtk2
    depends_lib-append      port:gtk2
}

variant gpl3 description {enable GPLv3 components} {
    configure.args-append   --enable-gpl3
    license                 GPL-3+
}

# use an opencv variant to avoid opportunistic dependencies on this library
# the opencv dependency must match our choice of Qt version, which is
# another reason why opencv support is provided through a variant.
variant opencv description {enable OpenCV support} {
    depends_lib-append      port:opencv
    configure.args-delete   --disable-opencv
}

# Allow building without SDL support, useful when used in dependents that themselves
# depend on SDL 1.2, to avoid (warnings about) runtime conflicts.
variant disable_sdl description {disable SDL support to avoid SDL vs. SDL2 conflicts} {
    configure.args-append   --disable-sdl2
    configure.cppflags-append \
                            -DMELT_NOSDL
    depends_lib-delete      port:libsdl2
}
