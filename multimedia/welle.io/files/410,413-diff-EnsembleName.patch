diff -Naur welle.io-2.0~beta3_unpatched/src/backend/fib-processor.cpp welle.io-2.0~beta3/src/backend/fib-processor.cpp
--- welle.io-2.0~beta3_unpatched/src/backend/fib-processor.cpp	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/backend/fib-processor.cpp	2019-09-21 18:44:00.500856711 +0200
@@ -768,11 +768,12 @@
                     label[i] = getBits_8 (d, offset);
                     offset += 8;
                 }
-                // std::clog << "fib-processor:" << "Ensemblename: %16s\n", label) << std::endl;
+                // std::clog << "fib-processor:" << "Ensemblename: " << label << std::endl;
                 if (!oe and EId == ensembleId) {
                     ensembleLabel.fig1_flag = getBits(d, offset, 16);
                     ensembleLabel.fig1_label = label;
                     ensembleLabel.setCharset(charSet);
+                    myRadioInterface.onSetEnsembleLabel(ensembleLabel);
                 }
                 break;
             }
diff -Naur welle.io-2.0~beta3_unpatched/src/backend/radio-controller.h welle.io-2.0~beta3/src/backend/radio-controller.h
--- welle.io-2.0~beta3_unpatched/src/backend/radio-controller.h	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/backend/radio-controller.h	2019-09-21 18:44:00.500856711 +0200
@@ -92,6 +92,9 @@
         /* When the ensemble changes */
         virtual void onNewEnsemble(uint16_t eId) = 0;
 
+        /* When the ensemble label changes */
+        virtual void onSetEnsembleLabel(DabLabel& label) = 0;
+
         virtual void onDateTimeUpdate(const dab_date_time_t& dateTime) = 0;
 
         /* For every FIB, tell if the CRC check passed. fib points to a bit-vector with 256 bits of FIB data  */
diff -Naur welle.io-2.0~beta3_unpatched/src/tests/backend_tests.cpp welle.io-2.0~beta3/src/tests/backend_tests.cpp
--- welle.io-2.0~beta3_unpatched/src/tests/backend_tests.cpp	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/tests/backend_tests.cpp	2019-09-21 18:59:41.472880603 +0200
@@ -46,6 +46,7 @@
         virtual void onServiceDetected(uint32_t sId) override { (void)sId; }
 
         virtual void onNewEnsemble(uint16_t /*eId*/) override { }
+        virtual void onSetEnsembleLabel(DabLabel& /*label*/) override { }
         virtual void onDateTimeUpdate(const dab_date_time_t& dateTime) override { (void)dateTime; }
         virtual void onFIBDecodeSuccess(bool crcCheckOk, const uint8_t* fib) override { (void)crcCheckOk; (void)fib; }
         virtual void onNewImpulseResponse(std::vector<float>&& data) override { (void)data; }
diff -Naur welle.io-2.0~beta3_unpatched/src/welle-cli/tests.cpp welle.io-2.0~beta3/src/welle-cli/tests.cpp
--- welle.io-2.0~beta3_unpatched/src/welle-cli/tests.cpp	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/welle-cli/tests.cpp	2019-09-21 18:44:00.500856711 +0200
@@ -156,6 +156,11 @@
             cout << "Ensemble id is: " << eId << endl;
         }
 
+        virtual void onSetEnsembleLabel(DabLabel& label) override
+        {
+            cout << "Ensemble label: " << label.utf8_label() << endl;
+        }
+
         virtual void onDateTimeUpdate(const dab_date_time_t& dateTime) override { (void)dateTime; }
         virtual void onFIBDecodeSuccess(bool crcCheckOk, const uint8_t* fib) override { (void)crcCheckOk; (void)fib; }
         virtual void onNewImpulseResponse(std::vector<float>&& data) override
diff -Naur welle.io-2.0~beta3_unpatched/src/welle-cli/webradiointerface.cpp welle.io-2.0~beta3/src/welle-cli/webradiointerface.cpp
--- welle.io-2.0~beta3_unpatched/src/welle-cli/webradiointerface.cpp	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/welle-cli/webradiointerface.cpp	2019-09-21 18:44:00.500856711 +0200
@@ -1377,6 +1377,7 @@
 void WebRadioInterface::onSignalPresence(bool /*isSignal*/) { }
 void WebRadioInterface::onServiceDetected(uint32_t /*sId*/) { }
 void WebRadioInterface::onNewEnsemble(uint16_t /*eId*/) { }
+void WebRadioInterface::onSetEnsembleLabel(DabLabel& /*label*/) { }
 
 void WebRadioInterface::onDateTimeUpdate(const dab_date_time_t& dateTime)
 {
diff -Naur welle.io-2.0~beta3_unpatched/src/welle-cli/webradiointerface.h welle.io-2.0~beta3/src/welle-cli/webradiointerface.h
--- welle.io-2.0~beta3_unpatched/src/welle-cli/webradiointerface.h	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/welle-cli/webradiointerface.h	2019-09-21 18:44:00.500856711 +0200
@@ -77,6 +77,7 @@
         virtual void onSignalPresence(bool isSignal) override;
         virtual void onServiceDetected(uint32_t sId) override;
         virtual void onNewEnsemble(uint16_t eId) override;
+        virtual void onSetEnsembleLabel(DabLabel& label) override;
         virtual void onDateTimeUpdate(const dab_date_time_t& dateTime) override;
         virtual void onFIBDecodeSuccess(bool crcCheckOk, const uint8_t* fib) override;
         virtual void onNewImpulseResponse(std::vector<float>&& data) override;
diff -Naur welle.io-2.0~beta3_unpatched/src/welle-cli/welle-cli.cpp welle.io-2.0~beta3/src/welle-cli/welle-cli.cpp
--- welle.io-2.0~beta3_unpatched/src/welle-cli/welle-cli.cpp	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/welle-cli/welle-cli.cpp	2019-09-21 18:44:00.500856711 +0200
@@ -188,6 +188,11 @@
             cout << "Ensemble name id: " << hex << eId << dec << endl;
         }
 
+        virtual void onSetEnsembleLabel(DabLabel& label) override
+        {
+            cout << "Ensemble label: " << label.utf8_label() << endl;
+        }
+
         virtual void onDateTimeUpdate(const dab_date_time_t& dateTime) override
         {
             json j;
diff -Naur welle.io-2.0~beta3_unpatched/src/welle-gui/radio_controller.cpp welle.io-2.0~beta3/src/welle-gui/radio_controller.cpp
--- welle.io-2.0~beta3_unpatched/src/welle-gui/radio_controller.cpp	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/welle-gui/radio_controller.cpp	2019-09-21 18:44:00.500856711 +0200
@@ -95,6 +95,10 @@
     connect(this, &CRadioController::ensembleIdUpdated,
             this, &CRadioController::ensembleId);
 
+    qRegisterMetaType<DabLabel>("DabLabel&");
+    connect(this, &CRadioController::ensembleLabelUpdated,
+            this, &CRadioController::ensembleLabel);
+        
     connect(this, &CRadioController::serviceDetected,
             this, &CRadioController::serviceId);
 
@@ -638,8 +642,21 @@
 
     currentEId = eId;
 
-    auto label = radioReceiver->getEnsembleLabel();
-    currentEnsembleLabel = QString::fromStdString(label.utf8_label());
+    //auto label = radioReceiver->getEnsembleLabel();
+    //currentEnsembleLabel = QString::fromStdString(label.utf8_label());
+
+    //emit ensembleChanged();
+}
+
+void CRadioController::ensembleLabel(DabLabel& label)
+{
+    QString newLabel = QString::fromStdString(label.utf8_label());
+
+    if (currentEnsembleLabel == newLabel)
+        return;
+
+    qDebug() << "RadioController: Label of ensemble:" << newLabel;
+    currentEnsembleLabel = newLabel;
 
     emit ensembleChanged();
 }
@@ -834,6 +851,11 @@
     emit ensembleIdUpdated(eId);
 }
 
+void CRadioController::onSetEnsembleLabel(DabLabel& label)
+{
+    emit ensembleLabelUpdated(label);
+}
+
 void CRadioController::onDateTimeUpdate(const dab_date_time_t& dateTime)
 {
     emit dateTimeUpdated(dateTime);
diff -Naur welle.io-2.0~beta3_unpatched/src/welle-gui/radio_controller.h welle.io-2.0~beta3/src/welle-gui/radio_controller.h
--- welle.io-2.0~beta3_unpatched/src/welle-gui/radio_controller.h	2019-09-08 20:37:15.000000000 +0200
+++ welle.io-2.0~beta3/src/welle-gui/radio_controller.h	2019-09-21 18:44:00.500856711 +0200
@@ -139,6 +139,7 @@
     virtual void onSignalPresence(bool isSignal) override;
     virtual void onServiceDetected(uint32_t sId) override;
     virtual void onNewEnsemble(uint16_t eId) override;
+    virtual void onSetEnsembleLabel(DabLabel& label) override;
     virtual void onDateTimeUpdate(const dab_date_time_t& dateTime) override;
     virtual void onFIBDecodeSuccess(bool crcCheckOk, const uint8_t* fib) override;
     virtual void onNewImpulseResponse(std::vector<float>&& data) override;
@@ -223,6 +224,7 @@
 
 private slots:
     void ensembleId(quint16);
+    void ensembleLabel(DabLabel&);
     void serviceId(quint32);
     void labelTimerTimeout(void);
     void stationTimerTimeout(void);
@@ -234,6 +236,7 @@
     void switchToNextChannel(bool isWait);
     void serviceDetected(quint32 sId);
     void ensembleIdUpdated(quint16 eId);
+    void ensembleLabelUpdated(DabLabel& label);
     void dateTimeUpdated(const dab_date_time_t& dateTime);
 
     void deviceNameChanged();
