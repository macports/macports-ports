--- doclifter.orig	2006-12-25 00:43:35.000000000 -0700
+++ doclifter	2009-09-30 15:11:17.000000000 -0600
@@ -126,7 +126,7 @@
 $Id: doclifter,v 1.1336 2006/12/22 14:41:03 esr Exp $
 """
 # Requires Python 2.2a
-import sys, os, glob, re, sre, string, exceptions, copy, tempfile, time, pprint
+import sys, os, glob, re, string, exceptions, copy, tempfile, time, pprint
 
 # This is a speed hack recommended by Armin Rigo.  It cuts runtime by about 33%
 # and makes it possible for psyco 1.2 to reduce runtime another 33%.
@@ -385,8 +385,8 @@
             if line.startswith('.\\" | '):
                 print line
                 # Someday we'll have more declarations
-                (mark, token, as, markup) = line[5:].split()
-                if mark != "mark" or as != "as":
+                (mark, token, asvalue, markup) = line[5:].split()
+                if mark != "mark" or asvalue != "as":
                     continue
                 self.post(token, markup)
     def __repr__(self):
@@ -6370,8 +6370,8 @@
         return result
     def styleargs(self, args, tag, attribute="", prefix=""):
         return self.process_punct(args, lambda x: self.stylehook(x, tag, attribute, prefix), 1)
-    def replacemacro(self, args, with):
-        return self.process_punct(args, lambda x: [with] + x, 1)
+    def replacemacro(self, args, replacement):
+        return self.process_punct(args, lambda x: [replacement] + x, 1)
     def eval(self, args):
         "Evaluate a macro, returning a list."
         if args[0][0] == '.':
