# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           makefile 1.0
PortGroup           boost 1.0

name                highlight
version             4.4
revision            0
checksums           rmd160  c0a578058438adcc078ecf3929dffd7394af53ad \
                    sha256  9682336941db6b081c9be616ee778fc306386ddd2ed87881db87578bfa2a39ba \
                    size    1482821

categories          textproc devel
platforms           darwin
license             GPL-3
maintainers         {i0ntempest @i0ntempest} openmaintainer
description         converts source code to formatted text with syntax highlighting
long_description    ${description}

homepage            http://www.andre-simon.de
master_sites        ${homepage}/zip/
use_bzip2           yes

boost.depends_type  build

depends_build       port:cctools \
                    port:pkgconfig
depends_lib         port:lua

post-patch {
    reinplace "s|/etc/highlight/|${prefix}/etc/highlight/|g" ${worksrcpath}/man/highlight.1
    reinplace "s|/usr/share/|${prefix}/share/|g" ${worksrcpath}/man/highlight.1
}

use_configure       no

build.target        cli lib

compiler.cxx_standard   2011
if {[string match *clang* ${configure.cxx}] && ${configure.cxx_stdlib} ne ""} {
    configure.ldflags-append -stdlib=${configure.cxx_stdlib}
}
configure.cxxflags-append -std=c++11

# Yes, this project's makefile uses CFLAGS to compile its C++ code.
build.args          CXX="${configure.cxx}" \
                    CFLAGS="${configure.cxxflags} [get_canonical_archflags cxx]" \
                    LDFLAGS="${configure.ldflags} [get_canonical_archflags ld]" \
                    PREFIX="${prefix}"

destroot.args       PREFIX="${prefix}"

post-destroot {
    file rename ${destroot}${prefix}/etc/highlight/filetypes.conf \
        ${destroot}${prefix}/etc/highlight/filetypes.conf.sample
}

post-activate {
    set conffile ${prefix}/etc/highlight/filetypes.conf
    # copy over the sample conf file if necessary
    if { ![file exists ${conffile}] } {
        file copy ${conffile}.sample ${conffile}
    }
}

livecheck.type      regex
livecheck.url       [lindex ${master_sites} 0]download.html
livecheck.regex     ${name}-(\[0-9.\]+)${extract.suffix}
