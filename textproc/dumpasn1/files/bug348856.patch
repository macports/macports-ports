Description: dumpasn1 doesn't properly display localized BMPString
Author: Victor B. Wagner <vitus@45.free.net>
Bug-Debian: http://bugs.debian.org/348856
Reviewed-By: Mathieu Malaterre <malat@debian.org>
Forwarded: http://bugs.debian.org/348856#59

Index: dumpasn1-20150808/dumpasn1.c
===================================================================
--- dumpasn1-20150808.orig/dumpasn1.c
+++ dumpasn1-20150808/dumpasn1.c
@@ -60,6 +60,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <locale.h>
 #ifdef OS390
   #include <unistd.h>
 #endif /* OS390 */
@@ -1315,13 +1316,13 @@ static int adjustLevel( const int level,
    use wcstombs() to see if anything can be displayed, if it can't we drop 
    back to trying to display the data as non-Unicode */
 
-static int displayUnicode( const wchar_t wCh, const int level )
+static int displayUnicode( const wchar_t wCh[], const int level )
 	{
 	char outBuf[ 8 ];
 	int outLen;
 
 	/* Check whether we can display this character */
-	outLen = wcstombs( outBuf, &wCh, 1 );
+  outLen = wcstombs( outBuf, wCh, 8 );
 	if( outLen < 1 )
 		{
 		/* Tell the caller that this can't be displayed as Unicode */
@@ -1369,13 +1370,7 @@ static int displayUnicode( const wchar_t
 		wChString[ 1 ] = 0;
 		fprintf( output, "%ls", wChString );
 #else
-		if( fwide( output, 1 ) > 0 )
-			{
-			fputwc( wCh, output );
-			fwide( output, -1 );
-			}
-		else
-			fputc( wCh, output );
+    fprintf( output, "%s", outBuf );
 #endif
 		}
 #else
@@ -1872,7 +1867,7 @@ static void displayString( FILE *inFile,
 				}
 			else
 				{
-				const wchar_t wCh = ( ch << 8 ) | getc( inFile );
+        const wchar_t wCh[2] ={ ( ch << 8 ) | getc( inFile ),0};
 				
 				if( displayUnicode( wCh, level ) )
 					{
@@ -1884,7 +1879,7 @@ static void displayString( FILE *inFile,
 
 				/* The value can't be displayed as Unicode, fall back to 
 				   displaying it as normal text */
-				ungetc( wCh & 0xFF, inFile );
+        ungetc( wCh[0] & 0xFF, inFile );
 				}
 			}
 		if( strOption == STR_UTF8 && ( ch & 0x80 ) )
@@ -3118,7 +3113,14 @@ int main( int argc, char *argv[] )
 #endif /* __OS390__ */
 	long offset = 0;
 	int moreArgs = TRUE, doCheckOnly = FALSE;
-
+	
+	setlocale(LC_ALL,
+#ifdef __WIN32__
+			".OCP"
+#else			
+			""
+#endif			
+);
 #ifdef __OS390__
 	memset( pathPtr, '\0', sizeof( pathPtr ) );
 	getcwd( pathPtr, sizeof( pathPtr ) );
