Description: segfaults on valid certificate
 Fix stack smashing
Author: Dmitry Eremin-Solenikov <dbaryshkov@gmail.com>
Origin: https://bugs.debian.org/840771#17
Bug-Debian: https://bugs.debian.org/840771
Reviewed-by: Mathieu Malaterre <malat@debian.org>

Index: dumpasn1-20150808/dumpasn1.c
===================================================================
--- dumpasn1-20150808.orig/dumpasn1.c
+++ dumpasn1-20150808/dumpasn1.c
@@ -1362,7 +1362,7 @@ static int displayUnicode( const wchar_t
 #elif 1
 		/* This (and the "%ls" variant below) seem to be the least broken 
 		   options */
-		fprintf( output, "%lc", wCh );
+		fprintf( output, "%lc", wCh[0] );
 #elif 0
 		wchar_t wChString[ 2 ];
 
@@ -1885,13 +1885,13 @@ static void displayString( FILE *inFile,
 		if( strOption == STR_UTF8 && ( ch & 0x80 ) )
 			{
 			const int secondCh = getc( inFile );
-			wchar_t wCh;
+			wchar_t wCh[2] = { 0, 0 };
 
 			/* It's a multibyte UTF8 character, read it as a widechar */
 			if( ( ch & 0xE0 ) == 0xC0 )		/* 111xxxxx -> 110xxxxx */
 				{
 				/* 2-byte character in the range 0x80...0x7FF */
-				wCh = ( ( ch & 0x1F ) << 6 ) | ( secondCh & 0x3F );
+				wCh[0] = ( ( ch & 0x1F ) << 6 ) | ( secondCh & 0x3F );
 				i++;		/* We've read 2 characters */
 				fPos += 2;
 				}
@@ -1902,12 +1902,12 @@ static void displayString( FILE *inFile,
 					const int thirdCh = getc( inFile );
 
 					/* 3-byte character in the range 0x800...0xFFFF */
-					wCh = ( ( ch & 0x1F ) << 12 ) | \
+					wCh[0] = ( ( ch & 0x1F ) << 12 ) | \
 						  ( ( secondCh & 0x3F ) << 6 ) | \
 						  ( thirdCh & 0x3F );
 					}
 				else
-					wCh = '.';
+					wCh[0] = '.';
 				i += 2;		/* We've read 3 characters */
 				fPos += 3;
 				}
