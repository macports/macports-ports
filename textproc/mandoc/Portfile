# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                mandoc
version             1.14.3
revision            1
description         UNIX manpage compiler
homepage            http://mandoc.bsd.lv/
categories          textproc
conflicts           man groff
license             ISC
maintainers         eitanadler.com:lists stare.cz:hans openmaintainer
platforms           openbsd freebsd netbsd darwin

long_description    mandoc is a suite of tools compiling mdoc, \
                    the roff macro language of choice for \
                    BSD manual pages, and man, the predominant \
                    historical language for UNIX manuals.

master_sites        http://mandoc.bsd.lv/snapshots/

checksums           rmd160 0155d0670421c37aa79c1887ecab3904236907cd \
                    sha256 0b0c8f67958c1569ead4b690680c337984b879dfd2ad4648d96924332fd99528

pre-configure {
    set filename "${worksrcpath}/configure.local"
    set content [subst {

PREFIX="${prefix}"
MANDIR="${prefix}/share/man"

INSTALL_PROGRAM="${configure.install} -m 0755"
INSTALL_LIB="${configure.install} -m 0644"
INSTALL_MAN="${configure.install} -m 0644"
INSTALL_DATA="${configure.install} -m 0644"

INSTALL_LIBMANDOC=0
BUILD_CGI=0
BUILD_CATMAN=0

CC="${configure.cc}"
CFLAGS="${configure.cppflags} ${configure.cflags} [get_canonical_archflags cc]"
LDFLAGS="${configure.ldflags} [get_canonical_archflags ld]"

} ]

    set fd [open "${filename}" "w"]
    puts "${fd}" "${content}"
    close "${fd}"
}

# Without declaring a universal variant before using get_canonical_archflags,
# only non-universal arch flags are returned.
# This works around it.
# Another way around the problem would be setting build.env in pre-build.
# Kudos to jmr and ryandesign for explaining that.
variant universal   {}

build.args          CC="${configure.cc}"
build.env           CFLAGS="${configure.cppflags} ${configure.cflags} [get_canonical_archflags cc]" \
                    LDFLAGS="${configure.ldflags} [get_canonical_archflags ld]"
