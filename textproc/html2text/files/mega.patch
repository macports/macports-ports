Combination of several upstream fixes to make the build system work
better with MacPorts:

* Recognize --prefix configure flag and honor CXXFLAGS and LDFLAGS.
* Use -std=c++11 since the code requires it.
* Fix version number.
* Fix always-true conditional in istr.h.

This patch won't be needed anymore with the next version of html2text.

https://github.com/grobian/html2text/commit/e926db6d02b4958c5180f4a4335e9579c2feb2b5
https://github.com/grobian/html2text/commit/997aaf1bcef35ea983f092c31bf49c91688e1838
https://github.com/grobian/html2text/commit/dda4980a64d7ad9fa1e87a01768fbf7e9aceeacb
https://github.com/grobian/html2text/commit/5cabc5bcec5b6d11fffe199c3b813b6e71cb834a
https://github.com/grobian/html2text/commit/c9cba90aceb4671e24aa097ab994f650e7383e80
https://github.com/grobian/html2text/commit/c3587c648e40edc01076302071e4b5469907c9c4
https://github.com/grobian/html2text/commit/2ac3b1ab27f7db7552747d8f6697aa2770e10134
https://github.com/grobian/html2text/commit/5257328c43bc44677b3d85ca7db72b853b58128d
https://github.com/grobian/html2text/commit/1f942e4018fdac0ec971429a25729491dc7db973
https://github.com/grobian/html2text/commit/373943c0cff9126c22f41b8a6aafd88873313f5f
--- Makefile.in.orig	2022-04-06 13:19:55.000000000 -0500
+++ Makefile.in	2022-05-05 05:16:02.000000000 -0500
@@ -26,16 +26,16 @@
 #
 # -----------------------------------------------------------------------------
 
-VERSION=2.0.1_pre
+VERSION=2.0.1
 
 BISON  = bison
 YFLAGS =
 
 INSTALLER = install
-PREFIX    = /usr/local
-BINDIR    = $(PREFIX)/bin
-MANDIR    = $(PREFIX)/man
-DOCDIR    = $(PREFIX)/share/doc/html2text
+PREFIX    = @PREFIX@
+BINDIR    = @BINDIR@
+MANDIR    = @MANDIR@
+DOCDIR    = @DOCDIR@
 
 CXX                 = @CXX@
 BOOL_DEFINITION     = @BOOL_DEFINITION@
@@ -46,7 +46,8 @@
 LIBSTDCXX_LIBS      = @LIBSTDCXX_LIBS@
 AUTO_PTR_BROKEN     = @AUTO_PTR_BROKEN@
 MAKEDEPEND_INCLUDES = @MAKEDEPEND_INCLUDES@
-CXXFLAGS            = -g -O2 -Wall -Wextra  # automake like + warnings
+CXXFLAGS            = @CXXFLAGS@
+LDFLAGS             = @LDFLAGS@
 
 INCLUDES    = $(LIBSTDCXX_INCLUDES)
 DEFINES     = -DVERSION=$(VERSION) \
@@ -87,7 +88,7 @@
 	$(CXX) -c $(H2TCPPFLAGS) $(H2TCXXFLAGS) $<
 
 html2text: $(OBJS) $(LIBSTDCXX_LIBS)
-	$(CXX) $(LDFLAGS) $(OBJS) $(H2TLIBS) -o $@
+	$(CXX) $(LDFLAGS) $(OBJS) $(H2TLIBS) $(H2TCXXFLAGS) -o $@
 
 # -----------------------------------------------------------------------------
 
--- configure.orig	2022-04-06 13:19:55.000000000 -0500
+++ configure	2022-05-05 05:16:02.000000000 -0500
@@ -19,13 +19,20 @@
 # Tue Nov 11 21:30:26 CET 2003
 
 # mimick autoconf behaviour of accepting variable overrides on command
-# line
+# line, while also accepting options
 for arg in "$@" ; do
 	case "${arg}" in
-		*=*)  eval "${arg}"  ;;
+		--*=*)  eval `echo "${arg}" | sed -e 's/^--//'`  ;;
+		*=*)    eval "${arg}"  ;;
 	esac
 done
 
+[ -z "$PREFIX" ] && PREFIX="${prefix:-/usr/local}"
+[ -z "$BINDIR" ] && BINDIR="${bindir:-$PREFIX/bin}"
+[ -z "$DATAROOTDIR" ] && DATAROOTDIR="${datarootdir:-$PREFIX/share}"
+[ -z "$MANDIR" ] && MANDIR="${mandir:-$DATAROOTDIR/man}"
+[ -z "$DOCDIR" ] && DOCDIR="${docdir:-$DATAROOTDIR/doc/html2text}"
+
 echo=echo
 
 rm -rf configure-tmp || exit 1;
@@ -37,26 +44,36 @@
 # $CXX
 #
 
-$echo 'Checking C++ compiler... \c';
-cat <<EOF >$tmp_file.C;
+$echo 'Checking C++11 compiler... \c'
+cat <<EOF >$tmp_file.C
 #include <iostream>
 int main(int, char **) {
   std::cout << "hello" << std::endl;
+  std::string w = "world";
+  for (auto c : w)
+    std::cout << c;
+  std::cout << std::endl;
   return 0;
 }
 EOF
 CXX=${CXX-unknown}
-for i in "$CXX" "g++" "CC" "cc"; do
-  if $i -c $tmp_file.C 2>/dev/null; then
-    CXX="$i";
-    break;
-  fi;
-done;
-if test "$CXX" = unknown; then
-  $echo "Error: Could not find a working C++ compiler.";
-  exit 1;
+foundCXX=
+for i in "$CXX" "g++" "clang++" "CC" "cc"; do
+  for f in "-std=c++11" "-std=c++0x" ""; do
+    if ${i} ${f} -c $tmp_file.C 2>/dev/null; then
+      foundCXX="${i} ${f}"
+      break
+    fi
+  done
+  test "x${foundCXX}" != "x" && break
+done
+if test "x${foundCXX}" = "x" ; then
+  $echo "Error: Could not find a working C++11 compiler."
+  exit 1
 fi;
-$echo "use \"$CXX\"";
+CXX="${foundCXX}"
+$echo "use \"$CXX\""
+
 
 #
 # $SOCKET_LIBRARIES
@@ -244,6 +261,11 @@
   AUTO_PTR_BROKEN="-DAUTO_PTR_BROKEN";
 fi;
 
+# set default CXX flags if none explicitly given
+if test "x${CXXFLAGS}" = "x" ; then
+  CXXFLAGS="-g -O2 -Wall"  # autoconf-like default + warnings
+fi
+
 #
 # Create "Makefile" from "Makefile.in".
 #
@@ -254,10 +276,16 @@
   SOCKET_LIBRARIES \
   ICONV_LIBRARIES \
   CXX \
+  CXXFLAGS \
+  LDFLAGS \
   BOOL_DEFINITION \
   EXPLICIT \
   LIBSTDCXX_INCLUDES \
   LIBSTDCXX_LIBS \
+  PREFIX \
+  BINDIR \
+  MANDIR \
+  DOCDIR \
   AUTO_PTR_BROKEN; \
 do cmd="$cmd -e \"s|@$i@|\$$i|g\""; done;
 for dir in $makedirs; do
--- istr.h.orig	2022-04-06 13:19:55.000000000 -0500
+++ istr.h	2022-05-05 05:16:02.000000000 -0500
@@ -21,7 +21,7 @@
 
 /* crude temp hack until we properly use wchar, glibc isspace crashes on
  * too large values */
-#define isspace(X) ((X) > 0 && (X) < 256 && isspace(X))
+#define isspace(X) (((int)(X)) > 0 && ((int)(X)) < 256 && isspace((int)(X)))
 
 class istr {
 	public:
