Fixes:
error: invalid suffix on literal; C++11 requires a space between literal and identifier [-Wreserved-user-defined-literal]
--- dict/src/dictmanage.cpp.orig	2014-04-07 21:52:26.000000000 -0500
+++ dict/src/dictmanage.cpp	2019-11-01 06:51:55.000000000 -0500
@@ -77,7 +77,7 @@
 	std::list<std::string> plugin_disable_list;
 	std::list<std::string> plugins_dirs;
 	plugins_dirs.push_back(conf_dirs->get_plugin_dir());
-	for_each_file(plugins_dirs, "."G_MODULE_SUFFIX, plugin_order_list,
+	for_each_file(plugins_dirs, "." G_MODULE_SUFFIX, plugin_order_list,
 		plugin_disable_list, GetAllPluginList(plugin_all_list));
 }
 
--- dict/src/lib/pluginmanager.cpp.orig	2012-03-03 01:01:24.000000000 -0600
+++ dict/src/lib/pluginmanager.cpp	2019-11-01 06:42:14.000000000 -0500
@@ -96,7 +96,7 @@
 {
 	std::list<std::string> plugins_dirs;
 	plugins_dirs.push_back(dirpath);
-	for_each_file(plugins_dirs, "."G_MODULE_SUFFIX, order_list, disable_list, PluginLoader(*this));
+	for_each_file(plugins_dirs, "." G_MODULE_SUFFIX, order_list, disable_list, PluginLoader(*this));
 }
 
 void StarDictPlugins::reorder(const std::list<std::string>& order_list)
@@ -184,7 +184,7 @@
 	std::list<std::string> plugins_dirs;
 	plugins_dirs.push_back(plugindirpath);
 	std::list<std::string> disable_list;
-	for_each_file(plugins_dirs, "."G_MODULE_SUFFIX, order_list, disable_list, PluginInfoLoader(*this, virtualdict_pluginlist, netdict_pluginlist, specialdict_pluginlist, tts_pluginlist, parsedata_pluginlist, misc_pluginlist));
+	for_each_file(plugins_dirs, "." G_MODULE_SUFFIX, order_list, disable_list, PluginInfoLoader(*this, virtualdict_pluginlist, netdict_pluginlist, specialdict_pluginlist, tts_pluginlist, parsedata_pluginlist, misc_pluginlist));
 
 	if (!virtualdict_pluginlist.empty()) {
 		plugin_list.push_back(std::pair<StarDictPlugInType, std::list<StarDictPluginInfo> >(StarDictPlugInType_VIRTUALDICT, virtualdict_pluginlist));
--- dict/src/lib/storage.cpp.orig	2013-11-18 02:10:23.000000000 -0600
+++ dict/src/lib/storage.cpp	2019-11-01 06:38:53.000000000 -0500
@@ -793,7 +793,7 @@
 	std::string name_pattern; // in file name encoding
 	if(!utf8_to_file_name(key, name_pattern))
 		return FileHolder();
-	std::string::size_type pos = name_pattern.find_last_of("."DB_DIR_SEPARATOR_S);
+	std::string::size_type pos = name_pattern.find_last_of("." DB_DIR_SEPARATOR_S);
 	if(pos != std::string::npos) {
 		if(name_pattern[pos] == '.')
 			name_pattern = name_pattern.substr(pos);
