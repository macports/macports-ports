# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/mikefarah/yq 4.47.1 v
go.package          github.com/mikefarah/yq/v4
go.offline_build    no
revision            0

homepage            https://mikefarah.gitbook.io/yq

description         \
    yq is a portable command-line YAML processor

long_description    \
    {*}${description}. The aim of the project is to be the jq or sed of yaml \
    files.

categories          textproc sysutils
installs_libs       no
license             MIT
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

checksums           ${distname}${extract.suffix} \
                        rmd160  b315594e490e20a1dc4d660a1c574d10f591eaaa \
                        sha256  48ef09b9ffdb80f26ee516fa2fc83f713c1b49f503cedef79a96435509d456af \
                        size    293317 \
                    ${name}_man_page_only-${version}${extract.suffix} \
                        rmd160  8aff4c0ea2a21c36e036232e60d54d4de5ffc4e3 \
                        sha256  7d86d84fb834ecc8d77afbd7e50ff372bee29a721efef776b3786e2c92e56936 \
                        size    43500

# use generated man page to avoid build depedency on pandoc
master_sites-append https://github.com/mikefarah/yq/releases/download/v${version}/yq_man_page_only${extract.suffix}?dummy=:yqman
distfiles-append    yq_man_page_only-${version}${extract.suffix}:yqman

build.pre_args-append \
                    -ldflags \"-X ${go.package}/cmd.Version=${version}\"
build.args-append   -o ${name}

destroot {
    xinstall -m 0755 ${worksrcpath}/${name} ${destroot}${prefix}/bin/
    xinstall -d ${destroot}${prefix}/share/man/man1
    xinstall -m 0644 ${workpath}/${name}.1 ${destroot}${prefix}/share/man/man1/

    xinstall -d ${destroot}${prefix}/share/${name}
    xinstall -m 0644 ${worksrcpath}/LICENSE ${destroot}${prefix}/share/${name}
    file copy ${worksrcpath}/examples ${destroot}${prefix}/share/${name}/

    set bash_completion ${prefix}/share/bash-completion/completions
    xinstall -d ${destroot}${bash_completion}
    exec ${destroot}${prefix}/bin/${name} shell-completion bash > \
        ${destroot}${bash_completion}/${name}

    set zsh_completion ${prefix}/share/zsh/site-functions
    xinstall -d ${destroot}${zsh_completion}
    exec ${destroot}${prefix}/bin/${name} shell-completion zsh > \
        ${destroot}${zsh_completion}/_${name}

    set fish_completion ${prefix}/share/fish/vendor_completions.d
    xinstall -d ${destroot}${fish_completion}
    exec ${destroot}${prefix}/bin/${name} shell-completion fish > \
        ${destroot}${fish_completion}/${name}.fish
}
