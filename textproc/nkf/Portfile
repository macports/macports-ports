# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                nkf
version             2.1.5
categories          textproc japanese
maintainers         nomaintainer
description         Network Kanji code conversion filter
long_description    Nkf is a yet another kanji code converter among networks, hosts and terminals. \
                    It converts input kanji code to a designated kanji output code. It currently \
                    recognizes ISO-2022-JP, Shift_JIS, EUC-JP, UTF-8, UTF-16 and UTF-32 automatically. \
                    Users, generally, need not set the input code explicitly.
platforms           darwin
license             zlib
homepage            https://osdn.net/projects/nkf/
master_sites        http://gigenet.dl.osdn.jp/nkf/70406

dist_subdir         nkf

checksums           rmd160  0c41198eda7361f797439b6e3a590cb767d63498 \
                    sha256  d1a7df435847a79f2f33a92388bca1d90d1b837b1b56523dcafc4695165bad44 \
                    size    215879

use_configure       no

variant universal   {}

if {[variant_isset universal]} {
    set archflags ${configure.universal_cflags}
} else {
    set archflags ${configure.cc_archflags}
}

build.target
build.args          CC=${configure.cc} CFLAGS="${configure.cflags} ${archflags}"

test.run            yes

destroot {
    xinstall -m 755 ${worksrcpath}/nkf ${destroot}${prefix}/bin
    xinstall -m 644 ${worksrcpath}/nkf.1 ${destroot}${prefix}/share/man/man1
    xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 ${worksrcpath}/nkf.doc ${destroot}${prefix}/share/doc/${name}
}

livecheck.type      regex
livecheck.url       ${homepage}
livecheck.regex     nkf (\[0-9.a-z\]+)
