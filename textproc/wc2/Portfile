# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github      1.0
PortGroup           makefile    1.0

github.setup        robertdavidgraham wc2 4336b2869fa406d25938b9856923a8941e79f500
github.tarball_from archive
version             20221102
revision            0

description         Investigates optimizing \'wc\', the Unix word count program

long_description    \
    There have been multiple articles lately implementing the classic wc \
    program in various programming languages, to \"prove\" their favorite \
    language can be \"just as fast\" as C. This project does something \
    different. Instead of a different language it uses a different algorithm. \
    The new algorithm is significantly faster -- implementing in a slow \
    language like JavaScript is still faster than the original wc program \
    written in C. The algorithm is known as an \"asynchronous state-machine \
    parser\". It\'s a technique for parsing that you don\'t learn in college. \
    It\'s more efficient, but more importantly, it\'s more scalable. That\'s \
    why your browser uses a state-machine to parse GIFs, and most web servers \
    use state-machiens to parse incoming HTTP requests.

categories          textproc
installs_libs       no
license             unknown
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

checksums           rmd160  8bf38fa4b3f2a96f4e1c5191cbbfe2024463d523 \
                    sha256  f7d8cc810c4a4a61ada54996b523fe4877f040d3b33dc77df57cb3687d4ae3b0 \
                    size    31172

# cc1: error: unrecognized command line option "-Wpedantic"
patchfiles-append   patch-pedantic.diff

build.target        ${name}

destroot {
    xinstall -m 0755 ${worksrcpath}/${name} ${destroot}${prefix}/bin/
}
