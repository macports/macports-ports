# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           active_variants 1.1

name                lilypond

categories          textproc
maintainers         {snc @nerdling} openmaintainer
license             GPL-3+

description         An automated engraving system for typesetting sheet music.
long_description    Lilypond is a unix-based automated engraving system that \
                    generates beautiful sheet music from input files. Lilypond \
                    uses its own input format, .ly, which in many ways is \
                    similar to LaTeX. Lilypond can export sheet music to PDF, \
                    EPS, SVG, and PNG formats, and can also create MIDI files.


subport lilypond-devel {
    long_description  The development version of the LilyPond music typesetter.
}


variant mactex description {Use MacTeX or non-MacPorts TeX; see\
    "port notes" for more information} {}
variant docs description {Build documentation files} {}


notes-append "\
    Pre-installation note for 'mactex' variant:

    MacTeX or another external TeXLive distribution gets used for\
    installation instead of MacPorts's texlive packages; the path to\
    the TeX distribution's binary directory (for example\
    '/Library/TeX/texbin') must be added to 'binpath' in\
    'macports.conf' *before* installing this port.

    Note that TeX is not needed after installation."


if {${subport} eq ${name}} {
    version         2.20.0
    revision        4
    conflicts       lilypond-devel
    checksums       rmd160  030ebe2074ad647269c7f8aca40eaee671ddb77f \
                    sha256  595901323fbc88d3039ca4bdbc2d8c5ce46b182edcb3ea9c0940eba849bba661 \
                    size    18100533

    set livecheck_url "source.html"
} else {
    version         2.21.6
    revision        0
    conflicts       lilypond
    checksums       rmd160  d6d072617c98e3bbd722cd6afc3a53e2e845a674 \
                    sha256  24aa358d7da5ea32294a4fc98acd72e78606afdc3bd411a331b2490c15b9acb7 \
                    size    17996701

    set livecheck_url "development.html"
}


set branch          [join [lrange [split ${version} .] 0 1] .]
homepage            https://lilypond.org
master_sites        https://lilypond.org/download/sources/v${branch}/

livecheck.type      regex
livecheck.regex     ${name}-(\\d+(\\.\\d+)+)
livecheck.url       ${homepage}/${livecheck_url}

platforms           darwin
universal_variant   no


depends_build-append \
                    port:autoconf \
                    port:bison \
                    port:flex \
                    port:fontforge \
                    port:gmake \
                    port:p5.28-encode \
                    port:p5.28-pod-escapes \
                    port:p5.28-pod-simple \
                    port:p5.28-podlators \
                    port:p5.28-scalar-list-utils \
                    port:pkgconfig \
                    port:t1utils \
                    port:texinfo \
                    port:urw-core35-fonts

if {${subport} eq ${name}} {
    # Will be gone in next stable release.
    depends_build-append \
                    port:netpbm
}
if {![variant_isset mactex]} {
    depends_build-append \
                    port:texlive-fonts-recommended \
                    port:texlive-metapost \
}
if {[variant_isset docs] && ![variant_isset mactex]} {
    # For +docs, only bibtex and xetex are needed right now.
    depends_build-append \
                    port:texlive-xetex
}


# Either 'pango' or 'pango-devel' will do, thus we depend on its
# pkgconfig file.
depends_lib-append  path:lib/pkgconfig/pango.pc:pango \
                    port:extractpdfmark \
                    port:ghostscript \
                    port:guile18 \
                    port:python38

build.type          gnu
configure.cmd       autoconf -f && ./configure
configure.python    ${prefix}/bin/python3.8

compiler.cxx_standard 2011


set lilypond.texgyredir \
    "${prefix}/share/texmf-texlive/fonts/opentype/public/tex-gyre"
set lilypond.mactex_bin   ""
set lilypond.temp         ""
set lilypond.have_texgyre false

if {[variant_isset mactex]} {
    # Find the binary directory of the external TeX distribution by
    # searching the kpsewhich program in the path.  We assume that all
    # other binaries of the distribution are in this directory, too.
    if {[auto_execok kpsewhich] ne ""} {
        set lilypond.temp {*}[auto_execok kpsewhich]
    }
    set lilypond.mactex_bin \
        [file dirname [file normalize ${lilypond.temp}]]
    if {${lilypond.mactex_bin} eq "."} {
        pre-fetch {
            return -code error "Cannot find MacTeX or external TeXLive\
                installation; aborting.  Have you added the path to\
                your TeX distribution's binary directory to 'binpath'\
                in 'macports.conf'?"
        }
    } elseif {${lilypond.mactex_bin} eq \
                  [file dirname [file normalize "${prefix}/bin/kpsewhich"]]} {
        pre-fetch {
            return -code error "Variant 'mactex' doesn't work with\
                installed MacPorts TeXLive packages.  Either\
                uninstall them or don't use the 'mactex' variant of\
                ${subport}."
        }
    } else {
        set lilypond.have_texgyre \
            [regexp -line {installed: *Yes} \
                 [exec ${lilypond.mactex_bin}/tlmgr info --only-installed tex-gyre]]
    }

    if {${lilypond.have_texgyre}} {
        set lilypond.texgyredir \
            [file dirname \
                [exec ${lilypond.mactex_bin}/kpsewhich texgyreschola-regular.otf]]
    } else {
        pre-fetch {
            return -code error "TeXLive package 'tex-gyre' not\
                installed; aborting.  Please install it, then\
                try again"
        }
    }
}


if {[variant_isset docs]} {
    if {${subport} ne ${name}} {
        # Currently, +docs only builds the info files.  For a complete
        # documentation build a texi2html 1.82 bundle is necessary,
        # which doesn't exist yet in MacPorts.
        configure.args-append   --disable-texi2html
    }
} else {
    configure.args-append   --disable-documentation
}
configure.args-append   --with-urwotf-dir=${prefix}/share/fonts/urw-core35-fonts
configure.args-append   --with-texgyre-dir=${lilypond.texgyredir}

configure.env-append    GUILE=${prefix}/bin/guile18
configure.env-append    GUILE_FLAVOR=guile-1.8

configure.env-append    PYTHON=${configure.python}
build.env-append        PYTHON=${configure.python}
destroot.env-append     PYTHON=${configure.python}

configure.env-append    LTDL_LIBRARY_PATH=${prefix}/lib
build.env-append        LTDL_LIBRARY_PATH=${prefix}/lib
destroot.env-append     LTDL_LIBRARY_PATH=${prefix}/lib


post-patch {
    # Use guile18 header files.
    reinplace -W ${worksrcpath} \
        s|libguile\.h|libguile18.h|g \
        configure.ac \
        lily/include/lily-guile.hh

    # Correct mf2pt1 binary location.
    reinplace -W ${worksrcpath} \
        s|"-mem=mf2pt1"|"-mem=../../mf2pt1"|g \
        scripts/build/mf2pt1.pl

    # Correct python shebang.
    reinplace -W ${worksrcpath} -E \
        s|/usr/bin/(env\\\ )?python|${configure.python}|g \
        python/auxiliar/manuals_definitions.py \
        scripts/auxiliar/check_texi_refs.py \
        scripts/auxiliar/check_translation.py \
        scripts/auxiliar/find-superfluous-includes.py \
        scripts/auxiliar/fixcc.py \
        scripts/auxiliar/makelsr.py \
        scripts/auxiliar/musicxml_generate_intervals.py \
        scripts/auxiliar/musicxml_generate_keys.py \
        scripts/auxiliar/musicxml_generate_timesignatures.py \
        scripts/auxiliar/node-menuify.py \
        scripts/auxiliar/prepare-web-media.py \
        scripts/auxiliar/readlink.py \
        scripts/auxiliar/skyline_viewer.py \
        scripts/auxiliar/strip-whitespace.py \
        scripts/auxiliar/tely-gettext.py \
        scripts/auxiliar/texi-langutils.py \
        scripts/auxiliar/translations-status.py \
        scripts/auxiliar/update-snippets.py

    # ImageMagick and xelatex (or pdflatex) are only needed for
    # complete documentation builds, which +docs doesn't do currently.
    # Ditto for Cyrillic stuff (i.e., testing for 'fikparm.mf').
    if {[variant_isset docs]} {
        reinplace -W ${worksrcpath} \
            {s|\(IMAGEMAGICK.*\), $DOCUMENTATION_REQUIRED|\1, OPTIONAL|g} \
            configure.ac
        reinplace -W ${worksrcpath} \
            {s|\(PDFLATEX.*\), $DOCUMENTATION_REQUIRED|\1, OPTIONAL|g} \
            configure.ac
        reinplace -W ${worksrcpath} \
            {s|if test "$TEX_FIKPARM" = ""|if false|g} \
            configure.ac
    }

    if {${subport} eq ${name}} {
        # Backport upstream commit 250d841a51eb to make dependency on
        # dblatex optional.
        reinplace -W ${worksrcpath} \
            {s|\(DBLATEX.*\), $DOCUMENTATION_REQUIRED,|\1, OPTIONAL,|g} \
            configure.ac

        # Currently, +docs only builds the info files.  For a complete
        # documentation build a texi2html 1.82 bundle is necessary, which
        # doesn't exist yet in MacPorts.
        if {[variant_isset docs]} {
            reinplace -W ${worksrcpath} \
                {s|\(TEXI2HTML.*\), $DOCUMENTATION_REQUIRED,|\1, OPTIONAL,|g} \
                configure.ac
        }

        reinplace -W ${worksrcpath} -E \
            s|/usr/bin/(env\\\ )?python|${configure.python}|g \
            scripts/auxiliar/coverage.py \
            scripts/auxiliar/texi-skeleton-update.py
    }
}

post-destroot {
    move \
        ${destroot}${prefix}/bin/lilypond \
        ${destroot}${prefix}/libexec/lilypond-bin
    xinstall -m 755 \
        ${filespath}/lilypond.in \
        ${destroot}${prefix}/bin/lilypond
    reinplace \
        "s|@@PREFIX@@|${prefix}|g" \
        ${destroot}${prefix}/bin/lilypond
}
