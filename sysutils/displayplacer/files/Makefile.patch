Use $CC instead of gcc. There isn't any gcc on macOS; it's a link to
clang. The user may wish to use a different compiler specified in $CC.
If not, make defaults to cc, which is also a link to clang.

Use $CFLAGS, $CPPFLAGS, and $LDFLAGS that the user may have specified.

Add -I. first to ensure the local directory is searched for include
files first, before any -I paths that might be specified in $CFLAGS or
$CPPFLAGS.

Use $@ for the target and $< for the first prerequisite rather than
repeating that information in the rule.

Add all, install, and clean targets.

https://github.com/jakehilborn/displayplacer/pull/84
--- Makefile.orig	2019-05-17 17:34:25.000000000 -0500
+++ Makefile	2022-05-23 23:23:44.000000000 -0500
@@ -1,2 +1,25 @@
+prefix ?= /usr/local
+exec_prefix ?= $(prefix)
+bindir ?= $(exec_prefix)/bin
+datarootdir ?= $(prefix)/share
+docdir ?= $(datarootdir)/doc/displayplacer
+
+INSTALL ?= install
+INSTALL_PROGRAM ?= $(INSTALL)
+INSTALL_DATA ?= $(INSTALL) -m 644
+
+.PHONY: all
+all: displayplacer
+
 displayplacer: displayplacer.c header.h
-	gcc -o displayplacer displayplacer.c -framework IOKit -framework ApplicationServices -Wno-deprecated-declarations
+	$(CC) -I. $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -o $@ $< -framework IOKit -framework ApplicationServices -Wno-deprecated-declarations
+
+.PHONY: install
+install: displayplacer
+	mkdir -p $(DESTDIR)$(bindir) $(DESTDIR)$(docdir)
+	$(INSTALL_PROGRAM) $< $(DESTDIR)$(bindir)
+	$(INSTALL_DATA) LICENSE $(DESTDIR)$(docdir)
+
+.PHONY: clean
+clean:
+	rm -f displayplacer
