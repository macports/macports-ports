--- a/watchman/InMemoryView.cpp.orig	2023-11-10 06:37:09
+++ b/watchman/InMemoryView.cpp	2024-06-08 21:30:22
@@ -459,7 +459,7 @@
     : QueryableView{root_path, /*requiresCrawl=*/true},
       fileSystem_{fileSystem},
       config_(std::move(config)),
-      view_(folly::in_place, root_path),
+      view_(std::in_place, root_path),
       rootNumber_(next_root_number++),
       rootPath_(root_path),
       watcher_(std::move(watcher)),

--- a/watchman/PendingCollection.cpp.orig	2023-11-10 06:37:09
+++ b/watchman/PendingCollection.cpp	2024-06-08 21:30:18
@@ -318,7 +318,7 @@
 
 PendingCollection::PendingCollection()
     : folly::Synchronized<PendingCollectionBase, std::mutex>{
-          folly::in_place,
+          std::in_place,
           cond_} {}
 
 PendingCollection::LockedPtr PendingCollection::lockAndWait(

--- a/watchman/PerfSample.cpp.orig	2023-11-10 06:37:09
+++ b/watchman/PerfSample.cpp	2024-06-08 21:30:12
@@ -36,7 +36,7 @@
   void loop() noexcept;
 
  public:
-  explicit PerfLogThread(bool start) : state_(folly::in_place, start) {
+  explicit PerfLogThread(bool start) : state_(std::in_place, start) {
     if (start) {
       thread_ = std::thread([this] { loop(); });
     }

--- a/watchman/test/lib/FakeFileSystem.cpp.orig	2023-11-10 06:37:09
+++ b/watchman/test/lib/FakeFileSystem.cpp	2024-06-08 21:30:06
@@ -160,7 +160,7 @@
 FakeFileSystem::Flags::Flags() = default;
 
 FakeFileSystem::FakeFileSystem(Flags flags)
-    : flags_{flags}, root_{folly::in_place, FakeInode{fakeDir()}} {}
+    : flags_{flags}, root_{std::in_place, FakeInode{fakeDir()}} {}
 
 std::unique_ptr<DirHandle> FakeFileSystem::openDir(
     const char* path,
