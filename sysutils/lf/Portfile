# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/gokcehan/lf 32 r
revision            0
categories          sysutils
maintainers         {judaew @judaew} openmaintainer
license             MIT

description         Terminal file manager
long_description    ${name} (as in \"list files\") is a terminal file manager \
                    written in Go. It is heavily inspired by ranger with some \
                    missing and extra features. Some of the missing features \
                    are deliberately omitted since they are better handled by \
                    external tools.

checksums           ${distname}${extract.suffix} \
                        rmd160  eb1c8d8ef935581d918630bbcee6f9f95b884cb8 \
                        sha256  46efb7c58257820a35d10780a8253ca4b55de345c20eb454a715f354a6e0d308 \
                        size    141938

build.pre_args      -ldflags \"-s -w -X main.gVersion=${version}\"

go.vendors          golang.org/x/text \
                        lock    v0.14.0 \
                        rmd160  e26a72d542901d19f6dde4e07746f72206fb8701 \
                        sha256  ef54709caaafdd8b27ce3d5f7c53408f11bc5fd1688c1c4f328de8ed268b3188 \
                        size    8972503 \
                    golang.org/x/term \
                        lock    v0.18.0 \
                        rmd160  c183fe023094cf41b6a66e88cd765d97a35f439c \
                        sha256  3441bd395a6788d71ab9d7fb4e16df2975c41f252cc21b5c8706feb92b9df47a \
                        size    14742 \
                    golang.org/x/sys \
                        lock    v0.18.0 \
                        rmd160  f2df5cddcd4f72d2eb7f75309ed3c1c821e05d66 \
                        sha256  d8d4c0874ddc66e9fb0c1264b4eeb8b8625153740b751eae59220eb5ff17eacb \
                        size    1448593 \
                    github.com/rivo/uniseg \
                        lock    v0.4.3 \
                        rmd160  8549c36ce2cf42213bec9682642a6711ef4041f3 \
                        sha256  7578a5eac90d671db12e8ffd6c808ec285af8751bdeaa6a59bddd4341698758a \
                        size    452761 \
                    github.com/mattn/go-runewidth \
                        lock    v0.0.15 \
                        rmd160  702d468077550681ac11c3c2f3f5c9f98a868798 \
                        sha256  a6b5f47ffe7329895a605c356ff806dfd50b536bbc87af77773e55ad6e52d2db \
                        size    18287 \
                    github.com/lucasb-eyer/go-colorful \
                        lock    v1.2.0 \
                        rmd160  a4183d0625e6c94474942cdc544c1061d35c4e34 \
                        sha256  fbad1aade4444bf51409f5b6a008cc14c7a7cdd1af856841fc1170605fae3914 \
                        size    970841 \
                    github.com/gdamore/tcell \
                        lock    v2.7.4 \
                        rmd160  9c47c3776ddce4497bdf09b2045541aa28eacb2b \
                        sha256  d0278f45afc50b1067a8ea8f581289514d73275f11e6c866ca6f7cc34fa18f23 \
                        size    179213 \
                    github.com/gdamore/encoding \
                        lock    v1.0.0 \
                        rmd160  3ed8916f763a5b51db1bcc8bd3ad06cf3d12ec07 \
                        sha256  4f470c7308790bea8a526ea26cecbaa22345aad8dc566821cda6175b3d241ee1 \
                        size    10900 \
                    github.com/djherbis/times \
                        lock    v1.6.0 \
                        rmd160  74bbca79275e2c9a5c240f77e906b640b69543a7 \
                        sha256  2b1e000f0c9408eb4d7735547a95e65860d6c2d7411ef70558db6b2b5d526f1f \
                        size    8891

patchfiles          patch-config-file-in-prefix.diff

post-patch {
    reinplace "s|@@PREFIX@@|${prefix}|g" ${worksrcpath}/os.go
}

destroot {
    xinstall -m 0755 ${worksrcpath}/${name} ${destroot}${prefix}/bin/

    # Install shell completion files
    set bash_complete ${destroot}${prefix}/share/bash-completion/completions
    xinstall -d ${bash_complete}
    xinstall -m 0644 ${worksrcpath}/etc/${name}.bash \
        ${bash_complete}/${name}

    set zsh_complete ${destroot}${prefix}/share/zsh/site-functions
    xinstall -d ${zsh_complete}
    xinstall -m 0644 ${worksrcpath}/etc/${name}.zsh \
        ${zsh_complete}/_${name}

    set fish_complete ${destroot}${prefix}/share/fish/vendor_completions.d
    xinstall -d ${fish_complete}
    xinstall -m 0644 ${worksrcpath}/etc/${name}.fish \
        ${fish_complete}/${name}.fish

    set tcsh_complete ${destroot}${prefix}/etc/profile.d
    xinstall -d ${tcsh_complete}
    xinstall -m 0644 ${worksrcpath}/etc/${name}.csh \
        ${tcsh_complete}/${name}.csh

    # Install vim plugin, man-page, lfcd shell scripts and docs
    set vim_plugin ${destroot}${prefix}/share/vim/vimfiles/ftdetect
    xinstall -d ${vim_plugin}
    xinstall -m 0644 ${worksrcpath}/etc/${name}.vim ${vim_plugin}/

    xinstall -m 0644 ${worksrcpath}/${name}.1 \
        ${destroot}${prefix}/share/man/man1

    xinstall -d ${destroot}${prefix}/share/${name}
    xinstall -m 0644 -W ${worksrcpath}/etc \
        lfcd.sh lfcd.csh lfcd.fish \
        ${destroot}${prefix}/share/${name}
    xinstall -m 0644 -W ${worksrcpath} LICENSE README.md \
        ${destroot}${prefix}/share/${name}

    xinstall -d ${destroot}${prefix}/etc/${name}
    xinstall -m 0644 -W ${worksrcpath}/etc \
        colors.example icons.example lfrc.example \
        ${destroot}${prefix}/etc/${name}
}

notes "
A sample configuration file can be found at the following path:
    ${prefix}/etc/${name}/lfrc.example

The Vim plugin is already included within the port and installed in Vim's
global plugin directory. If you are using Neovim, add the following line to
your init.vim:
    set rtp+=${prefix}/share/vim/vimfiles/ftdetect

lfcd it's a shell script for change working dir in your shell to the last dir
in lf on exit (adapted from ranger). If you want to use this script, you need
to source it in a similar way as with sourcing completion for shell above. You
can find the script on the following path:
    ${prefix}/share/${name}
"
