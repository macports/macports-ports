# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                pyinfra
version             2.9.2
revision            0

homepage            https://pyinfra.com

description         pyinfra automates infrastructure super fast at massive \
                    scale.

long_description    {*}${description}  It can be used for ad-hoc command \
                    execution, service deployment, configuration management \
                    and more. Core design features include super fast \
                    execution over thousands of hosts with predictable \
                    performance, agentless execution against \
                    SSH/Docker/subprocess/winrm hosts, extendable with any \
                    Python package as configured & written in standard \
                    Python, and integrated with Docker, Vagrant/Mech & \
                    Ansible out of the box.

categories          sysutils python
license             MIT
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer
supported_archs     noarch
platforms           {darwin any}

checksums           rmd160  50e82c77281fc0bab000872defd03d22e3ceb11a \
                    sha256  9539486457175eff8e6da0ecd94445c374e032ed4ce117610f3e05d48e8e37c9 \
                    size    204503

python.default_version  312

depends_run-append  port:py${python.version}-click          \
                    port:py${python.version}-configparser   \
                    port:py${python.version}-dateutil       \
                    port:py${python.version}-distro         \
                    port:py${python.version}-gevent         \
                    port:py${python.version}-jinja2         \
                    port:py${python.version}-paramiko       \
                    port:py${python.version}-pywinrm        \
                    port:py${python.version}-yaml

test.run            yes
python.test_framework

test.cmd            ${python.bin}
test.pre_args       -m ${name}
test.args           --help
