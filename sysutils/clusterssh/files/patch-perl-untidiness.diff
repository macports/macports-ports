--- lib/App/ClusterSSH.pm	2018-03-14 12:40:56.000000000 -0700
+++ lib/App/ClusterSSH.pm.tdy	2019-03-10 16:22:56.000000000 -0700
@@ -1667,7 +1667,7 @@
         -class          => 'cssh',
     );
 
-    my @tags = $self->cluster->list_tags();
+    my @tags          = $self->cluster->list_tags();
     my @external_tags = map {"$_ *"} $self->cluster->list_external_clusters();
     push( @tags, @external_tags );
 
@@ -2106,7 +2106,7 @@
         eval { require XML::Simple; };
         die 'Cannot load XML::Simple - has it been installed?  ', $@ if ($@);
 
-        my $xml = XML::Simple->new( ForceArray => 1, );
+        my $xml      = XML::Simple->new( ForceArray => 1, );
         my $menu_xml = $xml->XMLin( $self->config->{send_menu_xml_file} );
 
         $self->debug( 3, 'xml send menu: ', $/, $xml->XMLout($menu_xml) );
--- t/02base.t	2018-03-14 12:40:56.000000000 -0700
+++ t/02base.t.tdy	2019-03-10 16:22:56.000000000 -0700
@@ -21,10 +21,10 @@
 trap {
     $base->stdout_output('testing');
 };
-is( $trap->leaveby,           'return', 'returned ok' );
-is( $trap->die,               undef,    'returned ok' );
-is( $trap->stderr,            '',       'Expecting no STDERR' );
-is( $trap->stdout =~ tr/\n//, 1,        'got correct number of print lines' );
+is( $trap->leaveby, 'return', 'returned ok' );
+is( $trap->die,     undef,    'returned ok' );
+is( $trap->stderr,  '',       'Expecting no STDERR' );
+is( $trap->stdout =~ tr/\n//, 1, 'got correct number of print lines' );
 like( $trap->stdout, qr/\Atesting\n\Z/xsm,
     'checking for expected print output' );
 
@@ -68,10 +68,10 @@
     $base = App::ClusterSSH::Base->new( debug => 6, );
 };
 isa_ok( $base, 'App::ClusterSSH::Base' );
-is( $trap->leaveby,           'return', 'returned ok' );
-is( $trap->die,               undef,    'returned ok' );
-is( $trap->stderr,            '',       'Expecting no STDERR' );
-is( $trap->stdout =~ tr/\n//, 1,        'got new() debug output lines' );
+is( $trap->leaveby, 'return', 'returned ok' );
+is( $trap->die,     undef,    'returned ok' );
+is( $trap->stderr,  '',       'Expecting no STDERR' );
+is( $trap->stdout =~ tr/\n//, 1, 'got new() debug output lines' );
 like(
     $trap->stdout,
     qr/^Setting\slanguage\sto\s"en"/xsm,
@@ -83,10 +83,10 @@
     $base = App::ClusterSSH::Base->new( debug => 6, lang => 'en' );
 };
 isa_ok( $base, 'App::ClusterSSH::Base' );
-is( $trap->leaveby,           'return', 'returned ok' );
-is( $trap->die,               undef,    'returned ok' );
-is( $trap->stderr,            '',       'Expecting no STDERR' );
-is( $trap->stdout =~ tr/\n//, 1,        'got new() debug output lines' );
+is( $trap->leaveby, 'return', 'returned ok' );
+is( $trap->die,     undef,    'returned ok' );
+is( $trap->stderr,  '',       'Expecting no STDERR' );
+is( $trap->stdout =~ tr/\n//, 1, 'got new() debug output lines' );
 like(
     $trap->stdout,
     qr/^Setting\slanguage\sto\s"en"/xsm,
@@ -98,10 +98,10 @@
     $base = App::ClusterSSH::Base->new( debug => 6, lang => 'rubbish' );
 };
 isa_ok( $base, 'App::ClusterSSH::Base' );
-is( $trap->leaveby,           'return', 'returned ok' );
-is( $trap->die,               undef,    'returned ok' );
-is( $trap->stderr,            '',       'Expecting no STDERR' );
-is( $trap->stdout =~ tr/\n//, 1,        'got new() debug output lines' );
+is( $trap->leaveby, 'return', 'returned ok' );
+is( $trap->die,     undef,    'returned ok' );
+is( $trap->stderr,  '',       'Expecting no STDERR' );
+is( $trap->stdout =~ tr/\n//, 1, 'got new() debug output lines' );
 like(
     $trap->stdout,
     qr/^Setting\slanguage\sto\s"rubbish"/xsm,
@@ -113,10 +113,10 @@
     $base = App::ClusterSSH::Base->new( debug => 7, );
 };
 isa_ok( $base, 'App::ClusterSSH::Base' );
-is( $trap->leaveby,           'return', 'returned ok' );
-is( $trap->die,               undef,    'returned ok' );
-is( $trap->stderr,            '',       'Expecting no STDERR' );
-is( $trap->stdout =~ tr/\n//, 3,        'got new() debug output lines' );
+is( $trap->leaveby, 'return', 'returned ok' );
+is( $trap->die,     undef,    'returned ok' );
+is( $trap->stderr,  '',       'Expecting no STDERR' );
+is( $trap->stdout =~ tr/\n//, 3, 'got new() debug output lines' );
 like(
     $trap->stdout,
     qr/^Setting\slanguage\sto\s"en".Arguments\sto\sApp::ClusterSSH::Base->new.*debug\s=>\s7,$/xsm,
--- t/05getopts.t	2018-03-14 12:40:56.000000000 -0700
+++ t/05getopts.t.tdy	2019-03-10 16:22:56.000000000 -0700
@@ -287,7 +287,7 @@
 is( $trap->die,     undef,    'Expecting no die message' );
 
 my $pod;
-@ARGV = ('--generate-pod');
+@ARGV    = ('--generate-pod');
 $getopts = App::ClusterSSH::Getopt->new( parent => $mock_object );
 $getopts->add_option(
     spec    => 'long_opt|l=s',
@@ -309,7 +309,7 @@
 is( $trap->stderr, '',    'Expecting no STDERR' );
 is( $trap->die,    undef, 'Expecting no die message' );
 
-@ARGV = ('--help');
+@ARGV    = ('--help');
 $getopts = App::ClusterSSH::Getopt->new( parent => $mock_object );
 trap {
     $getopts->getopts;
@@ -320,7 +320,7 @@
 is( $trap->stderr, '',    'Expecting no STDERR' );
 is( $trap->die,    undef, 'Expecting no die message' );
 
-@ARGV = ('-?');
+@ARGV    = ('-?');
 $getopts = App::ClusterSSH::Getopt->new( parent => $mock_object );
 trap {
     $getopts->getopts;
@@ -331,7 +331,7 @@
 is( $trap->stderr, '',    'Expecting no STDERR' );
 is( $trap->die,    undef, 'Expecting no die message' );
 
-@ARGV = ('-v');
+@ARGV    = ('-v');
 $getopts = App::ClusterSSH::Getopt->new( parent => $mock_object );
 trap {
     $getopts->getopts;
@@ -342,7 +342,7 @@
 is( $trap->stderr, '',    'Expecting no STDERR' );
 is( $trap->die,    undef, 'Expecting no die message' );
 
-@ARGV = ('-@');
+@ARGV    = ('-@');
 $getopts = App::ClusterSSH::Getopt->new( parent => $mock_object );
 trap {
     $getopts->getopts;
