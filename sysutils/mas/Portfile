# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           xcode 1.0
PortGroup           github 1.0

github.setup        mas-cli mas 1.8.0 v
revision            0
categories          sysutils
description         Mac App Store command line interface
long_description    A simple command line interface for the Mac App Store. \
                    Designed for scripting and automation.
license             MIT

maintainers         {kimuraw @kimuraw} openmaintainer
platforms           darwin

depends_build       port:carthage
checksums           sha256  8efc86ed20267c700180c019b3a74215746f1ddaa526c862602644ad0d29a20d \
                    rmd160  0d5b3b3952d85211d157894952fd8161887edf80 \
                    size    3332964

# requirements:
# - mas: Xcode 11.4 or later
# - carthage: Xcode 10 or later (0.34.x)
set xcodeversion_min_required 11.4
pre-fetch {
    if {[vercmp ${xcodeversion} ${xcodeversion_min_required}] < 0} {
        ui_error "${name} @${version} requires Xcode ${xcodeversion_min_required} or later but you have Xcode ${xcodeversion}."
        ui_error "See https://guide.macports.org/chunked/installing.xcode.html for download links."
        return -code error "incompatible Xcode version"
    }
}

xcode.project       mas-cli.xcodeproj
xcode.configuration Release
xcode.scheme        "mas-cli Release"
xcode.destroot.type none
# CODE_SIGN_IDENTITY: disable codesign
# LD_RUNPATH_SEARCH_PATHS: override "/usr/local/Frameworks ..." in xcodeproj
xcode.build.settings    CODE_SIGN_IDENTITY= \
                        DSTROOT=${worksrcpath}/dst \
                        LD_RUNPATH_SEARCH_PATHS='@executable_path/../Library/Frameworks @executable_path/../Library/Frameworks/MasKit.framework/Versions/A/Frameworks/'
# fix "IDELogStore: Failed to open log store".
# xcodebuild's `-derivedDataPath` does not solve this error.
build.pre_args          -IDECustomDerivedDataLocation=${worksrcpath}/DerivedData

pre-build {
    system -W ${worksrcpath} "${prefix}/bin/carthage build --platform macOS --cache-builds --configuration Release --derived-data ${worksrcpath}/DerivedData"
}

destroot {
    # bin/mas
    xinstall -W ${worksrcpath} dst/bin/mas ${destroot}${prefix}/bin

    # Library/Frameworks/MasKit.framework
    copy ${worksrcpath}/build/Release/MasKit.framework ${destroot}${frameworks_dir}

    # other resources
    xinstall -d ${destroot}${prefix}/share/doc/${name}
    xinstall -W ${worksrcpath} README.md LICENSE \
        CHANGELOG.md CODE_OF_CONDUCT.md CONTRIBUTING.md \
        ${destroot}${prefix}/share/doc/${name}
}
