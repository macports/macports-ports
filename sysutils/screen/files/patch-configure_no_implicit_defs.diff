--- configure.ac.orig
+++ configure.ac
@@ -284,10 +284,14 @@
 dnl
 
 AC_CHECKING(select)
-AC_TRY_LINK(,[select(0, 0, 0, 0, 0);],, 
+AC_TRY_LINK([
+#include <sys/select.h>
+],[select(0, 0, 0, 0, 0);],,
 LIBS="$LIBS -lnet -lnsl"
 AC_CHECKING(select with $LIBS)
-AC_TRY_LINK(,[select(0, 0, 0, 0, 0);],, 
+AC_TRY_LINK([
+#include <sys/select.h>
+],[select(0, 0, 0, 0, 0);],,
 AC_MSG_ERROR(!!! no select - no screen))
 )
 dnl
@@ -303,6 +307,7 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <stdlib.h>
 
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -374,6 +379,7 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <stdlib.h>
 
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -429,6 +435,9 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <stdlib.h>
+#include <string.h>
+#include <signal.h>
 
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -486,6 +495,8 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <stdlib.h>
+#include <string.h>
 
 #include <sys/stat.h>
 #include <sys/socket.h>
@@ -532,6 +543,9 @@
 #include <sys/time.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <stdlib.h>
+#include <string.h>
+#include <signal.h>
 
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -624,11 +638,17 @@
 dnl    ****  termcap or terminfo  ****
 dnl
 AC_CHECKING(for tgetent)
-AC_TRY_LINK(,tgetent((char *)0, (char *)0);,,
+AC_TRY_LINK([
+#include <termcap.h>
+],tgetent((char *)0, (char *)0);,,
 olibs="$LIBS"
 LIBS="-lcurses $olibs"
 AC_CHECKING(libcurses)
-AC_TRY_LINK(,[
+AC_TRY_LINK([
+#include <termcap.h>
+#include <stdlib.h>
+#include <string.h>
+],[
 #ifdef __hpux
 __sorry_hpux_libcurses_is_totally_broken_in_10_10();
 #else
@@ -637,25 +657,52 @@
 ],,
 LIBS="-ltermcap $olibs"
 AC_CHECKING(libtermcap)
-AC_TRY_LINK(,tgetent((char *)0, (char *)0);,,
+AC_TRY_LINK([
+#include <termcap.h>
+#include <stdlib.h>
+#include <string.h>
+],tgetent((char *)0, (char *)0);,,
 LIBS="-ltermlib $olibs"
 AC_CHECKING(libtermlib)
-AC_TRY_LINK(,tgetent((char *)0, (char *)0);,,
+AC_TRY_LINK([
+#include <termcap.h>
+#include <stdlib.h>
+#include <string.h>
+],tgetent((char *)0, (char *)0);,,
 LIBS="-lncursesw $olibs"
 AC_CHECKING(libncursesw)
-AC_TRY_LINK(,tgetent((char *)0, (char *)0);,,
+AC_TRY_LINK([
+#include <termcap.h>
+#include <stdlib.h>
+#include <string.h>
+],tgetent((char *)0, (char *)0);,,
 LIBS="-ltinfow $olibs"
 AC_CHECKING(libtinfow)
-AC_TRY_LINK(,tgetent((char *)0, (char *)0);,,
+AC_TRY_LINK([
+#include <termcap.h>
+#include <stdlib.h>
+#include <string.h>
+],tgetent((char *)0, (char *)0);,,
 LIBS="-lncurses $olibs"
 AC_CHECKING(libncurses)
-AC_TRY_LINK(,tgetent((char *)0, (char *)0);,,
+AC_TRY_LINK([
+#include <termcap.h>
+#include <stdlib.h>
+#include <string.h>
+],tgetent((char *)0, (char *)0);,,
 LIBS="-ltinfo $olibs"
 AC_CHECKING(libtinfo)
-AC_TRY_LINK(,tgetent((char *)0, (char *)0);,,
+AC_TRY_LINK([
+#include <termcap.h>
+#include <stdlib.h>
+#include <string.h>
+],tgetent((char *)0, (char *)0);,,
 AC_MSG_ERROR(!!! no tgetent - no screen)))))))))
 
 AC_TRY_RUN([
+#include <termcap.h>
+#include <stdlib.h>
+#include <string.h>
 main()
 {
  exit(strcmp(tgoto("%p1%d", 0, 1), "1") ? 0 : 1);
@@ -735,6 +782,8 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 main()
 {
   struct stat sb;
@@ -1156,6 +1205,10 @@
 
 AC_CHECKING(whether memcpy/memmove/bcopy handles overlapping arguments)
 AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
+#include <strings.h>
+#include <stdlib.h>
 main() {
   char buf[10];
   strcpy(buf, "abcdefghi");
@@ -1170,6 +1223,9 @@
 }], AC_DEFINE(USEBCOPY),,:)
 
 AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
+#include <stdlib.h>
 #define bcopy(s,d,l) memmove(d,s,l)
 main() {
   char buf[10];
@@ -1187,6 +1243,9 @@
 
 
 AC_TRY_RUN([
+#include <stdlib.h>
+#include <string.h>
+#include <stdlib.h>
 #define bcopy(s,d,l) memcpy(d,s,l)
 main() {
   char buf[10];
@@ -1204,7 +1263,10 @@
 AC_SYS_LONG_FILE_NAMES
 
 AC_MSG_CHECKING(for vsprintf)
-AC_TRY_LINK([#include <stdarg.h>],[va_list valist; vsprintf(0,0,valist);], AC_MSG_RESULT(yes);AC_DEFINE(USEVARARGS), AC_MSG_RESULT(no))
+AC_TRY_LINK([
+#include <stdarg.h>
+#include <stdio.h>
+],[va_list valist; vsprintf(0,0,valist);], AC_MSG_RESULT(yes);AC_DEFINE(USEVARARGS), AC_MSG_RESULT(no))
 
 AC_HEADER_DIRENT
 
