Use ext2_loff_t instead of loff_t which is not portable.

https://sourceforge.net/p/e2fsprogs/code/ci/1df6a455505b483bd493acb97be9c4c719064700/
--- lib/ext2fs/imager.c.orig
+++ lib/ext2fs/imager.c
@@ -67,7 +67,7 @@
 	blk64_t		blk;
 	ssize_t		actual;
 	errcode_t	retval;
-	loff_t		r;
+	ext2_loff_t	r;
 
 	buf = malloc(fs->blocksize * BUF_BLOCKS);
 	if (!buf)
--- misc/e2fuzz.c.orig
+++ misc/e2fuzz.c
@@ -33,9 +33,10 @@
 static double user_corrupt_pct = 0.0;
 
 #if !defined HAVE_PWRITE64 && !defined HAVE_PWRITE
-static ssize_t my_pwrite(int fd, const void *buf, size_t count, off_t offset)
-{
-	if (lseek(fd, offset, SEEK_SET) < 0)
+static ssize_t my_pwrite(int fd, const void *buf, size_t count,
+			 ext2_loff_t offset)
+{
+	if (ext2fs_llseek(fd, offset, SEEK_SET) < 0)
 		return 0;
 
 	return write(fd, buf, count);
@@ -82,7 +83,7 @@
 }
 
 static errcode_t find_metadata_blocks(ext2_filsys fs, ext2fs_block_bitmap bmap,
-				      off_t *corrupt_bytes)
+				      ext2_loff_t *corrupt_bytes)
 {
 	dgrp_t i;
 	blk64_t b, c;
@@ -181,9 +182,8 @@
 	int flags, fd;
 	ext2_filsys fs = NULL;
 	ext2fs_block_bitmap corrupt_map;
-	loff_t hsize, count, off, offset, corrupt_bytes;
+	ext2_loff_t hsize, count, off, offset, corrupt_bytes, i;
 	unsigned char c;
-	loff_t i;
 
 	/* If mounted rw, force dryrun mode */
 	ret = ext2fs_check_if_mounted(fsname, &flags);
