From c45838ef0fe86afc70a787af52fdac67332e5136 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Sun, 4 Aug 2024 02:32:59 +0800
Subject: [PATCH] Revert refresh rate detection commit for macOS

diff --git src/detection/monitor/monitor.h src/detection/monitor/monitor.h
index 4066f117..a6150e5d 100644
--- src/detection/monitor/monitor.h
+++ src/detection/monitor/monitor.h
@@ -5,7 +5,6 @@ typedef struct FFMonitorResult
     FFstrbuf name;
     uint32_t width; // native / maximum resolution, in pixels
     uint32_t height; // native / maximum resolution, in pixels
-    double refreshRate;// maximum refresh rate in native resolution, in Hz
     uint32_t physicalWidth; // in mm
     uint32_t physicalHeight; // in mm
     bool hdrCompatible;
diff --git src/detection/monitor/monitor_apple.m src/detection/monitor/monitor_apple.m
index c0169c29..c6219fe5 100644
--- src/detection/monitor/monitor_apple.m
+++ src/detection/monitor/monitor_apple.m
@@ -108,19 +108,6 @@ const char* ffDetectMonitor(FFlist* results)
             detectHdrSupportWithNSScreen(display);
         monitor->serial = CGDisplaySerialNumber((CGDirectDisplayID) display->id);
 
-        FF_CFTYPE_AUTO_RELEASE CFArrayRef modes = CGDisplayCopyAllDisplayModes((CGDirectDisplayID) display->id, NULL);
-        double maxRefreshRate = 0;
-        for (uint32_t j = 0; j < CFArrayGetCount(modes); ++j)
-        {
-            CGDisplayModeRef mode = (CGDisplayModeRef) CFArrayGetValueAtIndex(modes, j);
-            if (CGDisplayModeGetWidth(mode) == (uint32_t) width && CGDisplayModeGetHeight(mode) == (uint32_t) height)
-            {
-                double refreshRate = CGDisplayModeGetRefreshRate(mode);
-                if (refreshRate > maxRefreshRate) maxRefreshRate = refreshRate;
-            }
-        }
-        monitor->refreshRate = maxRefreshRate;
-
         int64_t year, week;
         if (ffCfDictGetInt64(displayInfo, CFSTR("DisplayYearManufacture"), &year) == NULL)
             monitor->manufactureYear = (uint16_t) year;
diff --git src/modules/monitor/monitor.c src/modules/monitor/monitor.c
index d83e3431..27d31cca 100644
--- src/modules/monitor/monitor.c
+++ src/modules/monitor/monitor.c
@@ -6,7 +6,7 @@
 
 #include <math.h>
 
-#define FF_MONITOR_NUM_FORMAT_ARGS 11
+#define FF_MONITOR_NUM_FORMAT_ARGS 10
 
 void ffPrintMonitor(FFMonitorOptions* options)
 {
@@ -53,8 +53,6 @@ void ffPrintMonitor(FFMonitorOptions* options)
             ffPrintLogoAndKey(key.chars, 0, &options->moduleArgs, FF_PRINT_TYPE_NO_CUSTOM_KEY);
 
             printf("%ux%u px", display->width, display->height);
-            if (display->refreshRate > 0)
-                printf(" @ %.3f Hz", display->refreshRate);
             if (inch > 0)
                 printf(" - %ux%u mm (%.2f inches, %.2f ppi)\n", display->physicalWidth, display->physicalHeight, inch, ppi);
             else
@@ -82,7 +80,6 @@ void ffPrintMonitor(FFMonitorOptions* options)
                 {FF_FORMAT_ARG_TYPE_UINT16, &display->manufactureYear, "manufacture-year"},
                 {FF_FORMAT_ARG_TYPE_UINT16, &display->manufactureWeek, "manufacture-week"},
                 {FF_FORMAT_ARG_TYPE_STRING, buf, "serial"},
-                {FF_FORMAT_ARG_TYPE_DOUBLE, buf, "refresh-rate"},
             }));
         }
 
@@ -157,8 +154,6 @@ void ffGenerateMonitorJsonResult(FF_MAYBE_UNUSED FFMonitorOptions* options, yyjs
             yyjson_mut_obj_add_uint(doc, physical, "height", item->physicalHeight);
             yyjson_mut_obj_add_uint(doc, physical, "width", item->physicalWidth);
 
-            yyjson_mut_obj_add_real(doc, obj, "refreshRate", item->refreshRate);
-
             if (item->manufactureYear)
             {
                 yyjson_mut_val* manufactureDate = yyjson_mut_obj_add_obj(doc, obj, "manufactureDate");
@@ -196,7 +191,6 @@ void ffPrintMonitorHelpFormat(void)
         "Year of manufacturing - manufacture-year",
         "Nth week of manufacturing in the year - manufacture-week",
         "Serial number - serial",
-        "Maximum refresh rate in Hz - refresh-rate",
     }));
 }
 
