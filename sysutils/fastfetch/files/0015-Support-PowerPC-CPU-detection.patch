From b00b8558a516d3a4eaf1cf07fccbc3e05f8e86e9 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Sun, 4 Aug 2024 21:05:10 +0800
Subject: [PATCH 15/19] Support PowerPC CPU detection

---
 src/detection/cpu/cpu.c       |  3 +++
 src/detection/cpu/cpu_apple.c | 11 +++++++++++
 2 files changed, 14 insertions(+)

diff --git src/detection/cpu/cpu.c src/detection/cpu/cpu.c
index 68d23ac8..b491d3c7 100644
--- src/detection/cpu/cpu.c
+++ src/detection/cpu/cpu.c
@@ -24,6 +24,9 @@ const char* ffCPUAppleCodeToName(uint32_t code)
     // https://github.com/AsahiLinux/docs/wiki/Codenames
     switch (code)
     {
+        case 10: return "PowerPC 7400";
+        case 11: return "PowerPC 7450";
+        case 100: return "PowerPC 970";
         case 8103: return "Apple M1";
         case 6000: return "Apple M1 Pro";
         case 6001: return "Apple M1 Max";
diff --git src/detection/cpu/cpu_apple.c src/detection/cpu/cpu_apple.c
index efdad950..6ec776f6 100644
--- src/detection/cpu/cpu_apple.c
+++ src/detection/cpu/cpu_apple.c
@@ -100,12 +100,23 @@ static const char* detectCoreCount(FFCPUResult* cpu)
 
 const char* ffDetectCPUImpl(const FFCPUOptions* options, FFCPUResult* cpu)
 {
+#ifdef __POWERPC__
+    int cpuSubType;
+    size_t size = sizeof(cpuSubType);
+    if (sysctlbyname("hw.cpusubtype", &cpuSubType, &size, NULL, 0) == 0) {
+        const char *cpuName = ffCPUAppleCodeToName(cpuSubType);
+        ffStrbufAppendS(&cpu->name, cpuName);
+    } else {
+        return "sysctlbyname(hw.cpusubtype) failed";
+    }
+#else
     if (ffSysctlGetString("machdep.cpu.brand_string", &cpu->name) != NULL)
         return "sysctlbyname(machdep.cpu.brand_string) failed";
 
     ffSysctlGetString("machdep.cpu.vendor", &cpu->vendor);
     if (cpu->vendor.length == 0 && ffStrbufStartsWithS(&cpu->name, "Apple "))
         ffStrbufAppendS(&cpu->vendor, "Apple");
+#endif
 
     cpu->coresPhysical = (uint16_t) ffSysctlGetInt("hw.physicalcpu_max", 1);
     if(cpu->coresPhysical == 1)
-- 
2.46.0

