# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
PortSystem          1.0
PortGroup           conflicts_build 1.0

name                OpenIPMI
if {${os.platform} eq "darwin" && ${os.major} <= 15} {
    version             2.0.19
    revision            6
} else {
    version             2.0.26
    revision            0
}
set branch          [join [lrange [split ${version} .] 0 1] .]
license             {GPL-2 LGPL-2}
categories          sysutils
platforms           darwin
maintainers         {eborisch @eborisch} \
                    openmaintainer

description         OpenIPMI provides a full-function IPMI interface.

long_description    The Open IPMI project aims to develop an open code base to\
                    allow access to platform information using Intelligent\
                    Platform Management Interface (IPMI).

homepage            http://openipmi.sourceforge.net/
master_sites        sourceforge:project/openipmi/OpenIPMI%20${branch}%20Library

universal_variant   no
use_parallel_build  no

if {${os.platform} eq "darwin" && ${os.major} <= 15} {
    checksums \
        rmd160  ca624701659416da55a6b96abbec6aef4d323a26 \
        sha256  5b0de4741f07e350bf53b7d31bb20dd1109c2dc005dfb13969d8a9ff290f3a4e

    patchfiles          weak_symbols.patch \
                        configure.in.patch
} else {
    checksums \
        rmd160  2ee3c26183e0765af83a13ed0eea0c7cd90c16f9 \
        sha256  83986368c30a1158303435ad5a2b1bd3c6a39664b46d10fc0b8f9d2a78e2f524 \
        size    3124706
    patchfiles          disable-lanserv.patch \
                        unix_posix_thread_os_hnd.c.patch \
                        unix_selector.c.patch
}

# Grabs old headers from installed version during build...
conflicts_build     ${name}

depends_build       port:gsed

depends_lib         port:popt \
                    path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    port:net-snmp \
                    port:tcl
                        
configure.args      --with-poptlibs=-lpopt \
                    --with-swig=no \
                    --with-python=no \
                    --with-perl=no

variant python description "Build python bindings" {
    configure.args-delete --with-swig=no --with-python=no
    depends_lib-append      port:swig-python \
                            port:py27-tkinter \
                            port:tix
}

variant perl description "Build perl bindings" {
    configure.args-delete --with-swig=no --with-perl=no
    depends_lib-append      port:swig-perl \
                            port:perl5
}

platform darwin {
    post-extract {
        system -W ${worksrcpath} \
            "find . -name 'Makefile*' | xargs sed -i '' -e 's/Map/map/g'"
        system -W ${worksrcpath} \
            "grep -R 'rdynamic' -l * | xargs sed -i '' -e 's/-rdynamic//g'"
        set REPLSTR "s/LD_PRELOAD=/DYLD_INSERT_LIBRARIES=/g"
        system -W ${worksrcpath} \
            "grep -R 'LD_PRELOAD' -l * | xargs sed -i '' -e '${REPLSTR}'"
    }

    use_autoreconf  yes

    post-configure {
        set REPLSTR "s/lib(\[^ :\/\]*)\.so/lib\\1.dylib/g"
        system -W ${worksrcpath} \
            "find . -name 'Makefile' | xargs sed -E -i '' -e '${REPLSTR}'"

        if {[variant_isset python]} {
            set LIBPATH \
"../../../unix/.libs:../../../lib/.libs:../../../utils/.libs:../../../cmdlang/.libs:../../../tcl/.libs:../../../swig/python/.libs"
            reinplace "s|DYLD_\[^ \]*|DYLD_LIBRARY_PATH=${LIBPATH}|g" \
                swig/python/openipmigui/Makefile
        }
    }
}

livecheck.type      sourceforge
livecheck.regex     ${name}-(\[0-9.\]+)${extract.suffix}
