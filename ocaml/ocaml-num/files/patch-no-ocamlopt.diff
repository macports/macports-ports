# At the moment, there is no ocamlopt on PPC due to broken assembler implementation in OCaml.
# Compilation freezes, since ocamlopt cannot be found.

# Not to be used on officially supported by OCaml platforms.

--- src/Makefile.orig	2020-11-10 00:22:09.000000000 +0800
+++ src/Makefile	2022-11-20 19:52:31.000000000 +0800
@@ -1,5 +1,4 @@
 OCAMLC=ocamlc
-OCAMLOPT=ocamlopt
 OCAMLDEP=ocamldep
 OCAMLMKLIB=ocamlmklib
 OCAMLFIND=ocamlfind
@@ -20,39 +19,20 @@
 
 CAMLCFLAGS=-w +a-4-9-41-42-44-45-48 -warn-error A -bin-annot -g \
           -safe-string -strict-sequence -strict-formats
-CAMLOPTFLAGS=$(CAMLCFLAGS)
-ifeq "$(FLAMBDA)" "true"
-CAMLOPTFLAGS+=-O3
-endif
 
 CMIS=big_int.cmi nat.cmi num.cmi ratio.cmi arith_status.cmi
 CMOS=int_misc.cmo nat.cmo big_int.cmo arith_flags.cmo \
   ratio.cmo num.cmo arith_status.cmo
-CMXS=$(CMOS:.cmo=.cmx)
 COBJS=bng.$(O) nat_stubs.$(O)
 
 all:: libnums.$(A) nums.cma
 
-ifneq "$(ARCH)" "none"
-all:: nums.cmxa
-endif
-
-ifeq "$(NATDYNLINK)" "true"
-all:: nums.cmxs
-endif
-
 libnums.$(A): $(COBJS)
 	$(OCAMLMKLIB) -oc nums $(COBJS)
 
 nums.cma: $(CMOS)
 	$(OCAMLMKLIB) -o nums -oc nums -linkall $(CMOS)
 
-nums.cmxa: $(CMXS)
-	$(OCAMLMKLIB) -o nums -oc nums -linkall $(CMXS)
-
-nums.cmxs: nums.cmxa libnums.$(A)
-	$(OCAMLOPT) $(CAMLOPTFLAGS) -I . -shared -o nums.cmxs nums.cmxa
-
 # We hard-code the C dependencies rather than having them generated
 # because the dependencies are so simple.
 bng.$(O): bng.h bng_*.c
@@ -62,8 +42,6 @@
 	$(OCAMLC) $(CAMLCFLAGS) -c $*.mli
 %.cmo: %.ml
 	$(OCAMLC) $(CAMLCFLAGS) -c $*.ml
-%.cmx: %.ml
-	$(OCAMLOPT) $(CAMLOPTFLAGS) -c $*.ml
 %.$(O): %.c
 	$(OCAMLC) -ccopt -DBNG_ARCH_$(BNG_ARCH) -c $*.c
 
@@ -71,12 +49,6 @@
 # is installed via findlib
 
 TOINSTALL=nums.cma libnums.$(A) $(CMIS) $(CMIS:.cmi=.mli) $(CMIS:.cmi=.cmti)
-ifneq "$(ARCH)" "none"
-TOINSTALL+=nums.cmxa nums.$(A) $(CMXS)
-endif
-ifeq "$(NATDYNLINK)" "true"
-TOINSTALL+=nums.cmxs
-endif
 ifeq "$(SUPPORTS_SHARED_LIBRARIES)" "true"
 TOINSTALL_STUBS=dllnums$(EXT_DLL)
 else
@@ -111,7 +83,7 @@
 endif
 
 clean:
-	rm -f *.cm[ioxta] *.cmx[as] *.cmti *.$(O) *.$(A) *$(EXT_DLL)
+	rm -f *.cm[ioxta] *.cmti *.$(O) *.$(A) *$(EXT_DLL)
 
 depend:
 	$(OCAMLDEP) -slash *.mli *.ml > .depend

--- test/Makefile.orig	2020-11-10 00:22:09.000000000 +0800
+++ test/Makefile	2022-11-20 19:42:30.000000000 +0800
@@ -1,11 +1,9 @@
 OCAMLC=ocamlc
-OCAMLOPT=ocamlopt
 OCAMLRUN=ocamlrun
 
 include $(shell $(OCAMLC) -where)/Makefile.config
 
 CAMLCFLAGS=
-CAMLOPTFLAGS=$(CAMLCFLAGS)
 
 FILES=test.ml test_nats.ml test_big_ints.ml test_ratios.ml test_nums.ml test_io.ml end_test.ml
 
@@ -13,24 +11,13 @@
 	@echo "----- Testing in bytecode..."
 	$(OCAMLRUN) -I ../src ./test.byt
 
-ifneq "$(ARCH)" "none"
-all:: test.exe
-	@echo "----- Testing in native code..."
-	./test.exe
-endif
-
 test.byt: $(FILES) ../src/nums.cma ../src/libnums.$(A)
 	$(OCAMLC) -I ../src $(CAMLCFLAGS) ../src/nums.cma $(FILES) -o test.byt
 
-test.exe: $(FILES) ../src/nums.cmxa ../src/libnums.$(A)
-	$(OCAMLOPT) -I ../src $(CAMLOPTFLAGS) ../src/nums.cmxa $(FILES) -o test.exe
-
 %.cmi: %.mli
 	$(OCAMLC) $(CAMLCFLAGS) -c $*.mli
 %.cmo: %.ml
 	$(OCAMLC) $(CAMLCFLAGS) -c $*.ml
-%.cmx: %.ml
-	$(OCAMLOPT) $(CAMLOPTFLAGS) -c $*.ml
 
 clean:
-	rm -f *.cm[ioxt] *.$(O) test.byt test.exe
+	rm -f *.cm[ioxt] *.$(O) test.byt
