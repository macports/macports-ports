# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           select 1.0

github.setup        luarocks luarocks 3.7.0 v
name                lua-luarocks
revision            1
license             MIT
categories          lua devel
maintainers         {l2dy @l2dy} openmaintainer
supported_archs     noarch
platforms           any

description         Manager for rocks, lua extensions.
long_description    \
    LuaRocks is a deployment and management system for Lua modules that allows \
    you to install self-contained modules (\"rocks\") which also contain \
    version dependency information. It handles both install time dependencies \
    and runtime version check. LuaRocks supports local and remote \
    repositories, and multiple local rocks trees.

homepage            https://luarocks.org/

checksums           rmd160  b978643a6b43668fb219240edfc5be9052192a1e \
                    sha256  70015144ed97665dcee7560c96c084ad0586d742417485a9d3fc1e49fbe97559 \
                    size    5386555

options lua.branch
option_proc lua.branch lua_set_branch
proc lua_set_branch {option action args} {
    if {$action ne "set"} {
        return
    }
    global prefix lua.branch \
        lua.suffix lua.includedir lua.libdir

    # Compile against the standard Lua headers to maintain ABI compatibility.
    # https://luajit.org/extensions.html
    set lua.includedir      "${prefix}/include/lua-${lua.branch}"
    set lua.libdir          "${prefix}/lib/lua-${lua.branch}"
    if {${lua.branch} eq "5.1"} {
        set lua.libdir      "${prefix}/lib"
    }

    set lua.suffix         [join [split ${lua.branch} .] {}]
    if {${lua.branch} eq "5.3"} {
        set lua.suffix      ""
        set lua.includedir  "${prefix}/include"
        set lua.libdir      "${prefix}/lib"
    }
}

set branches {5.1 5.2 5.3}
set default_version 53

foreach branch ${branches} {
    set port_suffix [join [split ${branch} .] {}]

    subport lua${port_suffix}-luarocks {
        lua.branch          ${branch}
        depends_lib         port:lua${lua.suffix}
        depends_run         port:luarocks_select

        configure.args      --with-lua=${prefix} \
                            --with-lua-bin=${prefix}/bin \
                            --with-lua-include=${lua.includedir} \
                            --with-lua-lib=${lua.libdir} \
                            --lua-version=${lua.branch} \
                            --rocks-tree=${prefix}/share/luarocks

        # The 5.1 branch uses LuaJIT runtime because lua51 does not support io.popen,
        # which is required by LuaRocks.
        if {${lua.branch} eq "5.1"} {
            depends_lib-append \
                            path:lib/libluajit-5.1.2.dylib:luajit
            configure.args-append \
                            --with-lua-interpreter=luajit
        }

        patchfiles          patch-src_luarocks_core_cfg.diff
        post-patch {
            reinplace       "s|%PREFIX%|${prefix}|g" ${worksrcpath}/src/luarocks/core/cfg.lua
            reinplace       "s|%CC%|${configure.cc}|g" ${worksrcpath}/src/luarocks/core/cfg.lua
        }

        use_parallel_build  no

        destroot.keepdirs   ${destroot}${prefix}/share/luarocks
        post-destroot {
            foreach f [glob -tails -directory ${destroot}${prefix}/bin luarocks*] {
                move ${destroot}${prefix}/bin/${f} ${destroot}${prefix}/bin/${f}-${lua.branch}
            }
        }

        select.entries      [list luarocks ${subport} ${subport}]

        notes-append "
To make this the default LuaRocks (i.e., the version run by\
the 'luarocks' or 'luarocks-admin' commands), run:

    sudo port select --set luarocks ${subport}
"
    }
}

if {$subport eq $name} {
    PortGroup   stub 1.0

    # lua-luarocks as a stub port that depends on the latest luaXY-luarocks
    depends_lib port:lua${default_version}-luarocks
}
