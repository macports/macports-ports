From 16acae07aebc8259dd21551f19d355f15c61dd99 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <vital.had@gmail.com>
Date: Tue, 20 Feb 2024 06:50:32 +0800
Subject: [PATCH] local_file_system.cpp: minor fix for macOS libproc code
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Recent commit has broken duckdb build on macOS < 10.7: https://github.com/duckdb/duckdb/commit/23112e9aa344905c2d2a0d1cb696c5f73c329534
Add a fallback to fix it.
See also get_ppid_of.c in gettextâ€™s libtextstyle.
---
 src/common/local_file_system.cpp | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git src/common/local_file_system.cpp src/common/local_file_system.cpp
index bbca902a28..14903303e6 100644
--- src/duckdb/src/common/local_file_system.cpp
+++ src/duckdb/src/common/local_file_system.cpp
@@ -188,6 +188,8 @@ static string AdditionalProcessInfo(FileSystem &fs, pid_t pid) {
 	}
 
 	string process_name, process_owner;
+// macOS >= 10.7 has PROC_PIDT_SHORTBSDINFO
+#if defined PROC_PIDT_SHORTBSDINFO
 	// try to find out more about the process holding the lock
 	struct proc_bsdshortinfo proc;
 	if (proc_pidinfo(pid, PROC_PIDT_SHORTBSDINFO, 0, &proc, PROC_PIDT_SHORTBSDINFO_SIZE) ==
@@ -199,6 +201,19 @@ static string AdditionalProcessInfo(FileSystem &fs, pid_t pid) {
 			process_owner = pw->pw_name;
 		}
 	}
+#else
+// Fallback code for older versions
+	// try to find out more about the process holding the lock
+	struct proc_bsdinfo proc;
+	if (proc_pidinfo(pid, PROC_PIDTBSDINFO, 0, &proc, 128) == 128) {
+		process_name = proc.pbi_comm; // only a short version however, let's take it in case proc_pidpath() below fails
+		// try to get actual name of conflicting process owner
+		auto pw = getpwuid(proc.pbi_uid);
+		if (pw) {
+			process_owner = pw->pw_name;
+		}
+	}
+#endif
 	// try to get a better process name (full path)
 	char full_exec_path[PROC_PIDPATHINFO_MAXSIZE];
 	if (proc_pidpath(pid, full_exec_path, PROC_PIDPATHINFO_MAXSIZE) > 0) {
