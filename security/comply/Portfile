# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           golang 1.0

go.setup            github.com/strongdm/comply 1.6.0 v
github.tarball_from archive
revision            0

description         Compliance automation framework, focused on SOC2

long_description    Comply is a SOC2-focused compliance automation tool. It \
                    includes: a Policy Generator: a markdown-powered document \
                    pipeline for publishing auditor-friendly policy documents, \
                    Ticketing Integration: to automate compliance throughout \
                    the year via your existing ticketing system, and SOC2 \
                    Templates: open source policy and procedure templates \
                    suitable for satisfying a SOC2 audit.

categories          security
installs_libs       no
license             Apache-2
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

checksums           rmd160  dd3227045fd7cfa7b66953b5c37b3f375f908944 \
                    sha256  50bfa1d3d0738a324b375e595595ce6de948adf2a6cbee26ebca68e84b308b34 \
                    size    3915002

set comply_example_dir  "${prefix}/share/${name}/example"

build.env-delete    GO111MODULE=off GOPROXY=off

build.pre_args-append \
    -ldflags \" \
        -X ${go.package}/internal/cli.Version=${github.tag_prefix}${version} \
    \"

destroot {
    xinstall -d ${destroot}${comply_example_dir}

    copy "${worksrcpath}/${name}" "${destroot}${prefix}/bin/${name}"
    copy {*}[glob ${worksrcpath}/example/*] ${destroot}${comply_example_dir}
}

notes "
    Example configuration for ${name} can be found in:

        ${comply_example_dir}
"
