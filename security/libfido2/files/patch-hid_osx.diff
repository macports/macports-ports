# See: https://developer.apple.com/documentation/iokit/1645245-anonymous/kiohidmanageroptionnone
# Can we do better than disable? https://github.com/wahern/cqueues/blob/master/src/lib/socket.c

--- src/hid_osx.c.orig	2021-10-27 19:02:28.000000000 +0700
+++ src/hid_osx.c	2022-09-05 21:45:42.000000000 +0700
@@ -23,6 +23,10 @@
 #define kIOMainPortDefault kIOMasterPortDefault
 #endif
 
+#if __MAC_OS_X_VERSION_MIN_REQUIRED < 101200
+#define kIOHIDManagerOptionNone 0x0
+#endif
+
 struct hid_osx {
 	IOHIDDeviceRef	ref;
 	CFStringRef	loop_id;
@@ -169,10 +173,12 @@
 	io_service_t	s;
 	io_string_t	path;
 
+#if __MAC_OS_X_VERSION_MIN_REQUIRED > 1050
 	if ((s = IOHIDDeviceGetService(dev)) == MACH_PORT_NULL) {
 		fido_log_debug("%s: IOHIDDeviceGetService", __func__);
 		return (NULL);
 	}
+#endif
 
 	if (IORegistryEntryGetPath(s, kIOServicePlane, path) != KERN_SUCCESS) {
 		fido_log_debug("%s: IORegistryEntryGetPath", __func__);
@@ -352,6 +358,7 @@
 	return (0);
 }
 
+#if __MAC_OS_X_VERSION_MIN_REQUIRED > 1060
 static int
 disable_sigpipe(int fd)
 {
@@ -364,6 +371,7 @@
 
 	return (0);
 }
+#endif
 
 void *
 fido_hid_open(const char *path)
@@ -393,10 +401,12 @@
 		goto fail;
 	}
 
+#if __MAC_OS_X_VERSION_MIN_REQUIRED > 1060
 	if (disable_sigpipe(ctx->report_pipe[1]) < 0) {
 		fido_log_debug("%s: disable_sigpipe", __func__);
 		goto fail;
 	}
+#endif
 
 	if ((entry = IORegistryEntryFromPath(kIOMainPortDefault,
 	    path)) == MACH_PORT_NULL) {
