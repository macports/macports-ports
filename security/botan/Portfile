# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           openssl 1.0
PortGroup           legacysupport 1.1

# botan needs clock_gettime & getentropy which are missing until osx 10.11 (=darwin 15)
legacysupport.newest_darwin_requires_legacy 15

name                botan
version             2.19.1
revision            0
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          security devel
platforms           darwin
maintainers         nomaintainer
license             BSD
description         cryptographic algorithms and formats library in C++
long_description    Botan is a C++ library implementing a variety of \
                    cryptographic algorithms and formats. At this time, it is \
                    quite stable, and is suitable for use in a wide variety of \
                    programs.

homepage            https://botan.randombit.net
master_sites        ${homepage}/releases/
distname            Botan-${version}
use_xz              yes

checksums           rmd160  529d8f8071c4a4537369c991233863850888594b \
                    sha256  e26e00cfefda64082afdd540d3c537924f645d6a674afed2cd171005deff5560 \
                    size    6088380

depends_build       port:python39
depends_lib         port:bzip2 \
                    port:lzma \
                    port:sqlite3 \
                    port:zlib

# respect MacPorts configure values
patchfiles-append   patch-compiler_flags.diff

post-patch {
    reinplace -W ${worksrcpath}/src/build-data/cc \
        "s|__MACPORTS_CXX_STDLIB__|${configure.cxx_stdlib}|g" \
        clang.txt
}

compiler.cxx_standard   2011
# botan uses thread_local, which is not supported in Xcode < 8
compiler.thread_local_storage   yes

if {[tbool configure.ccache]} {
    configure.args-append   --cc-bin="${prefix}/bin/ccache ${configure.cxx}"
} else {
    configure.args-append   --cc-bin=${configure.cxx}
}

configure.cmd       ${prefix}/bin/python3.9 ./configure.py
configure.args-append --docdir=share/doc \
                      --system-cert-bundle=${prefix}/share/curl/curl-ca-bundle.crt \
                      --with-bzip2 \
                      --with-lzma \
                      --with-openssl \
                      --with-sqlite3 \
                      --with-zlib

# List of all intrinsics that can be disabled
set intrinsics {
    sse2
    ssse3
    sse4.1
    sse4.2
    avx2
    bmi2
    rdrand
    rdseed
    aes-ni
    sha-ni
    altivec
    neon
    armv8crypto
    powercrypto
}

# Disable all the intrinsics
foreach elem $intrinsics {
    configure.args-append --disable-$elem
}

if {[string match *clang* ${configure.compiler}]} {
    configure.args-append --cc=clang
} elseif {[string match *gcc* ${configure.compiler}]} {
    configure.args-append --cc=gcc
}

# no matching constructor for initialization of 'std::vector<CFStringRef>'
if {${os.major} <= 14} {
    configure.args-append --disable-modules=certstor_system_macos
}

# Upstream default for both GCC and Clang
configure.optflags  -O3

platform darwin { configure.args-append --os=darwin }

# Variant to re-enable use of intrinsics
variant native description {Enable all intrinsics} {
    foreach elem $intrinsics {
        configure.args-delete --disable-$elem
    }
}

# botan way of setting cpu type in build phase
array set merger_configure_args {
    ppc     --cpu=ppc
    i386    --cpu=ia32
    ppc64   --cpu=ppc64
    x86_64  --cpu=amd64
}

if {(!${universal_possible} || ![variant_isset universal]) && [info exists merger_configure_args(${build_arch})]} {
    configure.args-append $merger_configure_args(${build_arch})
}

# configure.py rejects this argument
configure.universal_args-delete --disable-dependency-tracking

livecheck.regex     Botan-(${branch}\\.\[0-9.\]+)${extract.suffix}
