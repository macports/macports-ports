# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               github 1.0

github.setup            oauth2-proxy oauth2-proxy 6.1.1 v
revision                0

categories              security net
license                 MIT
platforms               darwin

homepage                https://oauth2-proxy.github.io/oauth2-proxy

description             A reverse proxy that provides authentication with \
                        Google, GitHub or other providers.

long_description        A reverse proxy and static file server that provides \
                        authentication using Providers (Google, GitHub, and \
                        others) to validate accounts by email, domain or group.

maintainers             {gmail.com:herby.gillot @herbygillot} \
                        openmaintainer

checksums               rmd160  7c0ed4bb858f0e413eaee344e893e79cf15a98c9 \
                        sha256  b09519dfc2b7b8f3e55317edf1094095de7a36f40a046873d5b5ebda4877a80a \
                        size    430508

set o2p_conf_dir        ${prefix}/etc/${name}
set o2p_log_dir         ${prefix}/var/log/${name}
set o2p_share_dir       ${prefix}/share/${name}

set o2p_config_file     ${o2p_conf_dir}/${name}.cfg
set o2p_example_src     ${worksrcpath}/contrib/${name}.cfg.example
set o2p_example_file    ${o2p_share_dir}/${name}.cfg.example
set o2p_log_file        ${o2p_log_dir}/${name}.log
set o2p_user            oauth2proxy

build.cmd               make
build.pre_args          VERSION=${version}
build.args              ${name}

depends_build           port:go
use_configure           no

add_users               ${o2p_user} \
                        group=${o2p_user} \
                        realname="Oauth2-Proxy"

destroot.keepdirs-append \
                        ${destroot}${o2p_conf_dir} \
                        ${destroot}${o2p_log_dir}

post-extract {
    copy  ${filespath}/org.macports.${name}.plist \
          ${workpath}/org.macports.${name}.plist

    reinplace "s|@NAME@|${name}|g"      ${workpath}/org.macports.${name}.plist
    reinplace "s|@USER@|${o2p_user}|g"  ${workpath}/org.macports.${name}.plist
    reinplace "s|@GROUP@|${o2p_user}|g" ${workpath}/org.macports.${name}.plist
    reinplace "s|@PREFIX@|${prefix}|g"  ${workpath}/org.macports.${name}.plist

    reinplace "s|@CONF_FILE@|${o2p_config_file}|g" \
        ${workpath}/org.macports.${name}.plist

    reinplace "s|@LOGFILE@|${o2p_log_file}|g" \
        ${workpath}/org.macports.${name}.plist
}


destroot {
    xinstall -m 755 ${worksrcpath}/${name} ${destroot}${prefix}/bin/
    xinstall -d -m 755 -o ${o2p_user} ${destroot}${o2p_log_dir}
    xinstall -d -m 755 ${destroot}${o2p_conf_dir}
    xinstall -d -m 755 ${destroot}${o2p_share_dir}
    copy ${o2p_example_src} ${destroot}${o2p_example_file}

    xinstall -d -m 755 \
        ${destroot}${prefix}/etc/LaunchDaemons/org.macports.${name}

    xinstall -m 0644 -o root -W ${workpath} org.macports.${name}.plist \
        ${destroot}${prefix}/etc/LaunchDaemons/org.macports.${name}

    xinstall -d -m 755 ${destroot}/Library/LaunchDaemons

    ln -s ${prefix}/etc/LaunchDaemons/org.macports.${name}/org.macports.${name}.plist \
        ${destroot}/Library/LaunchDaemons/org.macports.${name}.plist
}

post-activate {
    if {![file exists ${o2p_config_file}]} {
        copy ${o2p_example_file} ${o2p_config_file}
    }
}

notes "
    Please edit the configuration for ${name} at: ${o2p_config_file}

    Once done, start the service with: \$ sudo port load ${name}

    ${name} will log to: ${o2p_log_file}

    To stop and remove the service, do: \$ sudo port unload ${name}
"
