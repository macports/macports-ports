# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           xcode 1.0
PortGroup           github 1.0

# REMARK
# There is currently no MacPass release building on XCode 12 due to the introduction of arm64 architecture.
# This has been fixed only on master yet, therefore I am using the latest commit on master as of today (01/02/21).
# As soon as MacPass 0.8 is released, the release tarball will be used again.
set macpass_hash    3cfbbb1f16437b2e1ae01ecde303ca1266960f8c
set ddhotkey_hash   a996a0a3980de926168df7c2f8b02a1231760561

github.setup        MacPass MacPass ${macpass_hash}
version             0.8-RC3
categories          security
platforms           darwin
license             GPL-3
maintainers         {@janosch mailbox.org:janosch1} openmaintainer
description         KeePass client for macOS
long_description    ${name} is a native macOS port of KeePass. Key features are automatic \
                    form filling and regex matching of window titles to detect the correct target application. \
                    Through the plugin MacPassHTTP, ${name} can also be used together with \
                    keepass browser extensions to integrate ${name} as a password database the browser can use.
homepage            https://macpassapp.org/

master_sites        ${github.homepage}/archive:macpass \
                    https://github.com/mstarke/DDHotKey/archive:ddhotkey

distfiles           ${macpass_hash}.tar.gz:macpass \
                    ${ddhotkey_hash}.tar.gz:ddhotkey

checksums           ${macpass_hash}.tar.gz \
                    rmd160  61549b619d1dd0b4c0441004478594971ddfd4d8 \
                    sha256  b70559e9b20316bf74cf6ea6bd2a13bf19d8c4abfac79e3056bda0264f97973f \
                    size    11002723 \
                    ${ddhotkey_hash}.tar.gz \
                    rmd160  12ce0935b45c9b8a1e258f267ff8d18f0429eed0 \
                    sha256  656d090cca863b236b7d319df4a5853b55ebf9af39a31a08cb471122c9bfbf56 \
                    size    27575

if {${os.platform} eq "darwin" && ${os.major} < 20} {
    known_fail yes
    pre-fetch {
        ui_error "${name} @${version} requires macOS 11 or greater"
        return -code error "incompatible OS X version"
    }
}

post-extract {
    file delete -force ${worksrcpath}/DDHotKey
    move ${workpath}/DDHotKey-${ddhotkey_hash} ${worksrcpath}/DDHotKey
}

depends_lib             port:KeePassKit \
                        port:HNHUi \
                        port:TransformerKit

patchfiles              patch-xcodeproj.diff \
                        patch-remove-sparkle-app.diff \
                        patch-remove-sparkle-pref.diff

xcode.target            MacPass
xcode.scheme            MacPass
xcode.configuration     Release

xcode.destroot.settings CODE_SIGN_IDENTITY=- \
                        CODE_SIGN_STYLE=Manual \
                        ENABLE_HARDENED_RUNTIME=NO \
                        FRAMEWORK_SEARCH_PATHS=${prefix}/Library/Frameworks

# xcode PortGroup sets the DerivedData to /var/root/... which is not writeable. This fixes it.
destroot.pre_args-append  -derivedDataPath ./DerivedData
destroot.args-append GCC_PREPROCESSOR_DEFINITIONS="NO_SPARKLE=TRUE"

# We skip the build phase because building will also be done in the destroot phase.
# See https://trac.macports.org/ticket/57137
build {}
