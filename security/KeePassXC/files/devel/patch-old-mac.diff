From 0bc9890ba149037cd8385619ba121939edb63f9b Mon Sep 17 00:00:00 2001
From: tenzap <fabstz-it@yahoo.fr>
Date: Thu, 11 Nov 2021 08:50:21 +0100
Subject: [PATCH 1/6] fix compilation on macOS with clang < 9

The code uses @available syntax which is new in clang 9
This prevents compilation on older version of macOS that don't
use this version. For example on El Capitan.
This fix will allow to compile on such older systems.
---
 src/gui/osutils/macutils/AppKitImpl.mm | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/gui/osutils/macutils/AppKitImpl.mm b/src/gui/osutils/macutils/AppKitImpl.mm
index 76fe7fe06d..ddbe2ad5b9 100644
--- src/gui/osutils/macutils/AppKitImpl.mm
+++ src/gui/osutils/macutils/AppKitImpl.mm
@@ -139,6 +139,7 @@ - (bool) isDarkMode
 //
 - (bool) isStatusBarDark
 {
+#if __clang_major__ >= 9
     if (@available(macOS 10.17, *)) {
         // This is an ugly hack, but I couldn't find a way to access QTrayIcon's NSStatusItem.
         NSStatusItem* dummy = [[NSStatusBar systemStatusBar] statusItemWithLength:0];
@@ -146,6 +147,7 @@ - (bool) isStatusBarDark
         [[NSStatusBar systemStatusBar] removeStatusItem:dummy];
         return [appearance containsString:@"dark"];
     }
+#endif
 
     return [self isDarkMode];
 }
@@ -176,6 +178,7 @@ - (bool) enableAccessibility
 //
 - (bool) enableScreenRecording
 {
+#if __clang_major__ >= 9
     if (@available(macOS 10.15, *)) {
         // Request screen recording permission on macOS 10.15+
         // This is necessary to get the current window title
@@ -193,6 +196,7 @@ - (bool) enableScreenRecording
             return NO;
         }
     }
+#endif
     return YES;
 }
 

From 202b05d81076e34a0d1938851e6187555f59cb96 Mon Sep 17 00:00:00 2001
From: tenzap <fabstz-it@yahoo.fr>
Date: Thu, 11 Nov 2021 08:58:49 +0100
Subject: [PATCH 2/6] fix compilation on Qt not having
 QOperatingSystemVersion::MacOSBigSur

The code uses 'QOperatingSystemVersion::MacOSBigSur' which doesn't exist
in all Qt versions (it has been backported to Qt 5.12.10+ & 5.15.1+ only).
On older macos systems like El Capitan the last supported
version of Qt is 5.11

This will fix compilation issue on such older systems and on systems
running with Qt not supporting QOperatingSystemVersion::MacOSBigSur

Compilation error was:
error: no member named 'MacOSBigSur' in 'QOperatingSystemVersion'
---
 src/gui/styles/base/BaseStyle.cpp | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/src/gui/styles/base/BaseStyle.cpp b/src/gui/styles/base/BaseStyle.cpp
index 0068943b43..ec3fd9b8ac 100644
--- src/gui/styles/base/BaseStyle.cpp
+++ src/gui/styles/base/BaseStyle.cpp
@@ -41,8 +41,10 @@
 
 #ifdef Q_OS_MACOS
 #include <QMainWindow>
+#if QT_VERSION >= QT_VERSION_CHECK(5, 9, 0)
 #include <QOperatingSystemVersion>
 #endif
+#endif
 
 #include "gui/Icons.h"
 
@@ -279,16 +281,22 @@ namespace Phantom
 #ifdef Q_OS_MACOS
             QColor tabBarBase(const QPalette& pal)
             {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 10) && QT_VERSION < QT_VERSION_CHECK(5, 13, 0)                               \
+    || QT_VERSION >= QT_VERSION_CHECK(5, 15, 1)
                 if (QOperatingSystemVersion::current() >= QOperatingSystemVersion::MacOSBigSur) {
                     return hack_isLightPalette(pal) ? QRgb(0xD4D4D4) : QRgb(0x2A2A2A);
                 }
+#endif
                 return hack_isLightPalette(pal) ? QRgb(0xDD1D1D1) : QRgb(0x252525);
             }
             QColor tabBarBaseInactive(const QPalette& pal)
             {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 10) && QT_VERSION < QT_VERSION_CHECK(5, 13, 0)                               \
+    || QT_VERSION >= QT_VERSION_CHECK(5, 15, 1)
                 if (QOperatingSystemVersion::current() >= QOperatingSystemVersion::MacOSBigSur) {
                     return hack_isLightPalette(pal) ? QRgb(0xF5F5F5) : QRgb(0x2D2D2D);
                 }
+#endif
                 return hack_isLightPalette(pal) ? QRgb(0xF4F4F4) : QRgb(0x282828);
             }
 #endif

From 15bd8e3b22be3040b5f44d83dfeb553c7640b8c4 Mon Sep 17 00:00:00 2001
From: tenzap <fabstz-it@yahoo.fr>
Date: Sun, 14 Nov 2021 10:13:39 +0100
Subject: [PATCH 3/6] Fix compilation when osx <= 10.9

* AppKitImpl.mm: button property is new in 10.10. It is used for a feature of KeePassXC
  that is only available from 10.17 onwards. So we don't need it when compiling on <= 10.9
error: property 'button' not found on object of type 'NSStatusItem *'
        NSString* appearance = [dummy.button.effectiveAppearance.name lowercaseString];
                                      ^
---
 src/gui/osutils/macutils/AppKitImpl.mm | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/gui/osutils/macutils/AppKitImpl.mm b/src/gui/osutils/macutils/AppKitImpl.mm
index ddbe2ad5b9..52d328e241 100644
--- src/gui/osutils/macutils/AppKitImpl.mm
+++ src/gui/osutils/macutils/AppKitImpl.mm
@@ -139,7 +139,7 @@ - (bool) isDarkMode
 //
 - (bool) isStatusBarDark
 {
-#if __clang_major__ >= 9
+#if __clang_major__ >= 9 && MAC_OS_X_VERSION_MIN_REQUIRED >= 101000
     if (@available(macOS 10.17, *)) {
         // This is an ugly hack, but I couldn't find a way to access QTrayIcon's NSStatusItem.
         NSStatusItem* dummy = [[NSStatusBar systemStatusBar] statusItemWithLength:0];

From 8b0027dd1ed1243754ea77f3e6b0b2c3b65a0db1 Mon Sep 17 00:00:00 2001
From: tenzap <fabstz-it@yahoo.fr>
Date: Sun, 14 Nov 2021 14:47:50 +0100
Subject: [PATCH 4/6] Fix compilation when osx <= 10.8

* AppKitImpl.mm: AXIsProcessTrustedWithOptions exists from 10.9 onwards
error: use of undeclared identifier 'kAXTrustedCheckOptionPrompt'
error: use of undeclared identifier 'AXIsProcessTrustedWithOptions'
---
 src/gui/osutils/macutils/AppKitImpl.mm | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/src/gui/osutils/macutils/AppKitImpl.mm b/src/gui/osutils/macutils/AppKitImpl.mm
index 52d328e241..77450b1636 100644
--- src/gui/osutils/macutils/AppKitImpl.mm
+++ src/gui/osutils/macutils/AppKitImpl.mm
@@ -168,9 +168,15 @@ - (void) userSwitchHandler:(NSNotification*) notification
 //
 - (bool) enableAccessibility
 {
-    // Request accessibility permissions for Auto-Type type on behalf of the user
-    NSDictionary* opts = @{static_cast<id>(kAXTrustedCheckOptionPrompt): @YES};
-    return AXIsProcessTrustedWithOptions(static_cast<CFDictionaryRef>(opts));
+#if __clang_major__ >= 9 && MAC_OS_X_VERSION_MIN_REQUIRED >= 1090
+    if (@available(macOS 10.9, *)) {
+        // Request accessibility permissions for Auto-Type type on behalf of the user
+        NSDictionary* opts = @{static_cast<id>(kAXTrustedCheckOptionPrompt): @YES};
+        return AXIsProcessTrustedWithOptions(static_cast<CFDictionaryRef>(opts));
+    }
+#else
+    return YES;
+#endif
 }
 
 //

From 57dfd7e603a693603dd1439afcd0308187f2aaf2 Mon Sep 17 00:00:00 2001
From: tenzap <fabstz-it@yahoo.fr>
Date: Sun, 14 Nov 2021 15:40:41 +0100
Subject: [PATCH 5/6] Fix compilation when osx <= 10.7

* MacUtils.cpp: CoreGraphics exists from 10.8 onwards only, capslock detection feature
  would have to be implemented on OSX <= 10.7

* AppKitImpl.mm: CGDisplayStreamRef exists from 10.8 onwards only. It is used for a
  feature of KeePassXC that is only available from 10.15 onwards. So we don't need it
  when compiling on <= 10.7
error: unknown type name 'CGDisplayStreamRef'

* AppKitImpl.mm: Syntax is not understood by 10.7, update it to be understandable by <= 10.7
error: expected method to read dictionary element not found on object of type 'NSDictionary *'
    NSRunningApplication* app = userInfo[NSWorkspaceApplicationKey];
                                ^
---
 src/gui/osutils/macutils/AppKitImpl.mm | 4 ++--
 src/gui/osutils/macutils/MacUtils.cpp  | 7 +++++++
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/src/gui/osutils/macutils/AppKitImpl.mm b/src/gui/osutils/macutils/AppKitImpl.mm
index 77450b1636..b3ee9fc5d9 100644
--- src/gui/osutils/macutils/AppKitImpl.mm
+++ src/gui/osutils/macutils/AppKitImpl.mm
@@ -60,7 +60,7 @@ - (id) initWithObject:(AppKit*)appkit
 - (void) didDeactivateApplicationObserver:(NSNotification*) notification
 {
     NSDictionary* userInfo = notification.userInfo;
-    NSRunningApplication* app = userInfo[NSWorkspaceApplicationKey];
+    NSRunningApplication* app = [userInfo objectForKey:NSWorkspaceApplicationKey];
 
     if (app.processIdentifier != [self ownProcessId]) {
         self.lastActiveApplication = app;
@@ -184,7 +184,7 @@ - (bool) enableAccessibility
 //
 - (bool) enableScreenRecording
 {
-#if __clang_major__ >= 9
+#if __clang_major__ >= 9 && MAC_OS_X_VERSION_MIN_REQUIRED >= 1080
     if (@available(macOS 10.15, *)) {
         // Request screen recording permission on macOS 10.15+
         // This is necessary to get the current window title
diff --git a/src/gui/osutils/macutils/MacUtils.cpp b/src/gui/osutils/macutils/MacUtils.cpp
index 6e4b478bfc..5b47516034 100644
--- src/gui/osutils/macutils/MacUtils.cpp
+++ src/gui/osutils/macutils/MacUtils.cpp
@@ -26,7 +26,10 @@
 #include <QWindow>
 
 #include <ApplicationServices/ApplicationServices.h>
+
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1080
 #include <CoreGraphics/CGEventSource.h>
+#endif
 
 #define INVALID_KEYCODE 0xFFFF
 
@@ -138,7 +141,11 @@ void MacUtils::setLaunchAtStartup(bool enable)
 
 bool MacUtils::isCapslockEnabled()
 {
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1080
     return (CGEventSourceFlagsState(kCGEventSourceStateHIDSystemState) & kCGEventFlagMaskAlphaShift) != 0;
+#else
+    return false;
+#endif
 }
 
 /**

From 6b51d7296a75e67865e726d1b29eb1b97ef4df53 Mon Sep 17 00:00:00 2001
From: tenzap <fabstz-it@yahoo.fr>
Date: Mon, 15 Nov 2021 01:00:31 +0100
Subject: [PATCH 6/6] Fix compilation error on OS X 10.11

src/core/Alloc.cpp:44:10: error: no type named 'free' in namespace 'std'
    std::free(ptr);
    ~~~~~^

This is a regression, since it was fixed in [1]

Per [2], std::free() needs #include <cstdlib>. That file is included
indirectly on newer systems.

[1] https://github.com/keepassxreboot/keepassxc/commit/7c6c027d33b06eb706f93e3d178a2305d7bcfd56
[2] https://en.cppreference.com/w/cpp/memory/c/free
---
 src/core/Alloc.cpp | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/core/Alloc.cpp b/src/core/Alloc.cpp
index 266f2a3861..b9ae09221a 100644
--- src/core/Alloc.cpp
+++ src/core/Alloc.cpp
@@ -16,6 +16,7 @@
  */
 
 #include <botan/mem_ops.h>
+#include <cstdlib>
 #if defined(Q_OS_MACOS)
 #include <malloc/malloc.h>
 #elif defined(Q_OS_FREEBSD)

From f024f18c71dd6f285d5106ded3dbeca7b648d133 Mon Sep 17 00:00:00 2001
From: tenzap <fabstz-it@yahoo.fr>
Date: Mon, 22 Nov 2021 09:25:12 +0100
Subject: [PATCH] fix compilation on older macs

These methods are only available from macOS 10.15
  - kSecAccessControlWatch
  - LAPolicy.deviceOwnerAuthenticationWithBiometricsOrWatch
---
 src/touchid/TouchID.mm | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/src/touchid/TouchID.mm b/src/touchid/TouchID.mm
index a2cefecf..283c33ed 100644
--- src/touchid/TouchID.mm
+++ src/touchid/TouchID.mm
@@ -95,18 +95,24 @@ bool TouchID::storeKey(const QString& databasePath, const QByteArray& passwordKe
     // prepare adding secure entry to the macOS KeyChain
     CFErrorRef error = NULL;
     SecAccessControlRef sacObject;
+#if __clang_major__ >= 9
     if (@available(macOS 10.15, *)) {
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 101500
         // kSecAccessControlWatch is only available for macOS 10.15 and later
         sacObject = SecAccessControlCreateWithFlags(kCFAllocatorDefault,
                                                     kSecAttrAccessibleWhenUnlockedThisDeviceOnly,
                                                     kSecAccessControlOr | kSecAccessControlBiometryCurrentSet | kSecAccessControlWatch,
                                                     &error);
+#endif
     } else {
+#endif
         sacObject = SecAccessControlCreateWithFlags(kCFAllocatorDefault,
                                                     kSecAttrAccessibleWhenUnlockedThisDeviceOnly,
                                                     kSecAccessControlTouchIDCurrentSet, // depr: kSecAccessControlBiometryCurrentSet,
                                                     &error);
+#if __clang_major__ >= 9
     }
+#endif


     if (sacObject == NULL || error != NULL) {
@@ -234,11 +240,17 @@ bool TouchID::isAvailable()
         LAContext* context = [[LAContext alloc] init];

         LAPolicy policyCode;
+#if __clang_major__ >= 9
         if (@available(macOS 10.15, *)) {
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 101500
             policyCode = LAPolicyDeviceOwnerAuthenticationWithBiometricsOrWatch;
+#endif
         } else {
+#endif
             policyCode = LAPolicyDeviceOwnerAuthenticationWithBiometrics;
+#if __clang_major__ >= 9
         }
+#endif

         bool canAuthenticate = [context canEvaluatePolicy:policyCode error:nil];
         [context release];
@@ -274,11 +286,17 @@ bool TouchID::authenticate(const QString& message) const
         NSString* authMessage = msg.toNSString(); // autoreleased

         LAPolicy policyCode;
+#if __clang_major__ >= 9
         if (@available(macOS 10.15, *)) {
+#if MAC_OS_X_VERSION_MIN_REQUIRED >= 101500
             policyCode = LAPolicyDeviceOwnerAuthenticationWithBiometricsOrWatch;
+#endif
         } else {
+#endif
             policyCode = LAPolicyDeviceOwnerAuthenticationWithBiometrics;
+#if __clang_major__ >= 9
         }
+#endif

         [context evaluatePolicy:policyCode
                 localizedReason:authMessage reply:^(BOOL success, NSError* error) {
