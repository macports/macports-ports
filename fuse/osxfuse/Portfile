# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                osxfuse
version             3.8.0
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          fuse devel
platforms           macosx
license             BSD APSL
maintainers         {dports @drkp} openmaintainer

description         A FUSE-Compliant File System Implementation Mechanism \
                    for Mac OS X
long_description    FUSE for OS X implements a mechanism that makes it possible to implement \
                    a fully functional file system in a user-space program on Mac OS X. It \
                    aims to be API-compliant with the FUSE (File-system in USErspace) \
                    mechanism that originated on Linux.  Therefore, many existing FUSE file \
                    systems become readily usable on Mac OS X. This port provides the \
                    user-space library and header files for building filesystems.

homepage            https://osxfuse.github.io/

livecheck.type      regex
livecheck.url       ${homepage}
livecheck.regex     "FUSE for macOS (\\d+(?:\\.\\d+)*)"

# Use the published signed kext for OS 10.9 (Darwin 13) and later.
# Don't even fetch and extract the dmg unnecessarily, since the commands don't
# work on some earlier OS versions.
if {${os.major} >= 13} {
    set use_signed_kext    yes
} else {
    set use_signed_kext    no
}

# We will build user-space components for the specified arch, and
# kernel modules for the kernel arch.
set kernel_arch [exec uname -m]
# If building for different kernel arch than our buildslaves use, force a build
# from source. The binary package IDs don't encode the kernel arch.
if {${kernel_arch} ne "x86_64"} {
    archive_sites
}

distfiles
dist_subdir ${name}/${version}
set mp.dist {
    osxfuse     19b3fb7
    kext        93017b5
    framework   8b79906
    prefpane    095ba9c
    fuse        5abbc87
    support     587d243
}

depends_build       port:autoconf \
                    port:automake \
                    port:libtool

set mp.osxfuse_rev  [lindex ${mp.dist} [expr [lsearch ${mp.dist} osxfuse] + 1]]
worksrcdir          osxfuse-osxfuse-${mp.osxfuse_rev}

foreach { mp.comp mp.rev } ${mp.dist} {
    set f ${mp.comp}-${mp.rev}.tar.gz
    master_sites-append https://github.com/osxfuse/${mp.comp}/tarball/${mp.rev}/:${mp.comp}
    distfiles-append    ${f}:${mp.comp}
}

if { $use_signed_kext } {
    master_sites-append https://github.com/osxfuse/osxfuse/releases/download/osxfuse-${version}
    distfiles-append ${name}-${version}.dmg
}

checksums           osxfuse-19b3fb7.tar.gz \
                    rmd160  9f584fe05f9ba28089980d4a74f5cadcb8d8255f \
                    sha256  0997b4a46c253dc47bd298ac68474006013a8ecc33c5171005340385fa28510b \
                    size    32332 \
                    kext-93017b5.tar.gz \
                    rmd160  2ca07a81e26d5263cd0e43bdc977490bd11c665c \
                    sha256  6679f629cc3de74b69bed52bc3a9a4834f9bd7db36c6a73ce6e29f99efae79bf \
                    size    118892 \
                    framework-8b79906.tar.gz \
                    rmd160  d3ad907fc8ed42fb7ca5cdf08ceb8aa09ba1ec74 \
                    sha256  f08a2e063aa6b3299e4edc4cd898a557c20b6d6c85eb26cd489eb6a642d682e6 \
                    size    35758 \
                    prefpane-095ba9c.tar.gz \
                    rmd160  c7794cd3d644cf1f036b248d21a83901d93187ca \
                    sha256  2426c4669aeb1c1179e5e89af46f2d9a30743f6929419c6414c7eeb8b3212fae \
                    size    5346030 \
                    fuse-5abbc87.tar.gz \
                    rmd160  b68cde9bbbc915e869359aa83568f65268923672 \
                    sha256  c439c57436a623a8160658763fd768bf02c3ad54877b6ed9e1cc0c7c2bf145c9 \
                    size    231403 \
                    support-587d243.tar.gz \
                    rmd160  8c304cebd0e1e35be0c4ec6626bf7b68f499b3d9 \
                    sha256  5e708f831d63dfb38be9abf461f93863639265a47ebeab1fdef1924f0d4bf4a6 \
                    size    3391241 \
                    osxfuse-3.8.0.dmg \
                    rmd160  1ad2ab21611508e541e5c61481c4ca75e6fa14c4 \
                    sha256  4661f160e678e46d83a9a63fd0b7eb10903f688f7d37ea066c543a37781a0007 \
                    size    6943979

# extract phase will just extract the dmg; post-extract will expand
# the tarballs
if { $use_signed_kext } {
    use_dmg yes
    extract.only ${name}-${version}.dmg
}

post-extract {
    # Extract the pkg and the appropriate payload from the binary dmg
    if { $use_signed_kext } {
        system -W ${workpath}/${name}-${version} "pkgutil --expand 'FUSE for macOS.pkg' ${workpath}/pkg"
        system -W ${workpath}/pkg/Core.pkg "gzip -dc Payload | cpio -id"
    }

    # Extract the source tarballs
    foreach { mp.comp mp.rev } ${mp.dist} {
        if { $use_signed_kext } {
            system -W ${workpath} "tar -xvf ${distpath}/${mp.comp}-${mp.rev}.tar.gz"
        }
        if {${mp.comp} ne "osxfuse"} {
            # Replace existing empty directory if it exists
            file delete ${workpath}/${worksrcdir}/${mp.comp}
            move ${workpath}/osxfuse-${mp.comp}-${mp.rev} ${workpath}/${worksrcdir}/${mp.comp}
        }
    }

    if {${os.major} == 17 && [catch {system "/usr/bin/gen_bridge_metadata --version > /dev/null 2>&1"}]} {
        ui_msg "If building this port fails, consider applying the following workaround:"
        ui_msg ""
        ui_msg "    cd \$(xcode-select -p)/Toolchains"
        ui_msg "    sudo ln -s XcodeDefault.xctoolchain OSX10.13.xctoolchain"
        ui_msg ""
        ui_msg "See https://trac.macports.org/ticket/54939 for more information."
    }
}

if { ! $use_signed_kext } {
    patchfiles      patch-build.d_targets_packagemanager.sh.diff
}

use_configure   no

build.cmd       ./build.sh -t packagemanager
build.target    -a build
build.args      -v 5 \
                --build-directory="${workpath}" -- \
                -a [join [get_canonical_archs] " -a "] \
                --framework-prefix="${prefix}" \
                --fsbundle-prefix="${prefix}" \
                --library-prefix="${prefix}" 

# Clear CPATH and LIBRARY_PATH because a ncurses include file
# conflicts with the one in MacPorts. It doesn't matter much anyway
# because osxfuse doesn't have any dependencies to link against.
compiler.cpath
compiler.library_path

destroot.target -a install
destroot.args   -v 5 --build-directory="${workpath}"
destroot.destdir -- "${destroot}${prefix}"


# On Mavericks and Yosemite, replace the kext we just built with the
# one from the binary distribution. This works around OS X's
# unwillingness to load an unsigned kext (and our inability to sign
# kexts). See #45521.
#
# Unlike newer versions, Mavericks does not require the kext to be
# signed, but will display a warning if it's unsigned -- so use the
# signed binary instead here too.
if { $use_signed_kext } {
    post-destroot {
        delete ${destroot}${prefix}/Library/Filesystems/osxfuse.fs/Contents/Extensions
        file copy ${workpath}/pkg/Core.pkg/Library/Filesystems/osxfuse.fs/Contents/Extensions \
            ${destroot}${prefix}/Library/Filesystems/osxfuse.fs/Contents
    }
}

post-destroot {
    # Set proper permissions
    fs-traverse f ${destroot}${prefix}/Library {
        file attributes $f -owner root -group wheel
    }
    # Enable setuid on helper binary
    file attributes ${destroot}${prefix}/Library/Filesystems/osxfuse.fs/Contents/Resources/load_osxfuse -permissions 04755
}

destroot.violate_mtree yes

notes {
    When upgrading, unmount all FUSE filesystems and then unload the kernel extension.
    Unloading can be done via: sudo kextunload -b com.github.osxfuse.filesystems.osxfuse
    Alternatively (or if this fails), just reboot your computer now.
}

# Could probably be supported by setting ARCHS correctly above
universal_variant no
