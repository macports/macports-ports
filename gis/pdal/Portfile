# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                        1.0
PortGroup           legacysupport 1.1
PortGroup           cmake         1.1
PortGroup           github        1.0
PortGroup           openssl       1.0

github.setup        PDAL PDAL 2.4.2
revision            1
categories          gis
license             BSD

maintainers         {vince @Veence} openmaintainer

description         PDAL - Point Cloud Manipulation Library

long_description    PDAL is a C++ BSD library for translating and\
                    manipulating point cloud data. It is very much\
                    like the GDAL library which handles raster and\
                    vector data.

homepage            https://www.pdal.io
distname            PDAL-${version}-src

# Enable use of 'macports-libcxx' for macOS 10.14 and earlier, as port uses
# libcxx features normally only available on 10.15 and later.
legacysupport.use_mp_libcxx \
                        yes
legacysupport.newest_darwin_requires_legacy \
                        18

compiler.cxx_standard  2017

checksums           rmd160  0c446cad4157240d57d1adfcc95437c4148f46d4 \
                    sha256  8d0a96204561d81a06d24a8f7e73e6157b99eb8b2843fa654bd37320c4887d46 \
                    size    103679479

depends_lib-append  port:geos \
                    port:gdal \
                    port:libgeotiff \
                    port:zlib \
                    port:libxml2 \
                    port:curl \
                    port:libunwind


# Python stuff
set python_suffixes {27 35 36 37 38 39 310}
set def_py_var "if {"

set python_variants {}
foreach suffix ${python_suffixes} {
    lappend python_variants python${suffix}
    set def_py_var "${def_py_var}!\[variant_isset python${suffix}\] && "
}

# Set default variant
set def_py_var [string range ${def_py_var} 0 end-4]
set def_py_var "${def_py_var}} {default_variants +python310}"
eval ${def_py_var}

foreach suffix ${python_suffixes} {
    set vrt         python${suffix}
    set pyversion   [string index ${suffix} 0].[string range ${suffix} 1 end]
    set index       [lsearch -exact ${python_variants} ${vrt}]
    set conf        [lreplace ${python_variants} ${index} ${index}]
    set pyfw        ${frameworks_dir}/Python.framework/Versions/${pyversion}

    variant ${vrt} description "Use Python ${pyversion}" conflicts {*}${conf} "
        depends_lib-append      port:${vrt} \
                                port:py${suffix}-numpy
    
        configure.args-append   \
            -DBUILD_PLUGIN_PYTHON=ON \
            -DPYTHON_EXECUTABLE=${prefix}/bin/python${pyversion} \
            -DPYTHON_INCLUDE_DIR=${pyfw}/Headers \
            -DPYTHON_LIBRARY=${pyfw}/lib/libpython${pyversion}.dylib
    "
}


# Database variants (from the GDAL port)
set postgresql_suffixes {14 13 12 11 10 95 96}
set def_psql_var "if {"

set postgresql_variants {}
foreach suffix ${postgresql_suffixes} {
    lappend postgresql_variants postgresql${suffix}
    set def_psql_var "${def_psql_var}![variant_isset postgresql${suffix}] && "
}

# Set default variant
set def_psql_var [string range ${def_psql_var} 0 end-4]
set def_psql_var "${def_psql_var}} {default_variants +postgresql14}"
eval ${def_psql_var}

foreach suffix ${postgresql_suffixes} {
    set vrt postgresql${suffix}
    set pgversion [string index ${suffix} 0].[string index ${suffix} 1]
    set index [lsearch -exact ${postgresql_variants} ${vrt}]
    set conf [lreplace ${postgresql_variants} ${index} ${index}]

    variant ${vrt} description "Use PostgreSQL ${pgversion}" conflicts {*}${conf} "
        depends_lib-append      port:${vrt}
        configure.args-append   \
            -DPG_CONFIG=${prefix}/lib/${vrt}/bin/pg_config \
            -DPOSTGRESQL_INCLUDE_DIR=${prefix}/include/${vrt} \
            -DPOSTGRESQL_LIBRARIES=${prefix}/lib/${vrt}/libpq.dylib
    "
}

# Kludge: needs proper fixing
configure.cppflags-append   -g
configure.ldflags-append   -g
post-configure {
    reinplace "s|-isysroot\[^ \]*||" ${workpath}/build/bin/pdal-config
}
