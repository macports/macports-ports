# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           mpi 1.0
PortGroup           wxWidgets 1.0

wxWidgets.use       wxWidgets-3.2

name                saga
categories          gis
license             GPL
version             9.0.2
revision            0
maintainers         {vince @Veence} openmaintainer

description         SAGA is a GIS oriented towards statistics and analysis

long_description    SAGA - System for Automated Geoscientific Analyses - is\
                    a GIS software designed for an easy and effective\
                    implementation of spatial algorithms and offers\
                    a comprehensive, growing set of geoscientific methods.\
                    It uses wxWidgets as a GUI.

homepage            https://saga-gis.sourceforge.io/en/index.html
master_sites        sourceforge:project/saga-gis/SAGA%20-%20[lindex [split ${version} "."] 0]/SAGA%20-%20${version}

checksums           rmd160  83251de8d7a7b1d55e6c0d6cfa0c605e91f73477 \
                    sha256  772aae9ee44e4251752e8fd7b0d8fd42537b59b8a692c7d3d6cf13aea07d3d71 \
                    size    8348999

cmake.source_dir    ${worksrcpath}/saga-gis

patchfiles-append   shape_cpp.diff
patchfiles-append   python_cmake.diff

depends_build-append \
                    port:pkgconfig \
                    port:swig

# SAGA 9.0.2 do not support PROJ 8+ API
depends_lib-append  port:${wxWidgets.port} \
                    port:gdal \
                    port:proj7 \
                    port:opencv4 \
                    port:PDAL \
                    port:curl \
                    port:tiff

mpi.setup

compiler.cxx_standard       2014

configure.pkg_config_path-append \
                            "${prefix}/lib/opencv4/pkgconfig"

configure.args              -DwxWidgets_CONFIG_EXECUTABLE=${wxWidgets.wxconfig} \
                            -DOpenMP_SUPPORT=OFF \
                            -DWITH_GUI=OFF \
                            -DWITH_PYTHON=OFF \
                            -DWITH_SYSTEM_SVM=OFF \
                            -DWITH_SYSTEM_GEOTRANS=OFF \
                            -DWITH_CLIPPER_ONE=OFF \
                            -DWITH_MRMR=OFF \
                            -DPROJ_INCLUDE_DIR=${prefix}/lib/proj7/include \
                            -DPROJ_LIBRARY=${prefix}/lib/proj7/lib/libproj.dylib
                            
configure.args-append       -DWITH_TOOLS=ON \
                            -DWITH_TOOLS_OPENCV=ON \
                            -DWITH_TOOLS_GDAL=ON \
                            -DWITH_TOOLS_HPDF=OFF \
                            -DWITH_TOOLS_PDAL=ON \
                            -DWITH_TOOLS_POSTGRES=OFF \
                            -DWITH_TOOLS_PROJ=ON \
                            -DWITH_TOOLS_RIEGL=OFF \
                            -DWITH_TOOLS_VIGRA=OFF \

variant gui description "Build with GUI interface" {
    configure.args-replace  -DWITH_GUI=OFF -DWITH_GUI=ON
}

# Set ODBC variant
variant unixodbc conflicts iodbc description {Build ODBC driver against unixODBC} {
    depends_lib-append      port:unixODBC
}

variant iodbc conflicts unixodbc description {Build ODBC driver against iODBC} {
    depends_lib-append      port:libiodbc
}

if {![variant_isset unixodbc] && ![variant_isset iodbc]} {
    default_variants        +unixodbc
}

variant vigra description "Add VIGRA support" {
    if {![catch {set result [active_variants hdf5 openmpi]}]} {
        if {$result} {
            if {![variant_isset openmpi]} {
                return -code error "HDF5 has openmpi enabled, please use the same variant."
            }
        }
    }

    if {![catch {set result [active_variants hdf5 openmpi-devel]}]} {
        if {$result} {
            if {![variant_isset openmpi-devel]} {
                return -code error "HDF5 has openmpi_devel enabled, please use the same variant."
            }
        }
    }

    if {![catch {set result [active_variants hdf5 mpi]}]} {
        if {$result} {
            if {![variant_isset mpi]} {
                return -code error "HDF5 has mpi enabled, please use the same variant."
            }
        }
    }

    if {![catch {set result [active_variants hdf5 mpich-devel]}]} {
        if {$result} {
            if {![variant_isset mpich-devel]} {
                return -code error "HDF5 has mpich-devel enabled, please use the same variant."
            }
        }
    }

    if {[variant_isset mpich] || [variant_isset mpich-devel] || \
        [variant_isset openmpi] || [variant_isset openmpi_devel]} {

        mpi.enforce_variant     hdf5
    }

    configure.args-replace     -DWITH_TOOLS_VIGRA=OFF -DWITH_TOOLS_VIGRA=ON \
                               -DWITH_MRMR=OFF -DWITH_MRMR=ON
    depends_lib-append         port:vigra \
                               port:hdf5 \
                               port:fftw-3
}

variant libharu description "Add libHaru support for PDF creation" {
    configure.args-replace  -DWITH_TOOLS_HPDF=OFF -DWITH_TOOLS_HPDF=ON
    depends_lib-append      port:libharu
}

# Set Python variant
set python_suffixes {39 310 311}
set python_variants {}

foreach pyver ${python_suffixes} {
    lappend python_variants python${pyver}
}

foreach pyver ${python_suffixes} {
    set index [lsearch -exact ${python_variants} python${pyver}]
    set py_dot_ver [string index ${pyver} 0].[string range ${pyver} 1 end]
    set conf [lreplace ${python_variants} ${index} ${index}]

    variant python${pyver} description "Add Python ${py_dot_ver} API" conflicts {*}${conf} "
        depends_lib-append      port:python${pyver} \
                                port:swig-python
        configure.args-replace  -DWITH_PYTHON=OFF -DWITH_PYTHON=ON
        post-patch {
            reinplace \"s|@PYVER@|${py_dot_ver}|\" \
              ${worksrcpath}/saga-gis/src/saga_core/saga_api/saga_api_python/CMakeLists.txt
    }
    "
}

# Set PostgreSQL variant
set postgresql_suffixes {10 11 12 13 14 15}

set postgresql_variants {}
foreach suffix ${postgresql_suffixes} {
    lappend postgresql_variants postgresql${suffix}
}

foreach suffix ${postgresql_suffixes} {
    set vrt postgresql${suffix}
    set index [lsearch -exact ${postgresql_variants} ${vrt}]
    set conf [lreplace ${postgresql_variants} ${index} ${index}]

    variant ${vrt} description "Use PostgreSQL ${suffix}" conflicts {*}${conf} "
        depends_lib-append      port:${vrt}
        configure.env-append    POSTGRES_HOME=${prefix}/lib/${vrt}
        configure.args-replace  -DWITH_TOOLS_POSTGRES=OFF -DWITH_TOOLS_POSTGRES=ON
    "
}

# PostgreSQL default
set pgdefault "if {"

foreach suffix ${postgresql_suffixes} {
    set pgdefault "${pgdefault}!\[variant_isset postgresql${suffix}\] && "
}

set pgdefault [string range ${pgdefault} 0 end-4]
set pgdefault "${pgdefault}} { default_variants +postgresql15 }"

eval ${pgdefault}

destroot.target             install

livecheck.regex             ${name}-(\[0-9a-z.\]+)${extract.suffix}
