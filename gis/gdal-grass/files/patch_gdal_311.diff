diff --git a/ogrgrass.h b/ogrgrass.h
index b1855a2..957e0be 100644
--- ogrgrass.h
+++ ogrgrass.h
@@ -30,6 +30,7 @@
 #ifndef OGRGRASS_H_INCLUDED
 #define OGRGRASS_H_INCLUDED
 
+#include "gdal_version.h"
 #include "ogrsf_frmts.h"
 
 extern "C"
@@ -56,12 +57,19 @@ class OGRGRASSLayer final : public OGRLayer
         return poFeatureDefn;
     }
     GIntBig GetFeatureCount(int) override;
+
+#if GDAL_VERSION_NUM >= GDAL_COMPUTE_VERSION(3, 11, 0)
+    OGRErr IGetExtent(int iGeomField, OGREnvelope *psExtent, bool bForce)
+        override;
+#else
     OGRErr GetExtent(OGREnvelope *psExtent, int bForce) override;
     virtual OGRErr GetExtent(int iGeomField, OGREnvelope *psExtent,
                              int bForce) override
     {
         return OGRLayer::GetExtent(iGeomField, psExtent, bForce);
     }
+#endif
+
     virtual OGRSpatialReference *GetSpatialRef() override;
     int TestCapability(const char *) override;
 
@@ -73,11 +81,16 @@ class OGRGRASSLayer final : public OGRLayer
 
     // Filters
     virtual OGRErr SetAttributeFilter(const char *query) override;
+#if GDAL_VERSION_NUM >= GDAL_COMPUTE_VERSION(3, 11, 0)
+    virtual OGRErr ISetSpatialFilter(int iGeomField,
+                                     const OGRGeometry *poGeom) override;
+#else
     virtual void SetSpatialFilter(OGRGeometry *poGeomIn) override;
     virtual void SetSpatialFilter(int iGeomField, OGRGeometry *poGeom) override
     {
         OGRLayer::SetSpatialFilter(iGeomField, poGeom);
     }
+#endif
 
   private:
     char *pszName;
diff --git a/ogrgrasslayer.cpp b/ogrgrasslayer.cpp
index 09a6731..1af4762 100644
--- ogrgrasslayer.cpp
+++ ogrgrasslayer.cpp
@@ -643,11 +643,20 @@ bool OGRGRASSLayer::ResetSequentialCursor()
 /************************************************************************/
 /*                           SetSpatialFilter                           */
 /************************************************************************/
+#if GDAL_VERSION_NUM >= GDAL_COMPUTE_VERSION(3, 11, 0)
+OGRErr OGRGRASSLayer::ISetSpatialFilter(int iGeomField,
+                                        const OGRGeometry *poGeomIn)
+#else
 void OGRGRASSLayer::SetSpatialFilter(OGRGeometry *poGeomIn)
+#endif
 {
     CPLDebug("GRASS", "SetSpatialFilter");
 
+#if GDAL_VERSION_NUM >= GDAL_COMPUTE_VERSION(3, 11, 0)
+    OGRLayer::ISetSpatialFilter(iGeomField, poGeomIn);
+#else
     OGRLayer::SetSpatialFilter(poGeomIn);
+#endif
 
     if (poGeomIn == NULL)
     {
@@ -657,10 +666,14 @@ void OGRGRASSLayer::SetSpatialFilter(OGRGeometry *poGeomIn)
             CPLFree(paSpatialMatch);
             paSpatialMatch = NULL;
         }
-        return;
     }
-
-    SetSpatialMatch();
+    else
+    {
+        SetSpatialMatch();
+    }
+#if GDAL_VERSION_NUM >= GDAL_COMPUTE_VERSION(3, 11, 0)
+    return OGRERR_NONE;
+#endif
 }
 
 /************************************************************************/
@@ -1071,7 +1084,12 @@ GIntBig OGRGRASSLayer::GetFeatureCount(int bForce)
 /*                                                                      */
 /*      Returns OGRERR_NONE/OGRRERR_FAILURE.                            */
 /************************************************************************/
+#if GDAL_VERSION_NUM >= GDAL_COMPUTE_VERSION(3, 11, 0)
+OGRErr OGRGRASSLayer::IGetExtent(int /*iGeomField */, OGREnvelope *psExtent,
+                                 bool /*bForce*/)
+#else
 OGRErr OGRGRASSLayer::GetExtent(OGREnvelope *psExtent, int /*bForce*/)
+#endif
 {
     struct bound_box box;
 