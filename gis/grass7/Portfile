# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           wxWidgets 1.0
PortGroup           github 1.0

github.setup        OSGeo grass 7.8.1
name                grass7
set main_version    [join [lrange [split ${version} "."] 0 1] ""]
revision            1
set realVersion     ${version}
#distname           grass-${version}
distname            grass-${realVersion}
maintainers         nomaintainer
categories          gis
license             GPL-2+
platforms           darwin

description         GRASS
long_description    GRASS is a Geographic Information System (GIS) used for \
                    geospatial data management and analysis.

homepage            http://grass.osgeo.org/
master_sites        ${homepage}grass[join [lrange [split ${realVersion} .] 0 1] {}]/source/

checksums           rmd160  e485707ec58adf3205cf042bd7e324e5eaf754a9 \
                    sha256  6ae578fd67afcce7abec4ba4505dcc55b3d2dfe0ca46b99d966cb148c654abb3 \
                    size    60527722

depends_build       port:pkgconfig
depends_lib         port:bzip2 \
                    port:freetype \
                    port:fftw-3 \
                    port:gdal \
                    port:pdal \
                    port:geos \
                    port:tiff \
                    port:libpng \
                    port:liblas\
                    path:lib/pkgconfig/cairo.pc:cairo \
                    port:readline

patchfiles          patch-configure.diff \
                    patch-Install_make.diff \
                    patch-libraster_gdal_c.diff \
                    vector_v.in.pdal_Makefile.diff

configure.ldflags-append    -framework OpenCL

configure.args-append \
    --prefix=${prefix}/share \
    --exec-prefix=${prefix} \
    --with-opengl=no \
    --with-opencl=yes \
    --with-bzlib \
    --with-bzlib-includes=${prefix}/include \
    --with-bzlib-libs=${prefix}/lib \
    --with-fftw-includes=${prefix}/include \
    --with-fftw-libs=${prefix}/lib \
    --with-freetype \
    --with-freetype-includes=${prefix}/include/freetype2 \
    --with-freetype-libs=${prefix}/lib \
    --with-gdal=${prefix}/bin/gdal-config \
    --with-pdal=${prefix}/bin/pdal-config \
    --with-tiff-includes=${prefix}/include \
    --with-tiff-libs=${prefix}/lib \
    --with-png-includes=${prefix}/include \
    --with-png-libs=${prefix}/lib \
    --with-geos \
    --with-geos-includes=${prefix}/include \
    --with-geos-libs=${prefix}/lib \
    --with-liblas-includes=${prefix}/include/liblas\
    --with-liblas-libs=${prefix}/lib \
    --without-postgres \
    --with-pthread \
    --with-cairo \
    --with-cairo-includes=${prefix}/include/cairo \
    --with-cairo-libs=${prefix}/lib \
    --with-blas=no \
    --with-lapack=no \
    --with-readline \
    --with-readline-includes=${prefix}/include/readline \
    --with-readline-libs=${prefix}/lib

build.target            default

# Python 3 variants
set python_suffixes {34 35 36 37 38}
set python_variants {}

foreach pyver ${python_suffixes} {
    set vrt python${pyver}
    set pyversion [string index ${pyver} 0].[string index ${pyver} 1]
    set index [lsearch -exact ${python_variants} ${vrt}]
    set conf [lreplace ${python_variants} ${index} ${index}]

        variant ${vrt} description "Use Python ${pyversion}" conflicts {*}${conf} "
            depends_lib-append      port:python${pyver} \
                                    port:py${pyver}-Pillow \
                                    port:py${pyver}-numpy \
                                    port:py${pyver}-six

            depends_run-append      port:py${pyver}-psycopg2

        "
    post-patch {
        set python_bin ${prefix}/bin/python${pyversion}
        fs-traverse f ${worksrcpath} {
            if {[file extension ${f}] eq ".py"} {
                reinplace -q "s|/usr/bin/env python3|${python_bin}|" ${f}
            }   
        }
        reinplace "s|PYVER.*|PYVER = ${pyversion}|" ${worksrcpath}/macosx/Makefile
        reinplace "s|^PYTHON.*|PYTHON = ${python_bin}|" ${worksrcpath}/include/Make/Platform.make.in
        reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/lib/raster/gdal.c
    }
}

# Python default
set pydefault "if {"

foreach suffix ${python_suffixes} {
    set pydefault "${pydefault}!\[variant_isset python${suffix}\] && "
}

set pydefault [string range ${pydefault} 0 end-4]
set pydefault "${pydefault}} { default_variants +python37 }"

eval ${pydefault}

# PROJ version

variant proj4 description {Builds with PROJ4 4.x} {}

if {[variant_isset proj4]} {
    set PROJ    "proj49"
} else {
    set PROJ    "proj6"
}

depends_lib-append          port:[string range ${PROJ} 0 end-1]
configure.env               PATH=$::env(PATH):${prefix}/lib/${PROJ}/bin
build.env                   PATH=$::env(PATH):${prefix}/lib/${PROJ}/bin
configure.args-append       --with-proj-includes=${prefix}/lib/${PROJ}/include \
                            --with-proj-libs=${prefix}/lib/${PROJ}/lib \
                            --with-proj-share=${prefix}/lib/${PROJ}/share/proj

variant gui description {Builds with WxPython GUI} {

    wxWidgets.use           wxWidgets-3.2

    depends_lib-append      port:${wxWidgets.port}

    foreach pyver ${python_suffixes} {
        if {[variant_isset python${pyver}]} {
            depends_lib-append  port:py${pyver}-wxpython-4.0
        }
    }

    configure.args-append   --with-wxwidgets=${wxWidgets.wxconfig}
    configure.args-delete   --with-opengl=no
    configure.args-append   --with-opengl=osx
}

variant mysql5 description {Add MySQL 5 support} {
    depends_lib-append      path:bin/mysql_config5:mysql5
    configure.args-append   --with-mysql
    configure.args-append   --with-mysql-includes=${prefix}/include/mysql5/mysql
    configure.args-append   --with-mysql-libs=${prefix}/lib/mysql5/mysql
    configure.env-append    MYSQLD_CONFIG=${prefix}/lib/mysql5/bin/mysql_config
}

# PostGreSQL variants (from the GDAL port)
set postgresql_suffixes {12 11 10}

set postgresql_variants {}
foreach suffix ${postgresql_suffixes} {
    lappend postgresql_variants postgresql${suffix}
}

foreach suffix ${postgresql_suffixes} {
    set vrt postgresql${suffix}
    set pgversion [string index ${suffix} 0].[string index ${suffix} 1]
    set index [lsearch -exact ${postgresql_variants} ${vrt}]
    set conf [lreplace ${postgresql_variants} ${index} ${index}]

    variant ${vrt} description "Use PostgreSQL ${pgversion}" conflicts {*}${conf} "
        depends_lib-append      port:${vrt}
        configure.args-append   --with-postgres-includes=${prefix}/include/${vrt}
        configure.args-append   --with-postgres-libs=${prefix}/lib/${vrt}
        configure.args-delete   --with-postgres=no
        configure.args-append   --with-postgres=yes
    "
}

# PostGreSQL default
set pgdefault "if {"

foreach suffix ${postgresql_suffixes} {
    set pgdefault "${pgdefault}!\[variant_isset postgresql${suffix}\] && "
}

set pgdefault [string range ${pgdefault} 0 end-4]
set pgdefault "${pgdefault}} { default_variants +postgresql12 }"

eval ${pgdefault}

variant sqlite description {Add SQLite 3 support} {
    depends_lib-append    port:sqlite3
    configure.args-append --with-sqlite
    configure.args-append --with-sqlite-includes=${prefix}/include
    configure.args-append --with-sqlite-libs=${prefix}/lib
}

variant ffmpeg description {Add ffmpeg support} {
    depends_lib-append    path:lib/libavcodec.dylib:ffmpeg
    configure.args-append --with-ffmpeg \
                          --with-ffmpeg-includes=\"${prefix}/include/libavcodec  \
                                                   ${prefix}/include/libavformat \
                                                   ${prefix}/include/libswscale\" \
                          --with-ffmpeglibs=${prefix}/lib
}

variant openblas description {Use OpenBLAS for BLAS/LAPACK} {
    depends_lib-append      port:openblas

    configure.args-delete   --with-blas=no
    configure.args-delete   --with-lapack=no
    configure.args-append   --with-blas=yes
    configure.args-append   --with-lapack=yes
    configure.args-append   --with-blas-includes=${prefix}/include
    configure.args-append   --with-libblas=${prefix}/lib/libopenblas.dylib
    configure.args-append   --with-lapack-includes=${prefix}/include
    configure.args-append   --with-liblapack=${prefix}/lib/libopenblas.dylib
}

post-configure {
    file copy ${prefix}/include/ogr_srs_api.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/ogr_api.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/cpl_progress.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/ogr_core.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/gdal_version.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/cpl_port.h ${worksrcpath}/lib/python/ctypes
    reinplace -E "s|#include <x86intrin.h>|/* #include <x86intrin.h> */|" \
        ${worksrcpath}/lib/python/ctypes/cpl_port.h
    reinplace -E "s|\\\$\\\(CPPFLAGS)|-I${worksrcpath}/lib/python/ctypes \$(CPPFLAGS)\
        \\\\\"-DLL=\\\\\" \\\\\"-Drestrict=\\\\\" \\\\\"-D__attribute__(x)=\\\\\" \
        \\\\\"-D_Nullable=\\\\\" \\\\\"-D_Nonnull=\\\\\" \\\\\"-D__compar=\\\\\" \
        \\\\\"-Dint8_t=char\\\\\" \\\\\"-DCF_INLINE=\\\\\" \\\\\"-Duint16_t=short\\\\\"|" \
        ${worksrcpath}/lib/python/ctypes/Makefile
}

pre-destroot {
    xinstall -d ${destroot}${prefix}/share/grass${main_version}/etc
    touch       ${destroot}${prefix}/share/grass${main_version}/etc/fontcap
}

livecheck.type      regex
livecheck.url       http://grass.osgeo.org/download/software/sources/
livecheck.regex     grass-(7.\[0-9.\]+)${extract.suffix}
