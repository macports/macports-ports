# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           wxWidgets 1.0

name                grass7
version             7.4.1
set realVersion     ${version}
#distname           grass-${version}
distname            grass-${realVersion}
maintainers         nomaintainer
categories          gis
license             GPL-2+
platforms           darwin

description         GRASS
long_description    GRASS is a Geographic Information System (GIS) used for \
                    geospatial data management and analysis.

homepage            http://grass.osgeo.org/
master_sites        ${homepage}grass[join [lrange [split ${realVersion} .] 0 1] {}]/source/

checksums           rmd160  a5e92cfc97308b41098da45fa48a065c41965514 \
                    sha256  560b8669caaafa9e8dbd4bbf2b4b4bbab7dca1cc46ee828eaf26c744fe0635fc \
                    size    57969640

depends_build       port:pkgconfig
depends_lib         port:bzip2 \
                    port:freetype \
                    port:fftw-3 \
                    port:gdal \
                    port:geos \
                    port:tiff \
                    port:libpng \
                    port:liblas\
                    path:lib/pkgconfig/cairo.pc:cairo \
                    port:readline \
                    port:python27 \
                    port:py27-pillow \
                    port:py27-numpy

patchfiles          patch-configure.diff \
                    patch-Install_make.diff \
                    patch-libraster_gdal_c.diff

post-patch {
    set python_bin ${prefix}/bin/python2.7
    fs-traverse f ${worksrcpath} {
        if {[file extension ${f}] eq ".py"} {
            reinplace -q "s|/usr/bin/env python|${python_bin}|" ${f}
        }
    }
    reinplace "s|PYVER.*|PYVER = 2.7|" ${worksrcpath}/macosx/Makefile
    reinplace "s|^PYTHON.*|PYTHON = ${python_bin}|" ${worksrcpath}/include/Make/Platform.make.in
    reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/lib/raster/gdal.c
}

# PROJ version

variant proj4 description {Builds with PROJ4 4.x} {}

if {[variant_isset proj4]} {
    set PROJ    "proj49"
} else {
    set PROJ    "proj5"
}

depends_lib-append          port:[string range ${PROJ} 0 end-1]
configure.env               PATH=$::env(PATH):${prefix}/lib/${PROJ}/bin
build.env                   PATH=$::env(PATH):${prefix}/lib/${PROJ}/bin
configure.args-append       --with-proj-includes=${prefix}/lib/${PROJ}/include \
                            --with-proj-libs=${prefix}/lib/${PROJ}/lib \
                            --with-proj-share=${prefix}/lib/${PROJ}/share/proj \

configure.ldflags-append    -framework OpenCL

configure.args-append \
    --prefix=${prefix}/share \
    --exec-prefix=${prefix} \
    --with-bzlib \
    --with-bzlib-includes=${prefix}/include \
    --with-bzlib-libs=${prefix}/lib \
    --with-fftw-includes=${prefix}/include \
    --with-fftw-libs=${prefix}/lib \
    --with-freetype \
    --with-freetype-includes=${prefix}/include/freetype2 \
    --with-freetype-libs=${prefix}/lib \
    --with-gdal=${prefix}/bin/gdal-config \
    --with-tiff-includes=${prefix}/include \
    --with-tiff-libs=${prefix}/lib \
    --with-png-includes=${prefix}/include \
    --with-png-libs=${prefix}/lib \
    --with-geos \
    --with-geos-includes=${prefix}/include \
    --with-geos-libs=${prefix}/lib \
    --with-liblas=${prefix}/bin/liblas-config\
    --without-postgres \
    --with-pthread \
    --with-cairo \
    --with-cairo-includes=${prefix}/include/cairo \
    --with-cairo-libs=${prefix}/lib \
    --with-opengl=osx \
    --with-opencl=yes \
    --with-blas \
    --with-lapack=no \
    --with-readline \
    --with-readline-includes=${prefix}/include/readline \
    --with-readline-libs=${prefix}/lib

build.target            default

variant gui description {Builds with WxPython GUI} {

    wxWidgets.use       wxPython-3.0

    depends_lib-append      port:${wxWidgets.port} \
                            port:py27-${wxWidgets.port}

    configure.args-append   --with-wxwidgets=${wxWidgets.wxconfig}
}

variant mysql5 description {Add MySQL 5 support} {
    depends_lib-append      path:bin/mysql_config5:mysql5
    configure.args-append   --with-mysql
    configure.args-append   --with-mysql-includes=${prefix}/include/mysql5/mysql
    configure.args-append   --with-mysql-libs=${prefix}/lib/mysql5/mysql
    configure.env-append    MYSQLD_CONFIG=${prefix}/lib/mysql5/bin/mysql_config
}

variant postgresql10 description {Add PostgreSQL 10 support} \
    conflicts postgresql95 postgresql96 {
    depends_lib-append    port:postgresql10
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql10
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql10
}

variant postgresql96 description {Add PostgreSQL 9.6 support} \
    conflicts postgresql95 postgresql10 {
    depends_lib-append    port:postgresql96
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql96
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql96
}

variant postgresql95 description {Add PostgreSQL 9.5 support} \
    conflicts postgresql96 postgresql10 {
    depends_lib-append    port:postgresql95
    configure.args-delete --without-postgres
    configure.args-append --with-postgres
    configure.args-append --with-postgres-includes=${prefix}/include/postgresql95
    configure.args-append --with-postgres-libs=${prefix}/lib/postgresql95
}

if {![variant_isset postgresql10] && ![variant_isset postgresql96] && \
    ![variant_isset postgresql95]} {
    default_variants    +postgresql10
}

variant sqlite description {Add SQLite 3 support} {
    depends_lib-append    port:sqlite3
    configure.args-append --with-sqlite
    configure.args-append --with-sqlite-includes=${prefix}/include
    configure.args-append --with-sqlite-libs=${prefix}/lib
}

variant ffmpeg description {Add ffmpeg support} {
    depends_lib-append    path:lib/libavcodec.dylib:ffmpeg
    configure.args-append --with-ffmpeg \
                          --with-ffmpeg-includes=\"${prefix}/include/libavcodec  \
                                                   ${prefix}/include/libavformat \
                                                   ${prefix}/include/libswscale\" \
                          --with-ffmpeglibs=${prefix}/lib
}

variant atlas description {Use Atlas for BLAS/LAPACK} {
    depends_lib-append      port:atlas
#    configure.args-append   --with-libblas=${prefix}/lib/libtatlas.dylib
#    configure.args-append   --with-liblapack=${prefix}/lib/libtatlas.dylib
}

post-configure {
    file copy ${prefix}/include/ogr_srs_api.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/ogr_api.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/cpl_progress.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/ogr_core.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/gdal_version.h ${worksrcpath}/lib/python/ctypes
    file copy ${prefix}/include/cpl_port.h ${worksrcpath}/lib/python/ctypes
    reinplace -E "s|#include <x86intrin.h>|/* #include <x86intrin.h> */|" \
        ${worksrcpath}/lib/python/ctypes/cpl_port.h
    reinplace -E "s|\\\$\\\(CPPFLAGS)|-I${worksrcpath}/lib/python/ctypes \$(CPPFLAGS)\
        \\\\\"-DLL=\\\\\" \\\\\"-Drestrict=\\\\\" \\\\\"-D__attribute__(x)=\\\\\" \
        \\\\\"-D_Nullable=\\\\\" \\\\\"-D_Nonnull=\\\\\" \\\\\"-D__compar=\\\\\"|" \
        ${worksrcpath}/lib/python/ctypes/Makefile
}

pre-destroot {
    xinstall -d ${destroot}${prefix}/share/grass-${version}/etc
    touch       ${destroot}${prefix}/share/grass-${version}/etc/fontcap
}

livecheck.type      regex
livecheck.url       http://grass.osgeo.org/download/software/sources/
livecheck.regex     grass-(7.\[0-9.\]+)${extract.suffix}
