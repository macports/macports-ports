--- include/Make/Install.make.orig	2020-04-27 11:15:39.000000000 +0200
+++ include/Make/Install.make	2020-04-27 10:57:13.000000000 +0200
@@ -54,7 +54,7 @@
 	while [ ! -d "$$INST_PATH" ]; do \
 		INST_PATH=`dirname $$INST_PATH`; \
 	done; \
-	if [ ! -d "$(INST_DIR)" -a ! -w "$$INST_PATH" ] ; then \
+	if [ ! -d "$(DESTDIR)$(INST_DIR)" -a ! -w "$(DESTDIR)$$INST_PATH" ] ; then \
 		echo "ERROR: Directory $$INST_PATH is a parent directory of your" >&2 ; \
 		echo "  install directory $(INST_DIR) and is not writable." >&2 ; \
 		echo "  Perhaps you need root access." >&2 ; \
@@ -63,7 +63,7 @@
 	fi
 
 install-check-writable:
-	@ if [ -d "$(INST_DIR)" -a ! -w "$(INST_DIR)" ] ; then \
+	@ if [ -d "$(DESTDIR)$(INST_DIR)" -a ! -w "$(DESTDIR)$(INST_DIR)" ] ; then \
 		echo "ERROR: Your install directory $(INST_DIR) is not writable." >&2 ; \
 		echo "  Perhaps you need root access." >&2 ; \
 		echo "  Installation aborted, exiting Make." >&2 ; \
@@ -71,7 +71,7 @@
 	fi
 
 install-check-prefix:
-	@ result=`echo "$(INST_DIR)" | awk '{ if ($$1 ~ /grass/) print $$1 }'`; \
+	@ result=`echo "$(DESTDIR)$(INST_DIR)" | awk '{ if ($$1 ~ /grass/) print $$1 }'`; \
 	if [ "$$result" = "" ] ; then \
 		echo "WARNING: Your install directory $(INST_DIR)" >&2 ; \
 		echo "  does not contain the word 'grass'." >&2 ; \
@@ -96,52 +96,52 @@
 PLATMAKE = include/Make/Platform.make
 GRASSMAKE = include/Make/Grass.make
 
-real-install: | $(INST_DIR) $(UNIX_BIN)
-	-tar cBCf $(GISBASE) - . | tar xBCf $(INST_DIR) - 2>/dev/null
-	-rm $(INST_DIR)/$(GRASS_NAME).tmp
+real-install: | $(DESTDIR) $(INST_DIR) $(UNIX_BIN)
+	-tar cBCf $(GISBASE) - . | tar xBCf $(DESTDIR)$(INST_DIR) - 2>/dev/null
+	-rm $(DESTDIR)$(INST_DIR)/$(GRASS_NAME).tmp
 	$(MAKE) $(STARTUP)
 
-	-rm $(INST_DIR)/$(FONTCAP)
+	-rm $(DESTDIR)$(INST_DIR)/$(FONTCAP)
 	$(MAKE) $(INST_DIR)/$(FONTCAP)
 
-	-rm $(INST_DIR)/$(TMPGISRC)
+	-rm $(DESTDIR)$(INST_DIR)/$(TMPGISRC)
 	$(MAKE) $(INST_DIR)/$(TMPGISRC)
 
-	-rm $(INST_DIR)/$(PLATMAKE)
+	-rm $(DESTDIR)$(INST_DIR)/$(PLATMAKE)
 	$(MAKE) $(INST_DIR)/$(PLATMAKE)
 
-	-rm $(INST_DIR)/$(GRASSMAKE)
+	-rm $(DESTDIR)$(INST_DIR)/$(GRASSMAKE)
 	$(MAKE) $(INST_DIR)/$(GRASSMAKE)
 
-	-$(CHMOD) -R a+rX $(INST_DIR) 2>/dev/null
+	-$(CHMOD) -R a+rX $(DESTDIR)$(INST_DIR) 2>/dev/null
 
 ifneq ($(findstring darwin,$(ARCH)),)
 	@# enable OSX Help Viewer
-	@/bin/ln -sfh "$(INST_DIR)/docs/html" /Library/Documentation/Help/GRASS-$(GRASS_VERSION_MAJOR).$(GRASS_VERSION_MINOR)
+	@#/bin/ln -sfh "$(INST_DIR)/docs/html" /Library/Documentation/Help/GRASS-$(GRASS_VERSION_MAJOR).$(GRASS_VERSION_MINOR)
 endif
 
 $(INST_DIR) $(UNIX_BIN):
-	$(MAKE_DIR_CMD) $@
+	$(MAKE_DIR_CMD) $(DESTDIR)$@
 
 $(STARTUP): $(ARCH_DISTDIR)/$(GRASS_NAME).tmp
 	sed -e 's#'@GISBASE@'#'$(INST_DIR)'#g' \
 	    -e 's#'@LD_LIBRARY_PATH_VAR@'#'$(LD_LIBRARY_PATH_VAR)'#g' \
 	    -e 's#'@CONFIG_PROJSHARE@'#'$(PROJSHARE)'#g' \
-	    $< > $@
-	-$(CHMOD) a+x $@
+	    $< > $(DESTDIR)$@
+	-$(CHMOD) a+x $(DESTDIR)$@
 
 define fix_gisbase
-sed -e 's#$(GISBASE)#$(INST_DIR)#g' $< > $@
+sed -e 's#$(GISBASE)#$(INST_DIR)#g' $< > $(DESTDIR)$@
 endef
 
 define fix_grass_home
 sed -e 's#^\(GRASS_HOME.[^=]*\).*#\1= $(INST_DIR)#g' \
-    -e 's#$(GISBASE)#$(INST_DIR)#g' $< > $@
+    -e 's#$(GISBASE)#$(INST_DIR)#g' $< > $(DESTDIR)$@
 endef
 
 define fix_grass_arch
 sed -e 's#^\(ARCH_DISTDIR.[^=]*\).*#\1= $(INST_DIR)#g' \
-    -e 's#^\(ARCH_BINDIR.[^=]*\).*#\1= $(UNIX_BIN)#g' $< > $@
+    -e 's#^\(ARCH_BINDIR.[^=]*\).*#\1= $(UNIX_BIN)#g' $< > $(DESTDIR)$@
 endef
 
 $(INST_DIR)/$(FONTCAP): $(GISBASE)/$(FONTCAP)
