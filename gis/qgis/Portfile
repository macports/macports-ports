# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake   1.0
#PortGroup           github  1.0
PortGroup           qt4     1.0

name                qgis
version             2.18.14
#revision            2
homepage            http://www.qgis.org/
categories          gis
maintainers         vince
description         QGIS is a user-friendly GIS based on Qt 4
long_description    QGIS is an alternative to commercial GIS such as ESRI products.\
                    It can read, write and process almost every sort of geodata. It can\
                    also serve as a front-end to other open source GIS such as Grass or Saga\
                    and has an extensive repository of plug-ins written in Python 2.7.

platforms           darwin
license             GPL-2+

set version_u       [string map {. _} ${version}]
#github.setup        qgis QGIS ${version_u} final-
distname            final-${version_u}
master_sites        https://github.com/qgis/QGIS/archive/
worksrcdir          QGIS-${distname}

use_parallel_build  no

checksums           rmd160  fc85c0821532505c531aacb39f5abdfc9fac15f0 \
                    sha256  f8912cddca6673b54fcbea8b418d877b51d7229ebd4caec07bdb5fbfda6851e4

patchfiles          patch-app_info_plist_in.diff \
                    patch-PyQtMacros.diff \
                    patch-python_core_conversions_sip.diff

depends_lib-append  port:libiconv \
                    port:expat \
                    path:lib/libssl.dylib:openssl \
                    port:proj \
                    port:geos \
                    port:gdal \
                    port:sqlite3 \
                    port:gsl \
                    port:fcgi \
                    port:spatialite \
                    port:spatialindex \
                    port:postgis2

depends_build-append \
                    port:bison \
                    port:ld64

post-extract {
    system -W ${worksrcpath} "mkdir build"
}

post-patch {
    reinplace -E "s|@@@|${prefix}|g" \
        ${worksrcpath}/mac/app.info.plist.in
#    reinplace -E "s|Clang|AppleClang|" ${worksrcpath}/CMakeLists.txt
    # Handle legacy OS/XCode
    if {[vercmp $xcodeversion 4.6.3] <= 0} {
        configure.compiler  llvm-gcc-4.2
    }
}

set Py_FRM              ${frameworks_dir}/Python.framework/Versions/2.7

#configure.args-append  "--trace"
configure.args-append   "-DWITH_GRASS=OFF"
configure.args-append   "-DWITH_GRASS7=OFF"
configure.args-append   "-DWITH_QWTPOLAR=FALSE"
configure.args-append   "-DENABLE_QT5=OFF"
configure.args-append   "-DPYTHON_EXECUTABLE=${prefix}/bin/python2.7"
configure.args-append   "-DPYTHON_CUSTOM_FRAMEWORK=${Py_FRM}"
configure.args-append   "-DSIP_BINARY_PATH=${prefix}/bin/sip-2.7"
configure.args-append   "-DPYUIC_PROGRAM=${prefix}/bin/pyuic4-2.7"
configure.args-append   "-DPYRCC_PROGRAM=${prefix}/bin/pyrcc4-2.7"
configure.args-append   "-DWITH_SERVER=TRUE"
configure.args-append   "-DWITH_SERVER_PLUGINS=TRUE"
configure.args-append   \
        "-DQWT_INCLUDE_DIR=${prefix}/libexec/qt4/Library/Frameworks/qwt.framework/Versions/Current/Headers"
configure.args-append   "-DQWT_LIBRARY=${prefix}/libexec/qt4/lib/libqwt.dylib"
configure.args-append   "-DQCA_INCLUDE_DIR=${prefix}/libexec/qt4/include/QtCrypto"
configure.args-append   "-DQCA_LIBRARY=${prefix}/libexec/qt4/lib/libqca.dylib"
configure.args-append   "-DQT_LRELEASE_EXECUTABLE=${prefix}/libexec/qt4/bin/lrelease"
configure.args-append   "-DQSCINTILLA_INCLUDE_DIR=${prefix}/libexec/qt4/include"
configure.args-append   "-DQSCINTILLA_LIBRARY=${prefix}/libexec/qt4/lib/libqscintilla2_qt4.dylib"
configure.args-append   "-DQJSON_DIR=${prefix}/lib/cmake/qjson"
configure.args-append   "-DCMAKE_CXX_COMPILER=${configure.cxx}"
configure.args-append   "-DCMAKE_C_COMPILER=${configure.cc}"
configure.args-append   "-DEXPAT_INCLUDE_DIR=${prefix}/include"
configure.args-append   "-DEXPAT_LIBRARY=${prefix}/lib/libexpat.dylib"
configure.args-append   "-DCMAKE_INSTALL_PREFIX=${applications_dir}"
configure.args-append   "-DQGIS_MACAPP_BUNDLE=0"
configure.args-append   "-DGDAL_CONFIG=${prefix}/bin/gdal-config"
configure.args-append   "-DGDAL_INCLUDE_DIR=${prefix}/include"
configure.args-append   "-DGDAL_LIBRARY=${prefix}/lib/libgdal.dylib"
configure.args-append   "-DGEOS_CONFIG=${prefix}/bin/geos-config"
configure.args-append   "-DGEOS_INCLUDE_DIR=${prefix}/include"
configure.args-append   "-DGEOS_LIBRARY=${prefix}/lib/libgeos_c.dylib"
configure.args-append   "-DGSL_CONFIG=${prefix}/bin/gsl-config"
configure.args-append   "-DPROJ_INCLUDE_DIR=${prefix}/include"
configure.args-append   "-DPROJ_LIBRARY=${prefix}/lib/libproj.dylib"
configure.args-append  \
        "-DSPATIALINDEX_LIBRARY=${prefix}/lib/libspatialindex.dylib"
#configure.args-append  "-DCMAKE_BUILD_TYPE=DEBUG"
configure.args-append   "-DCMAKE_BUILD_TYPE=RELEASE"

depends_lib-append      port:python27 \
                        port:py27-pyqt4 \
                        port:py27-gdal \
                        port:py27-qscintilla-qt4 \
                        port:qt4-mac-sqlite3-plugin \
                        port:qca \
                        port:qca-ossl \
                        port:qwt61 \
                        port:qjson

depends_build-append    port:py27-sip

depends_run-append      port:py27-psycopg2 \
                        port:py27-spatialite \
                        port:py27-requests


pre-configure {
                        reinplace -E "s|Versions/Current|Versions/2.7|" \
                        ${worksrcpath}/cmake/FindPythonLibrary.cmake
}   

# QT5 is no longer supported. Use QGIS 3 instead

variant qt5 description "Build with Qt5" {
    ui_error "Qt5 option is deprecated. Please use the qgis3 port instead"
}

# Database variants (from the GDAL port)

set postgresql_suffixes {95 96 10}

set portsgresql_variants {}
foreach s ${postgresql_suffixes} {
    lappend portsgresql_variants postgresql${s}
}

foreach s ${postgresql_suffixes} {
    set p postgresql${s}
    set v [string index ${s} 0].[string index ${s} 1]
    set i [lsearch -exact ${portsgresql_variants} ${p}]
    set c [lreplace ${portsgresql_variants} ${i} ${i}]
    variant ${p} description "Enable PostgreSQL ${v} support" conflicts {*}${c} "
        depends_lib-append      port:${p}
        configure.args-append   \
                \"-DPOSTGRES_CONFIG=${prefix}/lib/${p}/bin/pg_config\"
    "
}

# postgresql default
set pgd "if {"
foreach s ${postgresql_suffixes} {
    set pgd "${pgd}!\[variant_isset postgresql${s}\] && "
}
set pgd [string range ${pgd} 0 end-4]
set pgd "${pgd}} { default_variants +postgresql10 }"
eval ${pgd}

# GRASS 7
variant grass               description "Build Grass 7 plugin" {

    depends_lib-append      port:grass7
    configure.args-delete  "-DWITH_GRASS7=OFF"
    configure.args-append  "-DWITH_GRASS7=ON"
    configure.args-append   \
                "-DGRASS_PREFIX7=${prefix}/share/grass-7.2.2"
}

configure.dir               ${worksrcpath}/build
configure.cmd               cmake ..

use_parallel_build          yes
build.dir                   ${worksrcpath}/build
destroot.target             install
