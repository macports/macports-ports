# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           conflicts_build 1.0
PortGroup           cxx11 1.1

name                mapnik
version             3.0.21
revision            0
categories          gis devel
platforms           darwin
license             LGPL-2.1
supported_archs     i386 x86_64

maintainers         panulla.com:macports {stromnov @stromnov} openmaintainer

description         Open Source C++/Python mapping toolkit.

long_description    Mapnik is a Free Toolkit for developing mapping \
                    applications. It is written in modern C++ and has Python \
                    bindings that support fast-paced agile development. It \
                    can comfortably be used for both desktop map design and \
                    web development. \
                    \
                    Mapnik is about making beautiful maps. It uses the AGG \
                    graphics library, which offers world-class anti-aliasing \
                    rendering with subpixel accuracy for geographic data.

homepage            http://mapnik.org
master_sites        https://github.com/mapnik/mapnik/releases/download/v${version}/

distname            mapnik-v${version}

use_bzip2           yes

checksums           rmd160  d174c44cead1f01ec670e4ddebc1e2e88c357de1 \
                    sha256  6db7918e8fd24346dfc81745e455c383a718335ffa64015cf625fed5ed92b524 \
                    size    10111220

depends_build-append \
                    port:pkgconfig

depends_lib-append  port:boost \
                    port:harfbuzz \
                    port:icu \
                    port:libpng \
                    port:jpeg \
                    port:tiff \
                    port:webp \
                    port:zlib \
                    port:freetype \
                    port:proj4

conflicts_build     antigraingeometry

set input_plugins {shape csv raster geojson topojson}

variant cairo description {Enable Cairo support for PDF, PostScript, and SVG} {
    configure.args-delete   CAIRO=False
    configure.args-append   CAIRO=True
    depends_lib-append      path:lib/pkgconfig/cairo.pc:cairo
}

variant gdal description {Build GDAL/OGR plugin} {
    depends_lib-append      port:gdal
    configure.args-append   GDAL_CONFIG=${prefix}/bin/gdal-config
    lappend input_plugins gdal ogr
}

variant postgis description {Build PostGIS plugin} {
    depends_lib-append      path:lib/libpq.dylib:postgresql10
    if {![file exists ${prefix}/lib/libpq.dylib]} {
        configure.args-append   PG_CONFIG=${prefix}/lib/postgresql10/bin/pg_config
    }
    lappend input_plugins postgis
}

variant sqlite description {Build SQLite plugin} {
    depends_lib-append      port:sqlite3
    lappend input_plugins sqlite
}

variant libxml2 description {Enable libxml2 support for includes and entities} {
    depends_lib-append      port:libxml2
    configure.args-append   XML2_CONFIG=${prefix}/bin/xml2-config \
                            XMLPARSER=libxml2
}

universal_variant   no

configure.pkg_config ${prefix}/bin/pkg-config

configure.python    /usr/bin/python

build.cmd           ${configure.python} scons/scons.py
build.pre_args
use_parallel_build  yes

configure.cmd       ${build.cmd}
configure.pre_args  configure
configure.args      CXX="${configure.cxx}" \
                    CC="${configure.cc}" \
                    CUSTOM_CXXFLAGS="${configure.cxxflags}" \
                    CUSTOM_CFLAGS="${configure.cflags}" \
                    CUSTOM_LDFLAGS="${configure.ldflags}" \
                    PREFIX=${prefix} \
                    DESTDIR=${destroot} \
                    CAIRO=False \
                    CPP_TESTS=False \
                    FREETYPE_CONFIG=${prefix}/bin/freetype-config \
                    PROJ_INCLUDES=${prefix}/lib/proj49/include \
                    PROJ_LIBS=${prefix}/lib/proj49/lib

foreach lib {BOOST ICU PNG JPEG TIFF CAIRO SQLITE HB WEBP} {
    configure.args-append   ${lib}_INCLUDES=${prefix}/include
    configure.args-append   ${lib}_LIBS=${prefix}/lib
}

destroot.destdir

pre-configure {
    # Must be evaluated after the variants
    configure.args-append   INPUT_PLUGINS=[join ${input_plugins} ","]

    if {[variant_isset postgis] && [variant_isset sqlite]} {
        configure.args-append   PGSQL2SQLITE=True
    }
}

post-destroot {
    xinstall -d -m 755 ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 -W ${worksrcpath} \
        {*}[glob ${worksrcpath}/docs/*] AUTHORS.md CHANGELOG.md COPYING README.md \
        ${destroot}${prefix}/share/doc/${name}
    xinstall -d -m 755 ${destroot}${prefix}/share/${name}
    copy ${worksrcpath}/demo ${destroot}${prefix}/share/${name}
}

livecheck.type      regex
livecheck.url       http://mapnik.org/pages/downloads.html
livecheck.regex     {mapnik-v(\d+(?:\.\d+)*)[.tz]}
