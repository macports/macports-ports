# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           muniversal 1.0
PortGroup           mpi 1.0
PortGroup           active_variants   1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           legacysupport 1.0
PortGroup           conflicts_build 1.0
PortGroup           debug 1.0
mpi.setup

github.setup        OSGeo gdal 3.3.1 v
revision            1
checksums           rmd160  7d2e737733248346201cad75987f258e065dc14d \
                    sha256  48ab00b77d49f08cf66c60ccce55abb6455c3079f545e60c90ee7ce857bccb70 \
                    size    12933888


categories          gis
license             MIT BSD
platforms           darwin

maintainers         {vince @Veence} openmaintainer

description         GDAL - Geospatial Data Abstraction Library

long_description    GDAL is a translator library for raster geospatial \
                    data formats that is released under an X/MIT style \
                    Open Source license. As a library, it presents a \
                    single abstract data model to the calling application \
                    for all supported formats. The related OGR library \
                    (which lives within the GDAL source tree) provides a \
                    similar capability for simple features vector data.

homepage            https://www.gdal.org/
master_sites        https://download.osgeo.org/gdal/${version}/
use_xz              yes

# error: call to 'abs' is ambiguous
compiler.blacklist-append {clang < 900}

compiler.cxx_standard     2014
# See https://trac.macports.org/ticket/56908
compiler.thread_local_storage yes

depends_build-append \
                    port:bash-completion \
                    port:pkgconfig

depends_lib-append  port:zlib \
                    port:zstd \
                    port:libpng \
                    port:lerc \
                    port:expat \
                    port:libxml2 \
                    port:webp \
                    port:giflib \
                    port:qhull \
                    port:sqlite3 \
                    port:spatialite \
                    port:curl \
                    path:lib/libssl.dylib:openssl \
                    port:charls

set PYINST          ""

configure.universal_args-delete --disable-dependency-tracking

# By default, disable all drivers
configure.args-append                                   \
                    --disable-all-optional-drivers

# Enable all built-in raster drivers
configure.args-append                                   \
					--enable-driver-adrg                \
					--enable-driver-aaigrid             \
					--enable-driver-aigrid              \
					--enable-driver-airsar              \
					--enable-driver-arg                 \
					--enable-driver-blx                 \
					--enable-driver-bmp                 \
					--enable-driver-bsb                 \
					--enable-driver-cals                \
					--enable-driver-ceos                \
					--enable-driver-ceos2               \
					--enable-driver-coasp               \
					--enable-driver-cosar               \
					--enable-driver-ctg                 \
					--enable-driver-dimap               \
					--enable-driver-dted                \
					--enable-driver-elas                \
					--enable-driver-envisat             \
					--enable-driver-ers                 \
					--enable-driver-esric               \
					--enable-driver-fit                 \
					--enable-driver-gff                 \
                    --enable-driver-grib                \
					--enable-driver-gsg                 \
					--enable-driver-gxf                 \
					--enable-driver-hf2                 \
					--enable-driver-idrisi              \
					--enable-driver-ilwis               \
					--enable-driver-ingr                \
					--enable-driver-iris                \
					--enable-driver-iso8211             \
					--enable-driver-jaxapalsar          \
					--enable-driver-jdem                \
					--enable-driver-l1b                 \
					--enable-driver-leveller            \
					--enable-driver-map                 \
					--enable-driver-mrf                 \
					--enable-driver-msgn                \
					--enable-driver-ngsgeoid            \
					--enable-driver-nitf                \
					--enable-driver-northwood           \
					--enable-driver-pds                 \
					--enable-driver-prf                 \
					--enable-driver-r                   \
					--enable-driver-raw                 \
					--enable-driver-rmf                 \
					--enable-driver-rs2                 \
					--enable-driver-safe                \
					--enable-driver-saga                \
					--enable-driver-sdts                \
					--enable-driver-sentinel2           \
					--enable-driver-sgi                 \
					--enable-driver-sigdem              \
					--enable-driver-srtmhgt             \
					--enable-driver-terragen            \
					--enable-driver-tga                 \
					--enable-driver-til                 \
					--enable-driver-tsx                 \
					--enable-driver-usgsdem             \
					--enable-driver-xpm                 \
					--enable-driver-xyz                 \
					--enable-driver-zmap

# Same with built-in vector drivers
configure.args-append                                   \
					--enable-driver-arcgen              \
					--enable-driver-avc                 \
					--enable-driver-cad                 \
					--enable-driver-csv                 \
					--enable-driver-dgn                 \
					--enable-driver-dxf                 \
					--enable-driver-edigeo              \
					--enable-driver-flatgeobuf          \
					--enable-driver-geoconcept          \
					--enable-driver-georss              \
					--enable-driver-gml                 \
					--enable-driver-gmt                 \
					--enable-driver-gpsbabel            \
					--enable-driver-gpx                 \
					--enable-driver-gtm                 \
					--enable-driver-jml                 \
					--enable-driver-mapml               \
					--enable-driver-mvt                 \
					--enable-driver-ntf                 \
					--enable-driver-openfilegdb         \
					--enable-driver-pgdump              \
					--enable-driver-rec                 \
					--enable-driver-s57                 \
					--enable-driver-selafin             \
					--enable-driver-shape               \
					--enable-driver-svg                 \
					--enable-driver-sxf                 \
					--enable-driver-tiger               \
					--enable-driver-vdv                 \
					--enable-driver-wasp

# These drivers require curl
configure.args-append                                   \
					--enable-driver-eeda                \
					--enable-driver-plmosaic            \
					--enable-driver-rda                 \
					--enable-driver-wcs                 \
					--enable-driver-wms                 \
					--enable-driver-wmts                \
					--enable-driver-daas                \
					--enable-driver-ogcapi              \
					--enable-driver-amigocloud          \
					--enable-driver-carto               \
					--enable-driver-cloudant            \
					--enable-driver-couchdb             \
					--enable-driver-csw                 \
					--enable-driver-elastic             \
					--enable-driver-ngw                 \
					--enable-driver-plscenes            \
					--enable-driver-wfs                 

# These drivers require sqlite3
configure.args-append                                   \
					--enable-driver-rasterlite          \
					--enable-driver-mbtiles             \
					--enable-driver-gpkg                \
					--enable-driver-vfk                 \
					--enable-driver-osm

# These drivers require expat
configure.args-append                                   \
					--enable-driver-ods                 \
					--enable-driver-xlsx                \
					--enable-driver-lvbag  

# Miscellaneous drivers
configure.args-append                                   \
                    --with-local=yes                    \
                    --with-libz=yes                     \
                    --with-zstd=yes                     \
                    --without-liblzma                   \
                    --without-heif                      \
                    --with-png=yes                      \
                    --with-libtiff=internal             \
                    --with-geotiff=internal             \
                    --with-jpeg=internal                \
                    --with-charls=yes                   \
                    --with-gif=yes                      \
                    --with-qhull=yes                    \
                    --with-pam                          \
                    --with-sqlite3=${prefix}            \
                    --with-spatialite=dlopen            \
                    --with-spatialite-soname=${prefix}/lib/libspatialite.dylib \
                    --with-curl=${prefix}/bin/curl-config \
                    --with-geos=${prefix}/bin/geos-config \
                    --with-expat=${prefix}              \
                    --with-webp=${prefix}               \
                    --with-xml2=yes                     \
                    --with-crypto=yes                   \
                    --without-pg                        \
                    --without-grass                     \
                    --without-libgrass                  \
                    --without-cfitsio                   \
                    --without-netcdf                    \
                    --without-ogdi                      \
                    --without-exr                       \
                    --without-mongocxx                  \
                    --without-mongocxxv3                \
                    --without-fme                       \
                    --without-libkml                    \
                    --without-hdf4                      \
                    --without-hdf5                      \
                    --without-jasper                    \
                    --without-openjpeg                  \
                    --without-ecw                       \
                    --without-kakadu                    \
                    --without-mrsid                     \
                    --without-jp2mrsid                  \
                    --without-msg                       \
                    --without-oci                       \
                    --without-mysql                     \
                    --without-ingres                    \
                    --without-xerces                    \
                    --without-odbc                      \
                    --without-idb                       \
                    --without-opencl                    \
                    --without-perl                      \
                    --without-python                    \
                    --without-poppler                   \
                    --mandir=${prefix}/share/man

# Always choose internal libjson code (#44098)
configure.args-append   --with-libjson-c=internal

# for all platforms without C++11 support
# this is just a suboptimal approximation (doesn't hold for gcc)
if {${configure.cxx_stdlib} eq "libc++"} {
    configure.args-append   --with-cpp14
}

pre-configure {
    # see https://trac.macports.org/ticket/56517
    if {[string match *clang* ${configure.cxx}]} {
        configure.ldflags-append -stdlib=${configure.cxx_stdlib}
    }

    global worksrcpath_dirs
    if {![variant_exists universal] || ![variant_isset universal]} {
        set worksrcpath_dirs ${worksrcpath}
    } else {
        foreach arch ${universal_archs_to_use} {
            lappend worksrcpath_dirs ${worksrcpath}-${arch}
        }
    }
}

post-configure {
    foreach w ${worksrcpath_dirs} {
        reinplace -E "s|(INST_PYMOD).*|\\1\t=\t${PYINST}|" \
            ${w}/GDALmake.opt
    }
}

# Set target to none
build.target

variant lto description {Enable Link Time Optimization} {
    configure.args-append   --enable-lto
}

variant lzma \
    description {Enable LZMA (7Z) compression support} {
    depends_lib-append      port:lzma
    configure.args-delete   --without-liblzma
    configure.args-append   --with-liblzma=yes
}

variant libkml \
    description {Enable libkml} {
    depends_lib-append      port:libkml
    configure.args-delete   --without-libkml
    configure.args-append   --enable-driver-kmlsuperoverlay
    configure.args-append   --with-libkml=${prefix}
    configure.args-append   --with-libkml-inc=${prefix}/include
    configure.args-append   --with-libkml-lib=${prefix}/lib
}

variant grass description {Enable GRASS 7 GIS I/O} {
    if {[catch {lindex [registry_active grass7] 0}]} {
        ui_error "The grass variant requires grass 7 to be installed."
        ui_error "Since grass7 depends on gdal, please first install gdal WITHOUT the grass variant."
        ui_error "Then install grass7, then reinstall gdal with the grass variant."
        #return -code error "Missing GRASS 7."
    }

    configure.args-delete   --without-grass
    configure.args-append   --with-grass=${prefix}/share/grass78
}

variant mrsid description {Enable MrSID file format} {
    depends_lib-append      port:geoexpress-sdk
    configure.args-delete   --without-mrsid
    configure.args-delete   --without-jp2mrsid
    configure.args-append   --with-mrsid=${prefix}/share/Geo_DSDK/Raster_DSDK
    configure.args-append   --with-jp2mrsid
    configure.args-append   --with-mrsid_lidar=${prefix}/share/Geo_DSDK/Lidar_DSDK
}

variant ecw description {Enable ECW file format} {
    configure.args-delete   --without-ecw
    configure.args-append   --with-ecw=${prefix}/lib/ECW

    if {${configure.cxx_stdlib} eq "libc++" } {
        patchfiles-append       patch-configure-ecw-libcxx.diff
    } else {
        patchfiles-append       patch-configure-ecw-libstdcxx.diff
    }

    pre-configure {
        if {(![file exists ${prefix}/lib/ECW]) && \
        (![file exists /Intergraph/ERDASEcwJpeg2000SDK5.1.1/Desktop_Read-Only])} {
            ui_error "
****
* The Intergraph ECW SDK version 5.1.1 is needed to
* compile gdal with the ecw variant. It must be installed separately.
* Please download the macOS version of the SDK
* 'ERDAS ECW/JP2 SDK v5.1.1 (MacOSX)' from
* http://download.intergraph.com/
* Choose to install it in ${prefix}/lib/ECW.
* Then try to install GDAL again.
****"
            return -code error "ECW SDK 5.1.1 not installed."
        }

        if {(![file exists ${prefix}/lib/ECW]) && \
            ([file exists /Intergraph/ERDASEcwJpeg2000SDK5.1.1/Desktop_Read-Only])} {

          ui_error "
****
* Please create symbolic links from the /Intergraph directory to
* ${prefix}/lib/ECW, by executing at the prompt:
* sudo ln -s /Intergraph/ERDASEcwJpeg2000SDK5.1.1/Desktop_Read-Only \
                  ${prefix}/lib/ECW
* Or reinstall the ECW SDK in ${prefix}/lib/ECW directly.
* Then try again.
****"
            return -code error "Symlinks missing."
        }
    }
}

variant hdf4 description {Enable HDF4 file format} {
    depends_lib-append      port:hdf4
    configure.args-delete   --without-hdf4
    configure.args-append   --with-hdf4=${prefix}
}

variant hdf5 description {Enable HDF5 file format} {

    if {![catch {set result [active_variants hdf5 openmpi]}]} {
        if {$result} {
            if {![variant_isset openmpi]} {
                return -code error "HDF5 has openmpi enabled, please use the same variant."
            }
        }
    }

    if {![catch {set result [active_variants hdf5 openmpi-devel]}]} {
        if {$result} {
            if {![variant_isset openmpi-devel]} {
                return -code error "HDF5 has openmpi_devel enabled, please use the same variant."
            }
        }
    }

    if {![catch {set result [active_variants hdf5 mpi]}]} {
        if {$result} {
            if {![variant_isset mpi]} {
                return -code error "HDF5 has mpi enabled, please use the same variant."
            }
        }
    }

    if {![catch {set result [active_variants hdf5 mpich-devel]}]} {
        if {$result} {
            if {![variant_isset mpich-devel]} {
                return -code error "HDF5 has mpich-devel enabled, please use the same variant."
            }
        }
    }

    if {[variant_isset mpich] || [variant_isset mpich-devel] || \
        [variant_isset openmpi] || [variant_isset openmpi_devel]} {

        mpi.enforce_variant     hdf5
    }

    depends_lib-append      port:hdf5
    configure.args-delete   --without-hdf5
    configure.args-append   --with-hdf5=${prefix}
}

variant heif description {Build with heif support} {
    depends_lib-append      port:libheif
    configure.args-delete   --without-heif
    configure.args-append   --with-heif
}

variant netcdf description {Enable NetCDF file format} {
    if {[variant_isset mpich] || [variant_isset mpich-devel] || \
        [variant_isset openmpi] || [variant_isset openmpi_devel]} {

        mpi.enforce_variant     netcdf
    }

    depends_lib-append      port:netcdf
    configure.args-delete   --without-netcdf
    configure.args-append   --with-netcdf=${prefix}
}

#JPEG-2K
variant jasper \
    description {Enable JasPer JPEG-2000 format support} {
    depends_lib-append      port:jasper
    configure.args-delete   --without-jasper
    configure.args-append   --with-jasper=${prefix}/include
}

variant openjpeg \
    description {Enable OpenJPEG JPEG-2000 format support} {
    depends_lib-append      port:openjpeg
    configure.args-delete   --without-openjpeg
    configure.args-append   --with-openjpeg=${prefix}/include/openjpeg-2.3
}

variant xerces description {Enable xerces XML support for GML file format} {
    depends_lib-append      path:include/xercesc/util/XercesVersion.hpp:xercesc3
    configure.args-delete   --without-xerces
    configure.args-append   --with-xerces=${prefix}

    # These drivers need xerces-c
    configure.args-append   --enable-driver-nas 
	configure.args-append	--enable-driver-ili 
	configure.args-append	--enable-driver-gmlas
}

# Database variants
set postgresql_suffixes {95 96 10 11 12 13}

set portsgresql_variants {}
set postgresql_default_variant "if {"

foreach s ${postgresql_suffixes} {
    lappend portsgresql_variants postgresql${s}
    set postgresql_default_variant "${postgresql_default_variant}!\[variant_isset postgresql${s}] && "
}

set postgresql_default_variant [string range ${postgresql_default_variant} 0 end-4]
set postgresql_default_variant "${postgresql_default_variant}} {default_variants +postgresql${s}}"
eval $postgresql_default_variant

foreach s ${postgresql_suffixes} {
    set p postgresql${s}
    set v [string index ${s} 0].[string index ${s} 1]
    set i [lsearch -exact ${portsgresql_variants} ${p}]
    set c [lreplace ${portsgresql_variants} ${i} ${i}]
    variant ${p} description "Enable PostgreSQL ${v} support" conflicts {*}${c} "
        depends_lib-append      port:${p}
        configure.args-delete   --without-pg
        configure.args-append   --with-pg=yes
        configure.pkg_config_path-append \
                                ${prefix}/lib/postgresql${s}/pkgconfig \
                                ${prefix}/lib/pkgconfig
    "
}

variant mysql5 conflicts mysql57 mysql8 description {Enable MySQL 5 support} {
    depends_lib-append      path:bin/mysql_config5:mysql5
    configure.args-delete   --without-mysql
    configure.args-append   --with-mysql=${prefix}/lib/mysql5/bin/mysql_config
}

variant mysql57 conflicts mysql5 mysql8 description {Enable MySQL 5.7 support} {
    depends_lib-append      port:mysql57
    configure.args-delete   --without-mysql
    configure.args-append   --with-mysql=${prefix}/lib/mysql57/bin/mysql_config
}

variant mysql8 conflicts mysql5 mysql57 description {Enable MySQL 8 support} {
    depends_lib-append      port:mysql8
    configure.args-replace  --without-mysql \
                            --with-mysql=${prefix}/lib/mysql8/bin/mysql_config
}

variant odbc description {Enable ODBC support} {
    depends_lib-append      port:unixODBC
    configure.args-delete   --without-odbc
    configure.args-append   --with-odbc=${prefix}

    # These drivers depend on odbc
	configure.args-append	--enable-driver-odbc
	configure.args-append	--enable-driver-pgeo 
	configure.args-append	--enable-driver-mssqlspatial
	configure.args-append	--enable-driver-geomedia
	configure.args-append	--enable-driver-walk   disable walk driver support (enabled by default,
}

variant poppler description {Enable poppler support} {
    depends_lib-append      port:poppler
    configure.args-delete   --without-poppler
    configure.args-append   --with-poppler=${prefix} \
                            --enable-driver-pdf
}

variant cfitsio description {Enable fits support} {
    depends_lib-append      port:cfitsio
    configure.args-delete   --without-cfitsio
    configure.args-append   --with-cfitsio
}

configure.optflags  -DGDAL_COMPILATION

# Proj version
variant proj6 conflicts proj7 proj8 description {Use proj 6} {
    depends_lib-append      port:proj6
    configure.args-append   --with-proj=${prefix}/lib/proj6
}

variant proj7 conflicts proj6 proj8 description {Use proj 7} {
    depends_lib-append      port:proj7
    configure.args-append   --with-proj=${prefix}/lib/proj7
}

variant proj8 conflicts proj6 proj7 description {Use proj 7} {
    depends_lib-append      port:proj8
    configure.args-append   --with-proj=${prefix}/lib/proj8
}

if {![variant_isset proj6] && ![variant_isset proj7] && ![variant_isset proj8]} {
    default_variants +proj8
}

# Can be removed after June 2021.
variant perf requires native description {Legacy compatibility variant} {}

variant native description {Optimize for speed} {
    configure.optflags      -O3 -pipe -march=native -DGDAL_COMPILATION
}

set jpeg2k 0
foreach jpeg2kVariant {jasper openjpeg ecw} {
    if {[variant_isset ${jpeg2kVariant}]} {
        incr jpeg2k 1
    }
}
if {${jpeg2k} > 1} {
    notes-append "Multiple drivers are able to open JPEG-2000 datasets. See https://trac.osgeo.org/gdal/wiki/ConfigOptions#GDAL_SKIP."
}

# Postconfigure hack to avoid reading ${prefix}/*.h include files before
# GDAL own include directories

post-configure {
    file copy -force ${filespath}/template-ed-GDALmake_opt $env(TMPDIR)/ed-GDALmake_opt
    reinplace -E "s|@PREFIX@|${prefix}|" $env(TMPDIR)/ed-GDALmake_opt
    foreach w ${worksrcpath_dirs} {
        system "/bin/ed -s ${w}/GDALmake.opt < $env(TMPDIR)/ed-GDALmake_opt"
    }
    file delete $env(TMPDIR)/ed-GDALmake_opt
}

post-destroot {
    xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
    xinstall -m 644 -W ${worksrcpath} HOWTO-RELEASE NEWS VERSION \
        ${destroot}${prefix}/share/doc/${name}

    if {[variant_isset ecw]} {
          foreach f [list \
            bin/gdal_contour \
            bin/gdal_grid \
            bin/gdal_rasterize \
            bin/gdal_translate \
            bin/gdaladdo \
            bin/gdalbuildvrt \
            bin/gdaldem \
            bin/gdalenhance \
            bin/gdalinfo \
            bin/gdallocationinfo \
            bin/gdalmanage \
            bin/gdalserver \
            bin/gdalsrsinfo \
            bin/gdaltindex \
            bin/gdaltransform \
            bin/gdalwarp \
            bin/nearblack \
            bin/ogr2ogr \
            bin/ogrinfo \
            bin/ogrlineref \
            bin/ogrtindex \
            bin/testepsg \
            lib/libgdal.27.dylib] \
            {
                if {${configure.cxx_stdlib} eq "libc++"} {
                    system "install_name_tool -change \
                        /Users/jenkins/hudson/workspace/RL_5.1.1_ECWJP2SDK_OSX/Master/libNCSEcw.dylib ${prefix}/lib/ECW/redistributable/libc++/libNCSEcw.dylib \
                        ${destroot}${prefix}/${f}"
                } else {
                    system "install_name_tool -change \
                        /Users/jenkins/hudson/workspace/RL_5.1.1_ECWJP2SDK_OSX/Master/libNCSEcw.dylib ${prefix}/lib/ECW/redistributable/libstdc++/libNCSEcw.dylib \
                        ${destroot}${prefix}/${f}"
                }
            }
    }

}

livecheck.type  regex
livecheck.url   https://download.osgeo.org/gdal/CURRENT
livecheck.regex ${name}-(\\d+(?:\\.\\d+)*)\\.tar
