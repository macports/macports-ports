# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

set feature 17
name             openjdk${feature}-openj9
categories       java devel
maintainers      {breun.nl:nils @breun} openmaintainer

# JVMMinimumSystemVersion in Contents/Info.plist is set to macOS 10.14.0:
# /usr/libexec/PlistBuddy -c "Print :JavaVM:JVMMinimumSystemVersion" Contents/Info.plist
# Mapping to Darwin version: https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
platforms        {darwin any >= 18 }

# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

# https://developer.ibm.com/languages/java/semeru-runtimes/downloads?os=macOS
supported_archs  x86_64 arm64

version      ${feature}.0.14
revision     0

set build    7
set openj9_version 0.49.0

description  IBM Semeru with Eclipse OpenJ9 VM distribution, based on OpenJDK ${feature} (Long Term Support)
long_description The IBM Semeru Runtimes are free production-ready open source binaries to run your Java applications\
                 built with the OpenJDK class libraries and the Eclipse OpenJ9 JVM.

master_sites https://github.com/ibmruntimes/semeru${feature}-binaries/releases/download/jdk-${version}+${build}_openj9-${openj9_version}/

if {${configure.build_arch} eq "x86_64"} {
    distname     ibm-semeru-open-jdk_x64_mac_${version}_${build}_openj9-${openj9_version}
    checksums    rmd160  3df56a2396048d829e2937e527d103cdc1967f47 \
                 sha256  fddb7adfb499ba9ca015d7c255894f70dbac555d216c83abd7836342c44a1349 \
                 size    212772429
} elseif {${configure.build_arch} eq "arm64"} {
    distname     ibm-semeru-open-jdk_aarch64_mac_${version}_${build}_openj9-${openj9_version}
    checksums    rmd160  914a356b9697104b6fb9b8b15856e67e845175cb \
                 sha256  526590f79bc096535710f55b84385fee499b561cc1ab3ed024e1090b7ad37924 \
                 size    206033035
}

worksrcdir   jdk-${version}+${build}

homepage     https://developer.ibm.com/languages/java/semeru-runtimes/

livecheck.type      regex
livecheck.url       https://github.com/ibmruntimes/semeru${feature}-binaries/releases/
livecheck.regex     ibm-semeru-open-jdk_.*_mac_(${feature}\.\[0-9\.\]+)_\[0-9\]+_openj9-\[0-9\.\]+\.tar\.gz

use_configure    no
build {}

variant Applets \
    description { Advertise the JVM capability "Applets".} {}

variant BundledApp \
    description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant JNI \
    description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant WebStart \
    description { Advertise the JVM capability "WebStart".} {}

patch {
    foreach var { Applets BundledApp JNI WebStart } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/${name}

destroot {
    xinstall -m 755 -d ${destroot}${prefix}${jdk}
    copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -m 755 -d ${destroot}${jvms}
    ln -s ${prefix}${jdk} ${destroot}${jdk}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${jdk}/Contents/Home
"
