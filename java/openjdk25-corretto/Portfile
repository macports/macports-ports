# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

set feature 25
name             openjdk${feature}-corretto
categories       java devel
maintainers      {breun @breun} openmaintainer

# JVMMinimumSystemVersion in Contents/Info.plist is set to macOS 10.12 for x86_64:
# /usr/libexec/PlistBuddy -c "Print :JavaVM:JVMMinimumSystemVersion" Contents/Info.plist
# Mapping to Darwin version: https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
platforms        {darwin any >= 16 }

# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror

# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

supported_archs  x86_64 arm64

# https://github.com/corretto/corretto-24/releases
version      ${feature}.0.0.36.1
revision     0

description  Amazon Corretto OpenJDK ${feature} (Long Term Support)
long_description {*}${description} \
    \n\nNo-cost, multiplatform, production-ready distribution of OpenJDK from Amazon.

master_sites https://corretto.aws/downloads/resources/${version}/

if {${configure.build_arch} eq "x86_64"} {
    set corretto_arch x64
    checksums    rmd160  bca3a4c86fccb0e996862387a79da9ecf72c3e80 \
                 sha256  c7367135297ca2517b7d77b92d39dcde7fb1cbc00e6fdbfb3465a72ebbdc5353 \
                 size    221086513
} elseif {${configure.build_arch} eq "arm64"} {
    set corretto_arch aarch64
    checksums    rmd160  058e820192f6d74fed8266e2ea4f2dcea4a2cd49 \
                 sha256  b0543d6a82128453f274cd089546b66dca7f6c83db278f5412095feba1b943e5 \
                 size    218653102
}

distname     amazon-corretto-${version}-macosx-${corretto_arch}

worksrcdir   amazon-corretto-${feature}.jdk

homepage     https://aws.amazon.com/corretto/

livecheck.type      regex
livecheck.url       https://github.com/corretto/corretto-${feature}/releases
livecheck.regex     amazon-corretto-(${feature}\.\[0-9\.\]+)-macosx-.*\.tar\.gz

use_configure    no
build {}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/jdk-${feature}-amazon-corretto.jdk

destroot {
    xinstall -m 755 -d ${destroot}${prefix}${jdk}
    copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -m 755 -d ${destroot}${jvms}
    ln -s ${prefix}${jdk} ${destroot}${jdk}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${jdk}/Contents/Home
"
