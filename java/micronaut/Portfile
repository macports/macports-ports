# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0
PortGroup       github 1.0

github.setup    micronaut-projects micronaut-core 1.0.4 v
name            micronaut
categories      java
platforms       darwin
maintainers     {breun.nl:nils @breun} openmaintainer
license         Apache-2
supported_archs noarch

description     Micronaut is a modern, JVM-based, full stack microservices framework designed \
                for building modular, easily testable microservice applications.

long_description Micronaut is developed by the creators of the Grails framework and takes \
                inspiration from lessons learnt over the years building real-world applications \
                from monoliths to microservices using Spring, Spring Boot and Grails. \
                \n\
                \nMicronaut aims to provide all the tools necessary to build microservice \
                applications including: \
                \n\
                \n* Dependency Injection and Inversion of Control (IoC) \
                \n* Sensible Defaults and Auto-Configuration \
                \n* Configuration and Configuration Sharing \
                \n* Service Discovery \
                \n* HTTP Routing \
                \n* HTTP Client with Client-Side Load Balancing \
                \n\
                \nAt the same time Micronaut aims to avoid the downsides of frameworks like Spring, \
                Spring Boot and Grails by providing: \
                \n\
                \n* Fast startup time \
                \n* Reduced memory footprint \
                \n* Minimal use of reflection \
                \n* Minimal use of proxies \
                \n* Easy Unit Testing

homepage        https://micronaut.io
github.tarball_from releases
distname        ${name}-${version}

checksums       rmd160  74ff2db67abeeb47426bd3194427c14c26b2f829 \
                sha256  d537a774ba1e073dbeca14611a0fc9fc296e1231e128d9f62577537f46373151 \
                size    12758784

use_zip         yes
use_configure   no

build {}

destroot {
    set target ${destroot}${prefix}/share/java/${name}

    # Create the target java directory
    xinstall -m 755 -d ${target}

    # Copy over the needed elements of our directory tree
    foreach d { LICENSE bin media } {
        copy ${worksrcpath}/${d} ${target}
    }

    # Copy over the CLI jar
    xinstall -m 644 {*}[glob -directory ${worksrcpath} cli-*.jar] ${target}

    # Remove extraneous bat files
    foreach f [glob -directory ${target}/bin *.bat] {
        delete ${f}
    }

    # Put Bash completion file in expected location
    xinstall -d ${destroot}${prefix}/etc/bash_completion.d
    copy ${worksrcpath}/bin/mn_completion \
         ${destroot}${prefix}/etc/bash_completion.d/mn_completion

    # Remove completion file from bin directory
    delete ${target}/bin/mn_completion

    # Add symlink to the script
    ln -s ../share/java/${name}/bin/mn ${destroot}${prefix}/bin
}
