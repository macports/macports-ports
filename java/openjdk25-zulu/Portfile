# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

set feature 25
name             openjdk${feature}-zulu
categories       java devel
maintainers      {breun @breun} openmaintainer

# JVMMinimumSystemVersion in Contents/Info.plist is set to macOS 11 for x86_64:
# /usr/libexec/PlistBuddy -c "Print :JavaVM:JVMMinimumSystemVersion" Contents/Info.plist
# Mapping to Darwin version: https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
platforms        {darwin any >= 20}

# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

supported_archs  x86_64 arm64

# https://www.azul.com/downloads/?version=java-25&package=jdk#zulu
version      ${feature}.28.85
set build    36
revision     0

set openjdk_version ${feature}.0.0

# Support roadmap: https://www.azul.com/products/azul-support-roadmap/
description Azul Zulu Community OpenJDK ${feature} (Long Term Support until September 2033)
long_description {*}${description} \
\n\nOpenJDK ${feature} (Java Development Kit) distribution from Azul.

master_sites https://cdn.azul.com/zulu/bin/

if {${configure.build_arch} eq "x86_64"} {
    set arch_classifier x64
    checksums    rmd160  322c915d762600187b092961c03dbd53ecf70ea4 \
                 sha256  c2cde1d313d904b793c3760214eefa207ecca7df04e7c4084abdf1f6bbebc27a \
                 size    226469608
} elseif {${configure.build_arch} eq "arm64"} {
    set arch_classifier aarch64
    checksums    rmd160  16c2d650d712a9e52811e409f36c3a96516c9a5d \
                 sha256  73f64f6bad7c3df31fba740fbcbbbef7c1a5cedeffbb5df386dd79bc72aba9b6 \
                 size    223949294
} else {
    set arch_classifier unsupported_arch
}

distname     zulu${version}-ca-jdk${openjdk_version}-macosx_${arch_classifier}

worksrcdir   ${distname}/zulu-${feature}.jdk

homepage     https://www.azul.com/downloads/

livecheck.type      regex
livecheck.url       https://cdn.azul.com/zulu/bin/
livecheck.regex     zulu(${feature}\.\[0-9\.\]+)-ca-jdk\[0-9\.\]+-macosx_.*\.tar\.gz

use_configure    no
build {}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/jdk-${feature}-azul-zulu.jdk

destroot {
    xinstall -m 755 -d ${destroot}${prefix}${jdk}
    copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -m 755 -d ${destroot}${jvms}
    ln -s ${prefix}${jdk} ${destroot}${jdk}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${jdk}/Contents/Home
"
