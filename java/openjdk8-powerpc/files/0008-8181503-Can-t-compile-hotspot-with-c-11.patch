From 74983373354b2708b4fa75f59395c68dc65b3e96 Mon Sep 17 00:00:00 2001
From: Gerard Ziemski <gziemski@openjdk.org>
Date: Wed, 31 Jan 2018 11:12:12 -0600
Subject: [PATCH] 8181503: Can't compile hotspot with c++11

Fixed 5 unique c++14 compiler issues

Reviewed-by: coleenp, dholmes, kbarrett
---
 hotspot/src/os_cpu/bsd_x86/vm/os_bsd_x86.cpp | 6 +++---
 hotspot/src/share/vm/code/compiledIC.cpp     | 2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git hotspot/src/os_cpu/bsd_x86/vm/os_bsd_x86.cpp hotspot/src/os_cpu/bsd_x86/vm/os_bsd_x86.cpp
index bfa4243f754..f0de6456b11 100644
--- hotspot/src/os_cpu/bsd_x86/vm/os_bsd_x86.cpp
+++ hotspot/src/os_cpu/bsd_x86/vm/os_bsd_x86.cpp
@@ -281,11 +281,11 @@ PRAGMA_FORMAT_MUTE_WARNINGS_FOR_GCC
 address os::current_stack_pointer() {
 #if defined(__clang__) || defined(__llvm__)
   register void *esp;
-  __asm__("mov %%"SPELL_REG_SP", %0":"=r"(esp));
+  __asm__("mov %%" SPELL_REG_SP ", %0":"=r"(esp));
   return (address) esp;
 #elif defined(SPARC_WORKS)
   register void *esp;
-  __asm__("mov %%"SPELL_REG_SP", %0":"=r"(esp));
+  __asm__("mov %%" SPELL_REG_SP ", %0":"=r"(esp));
   return (address) ((char*)esp + sizeof(long)*2);
 #else
   register void *esp __asm__ (SPELL_REG_SP);
@@ -368,7 +368,7 @@ frame os::get_sender_for_C_frame(frame* fr) {
 intptr_t* _get_previous_fp() {
 #if defined(SPARC_WORKS) || defined(__clang__) || defined(__llvm__)
   register intptr_t **ebp;
-  __asm__("mov %%"SPELL_REG_FP", %0":"=r"(ebp));
+  __asm__("mov %%" SPELL_REG_FP ", %0":"=r"(ebp));
 #else
   register intptr_t **ebp __asm__ (SPELL_REG_FP);
 #endif
diff --git hotspot/src/share/vm/code/compiledIC.cpp hotspot/src/share/vm/code/compiledIC.cpp
index 63821c06130..06794215084 100644
--- hotspot/src/share/vm/code/compiledIC.cpp
+++ hotspot/src/share/vm/code/compiledIC.cpp
@@ -222,7 +222,7 @@ bool CompiledIC::set_to_megamorphic(CallInfo* call_info, Bytecodes::Code bytecod
     assert(bytecode == Bytecodes::_invokeinterface, "");
     int itable_index = call_info->itable_index();
     entry = VtableStubs::find_itable_stub(itable_index);
-    if (entry == false) {
+    if (entry == NULL) {
       return false;
     }
 #ifdef ASSERT
-- 
2.37.3

