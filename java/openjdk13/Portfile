# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                openjdk13
# https://github.com/openjdk/jdk13u/tags
# remove 'jdk-' from the latest tag without '-ga' that has commit that corresponds to the latest tag with '-ga'
version             13.0.11+4
set ver [string map {+4 {}} ${version}]
revision            0
categories          java devel
platforms           darwin
supported_archs     x86_64
license             GPL-2+
maintainers         {outlook.com:usersword123 @usersxx} openmaintainer
description         Openjdk 13
long_description    JDK 13 builds of Openjdk, the Open-Source implementation \
                    of the Java Platform, Standard Edition, and related projects.
homepage            https://openjdk.java.net/
master_sites        https://git.openjdk.java.net/jdk13u/archive/refs/tags
distname            jdk-${version}

checksums           rmd160  a3ed0636becbf434ae79232d75a466bd2a0e9085 \
                    sha256  acaaa1b86c6905926634e1a85d834aae703fa27b81a62622419e0553786339fc \
                    size    109265999

depends_build       port:autoconf \
                    port:gmake \
                    port:bash \
                    port:openjdk13-bootstrap

set tpath /Library/Java
use_configure    yes
configure.cmd       ${prefix}/bin/bash configure
configure.pre_args  --prefix=${tpath}
set bug_url "https://trac.macports.org/newticket?port=${name}"
# default configure args
configure.args      --with-debug-level=release \
                    --with-native-debug-symbols=none \
                    --with-version-pre=release \
                    --with-jvm-variants=server \
                    --with-target-bits=64 \
                    --with-sysroot=`xcrun --sdk macosx --show-sdk-path` \
                    --with-extra-cflags="${configure.cflags}" \
                    --with-extra-cxxflags="${configure.cxxflags}" \
                    --with-extra-ldflags="${configure.ldflags}" \
                    --with-boot-jdk=/Library/Java/JavaVirtualMachines/openjdk13-bootstrap/Contents/Home \
                    --disable-warnings-as-errors \
                    --disable-precompiled-headers \
                    --with-vendor-name="OpenJDK Porters Group" \
                    --with-vendor-url="${homepage}" \
                    --with-vendor-bug-url="${bug_url}" \
                    --with-vendor-vm-bug-url="${bug_url}" \
                    --without-version-opt \
                    --without-version-pre \
                    --with-conf-name=openjdk13

variant server \
    conflicts client core minimal zero \
    description {JVM with normal interpreter, and a tiered C1/C2 compiler} {
    configure.args-append   --with-jvm-variants=server
}

variant release \
    conflicts debug optimized \
    description {OpenJDK with no debug information, all optimizations and no asserts} {
    configure.args-append   --with-debug-level=release
}

variant optimized \
    conflicts debug release \
    description {OpenJDK with no debug information, all optimizations, no asserts and HotSpot is 'optimized'} {
    configure.args-append   --with-debug-level=optimized
}

variant debug \
    conflicts optimized release \
    description {OpenJDK with debug information, all optimizations and all asserts} {
    configure.args-append  --with-debug-level=fastdebug
    configure.args-delete   --with-native-debug-symbols=none
}

variant client \
    conflicts core minimal server zero \
    description {JVM with normal interpreter, C1 and no C2 compiler} {
    configure.args-append   --with-jvm-variants=client
}

variant minimal \
    conflicts client core server zero \
    description {JVM with reduced form of normal interpreter having C1, no C2 compiler and optional features stripped out} {
    configure.args-append   --with-jvm-variants=minimal
}

variant core \
    conflicts client minimal server zero \
    description {JVM with normal interpreter only and no compiler} {
    configure.args-append   --with-jvm-variants=core
}

variant zero \
    conflicts client core minimal server \
    description {JVM with C++ based interpreter only, no compiler} {
    post-patch {
        reinplace "s|libffi.so.?|libffi.?.dylib|g" ${worksrcpath}/make/autoconf/lib-ffi.m4
    }
    configure.args-append   --with-jvm-variants=zero \
                            --with-libffi=${prefix} \
                            --enable-libffi-bundling
    depends_lib-append         port:libffi
}

if {![variant_isset debug] && ![variant_isset optimized] && ![variant_isset release]} {
    default_variants-append +release
}

if {![variant_isset client] && ![variant_isset core] && ![variant_isset minimal] && ![variant_isset server] && ![variant_isset zero]} {
    if {${os.platform} eq "darwin" && ${os.major} < 16} {
        default_variants-append +zero
    } else {
        default_variants-append +server
    }
}

build.type          gnu
build.target        images
use_parallel_build  no
set jdkn jdk-${ver}.jdk
set bundle_dir build/openjdk13/images/jdk-bundle/${jdkn}/Contents

test.run            yes
test.cmd            ${bundle_dir}/Home/bin/java
test.target         --version

set pathb ${tpath}/JavaVirtualMachines/${name}
destroot {
    xinstall -m 755 -d ${destroot}${pathb}
    copy ${worksrcpath}/${bundle_dir} ${destroot}${pathb}
}
destroot.violate_mtree      yes

post-destroot {
    delete ${worksrcpath}
}

notes "
If you want to make ${name} the default JDK, add this to shell profile:
export JAVA_HOME=${pathb}/Contents/Home
"
    
