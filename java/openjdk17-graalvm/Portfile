# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

name             openjdk17-graalvm
categories       java devel
maintainers      {breun.nl:nils @breun} openmaintainer
platforms        {darwin any}
# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

# https://github.com/graalvm/graalvm-ce-builds/releases
supported_archs  x86_64 arm64

version     17.0.9
set build 9
revision    0
epoch       1

master_sites https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-${version}/

homepage     https://www.graalvm.org

livecheck.type  none

use_configure    no
build {}

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/${name}

if {${subport} eq ${name}} {
    description  GraalVM Community Edition based on OpenJDK 17
    long_description GraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R,\
                     JVM-based languages like Java, Scala, Groovy, Kotlin, Clojure, and LLVM-based languages such as C and C++.

    if {${configure.build_arch} eq "x86_64"} {
        distname     graalvm-community-jdk-${version}_macos-x64_bin
        checksums    rmd160  3eae40f01c3fbc437ca8916c21d0b9edab978e49 \
                     sha256  543dd286d99c04788847ef6366f794c059a69e77added577916186371e206e33 \
                     size    284038595
    } elseif {${configure.build_arch} eq "arm64"} {
        distname     graalvm-community-jdk-${version}_macos-aarch64_bin
        checksums    rmd160  c2beacba5aa97f89972e29cf3ddaa749f52c726a \
                     sha256  3eccc4ffda01818172b7fc7cdf4379bc62ed7129ee30ca854c04da67057249c9 \
                     size    280304421
    }

    worksrcdir   graalvm-community-openjdk-${version}+${build}.1

    variant Applets \
        description { Advertise the JVM capability "Applets".} {}

    variant BundledApp \
        description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

    variant JNI \
        description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

    variant WebStart \
        description { Advertise the JVM capability "WebStart".} {}

    patch {
        foreach var { Applets BundledApp JNI WebStart } {
            if {[variant_isset ${var}]} {
                reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
            }
        }
    }

    test.run    yes
    test.cmd    Contents/Home/bin/java
    test.target
    test.args   -version

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
    destroot.violate_mtree yes

    pre-install {
        # Clean up previous installations, because some old subport files may have been left behind (https://trac.macports.org/ticket/67935)
        # Don't remove before 2024-08-20
        delete ${jdk}
    }

    destroot {
        xinstall -m 755 -d ${destroot}${prefix}${jdk}
        copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

        # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
        xinstall -m 755 -d ${destroot}${jvms}
        ln -s ${prefix}${jdk} ${destroot}${jdk}
    }

    notes "
    If you have more than one JDK installed you can make ${name} the default\
    by adding the following line to your shell profile:

        export JAVA_HOME=${jdk}/Contents/Home
    "
}

subport ${name}-native-image {
    PortGroup           stub 1.0

    license             Permissive
    description         Former Native Image component for GraalVM
    long_description    Native Image support is now included in ${name}. Please uninstall ${subport}.

    notes "${long_description}"
}
