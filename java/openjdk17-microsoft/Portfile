# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

name             openjdk17-microsoft
categories       java devel
maintainers      {breun.nl:nils @breun} openmaintainer
platforms        {darwin any}
# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

# https://docs.microsoft.com/en-us/java/openjdk/download#openjdk-17
supported_archs  x86_64 arm64

version      17.0.6
set build    10
revision     0

description  Microsoft Build of OpenJDK 17 (Long Term Support)
long_description The Microsoft Build of OpenJDK is a no-cost distribution of OpenJDK that's open source \
    and available for free for anyone to deploy anywhere.

master_sites https://aka.ms/download-jdk/

if {${configure.build_arch} eq "x86_64"} {
    distname     microsoft-jdk-${version}-macOS-x64
    checksums    rmd160  261645167231eb218701bff3d1737739fb04e89b \
                 sha256  8dce6849b8bab15c636ae9071e3a7d6cb4951df210c6119233d9c2bd4b6edf16 \
                 size    187604848
} elseif {${configure.build_arch} eq "arm64"} {
    distname     microsoft-jdk-${version}-macOS-aarch64
    checksums    rmd160  6fd388010bddd3026e6fad9cdf7a8ceb15d72f1d \
                 sha256  fcf089eb05cfe5684ed4b33edfb55696f5573c3508d4b2ecf745846e5fc78a9e \
                 size    177759316
}

worksrcdir   jdk-${version}+${build}

homepage     https://www.microsoft.com/openjdk

livecheck.type      regex
livecheck.url       https://docs.microsoft.com/en-us/java/openjdk/download
livecheck.regex     microsoft-jdk-(17\.\[0-9\.\]+)-macOS-.*\.tar\.gz

use_configure    no
build {}

variant Applets \
    description { Advertise the JVM capability "Applets".} {}

variant BundledApp \
    description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant JNI \
    description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant WebStart \
    description { Advertise the JVM capability "WebStart".} {}

patch {
    foreach var { Applets BundledApp JNI WebStart } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set target /Library/Java/JavaVirtualMachines/${name}
set destroot_target ${destroot}${target}

destroot {
    xinstall -m 755 -d ${destroot_target}
    copy ${worksrcpath}/Contents ${destroot_target}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${target}/Contents/Home
"
