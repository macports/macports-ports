# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       java 1.0

name            spring-boot-cli
version         3.1.3
revision        0

categories      java
platforms       {darwin any}
maintainers     {breun.nl:nils @breun} openmaintainer
license         Apache-2
supported_archs noarch

description     Spring Boot CLI -- An opinionated view of building \
                production-ready Spring applications.

long_description The Spring Boot CLI is a command line tool that can be used \
                if you want to quickly prototype with Spring. It allows you to \
                run Groovy scripts, which means that you have a familiar \
                Java-like syntax, without much boilerplate code. \
                \
                You don't need to use the CLI to work with Spring Boot but \
                it's definitely the quickest way to get a Spring application \
                off the ground.

homepage        https://projects.spring.io/spring-boot/
master_sites    https://repo.maven.apache.org/maven2/org/springframework/boot/${name}/${version}/

distname        ${name}-${version}-bin

checksums       rmd160  da5c0d538c1bf5007d499369e80065a47466fd7e \
                sha256  f3cdd1d354a6b244b15a3c7e49b182be07e70a513c2981ef6fcb399246c0d3bc \
                size    5145966

worksrcdir      spring-${version}

use_configure   no

java.version    17+
java.fallback   openjdk17

build {}

test.run    yes
test.cmd    bin/spring
test.target
test.args   --version

destroot {
    set target ${destroot}${prefix}/share/java/${name}

    # Create the target java directory
    xinstall -m 755 -d ${target}

    # Copy over the needed elements of our directory tree
    foreach d { bin lib } {
        copy ${worksrcpath}/${d} ${target}
    }

    # Remove extraneous bat files
    foreach f [glob -directory ${target}/bin *.bat] {
        delete ${f}
    }

    # Add symlink to the script
    ln -s ../share/java/${name}/bin/spring ${destroot}${prefix}/bin

    # Bash shell completion
    xinstall -d ${destroot}${prefix}/etc/bash_completion.d
    copy ${worksrcpath}/shell-completion/bash/spring ${destroot}${prefix}/etc/bash_completion.d/spring

    # Zsh shell completion
    xinstall -d ${destroot}${prefix}/share/zsh/site-functions
    copy ${worksrcpath}/shell-completion/zsh/_spring ${destroot}${prefix}/share/zsh/site-functions/_spring
}
