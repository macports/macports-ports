# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0

name            openjfx11
version         11.0.18
revision        0

set build       1

categories      java devel
maintainers     {@lhaeger} openmaintainer
platforms       darwin
license         GPL-2
supported_archs x86_64 arm64

description     OpenJFX11

long_description OpenJFX is an open source, next generation client application platform \
                 for desktop, mobile and embedded systems built on Java for use with JDK 11. \
                 It is a modern, efficient, and fully featured toolkit for developing rich client \
                 applications.

homepage        https://openjdk.org/projects/openjfx/

depends_build   port:openjdk11-bootstrap \
                port:gradle \
                port:apache-ant \
                port:ksh \
                port:cmake \
                port:ninja

master_sites    https://git.openjdk.org/jfx11u/archive/refs/tags 
distname        ${version}+${build}
checksums       rmd160  2c436e1a0bcabc0bc1a69da0775da32809203642 \
                sha256  20745cfdd9bfd48e2c0e9b760229fd252f62eb9d2e23a87dea1e4aa14c59b50e \
                size    65978868

worksrcdir      jfx11u-${version}-${build}

pre-patch {
    system -W ${worksrcpath} "test -d \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk\" && cd ${worksrcpath} && patch -p0 < ${portpath}/files/xcode-cli.diff || cd ${worksrcpath}"
}


post-patch {
    xinstall -m 755 -d ${worksrcpath}/Home
}

use_configure   no

set jdk_path /Library/Java/JavaVirtualMachines/openjdk11-bootstrap/Contents/Home
set ant_path ${prefix}/share/java/apache-ant
set gradle_home_path ${worksrcpath}/Home

build {
    system -W ${worksrcpath} "export GRADLE_USER_HOME=\"${gradle_home_path}\" && export JAVA_HOME=\"${jdk_path}\" && export JDK_HOME=\"${jdk_path}\" && ${prefix}/bin/ksh ./gradlew"
}

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set target /Library/Java/Extensions/openjfx11

destroot {
    xinstall -m 755 -d ${destroot}${target}
    copy ${worksrcpath}/build/sdk/legal   ${destroot}${target}/legal
    copy ${worksrcpath}/build/sdk/lib     ${destroot}${target}/lib
    copy ${worksrcpath}/build/modular-sdk ${destroot}${target}/modular-sdk
}

notes "
To use ${name}, install any of openjdk11 port
"

# openjfx11 releases depend on openjdk11 releases
livecheck.type      regex
livecheck.url       https://github.com/openjdk/jdk11u/tags
livecheck.regex     jdk-(\[0-9.\]+)-ga
