PortSystem 1.0

name			objenesis
version			1.1
categories		java
platforms		darwin
maintainers		blair

description		Library for instantiating Java objects
long_description	It's pretty easy to instantiate objects in Java \
			through standard reflection.  However there are \
			many cases where you need to go beyond what \
			reflection provides.  For example, if there's \
			no public constructor, you want to bypass the \
			constructor code, or set final fields.  There \
			are numerous clever (but fiddly) approaches to \
			getting around this and this library provides \
			a simple way to get at them.

homepage		https://code.google.com/p/objenesis/

master_sites		googlecode:${name}
dist_subdir		${name}
distname		${name}-${version}-bundle
checksums		md5 5b9de0d8916d54add7bc8ae80cee539f \
			sha1 efb78dd59bb27114da41d23fba5c3ddc8d0a2102 \
			rmd160 3bb9b1f12c1c471d3f40abd7047807637148b4bf
extract.cmd		jar
extract.pre_args	xf
extract.post_args
extract.suffix		.jar

worksrcdir		.

depends_lib		bin:java:kaffe

use_configure		no

build.cmd		true

destroot {
	set javadir ${destroot}${prefix}/share/java
	set docdir ${destroot}${prefix}/share/doc/${name}

	xinstall -d -m 755 ${javadir}
	xinstall -d -m 755 ${docdir}/api

	file copy ${workpath}/${name}-${version}.jar ${javadir}/${name}.jar
	file copy ${workpath}/LICENSE.txt ${docdir}/
	system "cd ${docdir}/api && jar xf ${workpath}/${name}-${version}-javadoc.jar"
	delete ${docdir}/api/META-INF
}
