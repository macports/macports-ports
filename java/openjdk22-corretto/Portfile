# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0
PortGroup        deprecated 1.0

deprecated.eol_version yes

set feature 22
name             openjdk${feature}-corretto
categories       java devel
maintainers      {breun @breun} openmaintainer

# See https://aws.amazon.com/corretto/faqs/#Using_Amazon_Corretto
# and https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
platforms        {darwin any >= 21}

# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror

# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

supported_archs  x86_64 arm64

# https://github.com/corretto/corretto-22/releases
version      ${feature}.0.2.9.1
revision     0

description  Amazon Corretto OpenJDK ${feature} (Short Term Support until September 2024)
long_description {*}${description} \
\n\nOpenJDK ${feature} distribution from Amazon.

master_sites https://corretto.aws/downloads/resources/${version}/

if {${configure.build_arch} eq "x86_64"} {
    set arch_classifier x64
    checksums    rmd160  593dcaf983780313936f236a4500ed804de6a6cc \
                 sha256  7fd8b2d3ad623bb63a4b4f1d86ed0e8f87b6ff2b9a54fdb2004a5718c25fd857 \
                 size    201339903
} elseif {${configure.build_arch} eq "arm64"} {
    set arch_classifier aarch64
    checksums    rmd160  00ddb082f2cffa8651b411aba2c30cce18836ca7 \
                 sha256  962232c150bdb5c44c1f2218b8068bfe3208a726e4a556eb00ceeb0daa4af549 \
                 size    199102134
} else {
    set arch_classifier unsupported_arch
}

distname     amazon-corretto-${version}-macosx-${arch_classifier}

worksrcdir   amazon-corretto-${feature}.jdk

homepage     https://aws.amazon.com/corretto/

livecheck.type      regex
livecheck.url       https://github.com/corretto/corretto-${feature}/releases
livecheck.regex     amazon-corretto-(${feature}\.\[0-9\.\]+)-macosx-.*\.tar\.gz

use_configure    no
build {}

variant Applets \
    description { Advertise the JVM capability "Applets".} {}

variant BundledApp \
    description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant JNI \
    description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant WebStart \
    description { Advertise the JVM capability "WebStart".} {}

patch {
    foreach var { Applets BundledApp JNI WebStart } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/jdk-${feature}-amazon-corretto.jdk

destroot {
    xinstall -m 755 -d ${destroot}${prefix}${jdk}
    copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -m 755 -d ${destroot}${jvms}
    ln -s ${prefix}${jdk} ${destroot}${jdk}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${jdk}/Contents/Home
"
