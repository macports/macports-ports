# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                openjdk8-bootstrap
# use format based on macports:
# https://guide.macports.org/chunked/reference.portgroup.html#reference.portgroup.java
version             1.8.0_201
categories          java devel
platforms           darwin
supported_archs     x86_64
license             Restrictive/Distributable
maintainers         {outlook.com:usersword123 @usersxx} openmaintainer
description         Java 8 Boot JDK
long_description    Java 8 Boot JDK to bootstrap Openjdk8 port
homepage            https://javadl.sun.com/
master_sites        ${homepage}webapps/download/AutoDL?BundleId=236866_42970487e3af4f5aa5bca3f542482c60

checksums           rmd160  b237dd06774127454df314a28fa6b297b50a0dbf \
                    sha256  5b52df4b3efd51480c40ad5abfa18a075365afbb2040bbc5e9f2db568435a6e2 \
                    size    257863467

depends_fetch       port:curl
depends_extract     port:xar

distname            jdk-8u201-macosx-x64
distfiles           ${distname}.dmg

fetch {
    system -W ${distpath} "${prefix}/bin/curl -o ${distpath}/${distfiles} -L ${master_sites}"
}

extract {
    system -W ${workpath} "mkdir -p ${worksrcpath}/dmg"
    system -W ${workpath} "mkdir -p ${worksrcpath}/pkg"
    system -W ${workpath} "mkdir -p ${worksrcpath}/files"
    system -W ${distpath} "hdiutil attach ${distpath}/${distfiles} -mountroot ${worksrcpath}/dmg"
    system -W ${worksrcpath}/dmg "cp ${worksrcpath}/dmg/*/*.pkg ${worksrcpath}/pkg"
    system -W ${worksrcpath}/dmg "hdiutil detach ${worksrcpath}/dmg/*"
    system -W ${worksrcpath}/pkg "mv ${worksrcpath}/pkg/*.pkg ${worksrcpath}/pkg/jdk${version}.pkg"
    system -W ${worksrcpath}/pkg "${prefix}/bin/xar -xf ${worksrcpath}/pkg/jdk${version}.pkg -C ${worksrcpath}/files"
    system -W ${worksrcpath} "tar -xf ${worksrcpath}/files/jdk180201.pkg/Payload -C ${worksrcpath}"
}

use_configure    no

build {}

worksrcdir          jdk${version}

set path /Library/Java/JavaVirtualMachines/${name}
destroot {
    xinstall -m 755 -d ${destroot}${path}
    copy ${worksrcpath}/Contents ${destroot}${path}
}
destroot.violate_mtree      yes
    
