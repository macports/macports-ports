# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

set feature      25
name             openjdk${feature}-temurin
categories       java devel
maintainers      {breun @breun} openmaintainer
platforms        {darwin any}
license          GPL-2+
# This port uses prebuilt binaries for a particular architecture
# They are not universal binaries
universal_variant no

# https://adoptium.net/temurin/releases/?version=25&os=mac&arch=any&mode=filter
supported_archs  x86_64 arm64

version      ${feature}.0.1
set build    8
revision     0

# End of availability: https://adoptium.net/support
description  Eclipse Temurin, based on OpenJDK ${feature} (Long Term Support until at least September 2031)
long_description {*}${description} \
    \n\nOpenJDK ${feature} (Java Development Kit) distribution from Adoptium.

master_sites https://github.com/adoptium/temurin${feature}-binaries/releases/download/jdk-${version}%2B${build}/

if {${configure.build_arch} eq "x86_64"} {
    set arch_classifier x64
    checksums    rmd160  bfd9940e3242e2cb0bce2d2857734af122d99aa9 \
                 sha256  720829aa4e4bddf3e95171cc059a52f7b9c56f443313dfef05114701bf60da06 \
                 size    120223169
} elseif {${configure.build_arch} eq "arm64"} {
    set arch_classifier aarch64
    checksums    rmd160  cbc3bacdf9c83a48f043dc7fa9068c13e61c4615 \
                 sha256  964ffce1ff9f24e8d29df4e4201b5b96499026dc8387cf35bb39fe969ffea2bb \
                 size    136288422
} else {
    set arch_classifier unsupported_arch
}

distname     OpenJDK${feature}U-jdk_${arch_classifier}_mac_hotspot_${version}_${build}

worksrcdir   jdk-${version}+${build}

homepage     https://adoptium.net

livecheck.type      regex
livecheck.url       https://github.com/adoptium/temurin${feature}-binaries
livecheck.regex     jdk-(${feature}\[\.0-9\]+)\+

use_configure    no
build {}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under
# /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/jdk-${feature}-eclipse-temurin.jdk

destroot {
    xinstall -m 755 -d ${destroot}${prefix}${jdk}
    copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

    # macOS Java tools expect to find Java virtual machines under
    # /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -m 755 -d ${destroot}${jvms}
    ln -s ${prefix}${jdk} ${destroot}${jdk}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${jdk}/Contents/Home
"
