# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

name             openjdk17-corretto
categories       java devel
maintainers      {breun.nl:nils @breun} openmaintainer
platforms        darwin
# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

# https://github.com/corretto/corretto-17/releases
supported_archs  x86_64 arm64

version      17.0.4.8.1
revision     0

description  Amazon Corretto OpenJDK 17 (Long Term Support)
long_description No-cost, multiplatform, production-ready distribution of OpenJDK from Amazon.

master_sites https://corretto.aws/downloads/resources/${version}/

if {${configure.build_arch} eq "x86_64"} {
    distname     amazon-corretto-${version}-macosx-x64
    checksums    rmd160  b22c66ee913935f4c153cda188b481abcbe1caa3 \
                 sha256  b2714d48df8d3d8f22fdfb88af548a11603b2c792f1c0c163f6fd39e555a342a \
                 size    187773572
} elseif {${configure.build_arch} eq "arm64"} {
    distname     amazon-corretto-${version}-macosx-aarch64
    checksums    rmd160  39d293da52ee850bf54b7274bcde64bdac2b6168 \
                 sha256  6b7b85dcf4937777a32aed8f62af886b9e50804e238633871289b2b3bb7f53a3 \
                 size    185883964
}

worksrcdir   amazon-corretto-17.jdk

# https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
if {${os.platform} eq "darwin" && ${os.major} < 19} {
    # See https://github.com/corretto/corretto-17/blob/release-17.0.4.8.1/CHANGELOG.md
    known_fail yes
    pre-fetch {
        ui_error "${name} ${version} is only supported on macOS 10.15 Catalina or later."
        return -code error
    }
}

homepage     https://aws.amazon.com/corretto/

livecheck.type  none

use_configure    no
build {}

variant Applets \
    description { Advertise the JVM capability "Applets".} {}

variant BundledApp \
    description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant JNI \
    description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant WebStart \
    description { Advertise the JVM capability "WebStart".} {}

patch {
    foreach var { Applets BundledApp JNI WebStart } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set target /Library/Java/JavaVirtualMachines/${name}
set destroot_target ${destroot}${target}

destroot {
    xinstall -m 755 -d ${destroot_target}
    copy ${worksrcpath}/Contents ${destroot_target}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${target}/Contents/Home
"
