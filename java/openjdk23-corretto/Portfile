# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

name             openjdk23-corretto
categories       java devel
maintainers      {breun.nl:nils @breun} openmaintainer

# See https://aws.amazon.com/corretto/faqs/#Using_Amazon_Corretto
# and https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
platforms        {darwin any} {darwin >= 21}

# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror

# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

supported_archs  x86_64 arm64

# https://github.com/corretto/corretto-23/releases
version      23.0.0.36.1
revision     0

description  Amazon Corretto OpenJDK 23 (Short Term Support until March 2025)
long_description No-cost, multiplatform, production-ready distribution of OpenJDK from Amazon.

master_sites https://corretto.aws/downloads/resources/${version}/

if {${configure.build_arch} eq "x86_64"} {
    distname     amazon-corretto-${version}-macosx-x64
    checksums    rmd160  d3481e2ca8942dc71a19104ccabec176aeb3a3b3 \
                 sha256  5d53ddd667eb6e025954fcc66f18a331593972de1bd38c486f09b4ba4eaa64bb \
                 size    210057865
} elseif {${configure.build_arch} eq "arm64"} {
    distname     amazon-corretto-${version}-macosx-aarch64
    checksums    rmd160  6c02b72cab2e8533413ad7f6995201b0154acf6a \
                 sha256  d241972eaa310bae3f7f3e2acf29dd2ab0d8e4df47cc73012fc77f0d20d1eea6 \
                 size    207795535
}

worksrcdir   amazon-corretto-23.jdk

homepage     https://aws.amazon.com/corretto/

livecheck.type      regex
livecheck.url       https://github.com/corretto/corretto-23/releases
livecheck.regex     amazon-corretto-(23\.\[0-9\.\]+)-macosx-.*\.tar\.gz

use_configure    no
build {}

variant Applets \
    description { Advertise the JVM capability "Applets".} {}

variant BundledApp \
    description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant JNI \
    description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant WebStart \
    description { Advertise the JVM capability "WebStart".} {}

patch {
    foreach var { Applets BundledApp JNI WebStart } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/jdk-23-amazon-corretto.jdk

destroot {
    xinstall -m 755 -d ${destroot}${prefix}${jdk}
    copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -m 755 -d ${destroot}${jvms}
    ln -s ${prefix}${jdk} ${destroot}${jdk}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${jdk}/Contents/Home
"
