# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

name             openjdk17-sap
categories       java devel
maintainers      {breun.nl:nils @breun} openmaintainer
platforms        darwin
# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

# https://sap.github.io/SapMachine/latest/17
supported_archs  x86_64 arm64

version      17.0.7
revision     0

description  OpenJDK 17 builds (Long Term Support) maintained and supported by SAP
long_description Sap builds of OpenJDK for everyone who wish to use OpenJDK to run their applications.

master_sites https://github.com/SAP/SapMachine/releases/download/sapmachine-${version}/

if {${configure.build_arch} eq "x86_64"} {
    distname     sapmachine-jdk-${version}_macos-x64_bin
    checksums    rmd160  a320b141567ab7aba6f521f4002a4945852a415a \
                 sha256  16b876049d34050d1442fe7971c70b581e70c1dec74c3755e2f53c1d04bd2ad0 \
                 size    180385214
} elseif {${configure.build_arch} eq "arm64"} {
    distname     sapmachine-jdk-${version}_macos-aarch64_bin
    checksums    rmd160  ab54760f972b274e9c6ca59076a4aa4cad46629f \
                 sha256  3db9ccca0b5df89a10f53c566bc78f3fd5742d07c11044957996e13f2459c6f6 \
                 size    178090814
}
worksrcdir   sapmachine-jdk-${version}.jdk

homepage     https://sapmachine.io

livecheck.type      regex
livecheck.url       https://github.com/SAP/SapMachine/releases
livecheck.regex     sapmachine-jdk-(17\.\[0-9\.\]+)_macos-.*_bin\.tar\.gz

use_configure    no
build {}

variant BundledApp \
    description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant JNI \
    description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant Applets \
    description { Advertise the JVM capability "Applets".} {}

variant WebStart \
    description { Advertise the JVM capability "WebStart".} {}

patch {
    foreach var { Applets WebStart } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set target /Library/Java/JavaVirtualMachines/${name}
set destroot_target ${destroot}${target}

destroot {
    xinstall -m 755 -d ${destroot_target}
    copy ${worksrcpath}/Contents ${destroot_target}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${target}/Contents/Home
"
