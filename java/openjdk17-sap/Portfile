# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

name             openjdk17-sap
categories       java devel
maintainers      {breun.nl:nils @breun} openmaintainer
platforms        darwin
# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

# https://sap.github.io/SapMachine/latest/17
supported_archs  x86_64 arm64

version      17.0.3.0.1
revision     0

description  OpenJDK 17 builds (Long Term Support) maintained and supported by SAP
long_description Sap builds of OpenJDK for everyone who wish to use OpenJDK to run their applications.

master_sites https://github.com/SAP/SapMachine/releases/download/sapmachine-${version}/

if {${configure.build_arch} eq "x86_64"} {
    distname     sapmachine-jdk-${version}_macos-x64_bin
    checksums    rmd160  b1217f1a052174942bb2b574ff4010103ed3f62e \
                 sha256  9757e310fdd10183d986b3ce0421b9ab96ceefa97526f5ed90b8cd364abae54e \
                 size    180146803
} elseif {${configure.build_arch} eq "arm64"} {
    distname     sapmachine-jdk-${version}_macos-aarch64_bin
    checksums    rmd160  2b4a804e27b56054d0ec2a57bf2d3d2e56a446c5 \
                 sha256  e1653c1ad4bb5fbd317e30796271c6d0cb4e2964efd2c80c07c518ea92127062 \
                 size    177919228
}
worksrcdir   sapmachine-jdk-${version}.jdk

# https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
if {${os.platform} eq "darwin" && ${os.major} < 16} {
    # See https://adoptium.net/supported_platforms.html
    known_fail yes
    pre-fetch {
        ui_error "${name} ${version} is only supported on macOS 10.12 Sierra or later."
        return -code error
    }
}

homepage     https://sapmachine.io

livecheck.type  none

use_configure    no
build {}

variant Applets \
    description { Advertise the JVM capability "Applets".} {}

variant WebStart \
    description { Advertise the JVM capability "WebStart".} {}

patch {
    foreach var { Applets WebStart } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set target /Library/Java/JavaVirtualMachines/${name}
set destroot_target ${destroot}${target}

destroot {
    xinstall -m 755 -d ${destroot_target}
    copy ${worksrcpath}/Contents ${destroot_target}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${target}/Contents/Home
"
