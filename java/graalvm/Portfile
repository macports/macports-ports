# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

name             graalvm
categories       java devel
maintainers      nomaintainer
platforms        darwin
# These ports use prebuilt binaries, 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# These ports use prebuilt binaries for a particular architecture, they are not universal binaries
universal_variant no

# Latest Long Term Support (LTS) major version
version          17

set long_description_graalvm \
    "GraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R,\
    JVM-based languages like Java, Scala, Groovy, Kotlin, Clojure, and LLVM-based languages such as C and C++."

set obsoleted_ports {
}

if {${subport} in ${obsoleted_ports}} {
    PortGroup    obsolete 1.0
}

if {${subport} eq "graalvm"} {
    depends_run-append    port:graalvm${version}
    description           GraalVM Community Edition based on Openjdk
    long_description      {*}${long_description_graalvm}
    distfiles
    patchfiles
    supported_archs       noarch
    use_configure         no
    build {}
    destroot {
        set docdir ${destroot}${prefix}/share/doc/${subport}
        xinstall -d ${docdir}
        system "echo $subport is a stub port > ${docdir}/README"
    }
}

subport graalvm11 {
    # https://github.com/graalvm/graalvm-ce-builds/releases
    supported_archs  x86_64

    version      22.0.0.2
    revision     0

    description  GraalVM Community Edition based on OpenJDK 11
    long_description {*}${long_description_graalvm}

    master_sites https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${version}/
    distname     graalvm-ce-java11-darwin-amd64-${version}
    worksrcdir   graalvm-ce-java11-${version}

    checksums    rmd160  d45ec5d0f9dae092471fe1c9381769f23efb08da \
                 sha256  8280159b8a66c51a839c8079d885928a7f759d5da0632f3af7300df2b63a6323 \
                 size    418371142
}

subport graalvm17 {
    # https://github.com/graalvm/graalvm-ce-builds/releases
    supported_archs  x86_64

    version      22.0.0.2
    revision     0

    description  GraalVM Community Edition based on OpenJDK 17
    long_description {*}${long_description_graalvm}

    master_sites https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${version}/
    distname     graalvm-ce-java17-darwin-amd64-${version}
    worksrcdir   graalvm-ce-java17-${version}

    checksums    rmd160  857dd0491c827e52aabe7891d1aaada29f802570 \
                 sha256  d54af9d1f4d0d351827395a714ed84d2489b023b74a9c13a431cc9d31d1e8f9a \
                 size    429797450
}

if {[string match graalvm* ${subport}]} {
    homepage     https://www.graalvm.org
}

livecheck.type  none

use_configure    no
build {}

if {[string match graalvm* ${subport}]} {
    test.run    yes
    test.cmd    Contents/Home/bin/java
    test.target
    test.args   -version

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
    destroot.violate_mtree yes

    set target /Library/Java/JavaVirtualMachines/${subport}
    set destroot_target ${destroot}${target}

    destroot {
        xinstall -m 755 -d ${destroot_target}
        copy ${worksrcpath}/Contents ${destroot_target}
    }

    notes "
    If you have more than one JDK installed you can make ${subport} the default
    by adding the following line to your shell profile:
        export JAVA_HOME=${target}/Contents/Home
    "
}
