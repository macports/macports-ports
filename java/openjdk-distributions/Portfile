# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

name             openjdk-distributions
categories       java devel
maintainers      {breun.nl:nils @breun} openmaintainer
platforms        darwin
# These ports use prebuilt binaries, 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# These ports use prebuilt binaries for a particular architecture, they are not universal binaries
universal_variant no

# Note: This is the version/revision for the parent stub only
version          1.0
revision         0

set long_description_corretto \
   "No-cost, multiplatform, production-ready distribution of OpenJDK."

set long_description_ibm_semeru \
    "The IBM Semeru Runtimes are free production-ready open source binaries to run your Java applications built with\
the OpenJDK class libraries and the Eclipse OpenJ9 JVM."

set long_description_temurin \
    "Eclipse Temurin provides secure, TCK-tested and compliant, production-ready Java runtimes."

set long_description_graalvm \
    "GraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R,\
    JVM-based languages like Java, Scala, Groovy, Kotlin, Clojure, and LLVM-based languages such as C and C++."

# Dummy default values
set build          0
set openj9_version 0

set obsoleted_ports {
    openjdk
    openjdk7-zulu
    openjdk8-graalvm
    openjdk8-openj9-large-heap
    openjdk11-openj9-large-heap
    openjdk16
    openjdk16-graalvm
    openjdk16-temurin
    openjdk16-zulu
}

if {${subport} in ${obsoleted_ports}} {
    PortGroup    obsolete 1.0

    replaced_by  openjdk-distributions
    description
    long_description
    homepage
    master_sites
}

if {${subport} eq ${name}} {
    set meta true
    description          "Meta port encompassing binary OpenJDK releases"
    long_description     {*}${description}
    homepage
    master_sites

    distfiles
    patchfiles
    supported_archs      noarch
    use_configure        no
    build {}
    destroot {
        set docdir ${destroot}${prefix}/share/doc/${subport}
        xinstall -d ${docdir}
        system "echo $subport is a stub port > ${docdir}/README"
    }

    notes {
        The openjdk-distributions port is not installable, but recommends users to install\
        the latest Long Term Support (LTS) subport
    }
}

# Remove after 2023-01-23
subport openjdk7-zulu {
    version      7.56.0.11
    revision     1
    replaced_by  openjdk8-zulu
}

subport openjdk8-corretto {
    # https://github.com/corretto/corretto-8/releases
    supported_archs  x86_64 arm64

    version     8.342.07.3
    revision    0

    description  Amazon Corretto OpenJDK 8 (Long Term Support)
    long_description ${long_description_corretto}

    master_sites https://corretto.aws/downloads/resources/${version}/

    if {${configure.build_arch} eq "x86_64"} {
        distname     amazon-corretto-${version}-macosx-x64
        checksums    rmd160  966b129d1ae0255d7d9cbfd202c2f9511af048e1 \
                     sha256  ab4db316b4c5bb886355bbe192a71a5328e43609631477857a1992ca80975fcf \
                     size    118790575
    } elseif {${configure.build_arch} eq "arm64"} {
        distname     amazon-corretto-${version}-macosx-aarch64
        checksums    rmd160  192cf91d72d450cbaf229e5e0981365e40a4b5b8 \
                     sha256  cb29f72976f9e9be525c8ec58edc8bfc20a24f3ec13c5c7259cf1ded3a921eeb \
                     size    104196362
    }

    worksrcdir   amazon-corretto-8.jdk
}

# Remove after 2022-10-19
subport openjdk8-graalvm {
    version      21.0.0.2
    revision     2
    replaced_by  openjdk11-graalvm
}

subport openjdk8-openj9 {
    # https://developer.ibm.com/languages/java/semeru-runtimes/downloads?os=macOS
    supported_archs  x86_64

    version      8u345
    revision     0

    set build    01
    set openj9_version 0.33.0

    homepage     https://developer.ibm.com/languages/java/semeru-runtimes/

    description  Open Java Development Kit 8 (IBM Semeru) with Eclipse OpenJ9 VM
    long_description ${long_description_ibm_semeru}

    master_sites https://github.com/ibmruntimes/semeru8-binaries/releases/download/jdk${version}-b${build}_openj9-${openj9_version}/
    distname     ibm-semeru-open-jdk_x64_mac_${version}b${build}_openj9-${openj9_version}
    worksrcdir   jdk${version}-b${build}

    checksums    rmd160  1a4b825178e0268db47bace8b690596ad5e80efa \
                 sha256  c69086950c006b17484a70ef7bc85e92d121be15e69e282e1446fd238d42b6b4 \
                 size    129519233
}

subport openjdk8-temurin {
    # https://adoptium.net/temurin/releases/
    supported_archs  x86_64

    version      8u345
    revision     0

    set build    01

    description  Eclipse Temurin, based on OpenJDK 8
    long_description ${long_description_temurin}

    master_sites https://github.com/adoptium/temurin8-binaries/releases/download/jdk${version}-b${build}/
    distname     OpenJDK8U-jdk_x64_mac_hotspot_${version}b${build}
    worksrcdir   jdk${version}-b${build}

    checksums    rmd160  ecf6e0243ac503ebe5903f7e3b137c593077697c \
                 sha256  3eeba0e76101b9f5e8eb9eb14ad991293cf0cc064df35f6a89882b603630f0c8 \
                 size    107934646
}

# Remove after 2022-09-14
subport openjdk16 {
    version      16.0.2
    revision     1
    replaced_by  openjdk17
}

# Remove after 2022-10-19
subport openjdk16-graalvm {
    version      21.2.0
    revision     1
    replaced_by  openjdk17-graalvm
}

# Remove after 2022-09-14
subport openjdk16-temurin {
    version      16.0.2
    revision     1
    replaced_by  openjdk17-temurin
}

# Remove after 2022-09-14
subport openjdk16-zulu {
    version      16.32.15
    revision     1
    replaced_by  openjdk17-zulu
}

if {${os.platform} eq "darwin"} {
    # https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
    if {[string match *-openj9 ${subport}] && ${os.major} < 14} {
        # See https://www.ibm.com/support/pages/semeru-runtimes-support
        known_fail yes
        pre-fetch {
            ui_error "${name} ${version} is only supported on Mac OS X 10.10 Yosemite or later."
            return -code error
        }
    } elseif {[string match *-temurin ${subport}] && ${os.major} < 16} {
        # See https://adoptium.net/supported_platforms.html
        known_fail yes
        pre-fetch {
            ui_error "${name} ${version} is only supported on Mac OS X 10.12 Sierra or later."
            return -code error
        }
    }
}

if {[string match *-graalvm ${subport}]} {
    homepage     https://www.graalvm.org
} elseif {[string match *-temurin ${subport}]} {
    homepage     https://adoptium.net
} elseif {[string match *-corretto ${subport}]} {
    homepage     https://aws.amazon.com/corretto/
}

livecheck.type  none

use_configure    no
build {}

if {!(${subport} in ${obsoleted_ports}) && ![info exists meta]} {
    if {![string match *-temurin ${subport}]} {
        variant BundledApp \
            description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

        variant JNI \
            description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}
    }

    variant Applets \
        description { Advertise the JVM capability "Applets".} {}

    variant WebStart \
        description { Advertise the JVM capability "WebStart".} {}

    patch {
        foreach var { Applets BundledApp JNI WebStart } {
            if {[variant_isset ${var}]} {
                reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
            }
        }
    }

    test.run    yes
    test.cmd    Contents/Home/bin/java
    test.target
    test.args   -version

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
    destroot.violate_mtree yes

    set target /Library/Java/JavaVirtualMachines/${subport}
    set destroot_target ${destroot}${target}

    destroot {
        xinstall -m 755 -d ${destroot_target}
        copy ${worksrcpath}/Contents ${destroot_target}
    }

    notes "
    If you have more than one JDK installed you can make ${subport} the default
    by adding the following line to your shell profile:
        export JAVA_HOME=${target}/Contents/Home
    "
}    
