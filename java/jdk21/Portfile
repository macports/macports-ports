# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

set feature 21
name             jdk${feature}
categories       java devel
maintainers      {breun @breun} openmaintainer
platforms        {darwin any}
# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          NFTC NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

supported_archs  x86_64 arm64

# https://www.oracle.com/java/technologies/downloads/#jdk21-mac
version      ${feature}.0.9
revision     0

description  Oracle Java SE Development Kit ${feature}
long_description Java Platform, Standard Edition Development Kit (JDK). \
    The JDK is a development environment for building applications and components using the Java programming language. \
    This software is provided under the Oracle No-Fee Terms and Conditions (NFTC) license (https://java.com/freeuselicense).

master_sites https://download.oracle.com/java/${feature}/archive/

if {${configure.build_arch} eq "x86_64"} {
    set arch_classifier x64
    checksums    rmd160  4f6fdd129079b3d728f7550dd627d1288ea3dfe3 \
                 sha256  535979c514bec4b9011b3584f6a91b0c747378e4e79349ca4465f9c69fc4e607 \
                 size    192625768
} elseif {${configure.build_arch} eq "arm64"} {
    set arch_classifier aarch64
    checksums    rmd160  57f974074f2ffecfa42c9f3fe7d2c2575daa7981 \
                 sha256  028738df601e2d9762d737fae054a515a2385d281d4c4e7db50673e7a945283a \
                 size    190333378
} else {
    set arch_classifier unsupported_arch
}

distname     jdk-${version}_macos-${arch_classifier}_bin

worksrcdir   jdk-${version}.jdk

homepage     https://www.oracle.com/java/

livecheck.type      regex
livecheck.url       https://www.oracle.com/java/technologies/downloads/
livecheck.regex     Java SE Development Kit (${feature}\.\[0-9\.\]+)

use_configure    no
build {}

variant Applets \
    description { Advertise the JVM capability "Applets".} {}

variant BundledApp \
    description { Advertise the JVM capability "BundledApp". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant JNI \
    description { Advertise the JVM capability "JNI". This is required by some java-based app bundles to recognize and use the JVM.} {}

variant WebStart \
    description { Advertise the JVM capability "WebStart".} {}

patch {
    foreach var { Applets BundledApp JNI WebStart } {
        if {[variant_isset ${var}]} {
            reinplace -E "s|^(\[\[:space:\]\]*<string>)CommandLine(</string>)|\\1${var}\\2\\\n\\1CommandLine\\2|" ${worksrcpath}/Contents/Info.plist
        }
    }
}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/jdk-${feature}-oracle-java-se.jdk

destroot {
    xinstall -m 755 -d ${destroot}${prefix}${jdk}
    copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -m 755 -d ${destroot}${jvms}
    ln -s ${prefix}${jdk} ${destroot}${jdk}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${jdk}/Contents/Home
"
