# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem       1.0

set feature 25
name             openjdk${feature}-graalvm
categories       java devel
maintainers      {breun @breun} openmaintainer

# JVMMinimumSystemVersion in Contents/Info.plist is set to macOS 11 for x86_64:
# /usr/libexec/PlistBuddy -c "Print :JavaVM:JVMMinimumSystemVersion" Contents/Info.plist
# Mapping to Darwin version: https://trac.macports.org/wiki/PortfileRecipes#compare-osx-darwin-version
platforms        {darwin any >= 20}

# This port uses prebuilt binaries; 'NoMirror' makes sure MacPorts doesn't mirror/distribute these third-party binaries
license          GPL-2 NoMirror
# This port uses prebuilt binaries for a particular architecture; they are not universal binaries
universal_variant no

# https://github.com/graalvm/graalvm-ce-builds/releases
supported_archs  x86_64 arm64

version          ${feature}.0.1
set build        8
revision         0

description GraalVM Community Edition based on OpenJDK ${feature} (Short Term Support until March 2026)
long_description {*}${description} \
\n\nGraalVM is an advanced JDK with ahead-of-time Native Image compilation

master_sites https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-${version}/

if {${configure.build_arch} eq "x86_64"} {
    set graalvm_arch x64
    checksums    rmd160  f22f3693a6a0aa5a6519ca1af12f8ba6c828716d \
                 sha256  a3d895b4cd1c783badbd277ec70409806bd4102fca0d2a60dbaeb0bab41aec30 \
                 size    309820209
} elseif {${configure.build_arch} eq "arm64"} {
    set graalvm_arch aarch64
    checksums    rmd160  6f0788565258a4d3f922db14da54da81ccee3b9d \
                 sha256  066339f24a8ab5c161548491a9400f7344e7761a1e46f8979e76c7ef11d5bc76 \
                 size    325442578
} else {
    set graalvm_arch unsupported_arch
}

distname     graalvm-community-jdk-${version}_macos-${graalvm_arch}_bin

worksrcdir   graalvm-community-openjdk-${version}+${build}.1

homepage     https://www.graalvm.org

livecheck.type  none

use_configure    no
build {}

test.run    yes
test.cmd    Contents/Home/bin/java
test.target
test.args   -version

# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree yes

set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/jdk-${feature}-graalvm-community.jdk

destroot {
    xinstall -d ${destroot}${prefix}${jdk}
    copy ${worksrcpath}/Contents ${destroot}${prefix}${jdk}

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -d ${destroot}${jvms}
    ln -s ${prefix}${jdk} ${destroot}${jdk}
}

notes "
If you have more than one JDK installed you can make ${name} the default\
by adding the following line to your shell profile:

    export JAVA_HOME=${jdk}/Contents/Home
"
