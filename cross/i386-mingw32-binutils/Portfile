# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                i386-mingw32-binutils
version             2.25.1-1
maintainers         nomaintainer
description         Mingw32 Binutils for i386-mingw32 cross development
long_description    Mingw32 development toolchain ("binutils") \
                    for i386-mingw32 (Windows) cross development.
homepage            http://www.mingw.org
categories          cross devel
license             GPL-3+

depends_lib         port:gettext

# Parameters for this port.
set crossgcc-target i386-mingw32

platforms           darwin
master_sites        sourceforge:project/mingw/MinGW/Base/binutils/binutils-[lindex [split ${version} -] 0]
use_xz              yes
distname            binutils-${version}-mingw32-src
worksrcdir          binutils-[lindex [split ${version} -] 0]

checksums           rmd160  92c01c1959359fc531127cad51a1907a7a0aae08 \
                    sha256  b6f19bff734988f844c44aa6409b914fc9560cf8105e87730a697f6943b83d02

# Build in a different directory, as advised in the README file.
pre-configure       { system "cd ${workpath} && mkdir -p build"}
configure.dir       ${workpath}/build
configure.cmd       ${worksrcpath}/configure
configure.args      --infodir='${prefix}/share/info' --target=${crossgcc-target} \
                    --program-prefix=${crossgcc-target}- --mandir='${prefix}/share/man' \
                    --disable-werror
if {${os.platform} eq "darwin" && ${build_arch} ne ""} {
    configure.args-append --build=${build_arch}-apple-darwin${os.major}
}
# Append CPPFLAGS to CFLAGS and CXXFLAGS as CPPFLAGS seems to be ignored
configure.cflags-append     ${configure.cppflags}
configure.cxxflags-append   ${configure.cppflags}
build.dir                   ${workpath}/build

# We don't want the etc module.
post-extract {
    system "rm -rf ${worksrcpath}/etc"
}

post-patch {
    namespace eval crossgcc {}

    # Fix the info pages and related stuff.
    #   
    # path: path to the doc directory (e.g. gas/doc/)
    # makefile: path to Makefile.in (e.g. gas/doc/Makefile.in)
    # name: name of the info page (e.g. as)
    # suffix: suffix of the souce page (texinfo or texi)
    proc crossgcc::fixinfo { path makefile name suffix } {
        global crossgcc-target worksrcpath

        # Fix the source
        reinplace "s|setfilename ${name}.info|setfilename ${crossgcc-target}-${name}.info|g" \
            ${worksrcpath}/${path}/${name}.${suffix}
        reinplace "s|(${name})|(${crossgcc-target}-${name})|g" \
            ${worksrcpath}/${path}/${name}.${suffix}
        reinplace "s|@file{${name}}|@file{${crossgcc-target}-${name}}|g" \
            ${worksrcpath}/${path}/${name}.${suffix}
        
        # Fix the Makefile
        reinplace "s|${name}.info|${crossgcc-target}-${name}.info|g" \
            ${worksrcpath}/${makefile}
        reinplace "s|${name}.${suffix}|${crossgcc-target}-${name}.${suffix}|g" \
            ${worksrcpath}/${makefile}
        
        # Rename the source
        file rename ${worksrcpath}/${path}/${name}.${suffix} \
            ${worksrcpath}/${path}/${crossgcc-target}-${name}.${suffix}
        
        # Fix install-info's dir.
        # (note: this may be effectless if there was no info dir to be fixed)
        reinplace "s|__TARGET|${crossgcc-target}|g" \
            "${worksrcpath}/${makefile}"
    }

    # Fix the gettext files and related stuff.
    #   
    # module: name of the module (e.g. gas)
    proc crossgcc::fixgettext { module } {
        global crossgcc-target worksrcpath

        if { [ file exists "${worksrcpath}/${module}/Makefile.in" ] } {
            reinplace "s|@PACKAGE@|${crossgcc-target}-@PACKAGE@|g" \
                "${worksrcpath}/${module}/Makefile.in"
        }
        if { [ file exists "${worksrcpath}/${module}/doc/Makefile.in" ] } {
            reinplace "s|@PACKAGE@|${crossgcc-target}-@PACKAGE@|g" \
                "${worksrcpath}/${module}/doc/Makefile.in"
        }
        if { [ file exists "${worksrcpath}/${module}/po/Make-in" ] } {
            reinplace "s|@PACKAGE@|${crossgcc-target}-@PACKAGE@|g" \
                "${worksrcpath}/${module}/po/Make-in"
        }
    }

    # gas/doc/as.texinfo
    crossgcc::fixinfo gas/doc/ gas/doc/Makefile.in as texinfo

    # bfd/doc/bfd.texinfo
    crossgcc::fixinfo bfd/doc/ bfd/doc/Makefile.in bfd texinfo

    # binutils/doc/binutils.texi
    crossgcc::fixinfo binutils/doc/ binutils/doc/Makefile.in binutils texi

    # gprof/gprof.texi
    crossgcc::fixinfo gprof/ gprof/Makefile.in gprof texi

    # ld/ld.texinfo
    crossgcc::fixinfo ld/ ld/Makefile.in ld texinfo
    
    # gettext stuff.
    crossgcc::fixgettext bfd
    crossgcc::fixgettext binutils
    crossgcc::fixgettext gas
    crossgcc::fixgettext gprof
    crossgcc::fixgettext ld
    crossgcc::fixgettext opcodes
}

destroot.violate_mtree  yes
