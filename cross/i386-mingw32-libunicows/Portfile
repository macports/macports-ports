PortSystem 1.0

name			i386-mingw32-libunicows
version			1.1.1
categories		cross devel
license			MIT
platforms		darwin
maintainers		nomaintainer
description		makes writing Unicode-enabled applications for Win 9x a bit easier
long_description	Traditionally, win32 Unicode API was only available on \
				Windows NT or 2000. If you wanted to take advantage of Unicode \
				in your application and support Windows 95/98 at the same time, \
				your only option was to deploy two executables, one for NT and \
				one for 9X. Fortunately, this changed in 2001 when MS (finally!) \
				released MSLU runtime that allows Unicode applications to run \
				under Windows 9X. \
				\
				Less fortunately, this solution requires that you use a special \
				statically linked import library that decides at runtime whether \
				to load symbols from system libraries like kernel32.dll or \
				user32.dll (in case of Windows NT) or from unicows.dll \
				(which provides Unicode emulation layer under 9X). \
				This import library is only available for Microsoft Visual C++ \
				and is only part of the new Platform SDK, which is rather huge package. \
				libunicows contains independent implementation of the import library. \
				\
				For a free runtime DLL, take a look at http://opencow.sourceforge.net/

homepage		http://libunicows.sourceforge.net/
master_sites		sourceforge:project/libunicows/libunicows/${version}
distfiles		libunicows-${version}-src.tar.gz
				#libunicows-${version}-mingw32.zip # (binary)

checksums		libunicows-${version}-src.tar.gz \
					md5 e321b0fd4d0a50fcc83fd66dbed67ce1 \
					sha1 7ad79f37e6c7c645cc002507af9bf22a5b8389c6 \
					rmd160 0ce07693aceaa1c9b9d333666b8154c408331499

depends_build		port:nasm \
			port:i386-mingw32-gcc \
			port:i386-mingw32-binutils

set worksrcdir	libunicows-${version}/src
post-extract {
	reinplace "s/= gcc/= i386-mingw32-gcc/" ${worksrcpath}/makefile.mingw32
	reinplace "s/= ld/= i386-mingw32-ld/" ${worksrcpath}/makefile.mingw32
	reinplace "s/= ranlib/= i386-mingw32-ranlib/" ${worksrcpath}/makefile.mingw32
	reinplace "s/= ar/= i386-mingw32-ar/" ${worksrcpath}/makefile.mingw32
	reinplace "s/= strip/= i386-mingw32-strip/" ${worksrcpath}/makefile.mingw32
}

use_configure	no
post-configure {
	xinstall -d ${worksrcpath}/build/mingw32
	xinstall -d ${worksrcpath}/../lib/mingw32
}

build.cmd 	make -f makefile.mingw32

destroot  	 {}
post-destroot {
	xinstall -d -m 755 ${destroot}${prefix}/i386-mingw32/lib
	xinstall -m 644 ${workpath}/libunicows-${version}/lib/mingw32/libunicows.a \
		${destroot}${prefix}/i386-mingw32/lib

	xinstall -d -m 755 ${destroot}${prefix}/share/doc/${name}
	xinstall -m 644 ${workpath}/libunicows-${version}/docs/license.txt \
	                ${workpath}/libunicows-${version}/docs/readme.txt \
		${destroot}${prefix}/share/doc/${name}
}

# ${prefix}/i386-mingw32 is outside mtree
destroot.violate_mtree	yes
