# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       compiler_blacklist_versions 1.0

name            arm-none-eabi-gdb
version         11.1
revision        0
categories      cross devel
platforms       darwin
license         GPL-3+
maintainers     nomaintainer
description     GDB: The GNU Project Debugger for arm-none-eabi

long_description \
GDB, the GNU Project Debugger, for arm-none-eabi cross development.

homepage        https://www.gnu.org/software/gdb/
master_sites    gnu:gdb
distname        gdb-${version}
dist_subdir     gdb
use_xz          yes

checksums       rmd160  da07d7504be6c7d11c98751e0cbef75685daceba \
                sha256  cccfcc407b20d343fb320d4a9a2110776dd3165118ffd41f4b1b162340333f94 \
                size    22040696

set crossgdb-target     arm-none-eabi

if {${configure.build_arch} eq "ppc" || ${configure.build_arch} eq "ppc64"} {
    notes "${name} does not support building on ${configure.build_arch}."
    pre-fetch {
        ui_error "${name} does not support building on ${configure.build_arch}."
        return -code error "Unsupported architecture."
    }
}

# These dependencies are listed under depends_lib rather than depends_build
# because gdb will link with libraries they provide if installed. There may be
# more. See variable host_libs in configure.ac. port:guile should also be a
# dependency, but currently does not build universally. (#48767)

depends_build   port:${crossgdb-target}-gcc \
                port:expat \
                port:gettext \
                port:gmp \
                port:libiconv \
                port:ncurses \
                port:zlib \
                port:boehmgc

# Older Apple clang versions segfault, c.f.,
# https://trac.macports.org/ticket/56883
compiler.blacklist      {clang < 601}
compiler.thread_local_storage \
                        yes

# Needs C++11; halfway redundant due to the blacklist above, but make sure
# selected compiler supports the standard - getting rid of old Apple GCC
# versions and the like?
compiler.cxx_standard   2011

post-patch {
    # Fix the info pages and related stuff.
    #
    # path:     path to the doc directory (e.g. gas/doc/)
    # makefile: path to Makefile.in (e.g. gas/doc/Makefile.in)
    # name:     name of the info page (e.g. as)
    # suffix:   suffix of the source page (texinfo or texi)
    #
    #   path        makefile                name        suffix
    set infopages {
        bfd/doc     bfd/doc/Makefile.in     bfd         texi
        gdb/doc     gdb/doc/Makefile.in     annotate    texinfo
        gdb/doc     gdb/doc/Makefile.in     gdb         texinfo
        gdb/doc     gdb/doc/Makefile.in     stabs       texinfo
    }

    foreach { path makefile name suffix } ${infopages} {
        set src      ${worksrcpath}/${path}/${name}.${suffix}
        set makefile ${worksrcpath}/${makefile}
        # If the makefile doesn't exists, skip it.
        if { ! [file exists ${makefile}] } {continue}

        # Fix the source
        reinplace -q "s|setfilename ${name}.info|setfilename ${crossgdb-target}-${name}.info|g" ${src}
        reinplace -q "s|(${name})|(${crossgdb-target}-${name})|g" ${src}
        reinplace -q "s|@file{${name}}|@file{${crossgdb-target}-${name}}|g" ${src}

        # Rename the source
        file rename ${worksrcpath}/${path}/${name}.${suffix} \
                    ${worksrcpath}/${path}/${crossgdb-target}-${name}.${suffix}

        # Fix the Makefile
        reinplace -q -E "s:\[\[:<:\]\]${name}\\.(info|pod|${suffix}):${crossgdb-target}-&:g" ${makefile}

        # Fix install-info's dir.
        # (note: this may be effectless if there was no info dir to be fixed)
        reinplace -q "s|--info-dir=\$(DESTDIR)\$(infodir)|--dir-file=\$(DESTDIR)\$(infodir)/${crossgdb-target}-gdb-dir|g" ${makefile}
    }

    # Do not install libiberty
    reinplace -q {/^install:/s/ .*//} ${worksrcpath}/libiberty/Makefile.in
}

configure.dir   ${workpath}/build
configure.cmd   ${worksrcpath}/configure
configure.args  \
                --target=${crossgdb-target} \
                --infodir=${prefix}/share/info \
                --mandir=${prefix}/share/man \
                --with-docdir=${prefix}/share/doc \
                --with-gdb-datadir=${prefix}/share/${name} \
                --without-guile \
                --without-python \
                --disable-werror

# specific to ARM
configure.args-append \
                --enable-interwork

pre-configure {
    file mkdir ${configure.dir}
}

build.dir ${configure.dir}

post-destroot {
        # avoid conflicts with arm-none-eabi-binutils port
        delete ${destroot}${prefix}/share/info/arm-none-eabi-bfd.info

        # avoid conflicts with gdb port
        delete ${destroot}${prefix}/share/locale
        # https://trac.macports.org/ticket/43098
        delete ${destroot}${prefix}/include/gdb
}

if {${os.platform} eq "darwin" && ${os.major} >= 12} {
    notes "
You will need to codesign ${prefix}/bin/arm-none-eabi-gdb

See https://sourceware.org/gdb/wiki/BuildingOnDarwin#Giving_gdb_permission_to_control_other_processes
for more information.
"
}

livecheck.type  regex
livecheck.url   https://ftp.gnu.org/gnu/gdb/
livecheck.regex gdb-(\\d+(?:\\.\\d+)+)\\.tar
