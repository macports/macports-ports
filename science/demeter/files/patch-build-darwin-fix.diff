--- DemeterBuilder.pm.orig	2018-02-07 13:30:14.000000000 -0700
+++ DemeterBuilder.pm	2019-11-05 10:39:03.000000000 -0700
@@ -182,64 +182,6 @@
   print STDOUT "$term terminal.\n";
 };
 
-## this is no longer needed -- Larch is tested for at runtime
-sub ACTION_test_for_larchserver {
-  # search for Python exe and Larch server script, write larch_server.ini
-  my $inifile = File::Spec->catfile(cwd, 'lib', 'Demeter', 'share', 'ini', 'larch_server.ini');
-  print STDOUT "Looking for Python and Larch ---> ";
-  my $larchexec  = '';
-  if (($^O eq 'MSWin32') or ($^O eq 'cygwin')) {
-      my @dirlist = split /;/, $ENV{'PATH'};
-      push @dirlist,  (File::Spec->catfile($ENV{LOCALAPPDATA}, 'Continuum', 'Anaconda3'),
-		       File::Spec->catfile($ENV{LOCALAPPDATA}, 'Continuum', 'Anaconda2'),
-		       File::Spec->catfile($ENV{LOCALAPPDATA}, 'Continuum', 'Anaconda'),
-		       File::Spec->catfile($ENV{APPDATA}, 'Continuum', 'Anaconda3'),
-		       File::Spec->catfile($ENV{APPDATA}, 'Continuum', 'Anaconda2'),
-		       File::Spec->catfile($ENV{APPDATA}, 'Continuum', 'Anaconda'),
-		       'C:\Python27', 'C:\Python35');
-      foreach my $d (@dirlist) {
-	  my $pyexe_ =  File::Spec->catfile($d, 'python.exe');
-	  my $larch_ =  File::Spec->catfile($d, 'Scripts', 'larch_server');
-	  if ((-e $pyexe_) && (-e $larch_))  {
-	      $larchexec = "$pyexe_ $larch_";
-	      last;
-	  }
-      }
-  } else {
-      my @dirlist = split /:/, $ENV{'PATH'};
-      push @dirlist,  (File::Spec->catfile($ENV{HOME}, 'anaconda3', 'bin'),
-		       File::Spec->catfile($ENV{HOME}, 'anaconda2', 'bin'),
-		       File::Spec->catfile($ENV{HOME}, 'anaconda', 'bin'));
-
-      foreach my $d (@dirlist) {
-	  my $pyexe_ =  File::Spec->catfile($d, 'python');
-	  my $larch_ =  File::Spec->catfile($d, 'larch_server');
-	  if ((-e $pyexe_) && (-e $larch_))  {
-	      $larchexec = "$pyexe_ $larch_";
-	      last;
-	  }
-      }
-  }
-  if ($larchexec eq '') {
-      print "not found\n";
-  } else {
-      print "found  $larchexec \n";
-  }
-  my $larch_server_ini_text = <<"END_OF_FILE";
----
-server: 'localhost' # URL of larch_server or "localhost" is running locally
-port: 4966          # the port number the larch server is listening to
-timeout: 3          # the timeout in seconds before Demeter gives up trying to talk to the larch server
-quiet: 1            # 1 means to suppress larch_server screen messages, 0 means allow larch_server to print messages
-windows: $larchexec
-END_OF_FILE
-
-  open(my $FOUT, '>', $inifile);
-  print $FOUT $larch_server_ini_text;
-  close $FOUT;
-  print "Wrote $inifile\n";
-};
-
 
 sub ACTION_compile_ifeffit_wrapper {
   my $self = shift;
@@ -278,9 +220,6 @@
 		       qw{-lcpgplot -lpgplot -lGrWin -lgdi32 -lgfortran},
 		      ];
       #    $compile_flags = $linker_flags;
-    } elsif ($platform eq 'darwin') {
-      1;
-
     } else {
       ($pgplot_location, $compile_flags, $linker_flags) = (q{}, q{});
       $iffdir = `ifeffit -i 2>/dev/null`;
