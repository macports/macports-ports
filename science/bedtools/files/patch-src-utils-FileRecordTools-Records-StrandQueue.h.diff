--- src/utils/FileRecordTools/Records/StrandQueue.h.orig
+++ src/utils/FileRecordTools/Records/StrandQueue.h
@@ -20,17 +20,17 @@ class StrandQueue {
 	StrandQueue();
 	~StrandQueue();
 
-	Record * top() const;
+	Record * top();
 	void pop();
-	Record * top(Record::strandType strand) const;
-	void pop(Record::strandType strand) const;
+	Record * top(Record::strandType strand);
+	void pop(Record::strandType strand);
 	void push(Record *record);
-	size_t size() const;
-	bool empty() const;
+	size_t size();
+	bool empty();
 
 private:
 //	static RecordPtrSortFunctor _recSortFunctor;
-	typedef priority_queue<Record *, vector<const Record *>, RecordPtrSortDescFunctor > queueType;
+	typedef priority_queue<Record *, vector<Record *>, RecordPtrSortDescFunctor > queueType;
 	vector<queueType *> _queues;
 	static const int NUM_QUEUES = 3;
 
@@ -39,7 +39,7 @@ class StrandQueue {
 	//do, so we'll use a suggestion found in a forum, and put the enum values into a vector.
 	vector<Record::strandType> _strandIdxs;
 
-	int getMinIdx() const; //will return the idx of queue with the current min val.
+	int getMinIdx(); //will return the idx of queue with the current min val.
 
 };
 
