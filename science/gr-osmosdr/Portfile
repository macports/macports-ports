# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           active_variants 1.1
PortGroup           github 1.0

name                gr-osmosdr
maintainers         {michaelld @michaelld} openmaintainer
categories          science comms
homepage            http://sdr.osmocom.org/trac/wiki/GrOsmoSDR
license             GPL-3
platforms           darwin macosx
description         gr-osmosdr provides support for OsmoSDR hardware within GNU Radio
long_description    Includes OSMO SDR support GNU Radio source and sink blocks in C++, \
    Python, and GNU Radio Companion (grc).  This port also offers a wrapper functionality \
    for the FunCube Dongle, FunCube Dongle Pro+, HackRF, RFSpace, Ettus UHD, and rtl-sdr radios \
    and software.  By using gr-osmosdr source you can take advantage of a common software API \
    in your applications independent of the underlying radio hardware.

# use C++11
compiler.cxx_standard 2011

if {${name} eq ${subport}} {
    github.setup osmocom gr-osmosdr af2fda22b3b3745520ef38e9aaa757484871ee0c
    version      20200214-[string range ${github.version} 0 7]
    checksums    rmd160  36df660e45eba9a33e3e0af8554b89bd2e3e3741 \
                 sha256  4010a5fa7000b7d4382b87840f5399ba235fac34c5f19fb6ddac21093be5b49b \
                 size    251199
    revision     1

    depends_lib-append \
        path:lib/libgnuradio-runtime.dylib:gnuradio

    conflicts gr37-osmosdr

    set python_versions { 3.6 3.7 3.8 }
    set default_python_variant +python37

    # add out-of-tree backend
    patchfiles-append \
        add_airspy-spyserver_support.patch \
        add_gr-iio_support.patch
}

subport gr37-osmosdr {

    name         gr37-osmosdr

    github.setup osmocom gr-osmosdr a95bbd74181de7df55cb14d728ee313314f6c092
    github.livecheck.branch gr3.7
    version      20191201-[string range ${github.version} 0 7]
    checksums    rmd160  1d4c0d1738a2c975caab615e89900d6ec958817b \
                 sha256  baf4ce1cc0531c25e33c6b8b3c5eed12d2af1903c3c9a6c364a9b8360199fd48 \
                 size    278344
    revision     0

    conflicts gr-osmosdr

    set python_versions { 2.7 }
    set default_python_variant +python27

    depends_lib-append \
        port:gnuradio37

}

# Define the available variants
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    set variant_line {variant python${py_ver_no_dot} description "Build with python ${py_ver} support"}
    foreach py_over ${python_versions} {
        if { ${py_ver} == ${py_over} } { continue }
        set py_over_no_dot [join [split ${py_over} "."] ""]
        append variant_line " conflicts python${py_over_no_dot}"
    }
    append variant_line { { } }
    eval $variant_line
    if {[variant_isset python${py_ver_no_dot}]} {
        if {${default_python_variant} != "+python${py_ver_no_dot}"} {
            set default_python_variant ""
        }
    }
}

# set default python variant if not selected
if {${default_python_variant} != ""} {
    default_variants-append "${default_python_variant}"
}

# If a python variant is enabled, activate it
set active_python_version ""
set active_python_version_no_dot ""
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    if {[variant_isset python${py_ver_no_dot}]} {
        set active_python_version        ${py_ver}
        set active_python_version_no_dot ${py_ver_no_dot}
    }
}

depends_build-append \
    port:pkgconfig \
    port:cppunit

depends_lib-append \
    port:boost \
    path:lib/libvolk.dylib:volk \
    port:python${active_python_version_no_dot}

# specify the Python version to use
set python_framework_dir ${frameworks_dir}/Python.framework/Versions/${active_python_version}
configure.args-append \
    -DPYTHON_EXECUTABLE=${python_framework_dir}/bin/python${active_python_version} \
    -DPYTHON_INCLUDE_DIR=${python_framework_dir}/Headers \
    -DPYTHON_LIBRARY=${python_framework_dir}/Python \
    -DGR_PYTHON_DIR=${python_framework_dir}/lib/python${active_python_version}/site-packages

configure.args-append \
    -DDOXYGEN_DOT_EXECUTABLE= \
    -DDOXYGEN_EXECUTABLE= \
    -DCMAKE_MODULES_DIR=share/cmake

# default
configure.args-append \
    -DENABLE_IQBALANCE=OFF \
    -DENABLE_OSMOSDR=OFF \
    -DENABLE_FILE=ON \
    -DENABLE_MIRI=OFF

if {[variant_isset debug]} {
    cmake.build_type Debug
} else {
    cmake.build_type Release
}

variant docs description "Install ${name} documentation" {
    depends_build-append \
        port:doxygen \
        path:bin/dot:graphviz

    if {${subport} eq "gr-osmosdr"} {
        depends_build-append \
            port:py${active_python_version_no_dot}-six
    }

    configure.args-delete \
        -DDOXYGEN_DOT_EXECUTABLE= \
        -DDOXYGEN_EXECUTABLE=

    configure.args-append \
        -DDOXYGEN_DOT_EXECUTABLE=${prefix}/bin/dot \
        -DDOXYGEN_EXECUTABLE=${prefix}/bin/doxygen
}


variant uhd description "Install ${name} with support for UHD" {
    # allow uhd or uhd-devel
    depends_lib-append \
        path:lib/libuhd.dylib:uhd

    # require gnuradio to also have this variant
    require_active_variants \
        path:lib/libgnuradio-runtime.dylib:gnuradio uhd

    configure.args-append \
        -DENABLE_UHD=ON \
        -DGNURADIO_UHD_INCLUDE_DIRS=${prefix}/include \
        -DGNURADIO_UHD_LIBRARIES=${prefix}/lib/libgnuradio-uhd.dylib \
        -DUHD_INCLUDE_DIRS=${prefix}/include/uhd \
        -DUHD_LIBRARIES=${prefix}/lib/libuhd.dylib
}

if {![variant_isset uhd]} {
    configure.args-append \
        -DENABLE_UHD=OFF \
        -DGNURADIO_UHD_INCLUDE_DIRS= \
        -DGNURADIO_UHD_LIBRARIES= \
        -DUHD_INCLUDE_DIRS= \
        -DUHD_LIBRARIES=
}

variant iio description "Install ${name} with support for IIO devices like PlutoSDR" {
    depends_lib-append \
        path:lib/libiio.dylib:libiio \
        port:gr-iio

    configure.args-append \
        -DENABLE_IIO=ON \
        -DGNURADIO_IIO_INCLUDE_DIRS=${prefix}/include \
        -DGNURADIO_IIO_LIBRARIES=${prefix}/lib/libgnuradio-iio.dylib \
        -DIIO_INCLUDE_DIRS=${prefix}/include \
        -DIIO_LIBRARIES=${prefix}/lib/libiio.dylib
}

if {![variant_isset iio]} {
    configure.args-append \
        -DENABLE_IIO=OFF \
        -DGNURADIO_IIO_INCLUDE_DIRS= \
        -DGNURADIO_IIO_LIBRARIES= \
        -DIIO_INCLUDE_DIRS= \
        -DIIO_LIBRARIES=
}

variant swig description "Install ${name} with support for SWIG-base Python bindings" {
    depends_build-append \
        port:swig-python

    if {${subport} eq "gr-osmosdr"} {
        depends_build-append \
            port:py${active_python_version_no_dot}-mako
    }

    # require gnuradio to also have this variant
    require_active_variants \
        path:lib/libgnuradio-runtime.dylib:gnuradio swig

    configure.args-append \
        -DSWIG_EXECUTABLE=${prefix}/bin/swig
}

if {![variant_isset swig]} {
    configure.args-append \
        -DSWIG_EXECUTABLE=
}

variant hackrf description "Install ${name} with support for hackrf" {
    # allow for release or devel
    depends_lib-append path:lib/libhackrf.dylib:hackrf
    configure.args-append -DENABLE_HACKRF=ON
}

if {![variant_isset hackrf]} {
    configure.args-append -DENABLE_HACKRF=OFF
}

variant fcdproplus description "Install ${name} with support for FunCube Dongle Pro+ (fcdproplus)" {
    if {${subport} eq "gr37-osmosdr"} {
        depends_lib-append \
            port:gr37-fcdproplus
    } else {
        depends_lib-append \
            port:gr-fcdproplus
    }

   configure.args-append -DENABLE_FCDPP=ON
}

if {![variant_isset fcdproplus]} {
    configure.args-append -DENABLE_FCDPP=OFF
}

variant rtlsdr description "Install ${name} with support for rtl-sdr" {
    depends_lib-append port:rtl-sdr
    configure.args-append -DENABLE_RTL=ON -DENABLE_RTL_TCP=ON
}

if {![variant_isset rtlsdr]} {
    configure.args-append -DENABLE_RTL=OFF -DENABLE_RTL_TCP=OFF
}

variant bladeRF description "Install ${name} with support for bladeRF" {
    depends_lib-append port:bladeRF
    configure.args-append -DENABLE_BLADERF=ON
}

if {![variant_isset bladeRF]} {
    configure.args-append -DENABLE_BLADERF=OFF
}

variant airspy description "Install ${name} with support for airspy" {
    depends_lib-append port:airspy
    configure.args-append -DENABLE_AIRSPY=ON
}

if {![variant_isset airspy]} {
    configure.args-append -DENABLE_AIRSPY=OFF
}

variant spyserver description "Install ${name} with support for airspy spyserver" {
    configure.args-append -DENABLE_SPYSERVER=ON
}

if {![variant_isset spyserver]} {
    configure.args-append -DENABLE_SPYSERVER=OFF
}

variant redpitaya description "Install ${name} with support for Red Pitaya" {
    configure.args-append -DENABLE_REDPITAYA=ON
}

if {![variant_isset redpitaya]} {
    configure.args-append -DENABLE_REDPITAYA=OFF
}

variant rfspace description "Install ${name} with support for RFSpace" {
    configure.args-append -DENABLE_RFSPACE=ON
}

if {![variant_isset rfspace]} {
    configure.args-append -DENABLE_RFSPACE=OFF
}

# SoapySDR and SDRPlay work on 10.9 and newer only until fixed
platform darwin {
    if {${os.major} > 12} {

        variant soapysdr description "Install ${name} with support for SoapySDR" {
            depends_lib-append port:SoapySDR
            configure.args-append -DENABLE_SOAPY=ON
        }

        if {![variant_isset soapysdr]} {
            configure.args-append -DENABLE_SOAPY=OFF
        }

        variant sdrplay description "Install ${name} with support for SDRplay" {
            depends_lib-append port:SDRplay
            configure.args-append -DENABLE_NONFREE=ON -DENABLE_SDRPLAY=ON
        }

        if {![variant_isset sdrplay]} {
            configure.args-append -DENABLE_NONFREE=OFF -DENABLE_SDRPLAY=OFF
        }

    } else {
        # for any Mac OS X <= 10.8 (major <= 12), explicitly disable
        # SOAPYSDR and SDRPLAY. Just in case they might be installed
        # somehow, we don't want to link with those installs.
        configure.args-append \
            -DENABLE_SOAPY=OFF \
            -DENABLE_NONFREE=OFF \
            -DENABLE_SDRPLAY=OFF
    }
}

# available only on >GR3.7 versions
if {${subport} eq "gr-osmosdr"} {
    variant airspyhf description "Install ${name} with support for airspyhf" {
        depends_lib-append port:airspyhf
        configure.args-append -DENABLE_AIRSPYHF=ON
    }

    if {![variant_isset airspyhf]} {
        configure.args-append -DENABLE_AIRSPYHF=OFF
    }
}

# per user concensus: enable all variants except +debug and +universal
default_variants +docs +uhd +swig +hackrf +rtlsdr +bladeRF +airspy +redpitaya +rfspace +fcdproplus +spyserver

# SoapySDR and SDRPlay work on 10.9 and newer only until fixed
platform darwin {
    if {${os.major} > 12} {
        default_variants +soapysdr +sdrplay
    }
}

# available only on >GR3.7 versions
if {${subport} eq "gr-osmosdr"} {
    default_variants +airspyhf
}
