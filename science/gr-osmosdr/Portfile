# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           active_variants 1.1
PortGroup           cxx11 1.1
PortGroup           github 1.0

name                gr-osmosdr
maintainers         {michaelld @michaelld} openmaintainer

github.setup        osmocom gr-osmosdr c653754dde5e2cf682965e939cc016fbddbd45e4
version             20170611
revision            6
checksums           rmd160 df896579fe78ef676cde24e350d712015b25375a \
                    sha256 95f513c549374cb70fa565c890b02ab50afe0d775cbc1f4b5ec1654b67f20854 \
                    size   272083

# stealth update equivalent when moving to GitHub
# remove on next update
dist_subdir         ${name}/${version}_1

description         gr-osmosdr provides support for OsmoSDR hardware within GNU Radio
long_description    Includes OSMO SDR support GNU Radio source and sink blocks in C++, Python, and GNU Radio Companion (grc).  This port also offers a wrapper functionality for the FunCube Dongle, FunCube Dongle Pro+, HackRF, RFSpace, Ettus UHD, and rtl-sdr radios and software.  By using gr-osmosdr source you can take advantage of a common software API in your applications independent of the underlying radio hardware. This port is kept up with the gr-osmosdr GIT 'master' branch, which is typically updated weekly to monthly, providing compatibility with GNU Radio release 3.7 API: the gnuradio and gnuradio-devel ports.

categories          science comms
homepage            http://sdr.osmocom.org/trac/wiki/GrOsmoSDR
license             GPL-3
platforms           darwin macosx

# allow gr-osmosdr to work with gnuradio, gnuradio-devel, or gnuradio-next

depends_lib-append  path:lib/libgnuradio-runtime.dylib:gnuradio

# is gnuradio-next not installed?

set not_gr_next [catch {set installed [lindex [registry_active gnuradio-next] 0]}]

# do VPATH (out of source tree) build

cmake.out_of_source yes

depends_build-append \
    port:pkgconfig

depends_lib-append \
    port:boost \
    path:lib/libvolk.dylib:volk

depends_test-append \
    port:cppunit

# remove top-level library path, such that internal libraries are used
# instead of any already-installed ones.

configure.ldflags-delete -L${prefix}/lib

# per user concensus: enable all variants except +debug and +universal

default_variants +docs +uhd +swig +hackrf +rtlsdr +bladeRF +airspy

# can't use fcdproplus with gnuradio-next yet

if {${not_gr_next}} {
    default_variants +fcdproplus
}

# SoapySDR and SDRPlay work on 10.9 and newer only until fixed

platform darwin {
    if {${os.major} > 12} {
        default_variants +soapysdr +sdrplay
    }
}

# common configure flags

configure.args-append \
    -DENABLE_IQBALANCE=OFF \
    -DENABLE_OSMOSDR=OFF \
    -DENABLE_FILE=ON \
    -DENABLE_MIRI=OFF \
    -DENABLE_RFSPACE=ON \
    -DENABLE_REDPITAYA=OFF

# gr-fcd is not available on next
if {${not_gr_next}} {
    configure.args-append \
        -DENABLE_FCD=ON
} else {
    configure.args-append \
        -DENABLE_FCD=OFF
}

# one of the c++ codes uses struct assignment settings that require
# C++11 or newer.  don't patch; just require C++11 instead.

configure.args-append \
    -DCMAKE_CXX_STANDARD=11

# specify the Python dependencies

depends_lib-append \
    port:python27

# specify the Python version to use

configure.args-append \
    -DPYTHON_EXECUTABLE=${frameworks_dir}/Python.framework/Versions/2.7/bin/python2.7 \
    -DPYTHON_INCLUDE_DIR=${frameworks_dir}/Python.framework/Versions/2.7/Headers \
    -DPYTHON_LIBRARY=${frameworks_dir}/Python.framework/Versions/2.7/Python \
    -DGR_PYTHON_DIR=${frameworks_dir}/Python.framework/Versions/2.7/lib/python2.7/site-packages

variant docs description "Install ${name} documentation" {

    depends_build-append \
        port:doxygen \
        path:bin/dot:graphviz

    configure.args-append \
        -DDOXYGEN_DOT_EXECUTABLE=${prefix}/bin/dot \
        -DDOXYGEN_EXECUTABLE=${prefix}/bin/doxygen

}

if {![variant_isset docs]} {

    configure.args-append \
        -DDOXYGEN_DOT_EXECUTABLE= \
        -DDOXYGEN_EXECUTABLE=

}

variant uhd description "Install ${name} with support for UHD" {

    # allow uhd or uhd-devel

    depends_lib-append \
        path:lib/libuhd.dylib:uhd

    # require gnuradio to also have this variant

    require_active_variants \
        path:lib/libgnuradio-runtime.dylib:gnuradio uhd

    configure.args-append \
        -DENABLE_UHD=ON \
        -DGNURADIO_UHD_INCLUDE_DIRS=${prefix}/include \
        -DGNURADIO_UHD_LIBRARIES=${prefix}/lib/libgnuradio-uhd.dylib \
        -DUHD_INCLUDE_DIRS=${prefix}/include/uhd \
        -DUHD_LIBRARIES=${prefix}/lib/libuhd.dylib

}

if {![variant_isset uhd]} {

    configure.args-append \
        -DENABLE_UHD=OFF \
        -DGNURADIO_UHD_INCLUDE_DIRS= \
        -DGNURADIO_UHD_LIBRARIES= \
        -DUHD_INCLUDE_DIRS= \
        -DUHD_LIBRARIES=

}

variant swig description "Install ${name} with support for SWIG-base Python bindings" {

    depends_lib-append \
        port:swig-python

    # require gnuradio to also have this variant

    require_active_variants \
        path:lib/libgnuradio-runtime.dylib:gnuradio swig

    configure.args-append \
        -DSWIG_EXECUTABLE=${prefix}/bin/swig

}

if {![variant_isset swig]} {

    configure.args-append \
        -DSWIG_EXECUTABLE=

}

variant hackrf description "Install ${name} with support for hackrf" {

    # allow for release or devel
    depends_lib-append path:lib/libhackrf.dylib:hackrf
    configure.args-append -DENABLE_HACKRF=ON

}

if {![variant_isset hackrf]} {

    configure.args-append -DENABLE_HACKRF=OFF

}

variant fcdproplus description "Install ${name} with support for FunCube Dongle Pro+ (fcdproplus) \[NOTE not compatible with gnuradio-next\]" {

    if {${not_gr_next}} {

        depends_lib-append port:gr-fcdproplus
        configure.args-append -DENABLE_FCDPP=ON

    } else {

        ui_error "$subport variant +fcdproplus is not viable because port:gr-fcdproplus cannot use port:gnuradio-next."
        error "unsupported variant"

    }
}

if {![variant_isset fcdproplus]} {

    configure.args-append -DENABLE_FCDPP=OFF

}

variant rtlsdr description "Install ${name} with support for rtl-sdr" {

    depends_lib-append port:rtl-sdr
    configure.args-append -DENABLE_RTL=ON -DENABLE_RTL_TCP=ON

}

if {![variant_isset rtlsdr]} {

    configure.args-append -DENABLE_RTL=OFF -DENABLE_RTL_TCP=OFF

}

variant bladeRF description "Install ${name} with support for bladeRF" {

    depends_lib-append port:bladeRF
    configure.args-append -DENABLE_BLADERF=ON

}

if {![variant_isset bladeRF]} {

    configure.args-append -DENABLE_BLADERF=OFF

}

variant airspy description "Install ${name} with support for airspy" {

    depends_lib-append port:airspy
    configure.args-append -DENABLE_AIRSPY=ON

}

if {![variant_isset airspy]} {

    configure.args-append -DENABLE_AIRSPY=OFF

}

# SoapySDR and SDRPlay work on 10.9 and newer only until fixed

platform darwin {
    if {${os.major} > 12} {

variant soapysdr description "Install ${name} with support for SoapySDR" {

    depends_lib-append port:SoapySDR
    configure.args-append -DENABLE_SOAPY=ON

}

if {![variant_isset soapysdr]} {

    configure.args-append -DENABLE_SOAPY=OFF

}

variant sdrplay description "Install ${name} with support for SDRplay" {

    depends_lib-append port:sdrplay
    configure.args-append -DENABLE_NONFREE=ON -DENABLE_SDRPLAY=ON

}

if {![variant_isset sdrplay]} {

    configure.args-append -DENABLE_NONFREE=OFF -DENABLE_SDRPLAY=OFF

}

    } else {

        # for any Mac OS X <= 10.8 (major <= 12), explicitly disable
        # SOAPYSDR and SDRPLAY. Just in case they might be installed
        # somehow, we don't want to link with those installs.
        configure.args-append \
            -DENABLE_SOAPY=OFF \
            -DENABLE_NONFREE=OFF \
            -DENABLE_SDRPLAY=OFF

    }
}
