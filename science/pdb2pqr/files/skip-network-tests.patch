--- a/tests/core_test.py
+++ b/tests/core_test.py
@@ -48,6 +48,7 @@
 # fmt: on
 
 
+@pytest.mark.skip(reason="not running tests requiring network access")
 @pytest.mark.parametrize("input_pdb", list(SHORT_SET), ids=str)
 def test_short_pdb(input_pdb, tmp_path):
     """Non-regression tests on short list of PDB-format biomolecules."""
@@ -61,6 +62,7 @@
     )
 
 
+@pytest.mark.skip(reason="not running tests requiring network access")
 @pytest.mark.parametrize("input_pdb", list(SHORT_SET), ids=str)
 def test_basic_cif(input_pdb, tmp_path):
     """Non-regression tests on short list of CIF-format biomolecules."""
@@ -74,6 +76,7 @@
     )
 
 
+@pytest.mark.skip(reason="not running tests requiring network access")
 @pytest.mark.parametrize("input_pdb", list(LONG_SET), ids=str)
 @pytest.mark.long_test
 def test_long_pdb(input_pdb, tmp_path):
--- a/tests/propka_test.py
+++ b/tests/propka_test.py
@@ -4,6 +4,7 @@
 import common
 
 
+@pytest.mark.skip(reason="not running tests requiring network access")
 @pytest.mark.parametrize(
     "input_pdb", ["1K1I", "1AFS", "1FAS", "5DV8", "5D8V"], ids=str
 )
@@ -22,6 +23,7 @@
     )
 
 
+@pytest.mark.skip(reason="not running tests requiring network access")
 @pytest.mark.parametrize(
     "input_pdb", ["1K1I", "1AFS", "1FAS", "5DV8", "5D8V"], ids=str
 )
--- a/tests/ligand_test.py
+++ b/tests/ligand_test.py
@@ -173,6 +173,7 @@
             _LOGGER.debug(str_)
 
 
+@pytest.mark.skip(reason="not running tests requiring network access")
 @pytest.mark.parametrize("input_pdb", ["1HPX"], ids=str)
 def test_ligand_biomolecule(input_pdb, tmp_path):
     """PROPKA non-regression tests on biomolecules without ligands."""
--- a/tests/regression_test.py
+++ b/tests/regression_test.py
@@ -17,13 +17,13 @@
             common.DATA_DIR / "1AFS_ff=AMBER.pqr",
             id="1AFS basic local",
         ),
-        pytest.param(
-            "--log-level=INFO --ff=AMBER",
-            "1AFS",
-            "output.pqr",
-            common.DATA_DIR / "1AFS_ff=AMBER.pqr",
-            id="1AFS basic remote",
-        ),
+        # pytest.param(
+        #     "--log-level=INFO --ff=AMBER",
+        #     "1AFS",
+        #     "output.pqr",
+        #     common.DATA_DIR / "1AFS_ff=AMBER.pqr",
+        #     id="1AFS basic remote",
+        # ),
     ],
 )
 def test_basic(args, input_pdb, output_pqr, expected_pqr, tmp_path):
--- a/tests/logging_test.py
+++ b/tests/logging_test.py
@@ -8,7 +8,7 @@
 @pytest.mark.parametrize(
     "input_file,output_file",
     [
-        ("1FAS.pdb", "1FAS_pdb.pqr"),
+        # ("1FAS.pdb", "1FAS_pdb.pqr"),
         ("1A1P.pdb", "1A1P_assign-only_whitespace_ff=AMBER_log.pqr"),
     ],
     ids=str,
