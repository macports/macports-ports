--- src/Makefile.orig	2018-12-03 02:57:03.000000000 -0600
+++ src/Makefile	2018-12-03 05:42:54.000000000 -0600
@@ -119,13 +119,13 @@
 endif
 
 ifeq ($(OS),Darwin)
-ifeq (,$(wildcard /opt/local))
-USR = /usr/local
-PLUGINDIR = $(HOME)/Library/Application\ Support/Gimp/plug-ins
-else
-USR = /opt/local
-endif
-WGET = curl -k -L --silent -o
+#ifeq (,$(wildcard /opt/local))
+#USR = /usr/local
+#PLUGINDIR = $(HOME)/Library/Application\ Support/Gimp/plug-ins
+#else
+USR = %PREFIX%
+#endif
+WGET = /usr/bin/false
 endif
 
 ifeq ($(OS),Windows)
@@ -151,7 +151,7 @@
 endif
 
 ifndef QMAKE
-QMAKE = qmake
+QMAKE = %PREFIX%/libexec/qt5/bin/qmake
 endif
 
 #--------------------------------------------------------
@@ -176,23 +176,23 @@
 ifeq ($(OS),Unix)
 MANDATORY_CFLAGS += -Dcimg_use_vt100
 endif
-ifeq ($(OS),Darwin)
-ifndef NO_STDLIB
+# ifeq ($(OS),Darwin)
+# ifndef NO_STDLIB
 MANDATORY_CFLAGS += -stdlib=libc++
-endif
-endif
+# endif
+# endif
 ifeq ($(OS),Windows)
 MANDATORY_LIBS += -Wl,--stack,16777216
 endif
 
 # Enable optimizations.
-OPT_CFLAGS = -Ofast
-ifdef IS_GCC
-OPT_CFLAGS = -Ofast -mtune=generic # -fno-finite-math-only
-endif
-ifdef icpc
-OPT_CFLAGS = -fast
-endif
+# OPT_CFLAGS = -Ofast
+# ifdef IS_GCC
+# OPT_CFLAGS = -Ofast -mtune=generic # -fno-finite-math-only
+# endif
+# ifdef icpc
+# OPT_CFLAGS = -fast
+# endif
 
 # Enable multi-threading support.
 PARALLEL_CFLAGS = -Dgmic_is_parallel
@@ -221,8 +221,8 @@
 # Enable image display, using X11 (Unix).
 # (Keep /usr/ dirname here since X11 is located in /usr/ on Mac too)
 ifneq ($(OS),Darwin)
-X11_CFLAGS = -Dcimg_display=1 $(shell pkg-config --cflags x11 || echo -I/usr/X11R6/include) #-Dcimg_use_xrandr
-X11_LIBS = $(shell pkg-config --libs x11 || echo -L/usr/X11R6/lib -lX11) -lpthread # $(shell pkg-config --libs xrandr || echo -lXrandr)
+X11_CFLAGS = -Dcimg_display=1 $(shell pkg-config --cflags x11 || echo -I%PREFIX%/X11R6/include) #-Dcimg_use_xrandr
+X11_LIBS = $(shell pkg-config --libs x11 || echo -L%PREFIX%/X11R6/lib -lX11) -lpthread # $(shell pkg-config --libs xrandr || echo -lXrandr)
 else
 ifeq (,$(wildcard /usr/X11))
 X11_CFLAGS = -Dcimg_display=0 #-Dcimg_use_xrandr
@@ -323,7 +323,7 @@
 endif
 endif
 	@echo "**"
-	$(MAKE) cli lib gimp krita gmic_qt libc zart
+	$(MAKE) %TARGETS%
 
 native:
 	$(MAKE) "CFLAGS+=$(GMIC_CLI_CFLAGS) -Ofast -march=native" "LIBS+=$(GMIC_CLI_LIBS)" cli
@@ -395,7 +395,7 @@
 _lib: libgmic.o use_libgmic.cpp
 	ar rcs libgmic.a libgmic.o
 ifeq ($(OS),Darwin)
-	$(CXX) -shared -o libgmic.so libgmic.o $(LIBS)
+	$(CXX) -dynamiclib -o libgmic.$(SVERSION).dylib -install_name $(USR)/lib/libgmic.$(VERSION1).dylib -compatibility_version $(VERSION1) -current_version $(SVERSION) $(MANDATORY_CFLAGS) libgmic.o $(LIBS)
 else
 	$(CXX) -shared -Wl,-soname,libgmic.so.$(VERSION1) -o libgmic.so libgmic.o $(LIBS)
 	$(CXX) -o use_libgmic use_libgmic.cpp -L. -lgmic $(LIBS)
@@ -427,7 +427,7 @@
 _libc: libcgmic_files libgmic.o libcgmic.o
 	ar rcs libcgmic.a libcgmic.o
 ifeq ($(OS),Darwin)
-	$(CXX) -shared -o libcgmic.so libcgmic.o libgmic.o $(LIBS)
+	$(CXX) -dynamiclib -o libcgmic.$(SVERSION).dylib -install_name $(USR)/lib/libcgmic.$(VERSION1).dylib -compatibility_version $(VERSION1) -current_version $(SVERSION) $(MANDATORY_CFLAGS) libcgmic.o libgmic.o $(LIBS)
 else
 ifeq ($(OS),Windows)
 	$(CXX) -shared -Wl,-soname,libcgmic.so.$(VERSION1) -o libcgmic$(SO) libcgmic.o libgmic.o -Wl,--output-def,libcgmic.def,--out-implib,libcgmic.a $(LIBS)
@@ -435,7 +435,7 @@
 	$(CXX) -shared -Wl,-soname,libcgmic.so.$(VERSION1) -o libcgmic$(SO) libcgmic.o libgmic.o $(LIBS)
 endif
 endif
-	$(CC) -std=c99 -o use_libcgmic use_libcgmic.c -L. -lcgmic
+	#$(CC) -std=c99 -o use_libcgmic use_libcgmic.c -L. -lcgmic
 
 libcgmic.o: check_versions gmic.cpp gmic.h gmic_stdlib.h CImg.h
 	$(CXX) -o libcgmic.o -c gmic_libc.cpp $(PIC) $(CFLAGS)
@@ -706,19 +706,19 @@
 	@if [ -f ../gmic-qt/gmic_gimp_qt ]; then cp -f ../gmic-qt/gmic_gimp_qt $(DESTDIR)$(PLUGINDIR)/; fi
 	@if [ -f ../gmic-qt/gmic_krita_qt ]; then cp -f ../gmic-qt/gmic_krita_qt $(DESTDIR)$(USR)/$(BIN)/; fi
 
-ifneq ($(OS),Darwin)
+#ifneq ($(OS),Darwin)
 	mkdir -p $(DESTDIR)$(USR)/share
 	mkdir -p $(DESTDIR)$(USR)/$(LIB)
-	cp -f libgmic.so $(DESTDIR)$(USR)/$(LIB)/libgmic.so.$(VERSION)
-	ln -fs libgmic.so.$(VERSION) $(DESTDIR)$(USR)/$(LIB)/libgmic.so.$(VERSION1)
-	ln -fs libgmic.so.$(VERSION1) $(DESTDIR)$(USR)/$(LIB)/libgmic.so
-	@if [ -f libcgmic.so ]; then \
+	cp -f  libgmic.$(SVERSION).dylib $(DESTDIR)$(USR)/$(LIB)/libgmic.$(SVERSION).dylib
+	ln -fs libgmic.$(SVERSION).dylib $(DESTDIR)$(USR)/$(LIB)/libgmic.$(VERSION1).dylib
+	ln -fs libgmic.$(VERSION1).dylib $(DESTDIR)$(USR)/$(LIB)/libgmic.dylib
+	@if true; then \
 	  cp -f gmic_libc.h $(DESTDIR)$(USR)/$(INCLUDE)/; \
-	  cp -f libcgmic.so $(DESTDIR)$(USR)/$(LIB)/libcgmic.so.$(VERSION); \
-          ln -fs libcgmic.so.$(VERSION) $(DESTDIR)$(USR)/$(LIB)/libcgmic.so.$(VERSION1) ; \
-          ln -fs libcgmic.so.$(VERSION1) $(DESTDIR)$(USR)/$(LIB)/libcgmic.so; \
+	  cp -f  libcgmic.$(SVERSION).dylib $(DESTDIR)$(USR)/$(LIB)/libcgmic.$(SVERSION).dylib; \
+          ln -fs libcgmic.$(SVERSION).dylib $(DESTDIR)$(USR)/$(LIB)/libcgmic.$(VERSION1).dylib ; \
+          ln -fs libcgmic.$(VERSION1).dylib $(DESTDIR)$(USR)/$(LIB)/libcgmic.dylib; \
         fi
-endif
+#endif
 	mkdir -p $(DESTDIR)$(USR)/share/man/
 	mkdir -p $(DESTDIR)$(USR)/share/man/man1/
 	mkdir -p $(DESTDIR)$(USR)/share/man/fr/man1/
@@ -727,13 +727,13 @@
 	  cp -f ../man/gmic.1.gz $(DESTDIR)$(USR)/share/man/fr/man1/gmic.1.gz; \
 	fi
 	@if [ -f ../resources/gmic_bashcompletion.sh ]; then \
-	  if [ -d /usr/share/bash-completion/completions ]; then \
+	  if false; then \
 	    mkdir -p $(DESTDIR)/usr/share/bash-completion/completions/; \
             cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)/usr/share/bash-completion/completions/gmic; \
 	  fi; \
-	  if [ -d /opt/local/etc/bash_completion.d/ ]; then \
+	  if true; then \
             mkdir -p $(DESTDIR)/opt/local/etc/bash_completion.d/; \
-            cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)/opt/local/etc/bash_completion.d/gmic; \
+            cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)%PREFIX%/etc/bash_completion.d/gmic; \
           fi; \
         fi
 
