--- src/Makefile.orig	2018-05-16 08:18:08.000000000 -0500
+++ src/Makefile	2018-05-17 05:09:18.000000000 -0500
@@ -120,13 +120,13 @@
 endif
 
 ifeq ($(OS),Darwin)
-ifeq (,$(wildcard /opt/local))
-USR = /usr/local
-PLUGINDIR = $(HOME)/Library/Application\ Support/Gimp/plug-ins
-else
-USR = /opt/local
-endif
-WGET = curl -k -L --silent -o
+#ifeq (,$(wildcard /opt/local))
+#USR = /usr/local
+#PLUGINDIR = $(HOME)/Library/Application\ Support/Gimp/plug-ins
+#else
+USR = %PREFIX%
+#endif
+WGET = /usr/bin/false
 endif
 
 ifeq ($(OS),Windows)
@@ -167,25 +167,25 @@
 ifeq ($(OS),Unix)
 MANDATORY_CFLAGS += -Dcimg_use_vt100
 endif
-ifeq ($(OS),Darwin)
-ifndef NO_STDLIB
-MANDATORY_CFLAGS += -stdlib=libc++
-endif
-endif
+#ifeq ($(OS),Darwin)
+#ifndef NO_STDLIB
+MANDATORY_CFLAGS += %MANDATORY_CFLAGS%
+#endif
+#endif
 ifeq ($(OS),Windows)
 MANDATORY_LIBS += -Wl,--stack,16777216
 endif
 
 # Enable optimizations.
-ifeq ($(notdir $(CXX)),g++)
-OPT_CFLAGS = -Ofast -mtune=generic # -fno-finite-math-only
-else
-ifeq ($(notdir $(CXX)),icpc)
-OPT_CFLAGS = -fast
-else
-OPT_CFLAGS = -Ofast
-endif
-endif
+#ifeq ($(notdir $(CXX)),g++)
+#OPT_CFLAGS = -Ofast -mtune=generic # -fno-finite-math-only
+#else
+#ifeq ($(notdir $(CXX)),icpc)
+#OPT_CFLAGS = -fast
+#else
+OPT_CFLAGS = %OPT_CFLAGS%
+#endif
+#endif
 
 # Enable multi-threading support.
 PARALLEL_CFLAGS = -Dgmic_is_parallel
@@ -316,7 +316,7 @@
 endif
 endif
 	@echo "**"
-	$(MAKE) cli lib gimp_gtk gimp_qt krita_qt gmic_qt libc zart
+	$(MAKE) %TARGETS%
 
 native:
 	$(MAKE) "CFLAGS+=$(GMIC_CLI_CFLAGS) -Ofast -march=native" "LIBS+=$(GMIC_CLI_LIBS)" cli gimp_gtk
@@ -391,11 +391,11 @@
 
 _gimp_gtk: gmic_gimp_gtk.o gmic_gimp_gtk.cpp gmic_gimp_gtk.h
 ifeq ($(OS),Darwin)
-ifeq (,$(wildcard /tmp/skl))
+#ifeq (,$(wildcard /tmp/skl))
 	$(CXX) -o gmic_gimp_gtk gmic_gimp_gtk.cpp gmic_gimp_gtk.o `gimptool-2.0$(EXE) --cflags` `gimptool-2.0$(EXE) --libs` $(CFLAGS) $(LIBS)
-else
-	$(CXX) -o gmic_gimp_gtk gmic_gimp_gtk.cpp gmic_gimp_gtk.o $(subst -I/opt/local/include/fribidi, ,$(shell gimptool-2.0$(EXE) --cflags)) $(subst -lfribidi, ,$(subst -L/opt/local,-L/tmp/skl/Gimp.app/Contents/Resources,$(shell gimptool-2.0$(EXE) --libs))) $(CFLAGS) $(LIBS)
-endif
+#else
+#	$(CXX) -o gmic_gimp_gtk gmic_gimp_gtk.cpp gmic_gimp_gtk.o $(subst -I/opt/local/include/fribidi, ,$(shell gimptool-2.0$(EXE) --cflags)) $(subst -lfribidi, ,$(subst -L/opt/local,-L/tmp/skl/Gimp.app/Contents/Resources,$(shell gimptool-2.0$(EXE) --libs))) $(CFLAGS) $(LIBS)
+#endif
 else
 	$(CXX) -o gmic_gimp_gtk gmic_gimp_gtk.cpp gmic_gimp_gtk.o `gimptool-2.0$(EXE) --cflags` `gimptool-2.0$(EXE) --libs` $(CFLAGS) $(LIBS)
 endif
@@ -427,7 +427,7 @@
 _lib: libgmic.o use_libgmic.cpp
 	ar rcs libgmic.a libgmic.o
 ifeq ($(OS),Darwin)
-	$(CXX) -shared -o libgmic.so libgmic.o $(LIBS)
+	$(CXX) -dynamiclib -o libgmic.$(SVERSION).dylib -install_name $(USR)/lib/libgmic.$(VERSION1).dylib -compatibility_version $(VERSION1) -current_version $(SVERSION) $(MANDATORY_CFLAGS) libgmic.o $(LIBS)
 else
 	$(CXX) -shared -Wl,-soname,libgmic.so.$(VERSION1) -o libgmic.so libgmic.o $(LIBS)
 	$(CXX) -o use_libgmic use_libgmic.cpp -L. -lgmic $(LIBS)
@@ -459,7 +459,7 @@
 _libc: libcgmic_files libgmic.o libcgmic.o
 	ar rcs libcgmic.a libcgmic.o
 ifeq ($(OS),Darwin)
-	$(CXX) -shared -o libcgmic.so libcgmic.o libgmic.o $(LIBS)
+	$(CXX) -dynamiclib -o libcgmic.$(SVERSION).dylib -install_name $(USR)/lib/libcgmic.$(VERSION1).dylib -compatibility_version $(VERSION1) -current_version $(SVERSION) $(MANDATORY_CFLAGS) libcgmic.o libgmic.o $(LIBS)
 else
 ifeq ($(OS),Windows)
 	$(CXX) -shared -Wl,-soname,libcgmic.so.$(VERSION1) -o libcgmic$(SO) libcgmic.o libgmic.o -Wl,--output-def,libcgmic.def,--out-implib,libcgmic.a $(LIBS)
@@ -467,7 +467,7 @@
 	$(CXX) -shared -Wl,-soname,libcgmic.so.$(VERSION1) -o libcgmic$(SO) libcgmic.o libgmic.o $(LIBS)
 endif
 endif
-	$(CC) -std=c99 -o use_libcgmic use_libcgmic.c -L. -lcgmic
+	#$(CC) -std=c99 -o use_libcgmic use_libcgmic.c -L. -lcgmic
 
 libcgmic.o: check_versions gmic.cpp gmic.h gmic_stdlib.h CImg.h
 	$(CXX) -o libcgmic.o -c gmic_libc.cpp $(PIC) $(CFLAGS)
@@ -802,19 +802,19 @@
 	@if [ -f ../gmic-qt/gmic_gimp_qt ]; then cp -f ../gmic-qt/gmic_gimp_qt $(DESTDIR)$(PLUGINDIR)/; fi
 	@if [ -f ../gmic-qt/gmic_krita_qt ]; then cp -f ../gmic-qt/gmic_krita_qt $(DESTDIR)$(USR)/$(BIN)/; fi
 
-ifneq ($(OS),Darwin)
+#ifneq ($(OS),Darwin)
 	mkdir -p $(DESTDIR)$(USR)/share
 	mkdir -p $(DESTDIR)$(USR)/$(LIB)
-	cp -f libgmic.so $(DESTDIR)$(USR)/$(LIB)/libgmic.so.$(VERSION)
-	ln -fs libgmic.so.$(VERSION) $(DESTDIR)$(USR)/$(LIB)/libgmic.so.$(VERSION1)
-	ln -fs libgmic.so.$(VERSION1) $(DESTDIR)$(USR)/$(LIB)/libgmic.so
-	@if [ -f libcgmic.so ]; then \
+	cp -f  libgmic.$(SVERSION).dylib $(DESTDIR)$(USR)/$(LIB)/libgmic.$(SVERSION).dylib
+	ln -fs libgmic.$(SVERSION).dylib $(DESTDIR)$(USR)/$(LIB)/libgmic.$(VERSION1).dylib
+	ln -fs libgmic.$(VERSION1).dylib $(DESTDIR)$(USR)/$(LIB)/libgmic.dylib
+	@if true; then \
 	  cp -f gmic_libc.h $(DESTDIR)$(USR)/$(INCLUDE)/; \
-	  cp -f libcgmic.so $(DESTDIR)$(USR)/$(LIB)/libcgmic.so.$(VERSION); \
-          ln -fs libcgmic.so.$(VERSION) $(DESTDIR)$(USR)/$(LIB)/libcgmic.so.$(VERSION1) ; \
-          ln -fs libcgmic.so.$(VERSION1) $(DESTDIR)$(USR)/$(LIB)/libcgmic.so; \
+	  cp -f  libcgmic.$(SVERSION).dylib $(DESTDIR)$(USR)/$(LIB)/libcgmic.$(SVERSION).dylib; \
+          ln -fs libcgmic.$(SVERSION).dylib $(DESTDIR)$(USR)/$(LIB)/libcgmic.$(VERSION1).dylib ; \
+          ln -fs libcgmic.$(VERSION1).dylib $(DESTDIR)$(USR)/$(LIB)/libcgmic.dylib; \
         fi
-endif
+#endif
 	mkdir -p $(DESTDIR)$(USR)/share/man/
 	mkdir -p $(DESTDIR)$(USR)/share/man/man1/
 	mkdir -p $(DESTDIR)$(USR)/share/man/fr/man1/
@@ -823,13 +823,13 @@
 	  cp -f ../man/gmic.1.gz $(DESTDIR)$(USR)/share/man/fr/man1/gmic.1.gz; \
 	fi
 	@if [ -f ../resources/gmic_bashcompletion.sh ]; then \
-	  if [ -d /etc/bash_completion.d/ ]; then \
+	  if false; then \
 	    mkdir -p $(DESTDIR)/etc/bash_completion.d/; \
             cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)/etc/bash_completion.d/gmic; \
 	  fi; \
-	  if [ -d /opt/local/etc/bash_completion.d/ ]; then \
-            mkdir -p $(DESTDIR)/opt/local/etc/bash_completion.d/; \
-            cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)/opt/local/etc/bash_completion.d/gmic; \
+	  if true; then \
+            mkdir -p $(DESTDIR)$(USR)/etc/bash_completion.d/; \
+            cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)$(USR)/etc/bash_completion.d/gmic; \
           fi; \
         fi
 
