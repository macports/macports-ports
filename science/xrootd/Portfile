# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github 1.0
PortGroup           legacysupport 1.0

github.setup        xrootd xrootd 4.8.5 v
version             ${github.version}
revision            2

# Use git commit from cjones051073 fork to address issue in 4.8.5 release
# https://github.com/xrootd/xrootd/issues/846
#github.setup        cjones051073 xrootd b2f04597d7497a2afc2e2a4bc066fff421f9d4ee
#version             4.8.5
#revision            1

livecheck.version   ${version}
livecheck.type      regex
livecheck.url       ${github.homepage}/tags
livecheck.regex     v(\[0-9.\]+)${extract.suffix}

categories          science
maintainers         {jonesc @cjones051073} openmaintainer

description         generic suite for fast, low-latency and scalable data access

long_description    XRootD software framework is a fully generic suite for fast, \
                    low-latency and scalable data access.

license             LGPL-3+
platforms           darwin

homepage            http://xrootd.org/

#checksums           rmd160  850e3937feaafaa9c1e8b60d6ea389a7b4f49ec8 \
#                    sha256  97d693a7383e8609e9e33c73c7f971cd57178344c114073f34c94da30ffd4d59 \
#                    size    2427012

checksums           rmd160  28630ac28e77e788347338c5c389c53e12d2cd30 \
                    sha256  42e4d2cc6f8b442135f09bcc12c7be38b1a0c623a005cb5e69ff3d27997bdf73 \
                    size    2396436

depends_lib         port:python27 \
                    port:swig \
                    port:zlib

default_variants    +ssl +readline +kerberos 

cmake.out_of_source yes

compiler.blacklist-append *gcc* {clang < 900} macports-clang-3.3 macports-clang-3.4 \
                          macports-clang-3.7 macports-clang-3.9 
compiler.whitelist clang macports-clang-6.0 macports-clang-5.0 macports-clang-4.0

# Note that we are forcing this choice. This means that anything linking
# against root6 needs to also be using libc++.  This is possibly
# problematic, but luckily there is just a limited set of such dependents.
# Another problem is that all dependencies might need to be built-in
# to make sure that they all use libc++.
if { ${configure.cxx_stdlib} ne "libc++" } {
    configure.cxx_stdlib libc++
    depends_lib-append port:libcxx
}

configure.args-append -DENABLE_CRYPTO=False \
                      -DENABLE_READLINE=False \
                      -DENABLE_KRB5=False \
                      -DENABLE_FUSE=False \
                      -DCMAKE_INSTALL_MANDIR="share/man"

variant readline description {Build with Readline Support} {
    configure.args-delete   -DENABLE_READLINE=False
    configure.args-append   -DENABLE_READLINE=True -DREADLINE_ROOT_DIR="${prefix}"
    depends_lib-append      port:readline
}

variant ssl description {Build with OpenSSL Support} {
    configure.args-delete   -DENABLE_CRYPTO=False
    configure.args-append   -DENABLE_CRYPTO=True -DOPENSSL_ROOT_DIR="${prefix}"
    depends_lib-append      path:lib/libssl.dylib:openssl
}

variant kerberos description {Build with Kerberos 5 Support} {
    configure.args-delete   -DENABLE_KRB5=False
    configure.args-append   -DENABLE_KRB5=True -DKERBEROS5_ROOT_DIR="${prefix}"
    depends_lib-append      port:kerberos5
}

