# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                                      1.0
PortGroup           cmake                       1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github                      1.0
PortGroup           cxx11                       1.1
PortGroup           legacysupport               1.0

github.setup        xrootd xrootd 4.10.0 v
version             ${github.version}
revision            1

livecheck.version   ${version}
livecheck.type      regex
livecheck.url       ${github.homepage}/tags
livecheck.regex     v(\[0-9.\]+)${extract.suffix}

categories          science
maintainers         {jonesc @cjones051073} openmaintainer

description         generic suite for fast, low-latency and scalable data access

long_description    XRootD software framework is a fully generic suite for fast, \
                    low-latency and scalable data access.

license             LGPL-3+
platforms           darwin

homepage            http://xrootd.org/

checksums           rmd160  77253e9604e89f8ec636b9fb873963251bddfd12 \
                    sha256  6ad558906a6bf3c60ae1820760d4368372411802f1b1bbff0deca8a3a16950e6 \
                    size    2564195

depends_build-append port:cctools \
                     port:pkgconfig

depends_lib         port:curl \
                    port:libxml2 \
                    port:json-c \
                    port:swig \
                    port:zlib 

default_variants    +ssl +readline +kerberos 

cmake.out_of_source yes

# Force a compatible compiler
compiler.blacklist-append *gcc* {clang < 900} {macports-clang-3.[0-9]} {macports-clang-[4-5].0}

configure.cxxflags-append --std=c++11
configure.args-append -DENABLE_CRYPTO=False \
                      -DENABLE_READLINE=False \
                      -DENABLE_KRB5=False \
                      -DENABLE_FUSE=False \
                      -DENABLE_PYTHON=FALSE \
                      -DENABLE_PERL=FALSE \
                      -DCMAKE_BUILD_TYPE="Release" \
                      -DCMAKE_CXX_FLAGS="${configure.cxxflags}" \
                      -DCMAKE_INSTALL_MANDIR="share/man"

set python_v        3.7
set python_v_nodot  [string map {. {}} $python_v]
variant python${python_v_nodot} description "Enable python ${python_v} bindings" {
    configure.python        ${prefix}/bin/python${python_v}
    depends_lib-append      port:python${python_v_nodot}
    configure.args-replace -DENABLE_PYTHON=FALSE  -DENABLE_PYTHON=TRUE
    configure.args-append  -DPYTHON_EXECUTABLE=${configure.python}
    post-extract {
        # Fix python install location
        set python_framework ${frameworks_dir}/Python.framework/Versions/${python_v}
        reinplace "s|\${CMAKE_INSTALL_PREFIX}|${python_framework}|g" ${worksrcpath}/bindings/python/CMakeLists.txt
    }
}

variant readline description {Build with Readline Support} {
    configure.args-delete   -DENABLE_READLINE=False
    configure.args-append   -DENABLE_READLINE=True -DREADLINE_ROOT_DIR="${prefix}"
    depends_lib-append      port:readline
}

variant ssl description {Build with OpenSSL Support} {
    configure.args-delete   -DENABLE_CRYPTO=False
    configure.args-append   -DENABLE_CRYPTO=True -DOPENSSL_ROOT_DIR="${prefix}"
    depends_lib-append      path:lib/libssl.dylib:openssl
}

variant kerberos description {Build with Kerberos 5 Support} {
    configure.args-delete   -DENABLE_KRB5=False
    configure.args-append   -DENABLE_KRB5=True -DKERBEROS5_ROOT_DIR="${prefix}"
    depends_lib-append      port:kerberos5
}
