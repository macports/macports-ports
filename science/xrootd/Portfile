# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                                      1.0
PortGroup           cmake                       1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github                      1.0
PortGroup           cxx11                       1.1
PortGroup           legacysupport               1.0

github.setup        xrootd xrootd 4.9.0 v
version             ${github.version}
revision            1

livecheck.version   ${version}
livecheck.type      regex
livecheck.url       ${github.homepage}/tags
livecheck.regex     v(\[0-9.\]+)${extract.suffix}

categories          science
maintainers         {jonesc @cjones051073} openmaintainer

description         generic suite for fast, low-latency and scalable data access

long_description    XRootD software framework is a fully generic suite for fast, \
                    low-latency and scalable data access.

license             LGPL-3+
platforms           darwin

homepage            http://xrootd.org/

checksums           rmd160  eee3b6dbd98fb8de4c25f51a6e1576934d04e3d7 \
                    sha256  44f7bbfa34bcaa278d1e8641c2b31618ef5c6ef588a950b369e2ed43657e6c57 \
                    size    2548614

depends_lib         port:python27 \
                    port:swig \
                    port:zlib

default_variants    +ssl +readline +kerberos 

cmake.out_of_source yes

# Force a compatible compiler
compiler.blacklist-append *gcc* {clang < 900} macports-clang-3.3 macports-clang-3.4 \
                           macports-clang-3.7 macports-clang-4.0 macports-clang-3.9 \
                           macports-clang-5.0
compiler.whitelist clang macports-clang-7.0 macports-clang-6.0 

# Note that we are forcing this choice. This means that anything linking
# against root6 needs to also be using libc++.  This is possibly
# problematic, but luckily there is just a limited set of such dependents.
# Another problem is that all dependencies might need to be built-in
# to make sure that they all use libc++.
#if { ${configure.cxx_stdlib} ne "libc++" } {
#    configure.cxx_stdlib libc++
#    depends_lib-append port:libcxx
#}

configure.cxxflags-append --std=c++11
configure.args-append -DENABLE_CRYPTO=False \
                      -DENABLE_READLINE=False \
                      -DENABLE_KRB5=False \
                      -DENABLE_FUSE=False \
                      -DCMAKE_BUILD_TYPE="Release" \
                      -DCMAKE_CXX_FLAGS="${configure.cxxflags}" \
                      -DCMAKE_INSTALL_MANDIR="share/man"

variant readline description {Build with Readline Support} {
    configure.args-delete   -DENABLE_READLINE=False
    configure.args-append   -DENABLE_READLINE=True -DREADLINE_ROOT_DIR="${prefix}"
    depends_lib-append      port:readline
}

variant ssl description {Build with OpenSSL Support} {
    configure.args-delete   -DENABLE_CRYPTO=False
    configure.args-append   -DENABLE_CRYPTO=True -DOPENSSL_ROOT_DIR="${prefix}"
    depends_lib-append      path:lib/libssl.dylib:openssl
}

variant kerberos description {Build with Kerberos 5 Support} {
    configure.args-delete   -DENABLE_KRB5=False
    configure.args-append   -DENABLE_KRB5=True -DKERBEROS5_ROOT_DIR="${prefix}"
    depends_lib-append      port:kerberos5
}

