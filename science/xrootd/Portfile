# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                                       1.0
PortGroup           cmake                        1.1
PortGroup           compiler_blacklist_versions  1.0
PortGroup           github                       1.0
PortGroup           legacysupport                1.0

github.setup        xrootd xrootd 4.12.2 v
revision            0

categories          science
maintainers         {jonesc @cjones051073} openmaintainer

description         Generic suite for fast, low-latency and scalable data access.
long_description    ${description}

license             LGPL-3+
platforms           darwin

homepage            http://xrootd.org/

checksums           rmd160  6531c1b4ed5d18ba3c7fce6c8e56bbd5a29b6c8b \
                    sha256  7ae8d7a5e71b1c7372069f3fdc276f4e1b4b2d6ef1295823614db1eb50427900 \
                    size    2606992

depends_build-append port:cctools \
                     port:pkgconfig

depends_lib-append  port:curl \
                    port:libxml2 \
                    port:json-c \
                    port:swig \
                    path:lib/libuuid.dylib:ossp-uuid \
                    port:zlib 

default_variants    +ssl +readline +kerberos 

cmake.out_of_source yes

# Force a compatible compiler
compiler.blacklist-append *gcc* {clang < 900} {macports-clang-3.[0-9]} {macports-clang-[4-5].0}

configure.cxxflags-append -std=c++11
compiler.cxx_standard  2011
configure.args-append -DENABLE_CRYPTO=False \
                      -DENABLE_READLINE=False \
                      -DENABLE_KRB5=False \
                      -DENABLE_FUSE=False \
                      -DENABLE_PYTHON=FALSE \
                      -DENABLE_PERL=FALSE \
                      -DCMAKE_BUILD_TYPE="Release" \
                      -DCMAKE_CXX_FLAGS="${configure.cxxflags}" \
                      -DCMAKE_INSTALL_MANDIR="share/man"

set python_v        3.8
set python_v_nodot  [string map {. {}} $python_v]
variant python${python_v_nodot} description "Enable python ${python_v} bindings" {
    configure.python        ${prefix}/bin/python${python_v}
    depends_lib-append      port:python${python_v_nodot}
    configure.args-replace -DENABLE_PYTHON=FALSE  -DENABLE_PYTHON=TRUE
    configure.args-append  -DPYTHON_EXECUTABLE=${configure.python}
    post-extract {
        # Fix python install location
        set python_framework ${frameworks_dir}/Python.framework/Versions/${python_v}
        reinplace "s|\${CMAKE_INSTALL_PREFIX}|${python_framework}|g" ${worksrcpath}/bindings/python/CMakeLists.txt
    }
}

variant readline description {Build with Readline Support} {
    configure.args-delete   -DENABLE_READLINE=False
    configure.args-append   -DENABLE_READLINE=True -DREADLINE_ROOT_DIR="${prefix}"
    depends_lib-append      port:readline
}

variant ssl description {Build with OpenSSL Support} {
    configure.args-delete   -DENABLE_CRYPTO=False
    configure.args-append   -DENABLE_CRYPTO=True -DOPENSSL_ROOT_DIR="${prefix}"
    depends_lib-append      path:lib/libssl.dylib:openssl
}

variant kerberos description {Build with Kerberos 5 Support} {
    configure.args-delete   -DENABLE_KRB5=False
    configure.args-append   -DENABLE_KRB5=True -DKERBEROS5_ROOT_DIR="${prefix}"
    depends_lib-append      port:kerberos5
}

# Exclude pre-release candidates
github.livecheck.regex  {([0-9.]+)}
