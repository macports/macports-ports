diff --git a/cmake/ThirdPartyTetGen.cmake b/cmake/ThirdPartyTetGen.cmake
index a834d0f16..407048928 100644
--- cmake/ThirdPartyTetGen.cmake
+++ cmake/ThirdPartyTetGen.cmake
@@ -60,6 +60,23 @@ IF(NEKTAR_USE_MESHGEN)
         ADD_CUSTOM_TARGET(tetgen-1.5 ALL)
         MESSAGE(STATUS "Found TetGen: ${TETGEN_LIBRARY}")
         SET(TETGEN_CONFIG_INCLUDE_DIR ${TETGEN_INCLUDE_DIR})
+
+        # Test whether tetgen includes the deinitialize() routine (not include in 1.6.0
+        # but is present in 1.5.0.
+        INCLUDE(CheckCXXSourceCompiles)
+        SET(CMAKE_REQUIRED_INCLUDES "${TETGEN_INCLUDE_DIR}")
+        SET(CMAKE_REQUIRED_LIBRARIES "${TETGEN_LIBRARY}")
+        CHECK_CXX_SOURCE_COMPILES("
+            #include <tetgen.h>
+            int main() {
+                tetgenio tmp;
+                tmp.deinitialize();
+                return 0;
+            }
+            " TETGEN_HAS_DEINITIALIZE)
+        IF (TETGEN_HAS_DEINITIALIZE)
+            ADD_DEFINITIONS(-DTETGEN_HAS_DEINITIALIZE)
+        ENDIF()
     ENDIF()
 
     MARK_AS_ADVANCED(TETGEN_LIBRARY)
diff --git a/library/NekMesh/ExtLibInterface/TetGenInterface.cpp b/library/NekMesh/ExtLibInterface/TetGenInterface.cpp
index 91219f9c3..7452f0d8a 100644
--- library/NekMesh/ExtLibInterface/TetGenInterface.cpp
+++ library/NekMesh/ExtLibInterface/TetGenInterface.cpp
@@ -164,9 +164,15 @@ vector<Array<OneD, int>> TetGenInterface::Extract()
 
 void TetGenInterface::freetet()
 {
+#ifdef TETGEN_HAS_DEINITIALIZE
     surface.deinitialize();
     input.deinitialize();
     output.deinitialize();
+#else
+    surface.clean_memory();
+    input.clean_memory();
+    output.clean_memory();
+#endif
 }
 } // namespace NekMesh
 } // namespace Nektar
