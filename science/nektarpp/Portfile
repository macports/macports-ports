# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               cmake 1.1
PortGroup               mpi 1.0
PortGroup               gitlab 1.0

gitlab.instance         https://gitlab.nektar.info
gitlab.setup            nektar nektar 5.0.0 v

name                    nektarpp

categories              science
platforms               darwin
license                 MIT
homepage                http://www.nektar.info/
maintainers             {xyloid.org:dave @mdave} openmaintainer
description             spectral/hp element framework
long_description        Nektar++ is a spectral/hp element framework which aims to be easy \
                        to use and support a wide range of features, including 1D, 2D and \
                        3D element support, hybrid shaped elements and continuous and \
                        discontinuous implementations. As well as a modern C++ API, it \
                        ships with a range of solvers including CFD, advection-diffusion \
                        equations and cardiac electrophysiology.

# Additional dependencies for Tetgen and Triangle
master_sites            ${master_sites}:main \
                        ${homepage}thirdparty/:thirdparty

set main_distfile       ${distfiles}
distfiles               ${main_distfile}:main \
                        tetgen-1.5.zip:thirdparty \
                        triangle-1.6.zip:thirdparty

checksums               nektar-5.0.0.tar.bz2 \
                        rmd160  f588a4d6429b1ffc85be538885cbb09886ac9cba \
                        sha256  d98c87af64e6d5cce04f8f60045a63fe63a79274c72a0ba368716fe603a4b625 \
                        size    48486184 \
                        tetgen-1.5.zip \
                        rmd160  d8785f4ca6b26608ec9423f7574a0e736380370a \
                        sha256  52207793198746de14abcb30a0aeed617d7348ff37544e7d7e65aaaa76d7fa70 \
                        size    264128 \
                        triangle-1.6.zip \
                        rmd160  c92c011c442157cae5abcf246935d61bdfeede26 \
                        sha256  7d74d7efbe35dc5a497bd179bdc87b4670740e466f67043d41e0b0546ce76cb5 \
                        size    130331

# Only the full Nektar++ source should be extracted - CMake will extract any
# third-party dependencies.
extract.only            ${main_distfile}

patchfiles              no-homebrew.patch \
                        avoid-python-install.patch \
                        thirdparty-sources.patch

compiler.cxx_standard   2011
cmake.build_type        Release

mpi.setup

depends_lib-append      port:arpack \
                        port:boost \
                        port:fftw-3 \
                        port:opencascade \
                        port:scotch \
                        port:tinyxml \
                        port:zlib

# Don't build demos and tests by default.
configure.args-append   -DNEKTAR_BUILD_DEMOS=OFF \
                        -DNEKTAR_BUILD_TESTS=OFF \
                        -DNEKTAR_BUILD_UNIT_TESTS=OFF \
                        -DNEKTAR_SOLVER_DIFFUSION=OFF \
                        -DNEKTAR_SOLVER_DUMMY=OFF \
                        -DNEKTAR_SOLVER_ELASTICITY=OFF \
                        -DNEKTAR_SOLVER_MMF=OFF \
                        -DNEKTAR_USE_ARPACK=ON \
                        -DNEKTAR_USE_FFTW=ON \
                        -DNEKTAR_USE_MESHGEN=ON \
                        -DNEKTAR_USE_SCOTCH=ON

variant petsc description {
    Enable PETSc support for linear algebra solvers.
} {
    depends_lib-append port:petsc

    configure.args-append \
                        -DNEKTAR_USE_PETSC=ON
}

if {[mpi_variant_isset]} {
    distfiles-append    gsmpi-1.2.1_1.tar.bz2:thirdparty
    checksums-append    gsmpi-1.2.1_1.tar.bz2 \
                        rmd160 3a1ad71c552ea9d62bebabd4ed528531f9c0eec6 \
                        sha256 c9bc966c92f45e81f4e9d1887dd7c59808e7a4ef9ec41e1e5f1e6c5c01745211 \
                        size 39737

    depends_lib-append port:hdf5

    require_active_variants hdf5 [mpi_variant_name]
    require_active_variants scotch [mpi_variant_name]

    configure.args-append \
                        -DNEKTAR_USE_HDF5=ON \
                        -DNEKTAR_USE_MPI=ON
}

variant oce description {
    use Community Edition version of OpenCASCADE
} {
    depends_lib-replace port:opencascade port:oce
}

post-extract {
    # Copy additional third-party sources into correct position.
    file mkdir ${worksrcpath}/ThirdParty
    foreach distfile ${distfiles} {
        set distfile [lindex [split ${distfile} :] 0]
        if {${distfile} ne ${main_distfile}} {
            copy ${distpath}/${distfile} ${worksrcpath}/ThirdParty/
        }
    }
}

set pythons_suffixes    {37 38}

set pythons_ports       {}
foreach s ${pythons_suffixes} {
    lappend pythons_ports python${s}
}

foreach s ${pythons_suffixes} {
    set p python${s}
    set v [string index ${s} 0].[string index ${s} 1]
    set pe ${prefix}/bin/python${v}
    set i [lsearch -exact ${pythons_ports} ${p}]
    set c [lreplace ${pythons_ports} ${i} ${i}]
    variant ${p} description "Build the Python ${v} bindings" conflicts {*}${c} "
        depends_lib-append      port:${p} \
                                port:py${s}-numpy \
                                port:boost-numpy

        configure.args-append   -DNEKTAR_BUILD_PYTHON=ON \
                                -DNEKTAR_PYTHON3_STATUS=ON \
                                -DNEKTAR_USE_PYTHON3=ON \
                                -DPYTHON_EXECUTABLE=${pe}

        # Install Python libraries using setup.py.
        post-destroot {
            system -W ${build.dir} \"${pe} setup.py install --root=${destroot}\"
        }

        require_active_variants boost       ${p}
        require_active_variants boost-numpy ${p}
    "
}
