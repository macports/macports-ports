# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

name                gr-iridium

categories          science comms
platforms           darwin macosx
license             GPL-3+
maintainers         {ra1nb0w @ra1nb0w} {michaelld @michaelld} openmaintainer
description         Iridium burst detector and demodulator.
long_description    ${description}

# use C++11
compiler.cxx_standard 2011

if {${subport} eq ${name}} {

    github.setup muccc gr-iridium 994ae6db6fdae57e221e869d1d9134218254f569
    github.livecheck.branch master
    version    20200320-[string range ${github.version} 0 7]
    checksums  rmd160  8c3f540e0ed9072319678d88ded85b32c405a317 \
               sha256  9a6375425e5980bf9a7d64acc655f24928d7255e95059c0e21eb56b2d18c8c72 \
               size    126928
    revision   0

    depends_lib-append \
        path:lib/libgnuradio-runtime.dylib:gnuradio

    conflicts gr37-iridium

    set python_versions { 3.6 3.7 3.8 }
    set default_python_variant +python37

}

subport gr37-iridium {

    name gr37-iridium

    github.setup muccc gr-iridium eeaf8157dd78d5394bd7feefa3a1a5dd67af8037
    github.livecheck.branch maint-3.7
    version   20190722-[string range ${github.version} 0 7]
    checksums rmd160 909c3ad0e0bdb12d53666d0ad85b6b95d8dcab80 \
              sha256 e0fe908b32e209b7b2e1a6b3f92d0a12ad4de5eb6ed517f632afdc8c5a87a9e5 \
              size   143041
    revision  0

    conflicts gr-iridium

    set python_versions { 2.7 }
    set default_python_variant +python27

    depends_lib-append \
        port:gnuradio37

}

# Define the available variants
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    set variant_line {variant python${py_ver_no_dot} description "Build with python ${py_ver} support"}
    foreach py_over ${python_versions} {
        if { ${py_ver} == ${py_over} } { continue }
        set py_over_no_dot [join [split ${py_over} "."] ""]
        append variant_line " conflicts python${py_over_no_dot}"
    }
    append variant_line { { } }
    eval $variant_line
    if {[variant_isset python${py_ver_no_dot}]} {
        if {${default_python_variant} != "+python${py_ver_no_dot}"} {
            set default_python_variant ""
        }
    }
}

# set default python variant if not selected
if {${default_python_variant} != ""} {
    default_variants-append "${default_python_variant}"
}

# If a python variant is enabled, activate it
set active_python_version ""
set active_python_version_no_dot ""
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    if {[variant_isset python${py_ver_no_dot}]} {
        set active_python_version        ${py_ver}
        set active_python_version_no_dot ${py_ver_no_dot}
    }
}

depends_build-append \
    port:pkgconfig \
    port:swig-python \
    port:cppunit

depends_lib-append \
    port:boost \
    port:python${active_python_version_no_dot}

# specify the Python version to use
set python_framework_dir ${frameworks_dir}/Python.framework/Versions/${active_python_version}
configure.args-append \
    -DPYTHON_EXECUTABLE=${python_framework_dir}/bin/python${active_python_version} \
    -DPYTHON_INCLUDE_DIR=${python_framework_dir}/Headers \
    -DPYTHON_LIBRARY=${python_framework_dir}/Python \
    -DGR_PYTHON_DIR=${python_framework_dir}/lib/python${active_python_version}/site-packages

configure.args-append \
    -DDOXYGEN_DOT_EXECUTABLE= \
    -DDOXYGEN_EXECUTABLE= \
    -DCMAKE_MODULES_DIR=share/cmake

variant docs description "Install ${name} documentation" {

    depends_build-append \
        port:doxygen \
        path:bin/dot:graphviz

    configure.args-delete \
        -DDOXYGEN_DOT_EXECUTABLE= \
        -DDOXYGEN_EXECUTABLE=

    configure.args-append \
        -DDOXYGEN_DOT_EXECUTABLE=${prefix}/bin/dot \
        -DDOXYGEN_EXECUTABLE=${prefix}/bin/doxygen

}

default_variants +docs

post-destroot {
    # copy GNU Radio examples
    xinstall -m 755 -d ${destroot}${prefix}/share/gnuradio/examples/iridium
    file copy {*}[glob ${worksrcpath}/examples/*] \
        ${destroot}${prefix}/share/gnuradio/examples/iridium/
}
