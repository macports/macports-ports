# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           mpi 1.0
PortGroup           linear_algebra 1.0
PortGroup           compilers 1.0
PortGroup           github 1.0
PortGroup           makefile 1.0

github.setup        nwchemgit nwchem 7.2.3 v

#configure.compiler  macports-gcc-14
compilers.choose    fc cc
compilers.allow_arguments_mismatch yes
#compilers.add_gcc_rpath_support no
compilers.setup     require_fortran
name                nwchem
version             7.2.3
revision            0
categories          science
license             ECL-2.0
maintainers         {reneeotten @reneeotten} openmaintainer

description         High-performance computational chemistry tools
long_description    The NWChem software contains computational chemistry tools \
                    that are scalable both in their ability to efficiently \
                    treat large scientific problems, and in their use of \
                    available computing resources from high-performance parallel \
                    supercomputers to conventional workstation clusters.
homepage            https://nwchemgit.github.io

checksums           rmd160  38b29b7232254d6669dc6eb9fadf18b5295f34fe \
                    sha256  a0f76f12ae2f634d33e76409cd389787e6c458cc2cf05ed453538de2d47a23a5 \
                    size    234392394

github.tarball_from tarball
master_sites        https://github.com/nwchemgit/nwchem/releases/download/v${version}-release
set nwc_hash        d690e065
set nwc_date        2024-08-27
set NWCHEM_TARGET   MACX64
distname            nwchem-${version}-release.revision-${nwc_hash}-src.${nwc_date}
worksrcdir          nwchem-${version}/src

set python.version  313
set python.branch   "[string index ${python.version} 0].[string range ${python.version} 1 end]"
depends_lib-append   port:openblas
depends_lib-append   port:python${python.version}
depends_lib-append   port:libxc6
depends_lib-append   port:scalapack

mpi.setup           require require_fortran
#default_variants     +mpich

use_parallel_build  yes
patch.pre_args-replace  -p0 -p1
# fix for mpi wrappers
patchfiles          guessmpidefs.patch \
                    makefile_noinstall.patch \
                    scalapack.patch
post-patch {
    reinplace  "s|/etc/nwchemrc|${prefix}/etc/nwchemrc|g" ${worksrcpath}/util/util_nwchemrc.F
}

build.args  FC=${configure.fc}
build.args  CC=${configure.cc}
build.args-append  _FC=gfortran
build.args-append  _CC=gcc
build.args-append  USE_MPI=1
build.args-append  USE_64TO32=1
build.args-append  USE_HWOPT=1
build.args-append  NWCHEM_MODULES="all python"
build.args-append  SCALAPACK_SIZE=4
if {${os.major} < 23} {
    build.args-append  SCALAPACK_LIB="-L${prefix}/lib/ -lscalapack"
} else  {
# -Wl,-ld_classic fixes libscalapack "duplicate RC_PATH" error on macos-14 and macos-15
    build.args-append  SCALAPACK_LIB="-Wl,-ld_classic -L${prefix}/lib/ -lscalapack"
}
build.args-append  CFLAGS_FORGA="-fPIC -Wl,-rpath,${prefix}/lib/libgcc -L${prefix}/lib/libgcc"
build.args-append  FFLAG_INT="-fdefault-integer-8"
build.args-append  BLAS_SIZE=4
build.args-append  BLASOPT="-L${prefix}/lib -lopenblas"
build.args-append  LAPACK_LIB="-L${prefix}/lib -lopenblas"
build.args-append  NWCHEM_TARGET="MACX64"
build.args-append  INSTALL_PREFIX=${prefix}
build.args-append  PYTHONVERSION=${python.branch}
build.args-append  LIBXC_LIB=${prefix}/libexec/libxc6/lib
build.args-append  LIBXC_INCLUDE=${prefix}/libexec/libxc6/include
build.args-append  V=-1
build.args-append  MRCC_METHODS=y
build.args-append  EACCSD=y
build.args-append  IPCCSD=y
build.args-append  CCSDTQ=TRUE

test.run            yes

# note: a few QA tests
test {
    ui_msg "Running some QA tests"
    system -W ${worksrcpath}/../QA "MPIRUN_PATH=${prefix}/bin/mpirun-mpich-mp  ./runtests.mpi.unix procs 2 libxc_li2freq dft_he2+ cosmo_h2o_dft h2o_opt ritddft_h2o h2o-response"
}

destroot {
    set share ${prefix}/share
    set bin ${prefix}/bin
    set etc ${prefix}/etc
    xinstall -m 755 ${worksrcpath}/../bin/MACX64/nwchem ${destroot}${bin}
    xinstall -d ${destroot}${share}/nwchem
    xinstall -d ${destroot}${share}/nwchem/libraries
    xinstall -d ${destroot}${share}/nwchem/libraries.bse
    xinstall -d ${destroot}${share}/nwchem/libraries/rel-modelpotentials
    xinstall -m 644  {*}[glob ${worksrcpath}/basis/libraries/rel-modelpotentials/*] ${destroot}${share}/nwchem/libraries/rel-modelpotentials
    delete ${worksrcpath}/basis/libraries/rel-modelpotentials
    xinstall -m 644  {*}[glob ${worksrcpath}/basis/libraries/*] ${destroot}${share}/nwchem/libraries
    xinstall -m 644  {*}[glob ${worksrcpath}/basis/libraries.bse/*] ${destroot}${share}/nwchem/libraries.bse
    xinstall -d ${destroot}${share}/nwchem/libraryps
    xinstall -d ${destroot}${share}/nwchem/libraryps/library1
    xinstall -d ${destroot}${share}/nwchem/libraryps/library2
    xinstall -d ${destroot}${share}/nwchem/libraryps/pspw_default
    xinstall -d ${destroot}${share}/nwchem/libraryps/paw_default
    delete ${worksrcpath}/nwpw/libraryps/paw_default/JUNK
    xinstall -m 644 {*}[glob ${worksrcpath}/nwpw/libraryps/library1/*] ${destroot}${share}/nwchem/libraryps/library1
    xinstall -m 644 {*}[glob ${worksrcpath}/nwpw/libraryps/library2/*] ${destroot}${share}/nwchem/libraryps/library2
    xinstall -m 644 {*}[glob ${worksrcpath}/nwpw/libraryps/pspw_default/*] ${destroot}${share}/nwchem/libraryps/pspw_default
    xinstall -d ${destroot}${share}/nwchem/amber_s
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_s/*] ${destroot}${share}/nwchem/amber_s
    xinstall -d ${destroot}${share}/nwchem/amber_q
    xinstall -d ${destroot}${share}/nwchem/amber_q/lps_Pa
    xinstall -d ${destroot}${share}/nwchem/amber_q/lps_ec
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_q//lps_Pa/*] ${destroot}${share}/nwchem/amber_q/lps_Pa
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_q//lps_ec/*] ${destroot}${share}/nwchem/amber_q/lps_ec
    delete ${worksrcpath}/data/amber_q/lps_Pa
    delete ${worksrcpath}/data/amber_q/lps_ec
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_q/*] ${destroot}${share}/nwchem/amber_q
    xinstall -d ${destroot}${share}/nwchem/amber_x
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_x/*] ${destroot}${share}/nwchem/amber_x
    xinstall -d ${destroot}${share}/nwchem/amber_u
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_u/*] ${destroot}${share}/nwchem/amber_u
    xinstall -d ${destroot}${share}/nwchem/solvents
    xinstall -m 644 {*}[glob ${worksrcpath}/data/solvents/*] ${destroot}${share}/nwchem/solvents
    xinstall -d ${destroot}${share}/nwchem/charmm_s
    xinstall -m 644 {*}[glob ${worksrcpath}/data/charmm_s/*] ${destroot}${share}/nwchem/charmm_s
    xinstall -d ${destroot}${share}/nwchem/charmm_x
    xinstall -m 644 {*}[glob ${worksrcpath}/data/charmm_x/*] ${destroot}${share}/nwchem/charmm_x
    system "echo nwchem_basis_library ${share}/nwchem/libraries/  > ${destroot}${prefix}/etc/nwchemrc"
    system "echo nwchem_nwpw_library ${share}/nwchem/libraryps/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo ffield amber  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_1 ${destroot}${share}/nwchem/amber_s/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_2 ${destroot}${share}/nwchem/amber_q/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_3 ${destroot}${share}/nwchem/amber_x/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_4 ${destroot}${share}/nwchem/amber_u/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo spce ${destroot}${share}/nwchem/solvents/spce.rst  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo charmm_s ${destroot}${share}/nwchem/charmm_s/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo charmm_x ${destroot}${share}/nwchem/charmm_x/  >> ${destroot}${prefix}/etc/nwchemrc"
}

