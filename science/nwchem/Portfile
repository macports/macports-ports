# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           mpi 1.0
PortGroup           compilers 1.0
PortGroup           makefile 1.0

github.setup        nwchemgit nwchem 7.2.3 v -release
github.tarball_from archive
revision            0

supported_archs     x86_64 arm64
categories          science
license             ECL-2.0
maintainers         {reneeotten @reneeotten} openmaintainer

description         Open Source High-Performance Computational Chemistry
long_description    The NWChem software contains computational chemistry tools \
                    that are scalable both in their ability to efficiently \
                    treat large scientific problems, and in their use of \
                    available computing resources from high-performance parallel \
                    supercomputers to conventional workstation clusters.

homepage            https://nwchemgit.github.io

checksums           rmd160  e9bf19c4827357451ddb45419e43d584ed2bb3b5 \
                    sha256  fec76fbe650cdab8b00c8c1d7a5671554313e04a8e9e2fb300a7aad486910e6f \
                    size    213226695

post-patch {
    reinplace  "s|/etc/nwchemrc|${prefix}/etc/nwchemrc|g" ${worksrcpath}/src/util/util_nwchemrc.F
}

depends_build-append \
                    path:bin/pkg-config:pkgconfig

depends_lib-append  port:hwloc \
                    port:python313 \
                    path:lib/libopenblas.dylib:OpenBLAS \
                    port:scalapack \
                    port:libxc6

configure.env-append \
                    NWCHEM_TARGET=MACX64 \
                    NWCHEM_TOP=${worksrcpath} \
                    PYTHONVERSION=3.13 \
                    "BLASOPT=${prefix}/lib -lopenblas" \
                    "LAPACK_LIB=-L${prefix}/lib -lopenblas" \
                    BLAS_SIZE=4 \
                    USE_SCALAPACK=y \
                    "SCALAPACK=-L${prefix}/lib -lscalapack" \
                    SCALAPACK_SIZE=4 \
                    USE_64TO32=y \
                    USE_HWOPT=n \
                    USE_MPI=y \
                    OPENBLAS_USES_OPENMP=y \
                    LIBXC_LIB=${prefix}/libexec/libxc6/lib \
                    LIBXC_INCLUDE=${prefix}/libexec/libxc6/include \
                    CCSDTQ=TRUE \
                    IPCCSD=y \
                    EACCSD=y \
                    MRCC_METHODS=TRUE

mpi.setup           require_fortran -g95 -mpich
default_variants-append +openmpi
compilers.setup     require_fortran -clang -gcc44 -gcc45 -gcc46 \
                    -gcc47 -gcc48 -gcc5 -gcc6 -gcc7 -gcc8 -g95
compilers.allow_arguments_mismatch yes

use_configure       yes
configure.dir       ${worksrcpath}/src
configure.env-append \
                    PATH=${prefix}/libexec/openmpi-mp:$env(PATH)
configure.args-append \
                    FFLAG_INT="-fdefault-integer-8"
configure.cmd       make nwchem_config
configure.pre_args
configure.post_args NWCHEM_MODULES="all python"

build.dir           ${configure.dir}
build.env-append    PATH=${prefix}/libexec/openmpi-mp:$env(PATH)
build.args-append   FFLAG_INT="-fdefault-integer-8" \
                    _FC=${configure.fc} \
                    _CC=${configure.cc}
build.args-append   CFLAGS_FORGA="-fPIC -Wl,-rpath,${prefix}/lib/libgcc -L${prefix}/lib/libgcc"
build.target
build.post_args
build.env           {*}${configure.env}

platform darwin {
    if {${os.major} < 23} {
        build.args-append  SCALAPACK_LIB="-L${prefix}/lib/ -lscalapack"
    } else {
        build.args-append  SCALAPACK_LIB="-Wl,-ld_classic -L${prefix}/lib/ -lscalapack"
    }
}

variant native description {Enable CPU-specific optimizations} {
    configure.env-replace USE_HWOPT=n USE_HWOPT=y
    build.env-replace USE_HWOPT=n USE_HWOPT=y
}

test.run            yes
# note: a few QA tests
test {
    system -W ${worksrcpath}/../QA "MPIRUN_PATH=${prefix}/bin/mpirun-mpich-mp  ./runtests.mpi.unix procs 2 libxc_li2freq dft_he2+ cosmo_h2o_dft h2o_opt ritddft_h2o h2o-response"
}

destroot {
    set share ${prefix}/share
    set bin ${prefix}/bin
    set etc ${prefix}/etc
    xinstall -m 755 ${worksrcpath}/../bin/MACX64/nwchem ${destroot}${bin}
    xinstall -d ${destroot}${share}/nwchem
    xinstall -d ${destroot}${share}/nwchem/libraries
    xinstall -d ${destroot}${share}/nwchem/libraries.bse
    xinstall -d ${destroot}${share}/nwchem/libraries/rel-modelpotentials
    xinstall -m 644  {*}[glob ${worksrcpath}/basis/libraries/rel-modelpotentials/*] ${destroot}${share}/nwchem/libraries/rel-modelpotentials
    delete ${worksrcpath}/basis/libraries/rel-modelpotentials
    xinstall -m 644  {*}[glob ${worksrcpath}/basis/libraries/*] ${destroot}${share}/nwchem/libraries
    xinstall -m 644  {*}[glob ${worksrcpath}/basis/libraries.bse/*] ${destroot}${share}/nwchem/libraries.bse
    xinstall -d ${destroot}${share}/nwchem/libraryps
    xinstall -d ${destroot}${share}/nwchem/libraryps/library1
    xinstall -d ${destroot}${share}/nwchem/libraryps/library2
    xinstall -d ${destroot}${share}/nwchem/libraryps/pspw_default
    xinstall -d ${destroot}${share}/nwchem/libraryps/paw_default
    delete ${worksrcpath}/nwpw/libraryps/paw_default/JUNK
    xinstall -m 644 {*}[glob ${worksrcpath}/nwpw/libraryps/library1/*] ${destroot}${share}/nwchem/libraryps/library1
    xinstall -m 644 {*}[glob ${worksrcpath}/nwpw/libraryps/library2/*] ${destroot}${share}/nwchem/libraryps/library2
    xinstall -m 644 {*}[glob ${worksrcpath}/nwpw/libraryps/pspw_default/*] ${destroot}${share}/nwchem/libraryps/pspw_default
    xinstall -d ${destroot}${share}/nwchem/amber_s
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_s/*] ${destroot}${share}/nwchem/amber_s
    xinstall -d ${destroot}${share}/nwchem/amber_q
    xinstall -d ${destroot}${share}/nwchem/amber_q/lps_Pa
    xinstall -d ${destroot}${share}/nwchem/amber_q/lps_ec
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_q//lps_Pa/*] ${destroot}${share}/nwchem/amber_q/lps_Pa
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_q//lps_ec/*] ${destroot}${share}/nwchem/amber_q/lps_ec
    delete ${worksrcpath}/data/amber_q/lps_Pa
    delete ${worksrcpath}/data/amber_q/lps_ec
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_q/*] ${destroot}${share}/nwchem/amber_q
    xinstall -d ${destroot}${share}/nwchem/amber_x
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_x/*] ${destroot}${share}/nwchem/amber_x
    xinstall -d ${destroot}${share}/nwchem/amber_u
    xinstall -m 644 {*}[glob ${worksrcpath}/data/amber_u/*] ${destroot}${share}/nwchem/amber_u
    xinstall -d ${destroot}${share}/nwchem/solvents
    xinstall -m 644 {*}[glob ${worksrcpath}/data/solvents/*] ${destroot}${share}/nwchem/solvents
    xinstall -d ${destroot}${share}/nwchem/charmm_s
    xinstall -m 644 {*}[glob ${worksrcpath}/data/charmm_s/*] ${destroot}${share}/nwchem/charmm_s
    xinstall -d ${destroot}${share}/nwchem/charmm_x
    xinstall -m 644 {*}[glob ${worksrcpath}/data/charmm_x/*] ${destroot}${share}/nwchem/charmm_x
    system "echo nwchem_basis_library ${share}/nwchem/libraries/  > ${destroot}${prefix}/etc/nwchemrc"
    system "echo nwchem_nwpw_library ${share}/nwchem/libraryps/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo ffield amber  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_1 ${destroot}${share}/nwchem/amber_s/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_2 ${destroot}${share}/nwchem/amber_q/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_3 ${destroot}${share}/nwchem/amber_x/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_4 ${destroot}${share}/nwchem/amber_u/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo spce ${destroot}${share}/nwchem/solvents/spce.rst  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo charmm_s ${destroot}${share}/nwchem/charmm_s/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo charmm_x ${destroot}${share}/nwchem/charmm_x/  >> ${destroot}${prefix}/etc/nwchemrc"
}
