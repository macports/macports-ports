# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem    1.0
PortGroup     compiler_blacklist_versions 1.0

name          ldas-tools-al
version       2.5.7
categories    science
platforms     darwin
maintainers   {ligo.org:ed.maros @emaros}

description   LDAS Tools Abstraction library
long_description ${description}

homepage      https://wiki.ligo.org/DASWG/LDASTools
master_sites  http://software.ligo.org/lscsoft/source/

checksums     rmd160 182f0fc8715508fa44e3564f3b3bbed008d78bfe \
              sha256 72fcc57378b45f96ecb573656e36e4ac45b52b847811c83c872dce1ea0f0fb8d

depends_build  port:pkgconfig
depends_lib    path:lib/libssl.dylib:openssl \
               port:zlib \
               port:bzip2


configure.args PYTHON=false \
               --disable-warnings-as-errors \
               --disable-silent-rules \
               --with-optimization=high \
               --disable-tcl \
               --disable-python \
               --without-doxygen \
               --without-dot \
               --disable-latex

if {${configure.cxx_stdlib} eq "libstdc++" } {
    configure.args-append --disable-cxx11
}

# requires clang from Xcode5 or higher to build
compiler.blacklist-append {clang < 500.2.75} llvm-gcc-4.2 gcc-4.2

use_parallel_build yes

pre-fetch {
    if {${os.platform} eq "darwin" && ${os.major} < 11} {
        ui_error "${name} only runs on Mac OS X 10.7 or greater."
        return -code error "incompatible Mac OS X version"
    }
}

pre-activate {
  # ldas-tools-al now contains files that used to be provided by ldas-tools
  if {![catch {set installed [lindex [registry_active ldas-tools] 0]}]} {
    set _version [lindex $installed 1]
    if {[vercmp $_version 2.5.0] < 0} {
      # ldas-tools used to install some files now provided by ldas-tools in versions < 2.5.0
      registry_deactivate_composite ldas-tools "" [list ports_nodepcheck 1]
    }
  }
}

#------------------------------------------------------------------------

livecheck.type   regex
livecheck.url    ${master_sites}
livecheck.regex  {ldas-tools-al-(\d+(?:\.\d+)*).tar.gz}

#========================================================================
# Create subports for each supported Python version
#========================================================================
foreach v {27} {
  set python.version       ${v}
  set python.branch        [string range ${python.version} 0 end-1].[string index ${python.version} end]
  set python.bin           ${prefix}/bin/python${python.branch}
  set python.prefix        ${frameworks_dir}/Python.framework/Versions/${python.branch}
  set python.site_packages "${python.prefix}/lib/python${python.branch}/site-packages"
  set python.pkgname       LDAStools

  subport py${v}-${name} {
    categories-prepend    python
    description           Python ${python.version} bindings for ${description}
    long_description      ${long_description} This package provides Python \
                          ${python.version} bindings, modules, and scripts.

    depends_build-append      port:swig-python
    depends_lib-append        port:${name}
    depends_lib-append        port:python${python.version}

    configure.python          ${python.bin}
    configure.args-replace    PYTHON=false PYTHON=${python.prefix}/bin/python${python.version}
    configure.args-replace    --disable-python --enable-python
    configure.args-append     SWIG_CPPFLAGS="-I${python.prefix}/include"

    destroot.args-append      pythondir="${python.site_packages}" \
                              pyexecdir="${python.site_packages}" \
                              pkgpythondir="${python.site_packages}/${python.pkgname}" \
                              pkgpyexecdir="${python.site_packages}/${python.pkgname}"

    build.dir                 ${worksrcpath}/python

    post-destroot {
      if {${subport} eq "py27-${name}"} {
        foreach script [glob -tails -nocomplain -directory ${destroot}${python.prefix}/bin *] {
          file link -symbolic ${destroot}${prefix}/bin/${script} ../Library/Frameworks/Python.framework/Versions/${python.version}/bin/${script}
        }
      }
    }

    livecheck.type        none
  }
}
