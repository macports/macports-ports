# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

name                gr-baz
categories          science comms
platforms           darwin
license             GPL-3
maintainers         {michaelld @michaelld} openmaintainer
description         Provides augmented functionality (blocks, GRC definitions, apps, etc) for GNU Radio.
long_description    ${description}
homepage            https://wiki.spench.net/wiki/Gr-baz

github.setup        balint256 gr-baz 937834ce3520b730277328d8e0cdebb3f2b1aafc
version             20200409-[string range ${github.version} 0 7]
checksums           rmd160  62c7e8c1c62000b3bf8f7dee8b4ee0bbde7bc1b8 \
                    sha256  6cfb84fc38046f2429e679a9429bec8b404deb955f4cceecb33f17dc4d73110a \
                    size    516543
revision            1

# use C++11
compiler.cxx_standard 2011

if {${subport} eq ${name}} {
    # fix gnuradio version
    patchfiles-append \
        cmakelists-3.8.txt.patch

    conflicts gr37-baz

    depends_lib-append \
        path:lib/libgnuradio-runtime.dylib:gnuradio

    set python_versions { 3.6 3.7 3.8 }
    set default_python_variant +python37

    pre-configure {
        file copy -force ${worksrcpath}/CMakeLists-3.8.txt ${worksrcpath}/CMakeLists.txt
    }
}

subport gr37-baz {
    name gr37-baz

    conflicts gr-baz

    depends_lib-append \
        port:gnuradio37

    set python_versions { 2.7 }
    set default_python_variant +python27

    pre-configure {
        file copy -force ${worksrcpath}/CMakeLists-3.7.txt ${worksrcpath}/CMakeLists.txt
    }
}

# Define the available variants
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    set variant_line {variant python${py_ver_no_dot} description "Build with python ${py_ver} support"}
    foreach py_over ${python_versions} {
        if { ${py_ver} == ${py_over} } { continue }
        set py_over_no_dot [join [split ${py_over} "."] ""]
        append variant_line " conflicts python${py_over_no_dot}"
    }
    append variant_line { { } }
    eval $variant_line
    if {[variant_isset python${py_ver_no_dot}]} {
        if {${default_python_variant} != "+python${py_ver_no_dot}"} {
            set default_python_variant ""
        }
    }
}

# set default python variant if not selected
if {${default_python_variant} != ""} {
    default_variants-append "${default_python_variant}"
}

# If a python variant is enabled, activate it
set active_python_version ""
set active_python_version_no_dot ""
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    if {[variant_isset python${py_ver_no_dot}]} {
        set active_python_version        ${py_ver}
        set active_python_version_no_dot ${py_ver_no_dot}
    }
}

depends_build-append \
    port:pkgconfig \
    port:cppunit \
    port:swig-python

depends_lib-append \
    port:boost \
    path:lib/libvolk.dylib:volk \
    port:doxygen \
    port:python${active_python_version_no_dot}

# specify the Python version to use
set python_framework_dir ${frameworks_dir}/Python.framework/Versions/${active_python_version}
configure.args-append \
    -DPYTHON_EXECUTABLE=${python_framework_dir}/bin/python${active_python_version} \
    -DPYTHON_INCLUDE_DIR=${python_framework_dir}/Headers \
    -DPYTHON_LIBRARY=${python_framework_dir}/Python \
    -DGR_PYTHON_DIR=${python_framework_dir}/lib/python${active_python_version}/site-packages

depends_test-append \
    port:cppunit

configure.args-append \
       -DUHD_INCLUDE_DIRS= \
       -DUHD_LIBRARIES= \
       -DLIBUSB_INCLUDE_DIR= \
       -DLIBUSB_LIBRARIES= \
       -DARMADILLO_INCLUDE_DIR= \
       -DARMADILLO_LIBRARY=

variant uhd description "Install ${name} with support for UHD" {
    depends_lib-append \
        path:lib/libuhd.dylib:uhd

    configure.args-replace \
        -DUHD_INCLUDE_DIRS= \
        -DUHD_INCLUDE_DIRS=${prefix}/include \

   configure.args-replace \
        -DUHD_LIBRARIES= \
        -DUHD_LIBRARIES=${prefix}/lib/libuhd.dylib
}


variant rtl description "Install ${name} with support for RTL SDR hardware (via libusb)" {
    depends_lib-append path:lib/libusb-1.0.dylib:libusb

    configure.args-replace \
        -DLIBUSB_INCLUDE_DIR= \
        -DLIBUSB_INCLUDE_DIR=${prefix}/include/libusb-1.0

    configure.args-replace \
        -DLIBUSB_LIBRARIES= \
        -DLIBUSB_LIBRARIES=${prefix}/lib/libusb-1.0.dylib
}

variant armadillo description "Install ${name} with support for MUSIC DOA estimator block (via armadillo)" {
    depends_lib-append port:armadillo

    configure.args-replace \
        -DARMADILLO_INCLUDE_DIR= \
        -DARMADILLO_INCLUDE_DIR=${prefix}/include

    configure.args-replace \
        -DARMADILLO_LIBRARY= \
        -DARMADILLO_LIBRARY=${prefix}/lib/libarmadillo.dylib
}

# enable all variants except +debug and +universal
default_variants +uhd +rtl +armadillo
