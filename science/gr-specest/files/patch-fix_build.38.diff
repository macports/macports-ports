--- lib/cyclo_fam_calcspectrum_algo.cc.orig
+++ lib/cyclo_fam_calcspectrum_algo.cc
@@ -97,12 +97,7 @@
 
     // Copy input stream to d_complex_demodulates and do the phase shifting
     for (int m = 0; m < d_P * d_Np; m++) {
-        d_complex_demodulates[p][i].real(
-            in[m].real() * cos(2 * M_PI * i * (p * d_L) / d_Np) +
-            in[m].imag() * sin(2 * M_PI * i * (p * d_L) / d_Np));
-        d_complex_demodulates[p][i].imag(
-            in[m].imag() * cos(2 * M_PI * i * (p * d_L) / d_Np) -
-            in[m].real() * sin(2 * M_PI * i * (p * d_L) / d_Np));
+        d_complex_demodulates[p][i] = in[m] * gr_complex (cos(2*M_PI*i*(p*d_L)/d_Np), -sin(2*M_PI*i*(p*d_L)/d_Np));
         i++;
 
         if ((m + 1) % d_Np == 0) { // End of vector length Np
--- lib/pad_vector_impl.cc.orig
+++ lib/pad_vector_impl.cc
@@ -39,7 +39,7 @@
                      gr::io_signature::make(1, 1, vlen_in * item_size),
                      gr::io_signature::make(1, 1, vlen_out * item_size))
 {
-    if (item_size, vlen_in < vlen_out) {
+    if (vlen_in < vlen_out) {
         d_copylen = vlen_in * item_size;
         d_padlen = (vlen_out - vlen_in) * item_size;
     } else {
