# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           github 1.0

# require C++11 for cppunit 1.14.0 as of April 13, 2017.
# GNU Radio 3.8 will require C++11 when it is released.
PortGroup           cxx11 1.1

PortGroup           wxWidgets 1.0
wxWidgets.use       wxPython-3.0

name                gnuradio
maintainers         {michaelld @michaelld}

description         GNU Radio is Software Defined Radio (SDR)

categories          science comms
license             GPL-3
platforms           darwin macosx

dist_subdir         gnuradio

if {${subport} eq ${name}} {

    github.setup    gnuradio gnuradio 3.7.11 v
    revision        7
    checksums \
        rmd160 7c361e19ccacd78f8a1e947b3307f8665d0bc0d2 \
        sha256 6f796788606eda4a6b947c627a22f00575c6026464b95e05f897bdafd9a1a4fa

    long_description    ${description}: \
        This port is kept up with the GNU Radio release, currently ${version}, which is typically updated every few months.

    conflicts       gnuradio-next gnuradio-devel

    # set the version override string

    set GR_VERSION_INFO "Release"

    # overload the github livecheck regex to look for versions that
    # are just numbers and '.', no letters (e.g., "3.7.3git").

    livecheck.regex archive/[join ${github.tag_prefix} ""](\[0-9\.\]+)${extract.suffix}

}

subport gnuradio-devel {

    long_description    ${description}: \
        This port is kept up with the GNU Radio GIT 'master' branch, which is typically updated daily to weekly.  This version of GNU Radio generally contains fixes to, and its API is compatible with, the current GNU Radio release, and will be incorporated in an upcoming release.  This port may or not compile or function correctly, as it represents a work in progress.  If it does not work, check back in a few days.  Or try deactivating the currently active gnuradio port, cleaning any current builds, and trying again.

    name                gnuradio-devel
    conflicts           gnuradio gnuradio-next

    github.setup        gnuradio gnuradio f783dd54a2a81bbd7a03b17e26a5563199c52015
    version             20180208
    revision            1
    checksums \
        rmd160 705676634348877b950b0dbdb4a55002080af1e2 \
        sha256 15feb38a71d5b6dea708c1bd47ac18ceace39a6a7fcd8b17f08c9ebf78acb258

    # set the version override string

    set GR_VERSION_INFO "devel-git-[string range ${github.version} 0 7](${version})"

}

subport gnuradio-next {

    long_description    ${description}: \
        This port is kept up with the GNU Radio GIT 'next' branch, which is typically updated daily to weekly.  This version of GNU Radio represents the next major release of GNU Radio, and hence its API is likely to be different than that provided by either gnuradio or gnuradio-devel.  This port may or not compile or function correctly, as it represents a work in progress.  If it does not work, check back in a few days.  Or try deactivating the currently active gnuradio port, cleaning any current builds, and trying again.

    name                gnuradio-next
    conflicts           gnuradio gnuradio-devel

    github.setup        gnuradio gnuradio 6ae02d1d6d04a5f529ab3fea496c589f8d14229d
    version             20180208
    revision            1
    checksums \
        rmd160 39205094e66e55f1a1a7960251522255db67a59c \
        sha256 e0004837eecf889a42559d290dc5aa49963c8de2276e653dec6b890309fcfaaf

    # set the version override string

    set GR_VERSION_INFO "next-git-[string range ${github.version} 0 7](${version})"

    # overload the github livecheck URL with the correct branch

    livecheck.url       ${github.homepage}/commits/next.atom

}

# temporary patch to fix header creation to be before dependencies
# are determined, such that local (to the build) headers are found
# before already-installed ones.

if {${subport} eq "gnuradio"} {

    # patches for release only
    patchfiles-append \
        patch-cmake-expand.release.diff

    # temporary patch to fix debug printout in gr-audio/osx
    # delete at next release update
    patchfiles-append patch-gr-audio_lib_osx_osx_impl.cc.diff

    # Fix setting of the C++ standard internal to GR, with internal
    # checking depending on version of CppUnit & allowing MacPorts to
    # decide the setting.

    patchfiles-append patch-CMakeLists.txt.diff

    # temporary patch to fix gr-fec to switch code from 'constexpr' to
    # just 'const'; this patch is already integrated upstream, so
    # remove with the next release.

    patchfiles-append \
        patch-gr-fec_include_gnuradio_fec_polar_decoder_common.h.diff

    # temporary patch to fix logging macros to work more robustly with
    # out-of-tree modules.
    # integrated into devel and next, so remove at next release

    patchfiles-append patch-logging_macros.diff

    # temporary patch to fix gr OSX audio for debugging
    # integrated into devel and next, so remove at next release

    patchfiles-append patch-gr-audio_fix_debug.diff

    # temporary patch to add in a macro that overloads the function
    # include_directories to be a little smarter as to the ordering of
    # the directories, sorting them to be internal to build or source
    # first and external last.

    patchfiles-append patch-add-CMakeOverloads.diff

    # temporary patch to fix FindCppUnit.cmake to return version found
    # to calling script.

    patchfiles-append patch-cmake_Modules_FindCppUnit.cmake.diff

} elseif {${subport} eq "gnuradio-devel"} {

    # patches for devel
    patchfiles-append \
        patch-cmake-expand.devel.diff

} else {

    # patches for next
    patchfiles-append \
        patch-cmake-expand.next.diff

    # temporary patch to fix include order

    patchfiles-append patch-fix_includes.next.diff

}

platform darwin 10 {
    # add missing long long math prototype accidentally
    # left out of snow leopard (10.6)'s <math.h>
    patchfiles-append \
        patch-gr-blocks_lib_float_array_to_int.cc.diff
}

# override githib PortGroup homepage setting

homepage            http://gnuradio.org/

use_parallel_build  yes

depends_lib-append  \
    port:boost \
    port:cppunit \
    port:fftw-3-single

# need matplotlib for polar encoder/decoder, runtime
# only. This is not checked for at configure.

depends_run-append port:py27-matplotlib

# do VPATH (out of source tree) build

cmake.out_of_source yes

# remove top-level library path, such that internal libraries
# are used instead of any already-installed ones.

configure.ldflags-delete -L${prefix}/lib

# install CMake files into this directory.

configure.args-append \
    -DCMAKE_MODULES_DIR=${prefix}/share/cmake

# override default version string to be MacPorts-specific

configure.args-append \
    -DGR_GIT_COUNT="MacPorts" \
    -DGR_GIT_HASH="${GR_VERSION_INFO}"

# release, devel, and next can use either the Volk.

depends_lib-append path:lib/libvolk.dylib:volk

# disable using internal VOLK

configure.args-append \
    -DENABLE_INTERNAL_VOLK=OFF

# require Python 2.7

depends_lib-append \
    port:python27

# these are checked for at configure, then required for
# runtime; so use depends_lib to get both.

depends_lib-append \
    port:py27-numpy \
    port:py27-cheetah

# these are not checked for at configure, but are required
# for runtime; so use depends_run.

depends_run-append \
    port:py27-opengl \
    port:py27-scipy

# specify the Python version to use

configure.args-append \
    -DPYTHON_EXECUTABLE=${frameworks_dir}/Python.framework/Versions/2.7/bin/python2.7 \
    -DPYTHON_INCLUDE_DIR=${frameworks_dir}/Python.framework/Versions/2.7/Headers \
    -DPYTHON_LIBRARY=${frameworks_dir}/Python.framework/Versions/2.7/Python \
    -DGR_PYTHON_DIR=${frameworks_dir}/Python.framework/Versions/2.7/lib/python2.7/site-packages

# try to enable C++11 for older compilers too.  for some reason cmake
# doesn't recognize libstdc++ compilers as being c++11 capable, even
# though some are. set this and hope for the best ...

if {${configure.cxx_stdlib} eq "macports-libstdc++" ||
    ${configure.cxx_stdlib} eq "libstdc++"} {
    configure.cxxflags-append -std=gnu++11
}

post-destroot {

    # fix residual cmake module install location when
    # CMAKE_MODULES_DIR does not do the whole trick

    # GNU Radio installs cmake files as "Config*.cmake", which has the
    # odd behavior of requiring the files to be in a top-level shared
    # cmake directory; for MacPorts' cmake, these are, apparently:
    # ${prefix}/lib:${prefix}/share/cmake .  I don't know why ... but
    # I do not want cmake files installed into the former, so move
    # them to the latter.

    if {[file exists ${destroot}${prefix}/lib/cmake]} {
        xinstall -m 755 -d ${destroot}${prefix}/share
        move ${destroot}${prefix}/lib/cmake \
            ${destroot}${prefix}/share
    }
}

# per user concensus: enable all variants except +ctrlport,
# +performance_counters, +debug, and +universal.

default_variants +docs +grc +qtgui +uhd +wavelet \
    +jack +portaudio +swig +sdl +zeromq

if {${subport} eq "gnuradio" ||
    ${subport} eq "gnuradio-devel"} {
    default_variants +logging +log4cpp
}

# variants follow

variant docs description "Install GNU Radio documentation" {

    depends_lib-append \
        port:doxygen \
        path:bin/dot:graphviz \
        port:xmlto

    depends_build-append \
        port:py27-sphinx \
        port:texlive-latex

    configure.args-append \
        -DENABLE_DOXYGEN=ON \
        -DENABLE_SPHINX=ON \
        -DSPHINX_EXECUTABLE=${frameworks_dir}/Python.framework/Versions/2.7/bin/sphinx-build

}

if {![variant_isset docs]} {

    configure.args-append \
        -DENABLE_DOXYGEN=OFF \
        -DENABLE_SPHINX=OFF

}

variant grc requires swig description "Install GNU Radio Companion" {

    configure.args-append \
        -DENABLE_GRC=ON

    # these are checked for at configure, then required
    # for runtime; so use depends_lib to get both.

    depends_lib-append \
        port:py27-lxml \
        port:py27-pygtk

}

if {![variant_isset grc]} {

    configure.args-append \
        -DENABLE_GRC=OFF

}

variant qtgui description "Install GNU Radio with support for Qt GUI" {

    if {${subport} eq "gnuradio" ||
        ${subport} eq "gnuradio-devel"} {

        PortGroup qt4 1.0
        PortGroup active_variants 1.1

        depends_lib-append \
            port:qwtplot3d

        # pyqt4 is checked for at configure, then required for
        # runtime; so use depends_lib to get both.

        depends_lib-append \
            port:py27-pyqt4

        # Requires qwt >= 5.2, so not the "qwt" port.  Also requires
        # py*-pyqwt which does not compile with qwt >= 6.0; so -have- to
        # use qwt52 for now.

        depends_lib-append port:qwt52
        require_active_variants qwt52 qt4

        # pyqwt is not checked for at configure, but is
        # required for runtime; so use depends_run.

        depends_run-append \
            port:py27-pyqwt

        configure.args-append \
            -DQWT_INCLUDE_DIRS=${prefix}/include/qwt \
            -DQWT_LIBRARIES=${prefix}/lib/libqwt.dylib

    } else {

        # next
        PortGroup qt5 1.0

        # pyqt5 is checked for at configure, then required for
        # runtime; so use depends_lib to get both.  Can use
        # either py*-pyqt5 or py*-pyqt5-devel.

        depends_lib-append \
            path:share/py27-sip/PyQt5:py27-pyqt5

        # Requires qwt >= 6.0, installed for qt5.
        # just use the new port that does this.

        depends_lib-append port:qwt-qt5

        configure.args-append \
            -DQWT_INCLUDE_DIRS=${qt_dir}/lib/qwt.framework/Versions/6/Headers \
            -DQWT_LIBRARIES=${qt_dir}/lib/qwt.framework/qwt

    }

    configure.args-append \
        -DENABLE_GR_QTGUI=ON \
        -DQT_QMAKE_EXECUTABLE=${qt_qmake_cmd}

}

if {![variant_isset qtgui]} {

    # qt4 portgroup provides pkgconfig, so if not using Qt need that here.

    depends_build-append \
        port:pkgconfig

    configure.args-append \
        -DENABLE_GR_QTGUI=OFF \
        -DQT_QMAKE_EXECUTABLE=

}

variant wxgui description "Install GNU Radio with support for Wx GUI" {

    depends_lib-append \
        port:${wxWidgets.port}

    # wxpython is checked for at configure, then required
    # for runtime; so use depends_lib to get both.

    depends_lib-append \
        port:py27-wxpython-3.0

    configure.args-append \
        -DENABLE_GR_WXGUI=ON

}

if {![variant_isset wxgui]} {

    configure.args-append \
        -DENABLE_GR_WXGUI=OFF

}

variant uhd description "Install GNU Radio with support for UHD" {

    # allow for uhd or uhd-devel

    depends_lib-append \
        path:lib/libuhd.dylib:uhd

    configure.args-append \
        -DENABLE_GR_UHD=ON \
        -DUHD_INCLUDE_DIRS=${prefix}/include \
        -DUHD_LIBRARIES=${prefix}/lib/libuhd.dylib

}

if {![variant_isset uhd]} {

    configure.args-append \
        -DENABLE_GR_UHD=OFF \
        -DUHD_INCLUDE_DIRS= \
        -DUHD_LIBRARIES=

}

variant wavelet description "Install GNU Radio Wavelet component" {

    depends_lib-append \
        port:gsl

    configure.args-append \
        -DENABLE_GR_WAVELET=ON

}

if {![variant_isset wavelet]} {

    configure.args-append \
        -DENABLE_GR_WAVELET=OFF

}

variant jack description "Install GNU Radio with support for JACK audio" {

    depends_lib-append \
        port:jack

    configure.args-append \
        -DJACK_INCLUDE_DIR=${prefix}/include \
        -DJACK_LIBRARY=${prefix}/lib/libjack.dylib

}

if {![variant_isset jack]} {

    configure.args-append \
        -DJACK_INCLUDE_DIR= \
        -DJACK_LIBRARY=

}

variant portaudio description "Install GNU Radio with support for portaudio audio" {

    depends_lib-append \
        port:portaudio

    configure.args-append \
        -DPORTAUDIO_INCLUDE_DIRS=${prefix}/include \
        -DPORTAUDIO_LIBRARIES=${prefix}/lib/libportaudio.dylib

}

if {![variant_isset portaudio]} {

    configure.args-append \
        -DPORTAUDIO_INCLUDE_DIRS= \
        -DPORTAUDIO_LIBRARIES=

}

variant swig description "Install GNU Radio with support for SWIG-base Python bindings" {

    depends_build-append \
        port:swig-python

    configure.args-append \
        -DSWIG_EXECUTABLE=${prefix}/bin/swig

}

if {![variant_isset swig]} {

    configure.args-append \
        -DSWIG_EXECUTABLE=

}

variant sdl description "Install GNU Radio with support for SDL-based video" {

    depends_lib-append \
        port:libsdl

    configure.args-append \
        -DENABLE_GR_VIDEO_SDL=ON \
        -DSDLMAIN_LIBRARY=${prefix}/lib/libSDLmain.a \
        -DSDL_INCLUDE_DIR=${prefix}/include/SDL

}

if {![variant_isset sdl]} {

    configure.args-append \
        -DENABLE_GR_VIDEO_SDL=OFF \
        -DSDLMAIN_LIBRARY= \
        -DSDL_INCLUDE_DIR=

}

variant ctrlport description {Enable control port enhancements (EXPERIMENTAL)} {

    # require Thrift and Python Thrift

    depends_lib-append \
        port:py27-thrift \
        port:thrift

    # enable configuration arguments for ctrlport and thrift

    configure.args-append \
        -DENABLE_GR_CTRLPORT=ON \
        -DENABLE_CTRLPORT_THRIFT=ON

}

if {![variant_isset ctrlport]} {

    configure.args-append \
        -DENABLE_GR_CTRLPORT=OFF \
        -DENABLE_CTRLPORT_THRIFT=OFF

}

variant performance_counters description {Enable support for performance counters (EXPERIMENTAL)} {

    # these are not checked for at configure, but are
    # required for runtime; so use depends_run.

    depends_run-append \
        port:py27-pygraphviz \
        port:py27-networkx

    configure.args-append \
        -DENABLE_PERFORMANCE_COUNTERS=ON

}

if {![variant_isset performance_counters]} {

    configure.args-append \
        -DENABLE_PERFORMANCE_COUNTERS=OFF

}

variant zeromq description {Install GNU Radio with support for the ZeroMQ lightweight messaging kernel (EXPERIMENTAL)} {

    # can use cppzmq or cppzmq-devel
    depends_lib-append \
        path:include/zmq.hpp:cppzmq

    # pyzmq is not checked for at configure, but is
    # required for runtime; so use depends_run.

    depends_run-append \
        port:py27-zmq

    configure.args-append \
        -DENABLE_GR_ZEROMQ=ON

}

if {![variant_isset zeromq]} {

    configure.args-append \
        -DENABLE_GR_ZEROMQ=OFF

}

if {${subport} eq "gnuradio-next"} {

    # logging using log4cpp is always enabled on GR next (3.8*).

    depends_lib-append  \
        port:log4cpp

    configure.args-append \
        -DLOG4CPP_FOUND=ON \
        -DLOG4CPP_INCLUDE_DIRS=${prefix}/include \
        -DLOG4CPP_LIBRARIES=${prefix}/lib/liblog4cpp.dylib

} else {

    # logging is an option on GR release and devel (3.7*).

    variant logging description {Install GNU Radio with support for logging} {

        configure.args-append \
            -DENABLE_GR_LOG=ON

    }

    if {![variant_isset logging]} {

        configure.args-append \
            -DENABLE_GR_LOG=OFF

    }

    variant log4cpp requires logging description {Install GNU Radio with support for logging via log4cpp} {}

    if {[variant_isset log4cpp]} {

        depends_lib-append  \
            port:log4cpp

        configure.args-append \
            -DLOG4CPP_FOUND=ON \
            -DLOG4CPP_INCLUDE_DIRS=${prefix}/include \
            -DLOG4CPP_LIBRARIES=${prefix}/lib/liblog4cpp.dylib

    } else {

        configure.args-append \
            -DLOG4CPP_FOUND=OFF \
            -DLOG4CPP_INCLUDE_DIRS= \
            -DLOG4CPP_LIBRARIES=

    }
}
