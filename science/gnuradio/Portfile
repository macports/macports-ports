# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           github 1.0

# require C++11 for cppunit 1.14.0 as of April 13, 2017.
# GNU Radio 3.8 will require C++11 when it is released.
PortGroup           cxx11 1.1

PortGroup           wxWidgets 1.0
wxWidgets.use       wxPython-3.0

name                gnuradio
maintainers         {michaelld @michaelld}

description         GNU Radio is Software Defined Radio (SDR)

categories          science comms
license             GPL-3
platforms           darwin macosx

dist_subdir         gnuradio

if {${subport} eq ${name}} {

    github.setup    gnuradio gnuradio 3.7.13.4 v
    checksums \
        rmd160 150f8ccb6f724e2bdced377f56d36c3810649992 \
        sha256 44c987c941b69fcf77d4e9fa7f8039eb8bf82591e8184c431f44351abe6bba3e \
        size   4431335

    long_description    ${description}: \
        This port is kept up with the GNU Radio release, currently ${version}, which is typically updated every few months.

    conflicts       gnuradio-next gnuradio-devel

    # set the version override string

    set GR_VERSION_INFO "Release"

    # overload the github livecheck regex to look for versions that
    # are just numbers and '.', no letters (e.g., "3.7.3git").

    github.livecheck.regex  {([0-9.]+)}

}

subport gnuradio-devel {

    long_description    ${description}: \
        This port is kept up with the GNU Radio GIT 'master' branch, which is typically updated daily to weekly.  This version of GNU Radio generally contains fixes to, and its API is compatible with, the current GNU Radio release, and will be incorporated in an upcoming release.  This port may or not compile or function correctly, as it represents a work in progress.  If it does not work, check back in a few days.  Or try deactivating the currently active gnuradio port, cleaning any current builds, and trying again.

    name                gnuradio-devel
    conflicts           gnuradio gnuradio-next

    github.setup        gnuradio gnuradio efdc8e84ca893d2314758d5b9eeef7cedb1c8c83
    version             20180712
    checksums \
        rmd160 208b212fd530c82107eea9f1ed129f0736cc3bc3 \
        sha256 1eae77c2c01fe3226d5a6eafd53bbc108d6426077da7b0822ef13d34969365a1 \
        size   4422939

    # set the version override string

    set GR_VERSION_INFO "devel-git-[string range ${github.version} 0 7](${version})"

}

subport gnuradio-next {

    long_description    ${description}: \
        This port is kept up with the GNU Radio GIT 'next' branch, which is typically updated daily to weekly.  This version of GNU Radio represents the next major release of GNU Radio, and hence its API is likely to be different than that provided by either gnuradio or gnuradio-devel.  This port may or not compile or function correctly, as it represents a work in progress.  If it does not work, check back in a few days.  Or try deactivating the currently active gnuradio port, cleaning any current builds, and trying again.

    name                gnuradio-next
    conflicts           gnuradio gnuradio-devel

    github.setup        gnuradio gnuradio 89736b31397330861dcaa550b7891ce6e7a5536f
    version             20180713
    checksums \
        rmd160 f804bcd315d3ffe63275600708a3fae1d5b20746 \
        sha256 b612a0c85ccaffe01fd9d8b9fa48178f8b18d429ab7e0779076b39cafc892648 \
        size   3628589

    # set the version override string

    set GR_VERSION_INFO "next-git-[string range ${github.version} 0 7](${version})"

    # overload the github livecheck branch

    github.livecheck.branch next

}

if {${subport} eq "gnuradio"} {

    # patches for release only

    # force expansion of CMake-based template files
    patchfiles-append \
        patch-cmake-expand.release.diff

    # temporary patch to fix CTRLPORT testing
    patchfiles-append \
        patch-fix_ctrlport_test.release.diff

    # temporary patch to fix and allow external setting for
    # CMAKE_C/CXX_STANDARD

    patchfiles-append \
        patch-C_CXX_STANDARD.release.diff

} elseif {${subport} eq "gnuradio-devel"} {

    # patches for devel

    # force expansion of CMake-based template files
    patchfiles-append \
        patch-cmake-expand.devel.diff

    # temporary patch to fix CTRLPORT testing
    patchfiles-append \
        patch-fix_ctrlport_test.devel.diff

    # temporary patch to fix and allow external setting for
    # CMAKE_C/CXX_STANDARD

    patchfiles-append \
        patch-C_CXX_STANDARD.devel.diff

} else {

    # patches for next

    # force expansion of CMake-based template files
    patchfiles-append \
        patch-cmake-expand.next.diff

    # temporary patch to allow COMPILER_ID match
    # with Clang and AppleClang
    patchfiles-append \
        patch-fix_clang.next.diff

    # temporary patch to fix CTRLPORT testing
    patchfiles-append \
        patch-fix_ctrlport_test.next.diff

    # temporary patch to fix and allow external setting for
    # CMAKE_C/CXX_STANDARD

    patchfiles-append \
        patch-C_CXX_STANDARD.next.diff

}

platform darwin 10 {
    # add missing long long math prototype accidentally
    # left out of snow leopard (10.6)'s <math.h>
    patchfiles-append \
        patch-gr-blocks_lib_float_array_to_int.cc.diff
}

# override githib PortGroup homepage setting

homepage            https://www.gnuradio.org/

use_parallel_build  yes

# set Python version and variants
set PythonVersionNoDot ""
if {${subport} eq "gnuradio-next"} {

    # select Python to use; default to 2.7

    variant python27 conflicts python34 python35 python36 description {Build using Python 2.7} {}
    variant python34 conflicts python27 python35 python36 description {Build using Python 3.4} {}
    variant python35 conflicts python27 python34 python36 description {Build using Python 3.5} {}
    variant python36 conflicts python27 python34 python35 description {Build using Python 3.6} {}

    if {![variant_isset python27] &&
        ![variant_isset python34] &&
        ![variant_isset python35] &&
        ![variant_isset python36]} {
        default_variants +python27
    }

    if {![variant_isset python27] &&
        ![variant_isset python34] &&
        ![variant_isset python35] &&
        ![variant_isset python36]} {
        ui_error "\n\nYou must select one of the variants +python27 , +python34 , +python35, or +python36. .\n"
        return -code error "Invalid variant selection"
    }

    if {[variant_isset python27]} {
        set PythonVersionNoDot "27"
    } elseif {[variant_isset python34]} {
        set PythonVersionNoDot "34"
    } elseif {[variant_isset python35]} {
        set PythonVersionNoDot "35"
    } else {
        set PythonVersionNoDot "36"
    }
} else {
    # for now: release and devel require Python 2.7
    set PythonVersionNoDot "27"
}
set PythonVersionWithDot [join [split ${PythonVersionNoDot} ""] "."]

depends_build-append \
    port:pkgconfig \
    port:swig-python

depends_lib-append  \
    port:boost \
    port:fftw-3-single

# some dependencies change by subport

if {${subport} eq "gnuradio"} {

    # release
    # still require cppunit for testing
    depends_test-append port:cppunit

} elseif {${subport} eq "gnuradio-devel"} {

    # devel
    # nothing new at this time

} else {

    # next
    depends_run-append port:adwaita-icon-theme

}

# need matplotlib for polar encoder/decoder, runtime
# only. This is not checked for at configure.

depends_run-append port:py${PythonVersionNoDot}-matplotlib

# do VPATH (out of source tree) build

cmake.out_of_source yes

# remove top-level library path, such that internal libraries
# are used instead of any already-installed ones.

configure.ldflags-delete -L${prefix}/lib

# install CMake files into this directory.

configure.args-append \
    -DCMAKE_MODULES_DIR=${prefix}/share/cmake

# override default version string to be MacPorts-specific

configure.args-append \
    -DGR_GIT_COUNT="MacPorts" \
    -DGR_GIT_HASH="${GR_VERSION_INFO}"

# release, devel, and next can use either the Volk.

depends_lib-append path:lib/libvolk.dylib:volk

# disable using internal VOLK

configure.args-append \
    -DENABLE_INTERNAL_VOLK=OFF

# require Python

depends_lib-append \
    port:python${PythonVersionNoDot}

# these are checked for at configure, then required for
# runtime; so use depends_lib to get both.

depends_lib-append \
    port:py${PythonVersionNoDot}-numpy \
    port:py${PythonVersionNoDot}-cheetah

# these are not checked for at configure, but are required
# for runtime; so use depends_run.

depends_run-append \
    port:py${PythonVersionNoDot}-opengl \
    port:py${PythonVersionNoDot}-scipy

# specify the Python version to use

configure.args-append \
    -DPYTHON_EXECUTABLE=${frameworks_dir}/Python.framework/Versions/${PythonVersionWithDot}/bin/python${PythonVersionWithDot} \
    -DPYTHON_INCLUDE_DIR=${frameworks_dir}/Python.framework/Versions/${PythonVersionWithDot}/Headers \
    -DPYTHON_LIBRARY=${frameworks_dir}/Python.framework/Versions/${PythonVersionWithDot}/Python \
    -DGR_PYTHON_DIR=${frameworks_dir}/Python.framework/Versions/${PythonVersionWithDot}/lib/python${PythonVersionWithDot}/site-packages

# Enable C/C++11 for all GNU Radio builds, even though it's not
# technically required yet (it will be once 3.8 is out). GNU Radio is
# compatible with C/C++11 and this setting allows for building on
# older OSX using GCC along with newer OSX using Clang.

configure.args-append -DCMAKE_CXX_STANDARD=11
configure.args-append -DCMAKE_C_STANDARD=11

# on much older installs ...

if {${configure.cxx_stdlib} eq "macports-libstdc++" ||
    ${configure.cxx_stdlib} eq "libstdc++"} {

    # for some reason cmake doesn't recognize libstdc++ compilers as
    # being c++11 capable, even though some are. set this and hope for
    # the best.

    configure.cxxflags-append -std=gnu++11

    # when using GCC on older OSX, certain math functions will not be
    # part of std:: without this macro defined. This macro required
    # c++11 to be enabled, which is addressed in the next item.

    configure.cxxflags-append -D_GLIBCXX_USE_C99_MATH_TR1

    # enable C/CXX standard extensions (e.g., "gnu++11" and "gnu11"
    # instead of than "c++11" and "c11"). GNU Radio itself does not
    # require these extensions, but when compiling with GCC on older
    # OSX they allow for various various math functions to be in std::
    # ... so, enable them.

    configure.args-append \
        -DCMAKE_CXX_EXTENSIONS=ON \
        -DCMAKE_C_EXTENSIONS=ON

} else {

    # disable C/CXX standard extensions (e.g., "gnu++11" and "gnu11"
    # rather than "c++11" and "c11"). GNU Radio itself does not
    # require these extensions, and when compiling with Clang they
    # don't really do anything anyway; so, just disable them.

    configure.args-append \
        -DCMAKE_CXX_EXTENSIONS=OFF \
        -DCMAKE_C_EXTENSIONS=OFF

}

post-destroot {

    # fix residual cmake module install location when
    # CMAKE_MODULES_DIR does not do the whole trick

    # GNU Radio installs cmake files as "Config*.cmake", which has the
    # odd behavior of requiring the files to be in a top-level shared
    # cmake directory; for MacPorts' cmake, these are, apparently:
    # ${prefix}/lib:${prefix}/share/cmake .  I don't know why ... but
    # I do not want cmake files installed into the former, so move
    # them to the latter.

    if {[file exists ${destroot}${prefix}/lib/cmake]} {
        xinstall -m 755 -d ${destroot}${prefix}/share
        move ${destroot}${prefix}/lib/cmake \
            ${destroot}${prefix}/share
    }
}

# per user concensus: enable all variants except +ctrlport,
# +performance_counters, +debug, and +universal.

default_variants +docs +grc +qtgui +uhd +wavelet \
    +jack +portaudio +swig +sdl +zeromq

if {${subport} eq "gnuradio" ||
    ${subport} eq "gnuradio-devel"} {
    default_variants +logging +log4cpp
}

# variants follow

variant docs description "Install GNU Radio documentation" {

    depends_lib-append \
        port:doxygen \
        path:bin/dot:graphviz \
        port:xmlto

    depends_build-append \
        port:py${PythonVersionNoDot}-sphinx \
        port:texlive-latex

    configure.args-append \
        -DENABLE_DOXYGEN=ON \
        -DENABLE_SPHINX=ON \
        -DSPHINX_EXECUTABLE=${frameworks_dir}/Python.framework/Versions/${PythonVersionWithDot}/bin/sphinx-build

}

if {![variant_isset docs]} {

    configure.args-append \
        -DENABLE_DOXYGEN=OFF \
        -DENABLE_SPHINX=OFF

}

variant grc requires swig description "Install GNU Radio Companion" {

    configure.args-append \
        -DENABLE_GRC=ON

    # these are checked for at configure, then required
    # for runtime; so use depends_lib to get both.

    if {${subport} eq "gnuradio-next"} {
        depends_lib-append \
            port:py${PythonVersionNoDot}-gobject3 \
            port:py${PythonVersionNoDot}-mako \
            port:py${PythonVersionNoDot}-lxml \
            port:py${PythonVersionNoDot}-yaml \
            port:gtk3 \
            port:cairo \
            port:pango

    } else {
        depends_lib-append \
            port:py${PythonVersionNoDot}-pygtk \
            port:py${PythonVersionNoDot}-lxml

    }
}

if {![variant_isset grc]} {

    configure.args-append \
        -DENABLE_GRC=OFF

}

variant qtgui description "Install GNU Radio with support for Qt GUI" {

    if {${subport} eq "gnuradio" ||
        ${subport} eq "gnuradio-devel"} {

        PortGroup qt4 1.0
        PortGroup active_variants 1.1

        depends_lib-append \
            port:qwtplot3d

        # pyqt4 is checked for at configure, then required for
        # runtime; so use depends_lib to get both.

        depends_lib-append \
            port:py${PythonVersionNoDot}-pyqt4

        # Requires qwt >= 5.2, so not the "qwt" port.  Also requires
        # py*-pyqwt which does not compile with qwt >= 6.0; so -have- to
        # use qwt52 for now.

        depends_lib-append port:qwt52
        require_active_variants qwt52 qt4

        # pyqwt is not checked for at configure, but is
        # required for runtime; so use depends_run.

        depends_run-append \
            port:py${PythonVersionNoDot}-pyqwt

        configure.args-append \
            -DQWT_INCLUDE_DIRS=${prefix}/include/qwt \
            -DQWT_LIBRARIES=${prefix}/lib/libqwt.dylib

    } else {

        # next
        PortGroup qt5 1.0

        # pyqt5 is checked for at configure, then required for
        # runtime; so use depends_lib to get both.  Can use
        # either py*-pyqt5 or py*-pyqt5-devel.

        depends_lib-append \
            path:share/py${PythonVersionNoDot}-sip/PyQt5:py${PythonVersionNoDot}-pyqt5

        # Requires qwt >= 6.0, installed for qt5.
        # just use the new port that does this.

        depends_lib-append port:qwt-qt5

        configure.args-append \
            -DQWT_INCLUDE_DIRS=${qt_dir}/lib/qwt.framework/Versions/6/Headers \
            -DQWT_LIBRARIES=${qt_dir}/lib/qwt.framework/qwt

    }

    configure.args-append \
        -DENABLE_GR_QTGUI=ON \
        -DQT_QMAKE_EXECUTABLE=${qt_qmake_cmd}

}

if {![variant_isset qtgui]} {

    configure.args-append \
        -DENABLE_GR_QTGUI=OFF \
        -DQT_QMAKE_EXECUTABLE=

}

if {${subport} eq "gnuradio-next"} {
    # no wxgui in next!
} else {

    variant wxgui description "Install GNU Radio with support for Wx GUI" {

        depends_lib-append \
            port:${wxWidgets.port}

        # wxpython is checked for at configure, then required
        # for runtime; so use depends_lib to get both.

        depends_lib-append \
            port:py${PythonVersionNoDot}-wxpython-3.0

        configure.args-append \
            -DENABLE_GR_WXGUI=ON

    }

    if {![variant_isset wxgui]} {

        configure.args-append \
            -DENABLE_GR_WXGUI=OFF

    }
}

variant uhd description "Install GNU Radio with support for UHD" {

    # allow for uhd or uhd-devel

    depends_lib-append \
        path:lib/libuhd.dylib:uhd

    configure.args-append \
        -DENABLE_GR_UHD=ON \
        -DUHD_INCLUDE_DIRS=${prefix}/include \
        -DUHD_LIBRARIES=${prefix}/lib/libuhd.dylib

}

if {![variant_isset uhd]} {

    configure.args-append \
        -DENABLE_GR_UHD=OFF \
        -DUHD_INCLUDE_DIRS= \
        -DUHD_LIBRARIES=

}

variant wavelet description "Install GNU Radio Wavelet component" {

    depends_lib-append \
        port:gsl

    configure.args-append \
        -DENABLE_GR_WAVELET=ON

}

if {![variant_isset wavelet]} {

    configure.args-append \
        -DENABLE_GR_WAVELET=OFF

}

variant jack description "Install GNU Radio with support for JACK audio" {

    depends_lib-append \
        port:jack

    configure.args-append \
        -DJACK_INCLUDE_DIR=${prefix}/include \
        -DJACK_LIBRARY=${prefix}/lib/libjack.dylib

}

if {![variant_isset jack]} {

    configure.args-append \
        -DJACK_INCLUDE_DIR= \
        -DJACK_LIBRARY=

}

variant portaudio description "Install GNU Radio with support for portaudio audio" {

    depends_lib-append \
        port:portaudio

    configure.args-append \
        -DPORTAUDIO_INCLUDE_DIRS=${prefix}/include \
        -DPORTAUDIO_LIBRARIES=${prefix}/lib/libportaudio.dylib

}

if {![variant_isset portaudio]} {

    configure.args-append \
        -DPORTAUDIO_INCLUDE_DIRS= \
        -DPORTAUDIO_LIBRARIES=

}

variant swig description "Install GNU Radio with support for SWIG-base Python bindings" {

    depends_build-append \
        port:swig-python

    configure.args-append \
        -DSWIG_EXECUTABLE=${prefix}/bin/swig

}

if {![variant_isset swig]} {

    configure.args-append \
        -DSWIG_EXECUTABLE=

}

variant sdl description "Install GNU Radio with support for SDL-based video" {

    depends_lib-append \
        port:libsdl

    configure.args-append \
        -DENABLE_GR_VIDEO_SDL=ON \
        -DSDLMAIN_LIBRARY=${prefix}/lib/libSDLmain.a \
        -DSDL_INCLUDE_DIR=${prefix}/include/SDL

}

if {![variant_isset sdl]} {

    configure.args-append \
        -DENABLE_GR_VIDEO_SDL=OFF \
        -DSDLMAIN_LIBRARY= \
        -DSDL_INCLUDE_DIR=

}

variant ctrlport description {Enable control port enhancements (EXPERIMENTAL)} {

    # require Thrift and Python Thrift

    depends_lib-append \
        port:py${PythonVersionNoDot}-thrift \
        port:thrift

    # enable configuration arguments for ctrlport and thrift

    configure.args-append \
        -DENABLE_GR_CTRLPORT=ON \
        -DENABLE_CTRLPORT_THRIFT=ON

}

if {![variant_isset ctrlport]} {

    configure.args-append \
        -DENABLE_GR_CTRLPORT=OFF \
        -DENABLE_CTRLPORT_THRIFT=OFF

}

variant performance_counters description {Enable support for performance counters (EXPERIMENTAL)} {

    # these are not checked for at configure, but are
    # required for runtime; so use depends_run.

    depends_run-append \
        port:py${PythonVersionNoDot}-pygraphviz \
        port:py${PythonVersionNoDot}-networkx

    configure.args-append \
        -DENABLE_PERFORMANCE_COUNTERS=ON

}

if {![variant_isset performance_counters]} {

    configure.args-append \
        -DENABLE_PERFORMANCE_COUNTERS=OFF

}

variant zeromq description {Install GNU Radio with support for the ZeroMQ lightweight messaging kernel (EXPERIMENTAL)} {

    # can use cppzmq or cppzmq-devel
    depends_lib-append \
        path:include/zmq.hpp:cppzmq

    # pyzmq is not checked for at configure, but is
    # required for runtime; so use depends_run.

    depends_run-append \
        port:py${PythonVersionNoDot}-zmq

    configure.args-append \
        -DENABLE_GR_ZEROMQ=ON

}

if {![variant_isset zeromq]} {

    configure.args-append \
        -DENABLE_GR_ZEROMQ=OFF

}

if {${subport} eq "gnuradio-next"} {

    # logging using log4cpp is always enabled on GR next (3.8*).

    depends_lib-append  \
        port:log4cpp

    configure.args-append \
        -DLOG4CPP_FOUND=ON \
        -DLOG4CPP_INCLUDE_DIRS=${prefix}/include \
        -DLOG4CPP_LIBRARIES=${prefix}/lib/liblog4cpp.dylib

} else {

    # logging is an option on GR release and devel (3.7*).

    variant logging description {Install GNU Radio with support for logging} {

        configure.args-append \
            -DENABLE_GR_LOG=ON

    }

    if {![variant_isset logging]} {

        configure.args-append \
            -DENABLE_GR_LOG=OFF

    }

    variant log4cpp requires logging description {Install GNU Radio with support for logging via log4cpp} {}

    if {[variant_isset log4cpp]} {

        depends_lib-append  \
            port:log4cpp

        configure.args-append \
            -DLOG4CPP_FOUND=ON \
            -DLOG4CPP_INCLUDE_DIRS=${prefix}/include \
            -DLOG4CPP_LIBRARIES=${prefix}/lib/liblog4cpp.dylib

    } else {

        configure.args-append \
            -DLOG4CPP_FOUND=OFF \
            -DLOG4CPP_INCLUDE_DIRS= \
            -DLOG4CPP_LIBRARIES=

    }
}
