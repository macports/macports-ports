--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2010-2017 Free Software Foundation, Inc.
+# Copyright 2010-2018 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -542,20 +542,6 @@
 add_subdirectory(gr-wxgui)
 add_subdirectory(gr-zeromq)
 
-# Defining GR_CTRLPORT for gnuradio/config.h
-if(ENABLE_GR_CTRLPORT)
-  set(GR_CTRLPORT True)
-  add_definitions(-DGR_CTRLPORT)
-
-  if(CTRLPORT_BACKENDS GREATER 0)
-    set(GR_RPCSERVER_ENABLED True)
-
-    if(THRIFT_FOUND)
-      set(GR_RPCSERVER_THRIFT True)
-    endif(THRIFT_FOUND)
-  endif(CTRLPORT_BACKENDS GREATER 0)
-endif(ENABLE_GR_CTRLPORT)
-
 # Install our Cmake modules into $prefix/lib/cmake/gnuradio
 # See "Package Configuration Files" on page:
 #    http://www.cmake.org/Wiki/CMake/Tutorials/Packaging
--- gnuradio-runtime/CMakeLists.txt.orig
+++ gnuradio-runtime/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2013 Free Software Foundation, Inc.
+# Copyright 2013-2018 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -60,19 +60,6 @@
 )
 GR_SET_GLOBAL(GNURADIO_RUNTIME_PYTHONPATH ${GNURADIO_RUNTIME_PYTHONPATH})
 
-########################################################################
-# Register controlport component
-########################################################################
-
-FIND_PACKAGE(SWIG)
-
-GR_REGISTER_COMPONENT("gr-ctrlport" ENABLE_GR_CTRLPORT
-  Boost_FOUND
-  SWIG_FOUND
-  SWIG_VERSION_CHECK
-  ENABLE_GNURADIO_RUNTIME
-)
-
 ########################################################################
 # Begin conditional configuration
 ########################################################################
@@ -116,6 +103,7 @@
     DESCRIPTION  "SWIG development .i files"
     DEPENDS      "runtime_swig;runtime_python;runtime_devel"
 )
+
 configure_file(
     ${CMAKE_CURRENT_SOURCE_DIR}/gnuradio-runtime.conf.in
     ${CMAKE_CURRENT_BINARY_DIR}/gnuradio-runtime.conf
@@ -146,8 +134,8 @@
 add_subdirectory(lib)
 add_subdirectory(apps)
 if(ENABLE_PYTHON)
-     add_subdirectory(swig)
-     add_subdirectory(python)
+    add_subdirectory(swig)
+    add_subdirectory(python)
     add_subdirectory(examples)
 endif(ENABLE_PYTHON)
 
--- gnuradio-runtime/lib/CMakeLists.txt.orig
+++ gnuradio-runtime/lib/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2013 Free Software Foundation, Inc.
+# Copyright 2013-2018 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -46,20 +46,15 @@
 ########################################################################
 # Setup the include and linker paths
 ########################################################################
-include_directories(${GNURADIO_RUNTIME_INCLUDE_DIRS}
-                    ${CMAKE_CURRENT_SOURCE_DIR}
-		    ${CMAKE_CURRENT_BINARY_DIR}/../include/
-		    ${VOLK_INCLUDE_DIRS}
-                    ${Boost_INCLUDE_DIRS}
-                    ${MPLIB_INCLUDE_DIRS}
+include_directories(
+    ${GNURADIO_RUNTIME_INCLUDE_DIRS}
+    ${CMAKE_CURRENT_SOURCE_DIR}
+    ${CMAKE_CURRENT_BINARY_DIR}/../include/
+    ${VOLK_INCLUDE_DIRS}
+    ${Boost_INCLUDE_DIRS}
+    ${MPLIB_INCLUDE_DIRS}
 )
 
-if(ENABLE_CTRLPORT_THRIFT)
-    list(APPEND include_directories
-        ${THRIFT_INCLUDE_DIRS}
-    )
-endif(ENABLE_CTRLPORT_THRIFT)
-
 ########################################################################
 # Include subdirs rather to populate to the sources lists.
 ########################################################################
@@ -122,7 +117,6 @@
   vmcircbuf_mmap_tmpfile.cc
   vmcircbuf_prefs.cc
   vmcircbuf_sysv_shm.cc
-  ${gnuradio_ctrlport_sources}
 )
 
 # PowerPC workaround for posix_memalign
@@ -211,25 +205,6 @@
 # STATIC LIB BUILD
 #######################################################
 if(ENABLE_STATIC_LIBS)
-  # Remove controlport-specific source files from staticlibs build if
-  # ICE is the backend since it does not build statically.
-  if(ENABLE_GR_CTRLPORT)
-    if(ICE_FOUND)
-      list(REMOVE_ITEM gnuradio_runtime_sources
-        ${gnuradio_ctrlport_sources}
-        )
-
-      # Remove GR_CTRLPORT set this target's definitions.
-      # Makes sure we don't try to use ControlPort stuff in source files
-      GET_DIRECTORY_PROPERTY(STATIC_DEFS COMPILE_DEFINITIONS)
-      list(REMOVE_ITEM STATIC_DEFS "GR_CTRLPORT")
-      SET_PROPERTY(DIRECTORY PROPERTY COMPILE_DEFINITIONS "${STATIC_DEFS}")
-
-      # readd it to the target since we removed it from the directory-wide list.
-      SET_PROPERTY(TARGET gnuradio-runtime APPEND PROPERTY COMPILE_DEFINITIONS "GR_CTRLPORT")
-    endif(ICE_FOUND)
-  endif(ENABLE_GR_CTRLPORT)
-
   add_library(gnuradio-runtime_static STATIC ${gnuradio_runtime_sources})
 
   if(NOT WIN32)
--- gnuradio-runtime/lib/controlport/CMakeLists.txt.orig
+++ gnuradio-runtime/lib/controlport/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2013 Free Software Foundation, Inc.
+# Copyright 2013-2018 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -17,89 +17,156 @@
 # the Free Software Foundation, Inc., 51 Franklin Street,
 # Boston, MA 02110-1301, USA.
 
+# NOTE: this directory was added via "GR_INCLUDE_SUBDIRECTORY", not
+# "add_subdirectory", and hence anything performed here is as if it
+# were executed in the calling directory.
+
+########################################################################
+# Register controlport component
+########################################################################
+
+FIND_PACKAGE(SWIG)
+
+GR_REGISTER_COMPONENT("gr-ctrlport" ENABLE_GR_CTRLPORT
+    Boost_FOUND
+    SWIG_FOUND
+    SWIG_VERSION_CHECK
+    ENABLE_GNURADIO_RUNTIME
+)
+
+########################################################################
+# Handle controlport component options
+########################################################################
+
 if(ENABLE_GR_CTRLPORT)
 
-# Keep track of the number of backends ControlPort supports
-SET(CTRLPORT_BACKENDS 0)
+# handle non-backend specifics
 
 # Add definition so we can compile in ControlPort to the blocks.
 add_definitions(-DGR_CTRLPORT)
 
-include_directories(${CMAKE_CURRENT_SOURCE_DIR})
+include_directories(
+    ${CMAKE_CURRENT_SOURCE_DIR}
+    ${CMAKE_CURRENT_BINARY_DIR}
+)
 
 list(APPEND gnuradio_ctrlport_sources
-  ${CMAKE_CURRENT_SOURCE_DIR}/rpcmanager.cc
-  ${CMAKE_CURRENT_SOURCE_DIR}/rpcserver_aggregator.cc
-  ${CMAKE_CURRENT_SOURCE_DIR}/rpcserver_booter_aggregator.cc
-  ${CMAKE_CURRENT_SOURCE_DIR}/rpcserver_selector.cc
+    ${CMAKE_CURRENT_SOURCE_DIR}/rpcmanager.cc
+    ${CMAKE_CURRENT_SOURCE_DIR}/rpcserver_aggregator.cc
+    ${CMAKE_CURRENT_SOURCE_DIR}/rpcserver_booter_aggregator.cc
+    ${CMAKE_CURRENT_SOURCE_DIR}/rpcserver_selector.cc
 )
 
+# Keep track of the number of backends ControlPort supports
+SET(CTRLPORT_BACKENDS 0)
 
+# add CTRLPORT backend option Thrift
 OPTION(ENABLE_CTRLPORT_THRIFT "Enable ControlPort Thrift support" ON)
 
 if(ENABLE_CTRLPORT_THRIFT)
 
-# Look if Thrift is installed and use it as a ControlPort backend.
+# is Thrift installed?
 FIND_PACKAGE(Thrift)
 
 if(THRIFT_FOUND)
 
-include_directories(${THRIFT_INCLUDE_DIRS})
-MATH(EXPR CTRLPORT_BACKENDS "${CTRLPORT_BACKENDS} + 1")
-
-# Indicate thrift as an installed backend in the cmake summary.
-message(STATUS "Found and enabling Thrift backend to ControlPort")
-GR_APPEND_SUBCOMPONENT("thrift")
-
-# Run Thrift To compile C++ and Python files
-message(STATUS "Running thrift to build C++ bindings")
-file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/thrift/)
-
-list(APPEND gnuradio_thrift_generated_sources
-  ${CMAKE_CURRENT_BINARY_DIR}/thrift/gnuradio_types.cpp
-  ${CMAKE_CURRENT_BINARY_DIR}/thrift/gnuradio_constants.cpp
-  ${CMAKE_CURRENT_BINARY_DIR}/thrift/ControlPort.cpp
-  )
-add_custom_command(
-  DEPENDS ${CMAKE_SOURCE_DIR}/gnuradio-runtime/lib/controlport/thrift/gnuradio.thrift
-  OUTPUT ${gnuradio_thrift_generated_sources}
-  COMMAND ${THRIFT_BIN} --gen cpp -out ${CMAKE_CURRENT_BINARY_DIR}/thrift/ ${CMAKE_CURRENT_SOURCE_DIR}/thrift/gnuradio.thrift
-  )
-list(APPEND gnuradio_ctrlport_sources
-  ${CMAKE_CURRENT_SOURCE_DIR}/thrift/rpcserver_thrift.cc
-  ${CMAKE_CURRENT_SOURCE_DIR}/thrift/rpcpmtconverters_thrift.cc
-  ${CMAKE_CURRENT_SOURCE_DIR}/thrift/rpcserver_booter_thrift.cc
-  ${CMAKE_CURRENT_SOURCE_DIR}/thrift/thrift_application_base.cc
-  # add files built by compiling gnuradio.thrift
-  ${gnuradio_thrift_generated_sources}
-  )
-
-# Add  required libraries here
-list(APPEND gnuradio_runtime_libs
-  ${THRIFT_LIBRARIES}
-)
-
-# Add install rule to move example Thrift configuration file into
-# $prefix/etc/gnuradio
-install(
-  FILES ${CMAKE_CURRENT_SOURCE_DIR}/thrift/thrift.conf.example
-  DESTINATION ${SYSCONFDIR}/${CMAKE_PROJECT_NAME}
-  COMPONENT "runtime_runtime"
-)
+    # yes: thrift is installed; use it as a backend
+    MATH(EXPR CTRLPORT_BACKENDS "${CTRLPORT_BACKENDS} + 1")
+
+    # Indicate thrift as an installed backend in the cmake summary.
+    message(STATUS "Found and enabling Thrift backend to ControlPort")
+
+    # Run Thrift To compile C++ and Python files
+    message(STATUS "Running thrift to build C++ bindings")
+    file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/thrift/)
+
+    list(APPEND gnuradio_thrift_generated_sources
+        ${CMAKE_CURRENT_BINARY_DIR}/thrift/gnuradio_types.cpp
+        ${CMAKE_CURRENT_BINARY_DIR}/thrift/gnuradio_constants.cpp
+        ${CMAKE_CURRENT_BINARY_DIR}/thrift/ControlPort.cpp
+    )
+
+    add_custom_command(
+        DEPENDS ${CMAKE_SOURCE_DIR}/gnuradio-runtime/lib/controlport/thrift/gnuradio.thrift
+        OUTPUT ${gnuradio_thrift_generated_sources}
+        COMMAND ${THRIFT_BIN} --gen cpp -out ${CMAKE_CURRENT_BINARY_DIR}/thrift/ ${CMAKE_CURRENT_SOURCE_DIR}/thrift/gnuradio.thrift
+    )
+
+    list(APPEND gnuradio_ctrlport_sources
+        ${CMAKE_CURRENT_SOURCE_DIR}/thrift/rpcserver_thrift.cc
+        ${CMAKE_CURRENT_SOURCE_DIR}/thrift/rpcpmtconverters_thrift.cc
+        ${CMAKE_CURRENT_SOURCE_DIR}/thrift/rpcserver_booter_thrift.cc
+        ${CMAKE_CURRENT_SOURCE_DIR}/thrift/thrift_application_base.cc
+        # add files built by compiling gnuradio.thrift
+        ${gnuradio_thrift_generated_sources}
+    )
+
+    # Add required Thrift libraries
+    list(APPEND gnuradio_runtime_libs
+        ${THRIFT_LIBRARIES}
+    )
+
+    # Add required Thrift include paths
+    include_directories(${THRIFT_INCLUDE_DIRS}/thrift)
+
+    # Add install rule to move example Thrift configuration file into
+    # $prefix/etc/gnuradio
+    install(
+        FILES ${CMAKE_CURRENT_SOURCE_DIR}/thrift/thrift.conf.example
+        DESTINATION ${SYSCONFDIR}/${CMAKE_PROJECT_NAME}
+        COMPONENT "runtime_runtime"
+    )
+
+else(THRIFT_FOUND)
+
+    # no: thrift was not found
+    # disable using Thrift for ctrlport locally
+    set(ENABLE_CTRLPORT_THRIFT NO)
 
 endif(THRIFT_FOUND)
 endif(ENABLE_CTRLPORT_THRIFT)
 
+# add other backends here
+
+endif(ENABLE_GR_CTRLPORT)
+
 ########################################################################
-# Add controlport stuff to gnuradio-runtime
+# Handle controlport component post-options
 ########################################################################
 
-include_directories(${CMAKE_CURRENT_BINARY_DIR})
+# handle subcomponent printout
+if(ENABLE_CTRLPORT_THRIFT)
+    GR_APPEND_SUBCOMPONENT("thrift")
+endif(ENABLE_CTRLPORT_THRIFT)
+
+# did we find a ctrlport backend?
+if(CTRLPORT_BACKENDS GREATER 0)
+    set(HAVE_CTRLPORT_BACKEND TRUE)
+else(CTRLPORT_BACKENDS GREATER 0)
+    set(HAVE_CTRLPORT_BACKEND FALSE)
+endif(CTRLPORT_BACKENDS GREATER 0)
 
-# Save the number of backends for testing against later
+# Save variables to a global scope for testing against later, and for
+# defines for gnuradio/config.h and other C++ code
 set(
-  CTRLPORT_BACKENDS ${CTRLPORT_BACKENDS}
-  CACHE INTERNAL "Number of ControlPort backends available"
+    HAVE_CTRLPORT_BACKEND ${HAVE_CTRLPORT_BACKEND}
+    CACHE INTERNAL "There at least 1 ControlPort backend"
 )
 
-endif(ENABLE_GR_CTRLPORT)
+set(
+    GR_CTRLPORT ${ENABLE_GR_CTRLPORT}
+    CACHE INTERNAL "Using ControlPort"
+)
+
+set(
+    GR_RPCSERVER_ENABLED ${HAVE_CTRLPORT_BACKEND}
+    CACHE INTERNAL "RPC Server Enabled"
+)
+
+set(
+    GR_RPCSERVER_THRIFT ${ENABLE_CTRLPORT_THRIFT}
+    CACHE INTERNAL "Thrift RPC Server Enabled"
+)
+
+# update runtime sources list, if any
+list(APPEND gnuradio_runtime_sources ${gnuradio_ctrlport_sources})
--- gr-blocks/python/blocks/CMakeLists.txt.orig
+++ gr-blocks/python/blocks/CMakeLists.txt
@@ -1,4 +1,4 @@
-# Copyright 2012 Free Software Foundation, Inc.
+# Copyright 2012-2018 Free Software Foundation, Inc.
 #
 # This file is part of GNU Radio
 #
@@ -45,14 +45,14 @@
   include(GrTest)
   file(GLOB py_qa_test_files "qa_*.py")
 
-  # Force out the controlport QA tests if we have no backends to use.
-  if(CTRLPORT_BACKENDS EQUAL 0)
+  # Remove controlport QA tests if we have no backends to use.
+  if(NOT HAVE_CTRLPORT_BACKEND)
     list(REMOVE_ITEM py_qa_test_files
       ${CMAKE_CURRENT_SOURCE_DIR}/qa_cpp_py_binding.py
       ${CMAKE_CURRENT_SOURCE_DIR}/qa_cpp_py_binding_set.py
       ${CMAKE_CURRENT_SOURCE_DIR}/qa_ctrlport_probes.py
       )
-  endif(CTRLPORT_BACKENDS EQUAL 0)
+  endif(NOT HAVE_CTRLPORT_BACKEND)
 
   foreach(py_qa_test_file ${py_qa_test_files})
     get_filename_component(py_qa_test_name ${py_qa_test_file} NAME_WE)
