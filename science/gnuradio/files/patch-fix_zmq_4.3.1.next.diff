--- gr-zeromq/lib/base_impl.cc.orig
+++ gr-zeromq/lib/base_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -105,7 +105,11 @@
       }
 
       /* Send */
+#if USE_NEW_CPPZMQ_SEND_RECV
+      d_socket->send(msg, zmq::send_flags::none);
+#else
       d_socket->send(msg);
+#endif
 
       /* Report back */
       return in_nitems;
@@ -186,7 +190,11 @@
       d_consumed_bytes = 0;
 
       /* Get the message */
+#if USE_NEW_CPPZMQ_SEND_RECV
+      d_socket->recv(d_msg);
+#else
       d_socket->recv(&d_msg);
+#endif
 
       /* Parse header from the first (or only) message of a multi-part message */
       if (d_pass_tags && !more)
--- gr-zeromq/lib/base_impl.h.orig
+++ gr-zeromq/lib/base_impl.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2016 Free Software Foundation, Inc.
+ * Copyright 2016,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -23,9 +23,8 @@
 #ifndef INCLUDED_ZEROMQ_BASE_IMPL_H
 #define INCLUDED_ZEROMQ_BASE_IMPL_H
 
-#include <zmq.hpp>
-
 #include <gnuradio/sync_block.h>
+#include "zmq_common_impl.h"
 
 namespace gr {
   namespace zeromq {
--- gr-zeromq/lib/pull_msg_source_impl.cc.orig
+++ gr-zeromq/lib/pull_msg_source_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -97,7 +97,11 @@
 
           // Receive data
           zmq::message_t msg;
+#if USE_NEW_CPPZMQ_SEND_RECV
+          d_socket->recv(msg);
+#else
           d_socket->recv(&msg);
+#endif
 
           std::string buf(static_cast<char*>(msg.data()), msg.size());
           std::stringbuf sb(buf);
--- gr-zeromq/lib/pull_msg_source_impl.h.orig
+++ gr-zeromq/lib/pull_msg_source_impl.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -24,7 +24,7 @@
 #define INCLUDED_ZEROMQ_PULL_MSG_SOURCE_IMPL_H
 
 #include <gnuradio/zeromq/pull_msg_source.h>
-#include <zmq.hpp>
+#include "zmq_common_impl.h"
 
 namespace gr {
   namespace zeromq {
--- gr-zeromq/lib/rep_msg_sink_impl.cc.orig
+++ gr-zeromq/lib/rep_msg_sink_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -99,7 +99,11 @@
 
             // receive data request
             zmq::message_t request;
+#if USE_NEW_CPPZMQ_SEND_RECV
+            d_socket->recv(request);
+#else
             d_socket->recv(&request);
+#endif
 
             int req_output_items = *(static_cast<int*>(request.data()));
             if(req_output_items != 1)
--- gr-zeromq/lib/rep_msg_sink_impl.h.orig
+++ gr-zeromq/lib/rep_msg_sink_impl.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -24,7 +24,7 @@
 #define INCLUDED_ZEROMQ_REP_MSG_SINK_IMPL_H
 
 #include <gnuradio/zeromq/rep_msg_sink.h>
-#include <zmq.hpp>
+#include "zmq_common_impl.h"
 
 namespace gr {
   namespace zeromq {
--- gr-zeromq/lib/rep_sink_impl.cc.orig
+++ gr-zeromq/lib/rep_sink_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -71,7 +71,11 @@
 
         /* Get and parse the request */
         zmq::message_t request;
+#if USE_NEW_CPPZMQ_SEND_RECV
+        d_socket->recv(request);
+#else
         d_socket->recv(&request);
+#endif
 
         int nitems_send = noutput_items - done;
         if (request.size() >= sizeof(uint32_t))
--- gr-zeromq/lib/rep_sink_impl.h.orig
+++ gr-zeromq/lib/rep_sink_impl.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -24,8 +24,6 @@
 #define INCLUDED_ZEROMQ_REP_SINK_IMPL_H
 
 #include <gnuradio/zeromq/rep_sink.h>
-#include <zmq.hpp>
-
 #include "base_impl.h"
 
 namespace gr {
--- gr-zeromq/lib/req_msg_source_impl.cc.orig
+++ gr-zeromq/lib/req_msg_source_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -99,7 +99,11 @@
           int nmsg = 1;
           zmq::message_t request(sizeof(int));
           memcpy((void *) request.data (), &nmsg, sizeof(int));
+#if USE_NEW_CPPZMQ_SEND_RECV
+          d_socket->send(request, zmq::send_flags::none);
+#else
           d_socket->send(request);
+#endif
         }
 
         zmq::pollitem_t items[] = { { static_cast<void *>(*d_socket), 0, ZMQ_POLLIN, 0 } };
@@ -109,7 +113,11 @@
         if (items[0].revents & ZMQ_POLLIN) {
           // Receive data
           zmq::message_t msg;
+#if USE_NEW_CPPZMQ_SEND_RECV
+          d_socket->recv(msg);
+#else
           d_socket->recv(&msg);
+#endif
 
           std::string buf(static_cast<char*>(msg.data()), msg.size());
           std::stringbuf sb(buf);
--- gr-zeromq/lib/req_msg_source_impl.h.orig
+++ gr-zeromq/lib/req_msg_source_impl.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -24,7 +24,7 @@
 #define INCLUDED_ZEROMQ_REQ_MSG_SOURCE_IMPL_H
 
 #include <gnuradio/zeromq/req_msg_source.h>
-#include <zmq.hpp>
+#include "zmq_common_impl.h"
 
 namespace gr {
   namespace zeromq {
--- gr-zeromq/lib/sub_msg_source_impl.cc.orig
+++ gr-zeromq/lib/sub_msg_source_impl.cc
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -96,8 +96,11 @@
 
           // Receive data
           zmq::message_t msg;
+#if USE_NEW_CPPZMQ_SEND_RECV
+          d_socket->recv(msg);
+#else
           d_socket->recv(&msg);
-
+#endif
           std::string buf(static_cast<char*>(msg.data()), msg.size());
           std::stringbuf sb(buf);
           pmt::pmt_t m = pmt::deserialize(sb);
--- gr-zeromq/lib/sub_msg_source_impl.h.orig
+++ gr-zeromq/lib/sub_msg_source_impl.h
@@ -1,6 +1,6 @@
 /* -*- c++ -*- */
 /*
- * Copyright 2013,2014 Free Software Foundation, Inc.
+ * Copyright 2013,2014,2019 Free Software Foundation, Inc.
  *
  * This file is part of GNU Radio.
  *
@@ -24,7 +24,7 @@
 #define INCLUDED_ZEROMQ_SUB_MSG_SOURCE_IMPL_H
 
 #include <gnuradio/zeromq/sub_msg_source.h>
-#include "zmq.hpp"
+#include "zmq_common_impl.h"
 
 namespace gr {
   namespace zeromq {
--- /dev/null
+++ gr-zeromq/lib/zmq_common_impl.h
@@ -0,0 +1,34 @@
+/* -*- c++ -*- */
+/*
+ * Copyright 2019 Free Software Foundation, Inc.
+ *
+ * This file is part of GNU Radio.
+ *
+ * This is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3, or (at your option)
+ * any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this software; see the file COPYING.  If not, write to
+ * the Free Software Foundation, Inc., 51 Franklin Street,
+ * Boston, MA 02110-1301, USA.
+ */
+
+#ifndef INCLUDED_ZEROMQ_ZMQ_COMMON_IMPL_H
+#define INCLUDED_ZEROMQ_ZMQ_COMMON_IMPL_H
+
+#include <zmq.hpp>
+
+#if defined (CPPZMQ_VERSION) && defined (ZMQ_MAKE_VERSION) && CPPZMQ_VERSION >= ZMQ_MAKE_VERSION(4, 3, 1)
+#define USE_NEW_CPPZMQ_SEND_RECV 1
+#else
+#define USE_NEW_CPPZMQ_SEND_RECV 0
+#endif
+
+#endif /* INCLUDED_ZEROMQ_ZMQ_COMMON_IMPL_H */
