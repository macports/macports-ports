Do not attempt to use MacPorts OpenMP.
Find MacPorts header and library files.
Do not install libraries a second time.
--- CMakeLists.txt.orig	2019-02-06 05:24:33.000000000 -0700
+++ CMakeLists.txt	2019-02-15 05:23:25.000000000 -0700
@@ -294,14 +294,6 @@
     set_config_option(HAVE_OPENMP "OpenMP")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
-  elseif(APPLE AND EXISTS "/opt/local/lib/libomp")
-    # just for testing the official Apple compiler with macports' libomp
-    set_config_option(HAVE_OPENMP "OpenMP[MacPorts]")
-    set(CMAKE_C_FLAGS
-        "${CMAKE_C_FLAGS} -Xpreprocessor -fopenmp -I/opt/local/include/libomp")
-    set(CMAKE_CXX_FLAGS
-        "${CMAKE_CXX_FLAGS} -Xpreprocessor -fopenmp -I/opt/local/include/libomp")
-    list(APPEND EXTERNAL_LIBRARIES "-L/opt/local/lib/libomp -lomp")
   endif()
 endif()
 
@@ -745,7 +737,7 @@
 
 if(ENABLE_ALGLIB)
   find_library(ALGLIB_LIB alglib PATH_SUFFIXES lib)
-  find_path(ALGLIB_INC "stdafx.h" PATH_SUFFIXES include)
+  find_path(ALGLIB_INC "stdafx.h" PATH_SUFFIXES include alglib)
   if(ENABLE_SYSTEM_CONTRIB AND ALGLIB_LIB AND ALGLIB_INC)
     list(APPEND EXTERNAL_LIBRARIES ${ALGLIB_LIB})
     list(APPEND EXTERNAL_INCLUDES ${ALGLIB_INC})
@@ -894,7 +886,7 @@
 
   if(ENABLE_VOROPP)
     find_library(VOROPP_LIB voro++ PATH_SUFFIXES lib)
-    find_path(VOROPP_INC "voro++.hh" PATH_SUFFIXES include)
+    find_path(VOROPP_INC "voro++.hh" PATH_SUFFIXES include voro++)
     if(ENABLE_SYSTEM_CONTRIB AND VOROPP_LIB AND VOROPP_INC)
       message(STATUS "Using system version of voro++")
       list(APPEND EXTERNAL_LIBRARIES ${VOROPP_LIB})
@@ -929,8 +921,8 @@
   endif()
 
   if(ENABLE_MMG3D)
-    find_library(MMG3D_LIB mmg3d PATH_SUFFIXES lib)
-    find_path(MMG3D_INC "libmmg3d.h" PATH_SUFFIXES src include)
+    find_library(MMG3D_LIB mmg3d4 PATH_SUFFIXES lib)
+    find_path(MMG3D_INC "libmmg3d4.h" PATH_SUFFIXES src include)
     if(ENABLE_SYSTEM_CONTRIB AND MMG3D_LIB AND MMG3D_INC)
       list(APPEND EXTERNAL_LIBRARIES ${MMG3D_LIB})
       list(APPEND EXTERNAL_INCLUDES ${MMG3D_INC})
@@ -1835,8 +1827,6 @@
 endif()
 if(ENABLE_BUILD_SHARED OR ENABLE_BUILD_DYNAMIC)
   install(TARGETS shared DESTINATION ${GMSH_LIB} OPTIONAL)
-  # FIXME once we cleanup the installation of the python module
-  install(TARGETS shared DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/api OPTIONAL)
 endif()
 
 if(ENABLE_ONELAB)
--- Mesh/meshGRegionMMG3D.cpp.orig	2019-03-14 02:43:47.000000000 -0700
+++ Mesh/meshGRegionMMG3D.cpp	2019-08-11 10:51:54.000000000 -0700
@@ -19,7 +19,7 @@
 #include "Context.h"
 
 extern "C" {
-#include <libmmg3d.h>
+#include <libmmg3d4.h>
 #define M_UNUSED (1 << 0)
 }
 
