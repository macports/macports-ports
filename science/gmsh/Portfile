# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               cmake          1.1
PortGroup               mpi            1.0
PortGroup               linear_algebra 1.0
PortGroup               muniversal     1.0

name                    gmsh
version                 4.9.3
revision                1
categories              science
platforms               darwin
license                 GPL-2+
maintainers             {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
description             Finite element mesh generator in 1D, 2D and 3D
long_description        Gmsh is an automatic 3D finite element mesh generator (primarily   \
                        Delaunay) with build-in CAD and post-processing facilities. Its     \
                        design goal is to provide a simple meshing tool for academic test   \
                        cases with parametric input and up to date visualization            \
                        capabilities.

homepage                https://gmsh.info
master_sites            https://gmsh.info/src/
distname                gmsh-${version}-source
extract.suffix          .tgz

checksums               rmd160  1ccc85a5c496824dd45506168a931eb29cb11e6c \
                        sha256  9e06751e9fef59ba5ba8e6feded164d725d7e9bc63e1cb327b083cbc7a993adb \
                        size    13038257

compiler.cxx_standard   2011
compiler.c_standard     1999

mpi.setup
veclibfort              no

depends_lib-append      port:alglib \
                        path:lib/libfltk.dylib:fltk \
                        port:gmp \
                        port:mathex \
                        port:libmed \
                        port:mmg3d4 \
                        port:hdf5 \
                        port:libpng \
                        path:include/turbojpeg.h:libjpeg-turbo \
                        port:gmm \
                        path:lib/pkgconfig/cairo.pc:cairo \
                        port:libANN \
                        port:cgnslib \
                        port:metis \
                        port:opencascade \
                        port:voroxx \
                        port:szip \
                        port:zlib

# see https://gmsh.info/doc/texinfo/gmsh.html#Compiling-the-source-code

# install static library
# install shared library
# use shared library for Gmsh executable
# use MacPorts libraries
configure.args-append   -DENABLE_BUILD_LIB=ON \
                        -DENABLE_BUILD_SHARED=ON \
                        -DENABLE_BUILD_DYNAMIC=ON \
                        -DENABLE_SYSTEM_CONTRIB=ON

# ACIS is proprietary
# avoid circular dependencies
configure.args-append   -DENABLE_ACIS=OFF \
                        -DENABLE_GETDP=OFF

configure.env-append    CASROOT=${prefix}

pre-configure {
    configure.args-append \
                        -DBLAS_LAPACK_LIBRARIES="-L${prefix}/lib ${linalglib}"
}

if {[mpi_variant_isset]} {
    configure.args-append \
                        -DENABLE_MPI=ON
}

variant docs description {build documentation} {
    build.target-append pdf
    depends_build-append \
                        port:texinfo \
                        port:texlive-latex
}

variant getdp description {Enable GetDP solver} {
    depends_lib-append  port:getdp
    configure.args-delete \
                        -DENABLE_GETDP=OFF
}

variant petsc description {Enable PETSc linear solvers and SLEPc eigensolvers} {
    depends_lib-append  port:petsc \
                        port:slepc

    configure.args-append \
                        -DENABLE_PETSC=ON \
                        -DENABLE_SLEPC=ON \
                        -DPETSC_DIR=${prefix}/lib/petsc \
                        -DSLEPC_DIR=${prefix}/lib/slepc
}

variant oce description {use Community Edition version of Open CASCADE} {
    depends_lib-replace port:opencascade port:oce
}

variant openmp description {enable support for OpenMP} {
    configure.args-append \
                        -DENABLE_OPENMP=ON
}
if {[variant_isset openmp]} {
    compiler.openmp_version 2.5
}

variant python37 conflicts python38 python39 python310 description {Use Python 3.7} {}
variant python38 conflicts python37 python39 python310 description {Use Python 3.8} {}
variant python39 conflicts python37 python38 python310 description {Use Python 3.9} {}
variant python310 conflicts python37 python38 python39 description {Use Python 3.10} {}

foreach pv {310 39 38 37} {
    if {[variant_isset python${pv}]} {
        set python.version ${pv}
        set python.branch [string index ${python.version} 0].[string range ${python.version} 1 end]
        break
    }
}

if {[variant_isset python37] || [variant_isset python38] \
    || [variant_isset python39] || [variant_isset python310]} {
    set python.prefix   ${frameworks_dir}/Python.framework/Versions/${python.branch}/

    depends_lib-append  port:py${python.version}-wheel

    patchfiles-append   patch-utils-pypi-setup-wheel.py.in.diff

    post-destroot {
        xinstall -d ${destroot}${python.prefix}/lib/python${python.branch}/site-packages/${name}

        reinplace "s|DESTROOT|${destroot}|" ${workpath}/build/setup-wheel.py
        reinplace "s|WORKSRCPATH|${worksrcpath}|" ${workpath}/build/setup-wheel.py

        system -W ${workpath}/build/ "${prefix}/bin/python${python.branch} setup-wheel.py bdist_wheel"

        move ${destroot}${prefix}/lib/gmsh.py ${destroot}${python.prefix}/lib/python${python.branch}/site-packages/
        move ${destroot}${prefix}/lib/gmsh.egg-info/ ${destroot}${python.prefix}/lib/python${python.branch}/site-packages/
    }
}
