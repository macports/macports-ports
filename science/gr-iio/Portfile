# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

name                gr-iio
categories          science comms
maintainers         {michaelld @michaelld} openmaintainer
description         Provides augmented functionality for GNU Radio: IIO device source
long_description    ${description}
license             GPL-3
platforms           darwin

# use C++11
compiler.cxx_standard 2011

if {${subport} eq ${name}} {

    github.setup    analogdevicesinc gr-iio 456589948229cc7bbed4c5724811ca24116711fe
    version         20200403-[string range ${github.version} 0 7]
    checksums       rmd160  8c7309e30b378afc99fe3d3b8d03c6ee3fba2dd4 \
                    sha256  4a6c307f194655ec4fe8d1247fc9b4a6a0203f2a4686c9c948ff1877c50fa8d5 \
                    size    56107
    revision        1

    github.livecheck.branch \
        upgrade-3.8

    conflicts       gr37-iio

    depends_lib-append \
        path:lib/libgnuradio-runtime.dylib:gnuradio

    set python_versions { 3.6 3.7 3.8 }
    set default_python_variant +python37

}

subport gr37-iio {

    name            gr37-iio

    github.setup    analogdevicesinc gr-iio 9088ac791955c522ce1143fe10b85ded56ead0ee
    version         20190725-[string range ${github.version} 0 7]
    checksums       rmd160 15848e397eff6bd8782cf3927795cd51cf730794 \
                    sha256 0bcb973ba406bbf5149765b974e36137ffc515457f2e86e8cade389a334fc5d7 \
                    size   68707
    revision        1

    # patch CMake modules dir
    patchfiles-append \
        patch-fix_cmake_dirs.diff

    conflicts       gr-iio

    depends_lib-append \
        port:gnuradio37

    set python_versions { 2.7 }
    set default_python_variant +python27

}

# Define the available variants
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    set variant_line {variant python${py_ver_no_dot} description "Build with python ${py_ver} support"}
    foreach py_over ${python_versions} {
        if { ${py_ver} == ${py_over} } { continue }
        set py_over_no_dot [join [split ${py_over} "."] ""]
        append variant_line " conflicts python${py_over_no_dot}"
    }
    append variant_line { { } }
    eval $variant_line
    if {[variant_isset python${py_ver_no_dot}]} {
        if {${default_python_variant} != "+python${py_ver_no_dot}"} {
            set default_python_variant ""
        }
    }
}

# set default python variant if not selected
if {${default_python_variant} != ""} {
    default_variants-append "${default_python_variant}"
}

# If a python variant is enabled, activate it
set active_python_version ""
set active_python_version_no_dot ""
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    if {[variant_isset python${py_ver_no_dot}]} {
        set active_python_version        ${py_ver}
        set active_python_version_no_dot ${py_ver_no_dot}
    }
}

depends_build-append \
    port:bison \
    port:flex \
    port:pkgconfig \
    port:doxygen \
    port:cppunit \
    port:swig-python

depends_lib-append \
    port:boost \
    port:libad9361-iio \
    path:lib/libiio.dylib:libiio \
    path:lib/libvolk.dylib:volk \
    port:python${active_python_version_no_dot}

# specify the Python version to use
set python_framework_dir ${frameworks_dir}/Python.framework/Versions/${active_python_version}
configure.args-append \
    -DPYTHON_EXECUTABLE=${python_framework_dir}/bin/python${active_python_version} \
    -DPYTHON_INCLUDE_DIR=${python_framework_dir}/Headers \
    -DPYTHON_LIBRARY=${python_framework_dir}/Python \
    -DGR_PYTHON_DIR=${python_framework_dir}/lib/python${active_python_version}/site-packages

configure.args-append \
    -DDOXYGEN_DOT_EXECUTABLE=${prefix}/bin/dot \
    -DDOXYGEN_EXECUTABLE=${prefix}/bin/doxygen \
    -DCMAKE_MODULES_DIR=share/cmake
