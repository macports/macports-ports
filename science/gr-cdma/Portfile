# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

name                gr-cdma
categories          science comms
maintainers         {michaelld @michaelld} openmaintainer
description         Provides augmented functionality for GNU Radio: a code-division multiple (user) access (CDMA) physical layer.
long_description    ${description}
license             GPL-3
platforms           darwin

# use C++11
compiler.cxx_standard 2011

if {${subport} eq ${name}} {
    version         20161220
    revision        5
    replaced_by     gr37-cdma
    PortGroup       obsolete 1.0
    set python_versions { 2.7 }
    set default_python_variant +python27
}

subport gr37-cdma {

    name            gr37-cdma

    github.setup    anastas gr-cdma 91067d780e907a1a8d9df53077460aac2ff09f15
    version         20161220
    checksums       rmd160 99c26aa048e690a4b11e10423baba5c9921db5c7 \
                    sha256 18ba151aa085aeb9cdc8fc5329f51d1d4af012c1bc58a1a303fe0911809752a9
    revision        0

    conflicts \
        gr-cdma

    set python_versions { 2.7 }
    set default_python_variant +python27

    depends_lib-append \
        port:gnuradio37

    patchfiles-append patch-installs.diff
    patch.pre_args -p1
    # 2nd part of patch
    post-patch {
        reinplace "s|@PYTHON_HOME@|${frameworks_dir}/Python.framework/Versions/2.7/lib/python2.7/site-packages/cdma|g" ${worksrcpath}/python/cdma_parameters.py
    }

}

# Define the available variants
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    set variant_line {variant python${py_ver_no_dot} description "Build with python ${py_ver} support"}
    foreach py_over ${python_versions} {
        if { ${py_ver} == ${py_over} } { continue }
        set py_over_no_dot [join [split ${py_over} "."] ""]
        append variant_line " conflicts python${py_over_no_dot}"
    }
    append variant_line { { } }
    eval $variant_line
    if {[variant_isset python${py_ver_no_dot}]} {
        if {${default_python_variant} != "+python${py_ver_no_dot}"} {
            set default_python_variant ""
        }
    }
}

# set default python variant if not selected
if {${default_python_variant} != ""} {
    default_variants-append "${default_python_variant}"
}

# If a python variant is enabled, activate it
set active_python_version ""
set active_python_version_no_dot ""
foreach py_ver ${python_versions} {
    set py_ver_no_dot [join [split ${py_ver} "."] ""]
    if {[variant_isset python${py_ver_no_dot}]} {
        set active_python_version        ${py_ver}
        set active_python_version_no_dot ${py_ver_no_dot}
    }
}

depends_build-append \
    port:pkgconfig \
    port:swig-python \
    port:doxygen \
    port:cppunit

depends_lib-append \
    port:boost \
    port:python${active_python_version_no_dot}

# specify the Python version to use
set python_framework_dir ${frameworks_dir}/Python.framework/Versions/${active_python_version}
configure.args-append \
    -DPYTHON_EXECUTABLE=${python_framework_dir}/bin/python${active_python_version} \
    -DPYTHON_INCLUDE_DIR=${python_framework_dir}/Headers \
    -DPYTHON_LIBRARY=${python_framework_dir}/Python \
    -DGR_PYTHON_DIR=${python_framework_dir}/lib/python${active_python_version}/site-package

configure.args-append \
    -DDOXYGEN_DOT_EXECUTABLE=${prefix}/bin/dot \
    -DDOXYGEN_EXECUTABLE=${prefix}/bin/doxygen
