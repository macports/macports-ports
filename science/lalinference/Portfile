# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem    1.0
PortGroup     active_variants 1.1

name          lalinference
version       1.8.2

description   LSC Algorithm Library - Inference
long_description \
  LIGO Scientific Collaboration Algorithm Library - Inference containing \
  routines for Bayesian inference data analysis.

checksums     rmd160 c56f4446b8727cee4f7438929175dbc12ed58253 \
              sha256 80f6249bc8799ded3dbf3922441f4e77a9f3ad1703254383092ea15ffb03ec56

#depends_build port:help2man

depends_lib   port:gsl \
              port:libomp \
              port:metaio \
              port:libxml2 \
              port:lal \
              port:lalframe \
              port:lalmetaio \
              port:lalxml \
              port:lalsimulation \
              port:lalburst \
              port:lalinspiral \
              port:lalpulsar \
              port:healpix-c \
              port:ligo-lvalert

# add py-healpy dependencies for python subports
if {[string match "py*" ${subport}]} {
    set numbers [regexp -all -inline -- {[0-9]+} ${subport}]
    set v [lindex ${numbers} 0]
    depends_lib-append port:py${v}-healpy
    depends_lib-append port:py${v}-shapely
    depends_lib-append port:py${v}-seaborn
    # bump revision for python subports only
    #revision 1
}

# disable help2man support, currently broken
patchfiles    0001-Make-help2man-optional.patch
patch.pre_args -p1
use_autoreconf yes

configure.args --enable-openmp \
               --disable-help2man

pre-activate {
  # lalinference now contains files that used to be provided by lalapps
  if {![catch {set installed [lindex [registry_active lalapps] 0]}]} {
    set _version [lindex $installed 1]
    if {[vercmp $_version 6.20.0] < 0} {
      # lalapps used to install some files now provided by lalinference in versions < 6.20.0
      registry_deactivate_composite lalapps "" [list ports_nodepcheck 1]
    }
  }
}

# lalxml is currently enabled by default but may change in the future
#variant lalxml description {Build with LALXML support} {
#  require_active_variants lalpulsar lalxml
#  depends_lib-append    port:libxml2 \
#                        port:lalxml
#  configure.args-append --enable-lalxml
#}

###############################################################################
### Everything below this line is common to all LALSuite ports. ###############
###############################################################################

categories    science
platforms     darwin
maintainers   ram aronnax
license       GPL-2+

homepage      https://wiki.ligo.org/DASWG/LALSuite
master_sites  http://software.ligo.org/lscsoft/source/lalsuite
use_xz        yes

depends_build-append \
              port:pkgconfig \
              port:swig \
              port:python27

# Choose a compiler that supports OpenMP.
compiler.whitelist macports-clang-3.8 macports-clang-3.7 macports-clang-3.9
compiler.fallback  macports-clang-3.8

set default_pythonarg PYTHON=${frameworks_dir}/Python.framework/Versions/2.7/bin/python2.7
configure.args-append \
               --mandir=${prefix}/share/man \
               --disable-silent-rules \
               --disable-gcc-flags \
               --enable-swig-iface \
               --disable-python \
               ${default_pythonarg}

# Create subports for each supported Python version
foreach v {27 34 35} {
  subport py${v}-${name} {
    set pythonversion     [string range ${v} 0 end-1].[string index ${v} end]
    set pythonhome \
      "${frameworks_dir}/Python.framework/Versions/${pythonversion}"
    set pythondir "${pythonhome}/lib/python${pythonversion}/site-packages"

    categories-prepend    python
    description           Python ${pythonversion} bindings for ${description}
    long_description      ${long_description} This package provides Python \
                          ${pythonversion} bindings, modules, and scripts.

    depends_build-append  port:swig-python
    depends_build-replace port:python27 port:python${v}
    depends_lib-replace   port:lal port:py${v}-lal
    depends_lib-append    port:${name} port:py${v}-numpy

    configure.args-replace ${default_pythonarg} PYTHON=${pythonhome}/bin/python${pythonversion}
    configure.args-replace --disable-python --enable-python
    configure.args-append --enable-swig-python

    destroot.args-append  pythondir="${pythondir}" \
                          pyexecdir="${pythondir}" \
                          pkgpythondir="${pythondir}/${name}" \
                          pkgpyexecdir="${pythondir}/${name}" \
                          prefix="${pythonhome}"

    # Only install SWIG bindings, Python libraries, and Python scripts
    destroot {
      command_exec destroot "" "-C swig"
      command_exec destroot "" "-C python"
    }

    post-destroot {
      # Remove Python include directory
      # (duplicate of SWIG headers in ${prefix}/include)
      file delete -force ${destroot}${pythonhome}/include

      # Create symbolic links in ${prefix}/bin to Python 2.7 scripts
      if {${subport} eq "py27-${name}"} {
        foreach script [glob -tails -nocomplain -directory ${destroot}${pythonhome}/bin *] {
          file link -symbolic ${destroot}${prefix}/bin/${script} ../Library/Frameworks/Python.framework/Versions/${pythonversion}/bin/${script}
        }
      }
    }
  }
}

subport octave-${name} {
  set pythonversion     [string range ${v} 0 end-1].[string index ${v} end]
  set pythonhome \
    "${frameworks_dir}/Python.framework/Versions/${pythonversion}"
  set pythondir "${pythonhome}/lib/python${pythonversion}/site-packages"

  categories-prepend    octave
  description           Octave ${pythonversion} bindings for ${description}
  long_description      ${long_description} This package provides Octave \
                        bindings, modules, and scripts.

  depends_build-append  port:swig-octave
  depends_lib-replace   port:lal port:octave-lal
  depends_lib-append    port:${name} port:octave

  configure.args-append --enable-swig-octave

  # Only install SWIG bindings, Python libraries, and Python scripts
  destroot {
    command_exec destroot "" "-C swig"
  }

  post-destroot {
    # Remove Octave include directory
    # (duplicate of SWIG headers in ${prefix}/include)
    file delete -force ${destroot}${prefix}/include
  }
}

if {${name} eq ${subport}} {
  livecheck.type        regex
  livecheck.url         ${master_sites}
  livecheck.regex       ${name}-(\\d+(?:\\.\\d+)*)${extract.suffix}
} else {
  livecheck.type        none
}
