# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           compilers 1.0
PortGroup           muniversal 1.0

name                libxc6
version             6.1.0
categories          science
license             MPL-2.0
maintainers         nomaintainer

description         Exchange-correlation functionals for DFT

long_description    Libxc is a library of exchange-correlation functionals \
                    for density-functional theory. The aim is to provide \
                    a portable, well tested and reliable set of exchange \
                    and correlation functionals that can be used by all \
                    the ETSF codes and also other codes.

homepage            https://www.tddft.org/programs/libxc
master_sites        https://www.tddft.org/programs/libxc/down.php?file=${version}

checksums           rmd160  95d163f0652fa4dc0677145060e7129db41aed70 \
                    sha256  a3aa16915942543031a5d9c4a92c439ce54249bdcda8c91c4e69e65329dc9a54 \
                    size    63610774

distname            libxc-${version}

compiler.c_standard 1999

# gcc-4.2 doesn ºt support -march=native (on Intel) and Fortran
compiler.blacklist-append *gcc-4.* {clang < 421}

patchfiles          patch-cmake-macports.diff

set libxc6_path     ${prefix}/libexec/${name}
configure.args-append \
                    -DBUILD_SHARED_LIBS=ON \
                    -DBUILD_TESTING=ON \
                    -DENABLE_CUDA=OFF \
                    -DCMAKE_INSTALL_BINDIR=${libxc6_path}/bin \
                    -DCMAKE_INSTALL_INCLUDEDIR=${libxc6_path}/include \
                    -DCMAKE_INSTALL_LIBDIR=${libxc6_path}/lib

variant fortran description {Enable Fortran 2003} {
    compilers.setup require_fortran
    configure.args-append -DENABLE_FORTRAN=ON
}

depends_test-append port:bash \
                    port:bzip2

test.run            yes
test.cmd-prepend    DYLD_LIBRARY_PATH=${cmake.build_dir}

livecheck.type      regex
livecheck.url       http://www.tddft.org/programs/libxc/download/previous
livecheck.regex     libxc-(\[0-9.\]+).tar.gz
