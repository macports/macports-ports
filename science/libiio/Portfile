# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           github 1.0

name                libiio
categories          science comms
maintainers         {michaelld @michaelld} openmaintainer
description         ${name} is used to interface to the Industrial Input/Output (IIO) Subsystem
long_description    ${description}. The IIO subsystem is intended to provide support for devices that in some sense are analog to digital or digital to analog converters (ADCs, DACs). This includes, but is not limited to ADCs, Accelerometers, Gyros, IMUs, Capacitance to Digital Converters (CDCs), Pressure Sensors, Color, Light and Proximity Sensors, Temperature Sensors, Magnetometers, DACs, DDS (Direct Digital Synthesis), PLLs (Phase Locked Loops), Variable/Programmable Gain Amplifiers (VGA, PGA), and RF transceivers. You can use libiio natively on an embedded Linux target (local mode), or use libiio to communicate remotely to that same target from a host Linux, Windows, or MAC over USB or Ethernet or Serial.
license             LGPL-2+
platforms           darwin

subport libiio-devel {}

if {${subport} eq ${name}} {

    # release
    github.setup analogdevicesinc libiio 0.18 v
    checksums    rmd160 5faff3b0ee29b077b21c013b6722d5e090017792 \
                 sha256 aa585c34ee536828add315d002458e4f8469867a8c4d2bffa4eda0de1956b168 \
                 size   201765
    revision     1

    # stealth update of some sort; remove at the next release
    dist_subdir  ${name}/${version}_1

    long_description ${long_description} Provides the release, which is typically updated every few months to yearly.
    # because I moved from a "devel" style 20190503 to a release style
    # "0.18" and the latter is "less than" the former when comparing.
    epoch        1

} else {

    #devel
    github.setup analogdevicesinc libiio c9a854f8d68b2c918ba43aa532dba9c61087c46d
    version   20191104-[string range ${github.version} 0 7]
    checksums rmd160 1e273c9c39b13b0ea6df0ad0fdca3ee742716e92 \
              sha256 b2050bbc6ee4b8a4e6497a8b3396fe4a3d201f077351273a433820b6d635de28 \
              size   202536
    revision  0

    long_description ${long_description} Provides the GIT master branch version, which is typically updated every few days to weeks.

}

depends_lib-append port:libxml2 \
    path:lib/libusb.dylib:libusb \
    port:avahi port:xz port:zlib port:libiconv

depends_build-append port:pkgconfig \
    port:python27 port:doxygen

# patch to fix install directory of the framework

patchfiles-append patch-fix_build.diff

# do VPATH (out of source tree) build

cmake.out_of_source yes

# remove top-level library path, such that internal libraries are used
# instead of any already-installed ones.

configure.ldflags-delete -L${prefix}/lib

# directory to install all CMake files; internal appends "uhd"

configure.args-append \
    -DAVAHI_CLIENT_LIBRARIES=${prefix}/lib/libavahi-client.dylib \
    -DAVAHI_COMMON_LIBRARIES=${prefix}/lib/libavahi-common.dylib \
    -DLIBLZMA_INCLUDE_DIR:PATH=${prefix}/include \
    -DLIBLZMA_LIBRARY:FILEPATH=${prefix}/lib/liblzma.dylib \
    -DLIBUSB_INCLUDE_DIR:PATH=${prefix}/include \
    -DLIBUSB_LIBRARIES:FILEPATH=${prefix}/lib/libusb-1.0.dylib \
    -DPYTHON_EXECUTABLE:FILEPATH=${prefix}/bin/python2.7 \
    -DZLIB_INCLUDE_DIR:PATH=${prefix}/include \
    -DZLIB_LIBRARY_RELEASE:FILEPATH=${prefix}/lib/libz.dylib \
    -DOSX_PACKAGE=OFF \
    -DCMAKE_INSTALL_MP_FRAMEWORKS_DIR=${frameworks_dir}

post-destroot {
    # move Python install to frameworks_dir for Python
    set py_install_dir ${frameworks_dir}/Python.framework/Versions/2.7/lib
    xinstall -m 755 -d ${destroot}${py_install_dir}
    move ${destroot}${prefix}/lib/python2.7 ${destroot}${py_install_dir}

    # link from iio.framework to normal
    set iio_framework_version 0.18
    set iio_framework_top ${frameworks_dir}/iio.framework
    set iio_framework ${iio_framework_top}/Versions/${iio_framework_version}/iio
    set iio_dr_framework_top ${destroot}${iio_framework_top}

    # fix iio library & link it into .../lib
    xinstall -m 755 -d ${destroot}${prefix}/lib
    ln -s ${iio_framework_top}/Versions/${iio_framework_version}/iio ${destroot}${prefix}/lib/libiio.dylib
    system "install_name_tool -id ${iio_framework} ${destroot}${iio_framework}"

    # fix Tools, and link them into .../bin
    xinstall -m 755 -d ${destroot}${prefix}/bin
    foreach app [glob ${iio_dr_framework_top}/Tools/*] {
        set non_dr_app [strsed ${app} "s@${destroot}@@"]
        set lib_iio_framework [strsed ${iio_framework} "s@Library/Frameworks@lib@"]
        system "install_name_tool -change ${lib_iio_framework} ${iio_framework} ${app}"
        ln -s ${non_dr_app} ${destroot}${prefix}/bin
    }

    # link includes into .../include
    xinstall -m 755 -d ${destroot}${prefix}/include
    foreach header [glob ${iio_dr_framework_top}/Versions/${iio_framework_version}/Headers/*] {
        ln -s [strsed ${header} "s@${destroot}@@"] ${destroot}${prefix}/include
    }
}
