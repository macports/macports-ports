--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -13,7 +13,7 @@
 	set(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "default install path" FORCE)
 endif()
 
-set(CMAKE_INSTALL_DOCDIR "" CACHE PATH "documentation root (DATAROOTDIR/doc/${PROJECT_NAME}${LIBIIO_VERSION_MAJOR}-doc)")
+set(CMAKE_INSTALL_DOCDIR "" CACHE PATH "documentation root (DATAROOTDIR/doc/${PROJECT_NAME}${LIBIIO_VERSION_MAJOR})")
 include(GNUInstallDirs)
 if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
 	set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_FULL_LIBDIR}")
@@ -40,6 +40,8 @@
 	set(SKIP_INSTALL_ALL ${OSX_PACKAGE})
 endif()
 
+include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
+
 option(WITH_NETWORK_BACKEND "Enable the network backend" ON)
 option(WITH_TESTS "Build the test programs" ON)
 
@@ -211,8 +213,6 @@
 	endif()
 endif()
 
-include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
-
 if(WITH_NETWORK_BACKEND)
 	if (WIN32)
 		set(LIBS_TO_LINK ${LIBS_TO_LINK} wsock32 ws2_32)
@@ -348,7 +348,7 @@
 		ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
 		LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
 		RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-		FRAMEWORK DESTINATION /Library/Frameworks
+		FRAMEWORK DESTINATION ${CMAKE_INSTALL_MP_FRAMEWORKS_DIR}
 		PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
 endif()
 
@@ -415,7 +415,7 @@
 		COMMAND ${PKGBUILD_EXECUTABLE}
 			--component ${LIBIIO_FRAMEWORK_DIR}
 			--identifier com.adi.iio --version ${VERSION}
-			--install-location /Library/Frameworks ${LIBIIO_TEMP_PKG}
+			--install-location ${CMAKE_INSTALL_MP_FRAMEWORKS_DIR} ${LIBIIO_TEMP_PKG}
 		COMMAND ${PRODUCTBUILD_EXECUTABLE}
 			--distribution ${LIBIIO_DISTRIBUTION_XML} ${LIBIIO_PKG}
 		COMMAND ${CMAKE_COMMAND} -E remove ${LIBIIO_TEMP_PKG}
--- tests/CMakeLists.txt.orig
+++ tests/CMakeLists.txt
@@ -50,7 +50,7 @@
 
 if(NOT SKIP_INSTALL_ALL)
 	if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-		install(TARGETS ${IIO_TESTS_TARGETS} RUNTIME DESTINATION /Library/Frameworks/iio.framework/Tools)
+		install(TARGETS ${IIO_TESTS_TARGETS} RUNTIME DESTINATION ${CMAKE_INSTALL_MP_FRAMEWORKS_DIR}/iio.framework/Tools)
 	else()
 		install(TARGETS ${IIO_TESTS_TARGETS} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
 	endif()
