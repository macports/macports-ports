# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           mpi 1.0
PortGroup           linear_algebra 1.0

name                hpl
version             2.2
revision            1
categories          science
platforms           darwin
license             BSD
maintainers         dstrubbe

description         High Performance Computing Linpack Benchmark
long_description    See how your machine compares to the TOP500! \
                    HPL is a software package that solves a (random) dense linear \
                    system in double-precision (64-bit) arithmetic on \
                    distributed-memory computers. It can thus be regarded as a \
                    portable as well as freely available implementation of the \
                    High Performance Computing Linpack Benchmark.
homepage            http://www.netlib.org/benchmark/hpl
master_sites        ${homepage}

checksums           rmd160  b25fc91dcbd82f43b6a149af9b4e2c5cd0f60c3e \
                    sha156  ac7534163a09e21a5fa763e4e16dfc119bc84043f6e6a807aba666518f8df440

mpi.setup           require -fortran
linalg.setup        blas_only

#variant threads?

# patch enables parallel build
patchfiles          patch-Makefile.diff

use_configure       no

pre-build {
    file copy ${worksrcpath}/setup/Make.FreeBSD_PIV_CBLAS ${worksrcpath}/Make.macos
}

build.args          ARCH=MacOS TOPdir=${worksrcpath} MPlib=
build.target        all-j arch=macos
use_parallel_build  yes

test.run  yes

destroot {
    xinstall ${worksrcpath}/bin/macos/xhpl ${destroot}${prefix}/bin/
    xinstall -d ${destroot}${prefix}/share/hpl
    xinstall ${worksrcpath}/bin/macos/HPL.dat ${destroot}${prefix}/share/hpl/
    xinstall ${worksrcpath}/TUNING ${destroot}${prefix}/share/hpl/
}

pre-build {
    build.args-append      CC=${mpi.cc} LINKER=${mpi.cc} LAlib="${linalglib}"
}

pre-test {
    if {![catch {sysctl hw.ncpu} result]} {
        set njobs $result
    } else {
        set njobs 4
    }

    test.cmd cd bin/macos && ${mpi.exec} -n ${njobs} ./xhpl
}

pre-fetch {
    notes    "Execute as: cd ${prefix}/share/hpl && ${mpi.exec} -n 4 xhpl"
}

livecheck.type      regex
livecheck.url       [lindex ${master_sites} 0]
livecheck.regex     ${name}-(\[0-9.\]+)${extract.suffix}
