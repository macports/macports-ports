# -*- coding: utf-8; mode: tcl; tab-width: 4; truncate-lines: t; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               github 1.0
PortGroup               cmake 1.0
PortGroup               active_variants 1.1

github.setup            htcondor htcondor 8_6_8 V
version                 [strsed ${github.version} g/_/\./]
revision                1
maintainers             {aronnax @lpsinger}

categories              science parallel net
license                 apache
platforms               darwin
description \
  specialized workload management system for compute-intensive jobs
long_description \
  HTCondor is a specialized workload management system for compute-intensive \
  jobs. Like other full-featured batch systems, HTCondor provides a job \
  queueing mechanism, scheduling policy, priority scheme, resource monitoring, \
  and resource management. Users submit their serial or parallel jobs to \
  HTCondor, HTCondor places them into a queue, chooses when and where to run \
  the jobs based upon a policy, carefully monitors their progress, and \
  ultimately informs the user upon completion.
homepage                http://research.cs.wisc.edu/htcondor

default_variants        +personal +kerberos

variant personal \
  description "configure your computer as a one-node personal Condor pool" {

    add_users           condor group=condor

    startupitem.create  yes
    startupitem.name    ${name}
    startupitem.start   "${prefix}/sbin/condor_master -f"
    startupitem.stop    "${prefix}/sbin/condor_off -all -master"
}

set pythons_suffixes {27 34}

if {![variant_isset python34]} {
    default_variants +python27
}

set pythons_ports {}
foreach s ${pythons_suffixes} {
    lappend pythons_ports python${s}
}

cmake.out_of_source yes
configure.args-append   -DWITH_PYTHON_BINDINGS:BOOL="0" -DWITH_KRB5:BOOL="0"

foreach s ${pythons_suffixes} {
    set p python${s}
    set v [string index ${s} 0].[string index ${s} 1]
    set i [lsearch -exact ${pythons_ports} ${p}]
    set c [lreplace ${pythons_ports} ${i} ${i}]
    set f ${frameworks_dir}/Python.framework/Versions/${v}
    variant ${p} description "Enable Python interface for Python ${v}" conflicts {*}${c} "

        depends_lib-append      port:${p}
        require_active_variants boost ${p}
        configure.args-append   -DPython_ADDITIONAL_VERSIONS:STRING=\"${v}\" -DPYTHON_EXECUTABLE:FILEPATH=\"${f}/bin/python${v}\" -DC_PYTHONARCHLIB:PATH=\"${f}/lib/python${v}/site-packages\"
        configure.args-replace  -DWITH_PYTHON_BINDINGS:BOOL=\"0\" -DWITH_PYTHON_BINDINGS:BOOL=\"1\"

        post-patch {
            reinplace \"s|@prefix@|${prefix}|g\" ${worksrcpath}/src/condor_utils/condor_config.cpp
            reinplace \"s|@python@|${f}/bin/python${v}|g\" ${worksrcpath}/build/cmake/CondorPackageConfig.cmake
        }
    "
}

variant kerberos description {enable Kerberos5 support} {
    depends_lib-append port:kerberos5
    configure.args-replace -DWITH_KRB5:BOOL="0" -DWITH_KRB5:BOOL="1"
}


checksums               rmd160  84293176b8a3ffa9a09e1543295e1b1089126a3a \
                        sha256  3b8234ace974952a13c5f133c86fd6eb454924564ceb8665123bb7b5357cc820

depends_build-append    port:fig2dev \
                        port:latex2html

depends_lib-append      port:boost \
                        port:expat \
                        path:lib/libssl.dylib:openssl \
                        port:pcre

license_noconflict      latex2html

patchfiles              patch-src-classad-CMakeLists.txt.diff \
                        patch-src-condor_scripts-macosx_rewrite_libs.diff \
                        patch-src-condor_utils-CMakeLists.txt.diff \
                        patch-src-condor_utils-condor_config.cpp.diff \
                        patch-src-python-bindings-CMakeLists.txt.diff

post-patch {
    reinplace "s|@prefix@|${prefix}|g" ${worksrcpath}/src/condor_utils/condor_config.cpp ${worksrcpath}/src/condor_scripts/macosx_rewrite_libs ${worksrcpath}/doc/Makefile
    reinplace "s|g\+\+|${configure.cxx}|g" ${worksrcpath}/doc/makeman/Makefile

    # This .sty file seems to be available for latex2html but not pdftex,
    # and the "make just-man-pages" target seems to expect it.
    ln ${prefix}/share/texmf/tex/latex/html/html.sty ${worksrcpath}/doc/
}

# FIXME: Globus support is disabled because Globus is not available in MacPorts.
configure.args-append   -DWITH_GLOBUS:BOOL="0" -DWITH_VOMS:BOOL="0" -DWITH_GSOAP:BOOL="0" -DBUILD_TESTING:BOOL="0"

# Man pages are not part of the default build target.
post-build {
    system -W ${worksrcpath}/doc "make just-man-pages"
}

# These are empty directories that are needed by the personal Condor pool.
destroot.keepdirs       ${destroot}${prefix}/etc/condor/config.d \
                        ${destroot}${prefix}/var/lib/condor/execute \
                        ${destroot}${prefix}/var/lib/condor/spool \
                        ${destroot}${prefix}/var/log/condor

# Condor installs some documentation into ${prefix}. Move them into
# ${prefix}/share/doc/${name}.
post-destroot {
    # Move manpages into place.
    xinstall {*}[glob ${worksrcpath}/doc/man/man1/*] \
        ${destroot}${prefix}/share/man/man1

    # Remove SysV-init and Fedora-style service scripts.
    # See https://htcondor-wiki.cs.wisc.edu/index.cgi/tktview?tn=3684
    file delete ${destroot}${prefix}/etc/init.d/condor
    file delete ${destroot}${prefix}/etc/sysconfig/condor

    # Remove packaging scripts.
    file delete ${destroot}${prefix}/sbin/condor_configure
    file delete ${destroot}${prefix}/sbin/condor_install

    # Move documentation into ${prefix}/share.
    file mkdir ${destroot}${prefix}/share/doc/${name}
    move \
      ${destroot}${prefix}/examples \
      ${destroot}${prefix}/LICENSE-2.0.txt \
      ${destroot}${prefix}/README \
      ${destroot}${prefix}/share/doc/${name}

    # Move example configuration files from ${prefix}/etc to ${prefix}/share.
    move \
      ${destroot}${prefix}/etc/examples \
      ${destroot}${prefix}/share/doc/${name}/examples/config

    # If deploying a personal Condor pool, create all necessary directories.
    if {[variant_isset personal]} {
        xinstall -d ${destroot}${prefix}/etc/condor/config.d
        xinstall ${filespath}/condor_config ${destroot}${prefix}/etc/condor
        reinplace "s|@prefix@|${prefix}|g" ${destroot}${prefix}/etc/condor/condor_config
        xinstall ${filespath}/condor_config.local ${destroot}${prefix}/etc/condor

        xinstall -d ${destroot}${prefix}/var/lib
        xinstall -d -o condor -g condor ${destroot}${prefix}/var/lib/condor/execute
        xinstall -d -o condor -g condor ${destroot}${prefix}/var/lib/condor/spool
        xinstall -d ${destroot}${prefix}/var/log
        xinstall -d -o condor -g condor ${destroot}${prefix}/var/log/condor
    }
}

# The second of the three version numbers is even for a stable release.
# See http://research.cs.wisc.edu/htcondor/version_number.html
livecheck.regex     archive/V(\\d+_\\d*\[02468\]_\\d+)${extract.suffix}
