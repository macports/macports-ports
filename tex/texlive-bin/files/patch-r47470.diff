Index: texk/web2c/luatexdir/image/pdftoepdf.w
===================================================================
--- texk/web2c/luatexdir/image/pdftoepdf.w	(revision 47469)
+++ texk/web2c/luatexdir/image/pdftoepdf.w	(revision 47470)
@@ -472,10 +472,10 @@
         break;
     */
     case objString:
-        copyString(pdf, obj->getString());
+        copyString(pdf, (GooString *)obj->getString());
         break;
     case objName:
-        copyName(pdf, obj->getName());
+        copyName(pdf, (char *)obj->getName());
         break;
     case objNull:
         pdf_add_null(pdf);
Index: texk/web2c/luatexdir/lua/lepdflib.cc
===================================================================
--- texk/web2c/luatexdir/lua/lepdflib.cc	(revision 47469)
+++ texk/web2c/luatexdir/lua/lepdflib.cc	(revision 47470)
@@ -674,7 +674,7 @@
     uin = (udstruct *) luaL_checkudata(L, 1, M_##in);          \
     if (uin->pd != NULL && uin->pd->pc != uin->pc)             \
         pdfdoc_changed_error(L);                               \
-    gs = ((in *) uin->d)->function();                          \
+    gs = (GooString *)((in *) uin->d)->function();             \
     if (gs != NULL)                                            \
         lua_pushlstring(L, gs->getCString(), gs->getLength()); \
     else                                                       \
@@ -1813,7 +1813,7 @@
     if (uin->pd != NULL && uin->pd->pc != uin->pc)
         pdfdoc_changed_error(L);
     if (((Object *) uin->d)->isString()) {
-        gs = ((Object *) uin->d)->getString();
+        gs = (GooString *)((Object *) uin->d)->getString();
         lua_pushlstring(L, gs->getCString(), gs->getLength());
     } else
         lua_pushnil(L);
Index: texk/web2c/pdftexdir/ChangeLog
===================================================================
--- texk/web2c/pdftexdir/ChangeLog	(revision 47469)
+++ texk/web2c/pdftexdir/ChangeLog	(revision 47470)
@@ -1,3 +1,8 @@
+2018-04-28  Akira Kakuto  <kakuto@fuk.kindai.ac.jp>
+
+	* pdftoepdf-newpoppler.cc, pdftosrc-newpoppler.cc:
+	Support poppler 0.64.0.
+
 2018-04-14  Karl Berry  <karl@tug.org>
 
 	* TeX Live 2018 release, pdftex 1.40.19.
Index: texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc
===================================================================
--- texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc	(revision 47469)
+++ texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc	(revision 47470)
@@ -290,7 +290,7 @@
 static void copyDictEntry(Object * obj, int i)
 {
     Object obj1;
-    copyName(obj->dictGetKey(i));
+    copyName((char *)obj->dictGetKey(i));
     pdf_puts(" ");
     obj1 = obj->dictGetValNF(i);
     copyObject(&obj1);
@@ -355,7 +355,7 @@
         if (!procset.isName())
             pdftex_fail("PDF inclusion: invalid ProcSet entry type <%s>",
                         procset.getTypeName());
-        copyName(procset.getName());
+        copyName((char *)procset.getName());
         pdf_puts(" ");
     }
     pdf_puts("]\n");
@@ -418,7 +418,7 @@
         && fontdescRef.isRef()
         && fontdesc.isDict()
         && embeddableFont(&fontdesc)
-        && (fontmap = lookup_fontmap(basefont.getName())) != NULL) {
+        && (fontmap = lookup_fontmap((char *)basefont.getName())) != NULL) {
         // round /StemV value, since the PDF input is a float
         // (see Font Descriptors in PDF reference), but we only store an
         // integer, since we don't want to change the struct.
@@ -427,7 +427,7 @@
         charset = fontdesc.dictLookup("CharSet");
         if (!charset.isNull() &&
             charset.isString() && is_subsetable(fontmap))
-            epdf_mark_glyphs(fd, charset.getString()->getCString());
+            epdf_mark_glyphs(fd, (char *)charset.getString()->getCString());
         else
             embed_whole_font(fd);
         addFontDesc(fontdescRef.getRef(), fd);
@@ -456,7 +456,7 @@
         if (fontRef.isRef())
             copyFont(obj->dictGetKey(i), &fontRef);
         else if (fontRef.isDict()) {   // some programs generate pdf with embedded font object
-            copyName(obj->dictGetKey(i));
+            copyName((char *)obj->dictGetKey(i));
             pdf_puts(" ");
             copyObject(&fontRef);
         }
@@ -565,7 +565,7 @@
     } else if (obj->isNum()) {
         pdf_printf("%s", convertNumToPDF(obj->getNum()));
     } else if (obj->isString()) {
-        s = obj->getString();
+        s = (GooString *)obj->getString();
         p = s->getCString();
         l = s->getLength();
         if (strlen(p) == (unsigned int) l) {
@@ -589,7 +589,7 @@
             pdf_puts(">");
         }
     } else if (obj->isName()) {
-        copyName(obj->getName());
+        copyName((char *)obj->getName());
     } else if (obj->isNull()) {
         pdf_puts("null");
     } else if (obj->isArray()) {
Index: texk/web2c/pdftexdir/pdftosrc-newpoppler.cc
===================================================================
--- texk/web2c/pdftexdir/pdftosrc-newpoppler.cc	(revision 47469)
+++ texk/web2c/pdftexdir/pdftosrc-newpoppler.cc	(revision 47470)
@@ -109,7 +109,7 @@
             fprintf(stderr, "No SourceName found\n");
             exit(1);
         }
-        outname = srcName.getString()->getCString();
+        outname = (char *)srcName.getString()->getCString();
         // We cannot free srcName, as objname shares its string.
         // srcName.free();
     } else if (objnum > 0) {
