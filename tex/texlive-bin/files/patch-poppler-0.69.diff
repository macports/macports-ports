--- texk/web2c/luatexdir/lua/lepdflib.cc.orig	2018-09-25 03:45:00.000000000 -0700
+++ texk/web2c/luatexdir/lua/lepdflib.cc	2018-09-25 03:46:28.000000000 -0700
@@ -1125,12 +1125,12 @@
 
 static int m_Dict_add(lua_State * L)
 {
-    char *s;
+    const char *s;
     udstruct *uin, *uobj;
     uin = (udstruct *) luaL_checkudata(L, 1, M_Dict);
     if (uin->pd != NULL && uin->pd->pc != uin->pc)
         pdfdoc_changed_error(L);
-    s = copyString(luaL_checkstring(L, 2));
+    s = luaL_checkstring(L, 2);
     uobj = (udstruct *) luaL_checkudata(L, 3, M_Object);
     ((Dict *) uin->d)->add(s, std::move(*((Object *) uobj->d)));
     return 0;
@@ -2051,7 +2051,7 @@
         pdfdoc_changed_error(L);
     if (!((Object *) uin->d)->isDict())
         luaL_error(L, "Object is not a Dict");
-    ((Object *) uin->d)->dictAdd(copyString(s), std::move(*((Object *) uobj->d)));
+    ((Object *) uin->d)->dictAdd(s, std::move(*((Object *) uobj->d)));
     return 0;
 }
 
--- texk/web2c/luatexdir/image/pdftoepdf.w.orig	2018-09-25 04:13:02.000000000 -0700
+++ texk/web2c/luatexdir/image/pdftoepdf.w	2018-09-25 04:23:18.000000000 -0700
@@ -393,7 +393,7 @@
     pdf->cave = true;
 }
 
-static void copyName(PDF pdf, char *s)
+static void copyName(PDF pdf, const char *s)
 {
     pdf_out(pdf, '/');
     for (; *s != 0; s++) {
@@ -475,7 +475,7 @@
         copyString(pdf, (GooString *)obj->getString());
         break;
     case objName:
-        copyName(pdf, (char *)obj->getName());
+        copyName(pdf, obj->getName());
         break;
     case objNull:
         pdf_add_null(pdf);
--- texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc.orig      2018-09-25 04:43:47.000000000 -0700
+++ texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc   2018-09-25 04:49:01.000000000 -0700
@@ -310,7 +310,7 @@
 static void copyFontDict(Object * obj, InObj * r)
 {
     int i, l;
-    char *key;
+    const char *key;
     if (!obj->isDict())
         pdftex_fail("PDF inclusion: invalid dict type <%s>",
                     obj->getTypeName());
@@ -382,7 +382,7 @@
     return false;
 }
 
-static void copyFont(char *tag, Object * fontRef)
+static void copyFont(const char *tag, Object * fontRef)
 {
     Object fontdict, subtype, basefont, fontdescRef, fontdesc, charset,
         stemV;
@@ -822,7 +822,7 @@
     Object groupDict;
     bool writeSepGroup = false;
     Object info;
-    char *key;
+    const char *key;
     char s[256];
     int i, l;
     int rotate;
@@ -977,7 +977,7 @@
             }
             l = dic1.getLength();
             for (i = 0; i < l; i++) {
-                groupDict.dictAdd(copyString(dic1.getKey(i)),
+                groupDict.dictAdd(dic1.getKey(i),
                                   dic1.getValNF(i));
             }
 // end modification
--- texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc.orig	2018-09-25 06:09:14.000000000 -0700
+++ texk/web2c/pdftexdir/pdftoepdf-newpoppler.cc	2018-09-25 06:13:16.000000000 -0700
@@ -275,7 +275,7 @@
 
 static void copyObject(Object *);
 
-static void copyName(char *s)
+static void copyName(const char *s)
 {
     pdf_puts("/");
     for (; *s != 0; s++) {
@@ -290,7 +290,7 @@
 static void copyDictEntry(Object * obj, int i)
 {
     Object obj1;
-    copyName((char *)obj->dictGetKey(i));
+    copyName(obj->dictGetKey(i));
     pdf_puts(" ");
     obj1 = obj->dictGetValNF(i);
     copyObject(&obj1);
@@ -355,7 +355,7 @@
         if (!procset.isName())
             pdftex_fail("PDF inclusion: invalid ProcSet entry type <%s>",
                         procset.getTypeName());
-        copyName((char *)procset.getName());
+        copyName(procset.getName());
         pdf_puts(" ");
     }
     pdf_puts("]\n");
@@ -456,7 +456,7 @@
         if (fontRef.isRef())
             copyFont(obj->dictGetKey(i), &fontRef);
         else if (fontRef.isDict()) {   // some programs generate pdf with embedded font object
-            copyName((char *)obj->dictGetKey(i));
+            copyName(obj->dictGetKey(i));
             pdf_puts(" ");
             copyObject(&fontRef);
         }
@@ -467,7 +467,7 @@
     pdf_puts(">>\n");
 }
 
-static void copyOtherResources(Object * obj, char *key)
+static void copyOtherResources(Object * obj, const char *key)
 {
     // copies all other resources (write_epdf handles Fonts and ProcSets),
 
@@ -589,7 +589,7 @@
             pdf_puts(">");
         }
     } else if (obj->isName()) {
-        copyName((char *)obj->getName());
+        copyName(obj->getName());
     } else if (obj->isNull()) {
         pdf_puts("null");
     } else if (obj->isArray()) {
