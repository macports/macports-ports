gsize and size_t are not the same type on 32-bit platforms.

See: https://gitlab.gnome.org/GNOME/glib/-/issues/2493

--- src/vte.cc.orig
+++ src/vte.cc
@@ -1189,7 +1189,7 @@
                               match_context)) >= 0 || r == PCRE2_ERROR_PARTIAL)) {
                 gsize ko = offset;
                 gsize rm_so, rm_eo;
-                gsize *ovector;
+                size_t *ovector;
 
                 ovector = pcre2_get_ovector_pointer_8(match_data);
                 rm_so = ovector[0];
@@ -3412,7 +3412,7 @@
 
         /* Convert the data to UTF-8 */
         auto inbuf = (char*)buf->data;
-        size_t inbytes = buf->len;
+        gsize inbytes = buf->len;
 
         _VTE_DEBUG_IF(VTE_DEBUG_IO) {
                 _vte_debug_hexdump("Incoming buffer before conversion to UTF-8",
@@ -3422,7 +3422,7 @@
         auto unibuf = _vte_byte_array_new();
         _vte_byte_array_set_minimum_size(unibuf, VTE_UTF8_BPC * inbytes);
         auto outbuf = (char*)unibuf->data;
-        size_t outbytes = unibuf->len;
+        gsize outbytes = unibuf->len;
 
         bool stop = false;
         do {
@@ -10653,7 +10653,7 @@
         int (* match_fn) (const pcre2_code_8 *,
                           PCRE2_SPTR8, PCRE2_SIZE, PCRE2_SIZE, uint32_t,
                           pcre2_match_data_8 *, pcre2_match_context_8 *);
-        gsize *ovector, so, eo;
+        size_t *ovector; gsize so, eo;
         int r;
 
         if (_vte_regex_get_jited(m_search_regex.regex))
--- src/vteregex.cc.orig
+++ src/vteregex.cc
@@ -213,7 +213,7 @@
         if (code == nullptr) {
                 set_gerror_from_pcre_error(errcode, error);
                 g_prefix_error(error, "Failed to compile pattern to regex at offset %" G_GSIZE_FORMAT ":",
-                               erroffset);
+                               (gsize)erroffset);
                 return NULL;
         }
 
