# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                gtk-doc
version             1.25
revision            1
categories          gnome devel
license             GPL-2+
installs_libs       no
platforms           darwin freebsd linux
supported_archs     noarch
installs_libs       no
maintainers         devans openmaintainer
description         GTK+/GNOME API documentation generator

long_description    GTK-Doc generates API documentation from comments added to C code. \
                    It is typically used to document the public API of GTK+  and GNOME \
                    libraries, but it can also be used to document application code.

homepage            http://www.gtk.org/gtk-doc/
master_sites        gnome:sources/${name}/${version}/

use_xz              yes

checksums           rmd160  40baa3ac70f4b6bf45422f8ea8255e9014ae5b7a \
                    sha256  1ea46ed400e6501f975acaafea31479cea8f32f911dca4dff036f59e6464fd42

# set 'pbranch' to the desired perl version to use
# currently 5.24 (#52081)

set pbranch         5.24

depends_build       port:pkgconfig \
                    path:lib/pkgconfig/glib-2.0.pc:glib2

depends_lib         port:libxml2 \
                    port:libxslt \
                    port:perl${pbranch} \
                    port:openjade \
                    port:fop \
                    port:docbook-xml \
                    port:docbook-xsl \
                    port:itstool \
                    port:source-highlight

configure.perl      ${prefix}/bin/perl${pbranch}
# gtk-doc supports python2 versions back to 2.3 so OSX system python should be sufficient
# for the one python script provided (gtkdoc-depscan).
configure.python    /usr/bin/python
configure.env-append XSLTPROC=${prefix}/bin/xsltproc
configure.args      --with-xml-catalog=${prefix}/etc/xml/catalog \
                    --with-highlight=source-highlight \
                    --disable-silent-rules

test.run            yes
test.dir            ${worksrcpath}/tests
test.target         check

livecheck.type      gnome-with-unstable
