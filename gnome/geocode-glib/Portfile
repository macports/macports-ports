# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           meson 1.0

name                geocode-glib
version             3.26.4
revision            0
license             LGPL-2.1
set branch          [join [lrange [split ${version} .] 0 1] .]
description         A convenience library for geocoding and reverse geocoding.
long_description    geocode-glib is a convenience library for geocoding (finding longitude, \
                    and latitude from an address) and reverse geocoding (finding an address from \
                    coordinates). It uses the Nominatim service to achieve that. It also caches \
                    (reverse-)geocoding requests for faster results and to avoid unnecessary \
                    server load.

maintainers         {devans @dbevans} openmaintainer
categories          gnome devel
platforms           darwin
homepage            https://developer.gnome.org/geocode-glib/
master_sites        gnome:sources/${name}/${branch}/

use_xz              yes

checksums           rmd160  b3d7bd7980ace9d31a14e0915a03e29dede59701 \
                    sha256  2d9a6826d158470449a173871221596da0f83ebdcff98b90c7049089056a37aa \
                    size    75352

depends_build       port:pkgconfig \
                    port:gettext \
                    port:gtk-doc

depends_lib         port:gettext-runtime \
                    path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    path:lib/pkgconfig/gobject-introspection-1.0.pc:gobject-introspection \
                    port:json-glib \
                    path:lib/pkgconfig/libsoup-2.4.pc:libsoup

# Work around lack of @rpath on Tiger, i.e. this error:
# dyld: Library not loaded: @loader_path/libgeocode-glib.0.dylib
platform darwin 8 {
    destroot.env-append "DYLD_LIBRARY_PATH=${build_dir}/geocode-glib"
}

# gobject-introspection uses g-ir-scanner, which uses $CC from env
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})  "CC=${configure.cc} -arch ${arch}"
        lappend merger_destroot_env(${arch})  "CC=${configure.cc} -arch ${arch}"
    }
} else {
    build.env-append       "CC=${configure.cc} ${configure.cc_archflags}"
    destroot.env-append    "CC=${configure.cc} ${configure.cc_archflags}"
}

livecheck.type      gnome
