# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           gitlab 1.0
PortGroup           meson  1.0

# Upgrade to version 1.0.0.1+ requires glib2 >= 2.68. Currently MacPorts using
# glib 2.66.8, which is missing g_time_zone_new_identifier() and
# g_string_replace().
# See https://gitlab.gnome.org/GNOME/libgit2-glib/-/issues/76

gitlab.instance     https://gitlab.gnome.org
gitlab.setup        GNOME libgit2-glib 1.0.0 v
revision            0
license             LGPL-2+
description         Glib wrapper library around the libgit2 git access library.
long_description    ${description}

maintainers         {devans @dbevans} openmaintainer
categories          gnome devel
platforms           darwin
homepage            https://gitlab.gnome.org/GNOME/libgit2-glib

checksums           rmd160  b9e53704b305f3af97d08196da3bdcae037ea9b1 \
                    sha256  c4a60dcbb43362c2dffb6ee1b02f9c9d8b2aae57ba350fdda1baf8cf0bd49479 \
                    size    135378

depends_build       port:pkgconfig \
                    port:gtk-doc

depends_lib         path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    path:lib/pkgconfig/gobject-introspection-1.0.pc:gobject-introspection \
                    port:libgit2 \
                    port:libssh2 \
                    path:bin/vala:vala

compiler.c_standard 2011

# error: implicit declaration of function "'g_string_replace'" is invalid in C99.
# g_string_replace() is available since glib 2.68
#
# 'translate_windows_paths' it's fix for Windows.
configure.post_args-append \
                    -Dtranslate_windows_paths=false

# patch meson.build to correctly find our configured python and its installation path
# minor rework to use meson python() module rather than deprecated python3().
# avoids configuration errors on 10.14 and earlier and attempts to use system python3 on 10.15+
# quiets python3 deprecation warning during configure
patchfiles          patch-meson-find-mp-python3.diff

post-patch {
    reinplace "s|@@PYTHON3_BIN@@|${configure.python}|" \
        ${worksrcpath}/meson.build

    reinplace "s|^#!.*|#!${configure.python}|" \
        ${worksrcpath}/meson_python_compile.py \
        ${worksrcpath}/meson_vapi_link.py
}

configure.args      -Dgtk_doc=true \
                    -Dpython=false

# Work around lack of @rpath on Tiger, i.e. this error:
# dyld: Library not loaded: @loader_path/libgit2-glib-1.0.0.dylib
platform darwin 8 {
    destroot.env-append "DYLD_LIBRARY_PATH=${build_dir}/${name}"
}

# uses g-ir-scanner, which uses $CC from env
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})  "CC=${configure.cc} -arch ${arch}"
        lappend merger_destroot_env(${arch})  "CC=${configure.cc} -arch ${arch}"
    }
} else {
    build.env-append       "CC=${configure.cc} ${configure.cc_archflags}"
    destroot.env-append    "CC=${configure.cc} ${configure.cc_archflags}"
}

variant python38 conflicts python39 python310 description {Enable Python support using python38} {
    configure.args-delete -Dpython=false
    depends_lib-append port:py38-gobject3
    configure.python ${prefix}/bin/python3.8
    configure.pkg_config_path-append ${frameworks_dir}/Python.framework/Versions/3.8/lib/pkgconfig/
}

variant python39 conflicts python38 python310 description {Enable Python support using python39} {
    configure.args-delete -Dpython=false
    depends_lib-append port:py39-gobject3
    configure.python ${prefix}/bin/python3.9
    configure.pkg_config_path-append ${frameworks_dir}/Python.framework/Versions/3.9/lib/pkgconfig/
}

variant python310 conflicts python38 python39 description {Enable Python support using python310} {
    configure.args-delete -Dpython=false
    depends_lib-append port:py310-gobject3
    configure.python ${prefix}/bin/python3.10
    configure.pkg_config_path-append ${frameworks_dir}/Python.framework/Versions/3.10/lib/pkgconfig/
}

if {![variant_isset python38] &&
    ![variant_isset python39] &&
    ![variant_isset python310]} {
    default_variants +python310
}

livecheck.type      gnome-with-unstable
