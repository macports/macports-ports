# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

# https://bugzilla.gnome.org/show_bug.cgi?id=636134
PortGroup           muniversal 1.0
PortGroup           active_variants 1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           gobject_introspection 1.0

name                gstreamer1-gst-plugins-bad
set my_name         gst-plugins-bad
# unstable versions of the gstreamer1 series are typically, well, unstable
# typical issues are movement of plugins from one category to another (e.q. bad->good),
# addition of new plugins and removal of others, missing files, etc
# beginning with the 1.12 stable series please only push stable versions to git
# and then only after addressing any possible issues discovered during the previous unstable series.
version             1.12.4
revision            2
description         A set of plug-ins for GStreamer that need more quality.
long_description    GStreamer Bad Plug-ins is a set of plug-ins that aren't up to par compared \
                    to the rest. They might be close to being good quality, but they're missing \
                    something - be it a good code review, some documentation, a set of tests, a \
                    real live maintainer, or some actual wide use.
license             GPL LGPL
maintainers         nomaintainer
categories          gnome
platforms           darwin
homepage            https://gstreamer.freedesktop.org/modules/${my_name}.html
master_sites        https://gstreamer.freedesktop.org/src/${my_name}/
distname            ${my_name}-${version}
use_xz              yes

checksums           rmd160  f44d9fceda3c8e9f3b8c1af5a3d00aac514952e1 \
                    sha256  0c7857be16686d5c1ba6e34bd338664d3d4599d32714a8eca5c8a41a101e2d08 \
                    size    4709272

depends_build       port:pkgconfig
depends_lib         port:gstreamer1-gst-plugins-base \
                    port:curl \
                    port:faad2 \
                    port:fluidsynth \
                    port:gdk-pixbuf2 \
                    port:gnutls \
                    port:graphene \
                    port:libass \
                    port:libdca \
                    port:libdvdread \
                    port:libdvdnav \
                    port:libexif \
                    port:libmms \
                    port:libmodplug \
                    port:libmpcdec \
                    port:librsvg \
                    port:libssh2 \
                    port:mesa \
                    port:libGLU \
                    port:mpg123 \
                    port:nettle \
                    port:openal-soft \
                    port:openexr \
                    port:openjpeg15 \
                    port:orc \
                    port:rtmpdump \
                    port:schroedinger \
                    port:soundtouch \
                    port:spandsp-devel \
                    port:neon \
                    port:webp \
                    port:x265

gobject_introspection yes

# Teach glibtool about -stdlib=libc++
use_autoreconf      yes
autoreconf.args     -fvi

patchfiles          modplug.patch \
                    libressl.patch \
                    no_pqueue_size.patch \
                    pkgconfig.patch \
                    openal.patch

#
# could depend on tons for multimedia stuff +variants
# the following ports are available but don't configure
# and/or build correctly
#
# port:mjpegtools (mpeg2enc mplex build fails) need to disable mpeg2enc mplex explicitly in case mjpegtools is installed
# port:faac has a restrictive license, disable faac plugin by default
# plugin frei0r (no dependency, seqfaults on load)
# port:opencv (opencv plugin requires opencv >= 2.0.0 opencv < 2.5.0 but current version is 3.0.0)
# port:slv2 (builds but lv2 plugin fails to load and slv2 is not universal) disable lv2 explicitly in case slv2 is installed
# port:Xvid plugin xvid not ported in this version
# plugin opus is now contained in gstreamer1-gst-plugins-base, disable this version
# plugins gtk, qt disable by default to avoid opportunistic configuration
#
# the following plugins build opportunisticly due to missing dependencies
# explicitly disabled for now
#

# blacklist compilers that do not support C11 (redefinition of typedef ‘GstTestHTTPSrc’ at elements/test_http_src.c:101)
compiler.blacklist  *gcc* {clang < 300}

configure.args      --disable-silent-rules \
                    --disable-fatal-warnings \
                    --disable-dc1394 \
                    --disable-faac \
                    --disable-frei0r \
                    --disable-gtk3 \
                    --disable-lv2 \
                    --disable-mpeg2enc \
                    --disable-mplex \
                    --disable-opencv \
                    --disable-opus \
                    --disable-qt \
                    --disable-sdltest \
                    --disable-srtp \
                    --enable-experimental \
                    --enable-static

#
# port:soundtouch (fails on autoreconf on darwin 8 & 9, see #27533) disable soundtouch on these platforms
# gl cocoa build continues to fail due to use of API not available on darwin 12 or earlier
# plugin applemedia (Apple video) now only builds on darwin 14 and later due to use of
# constant AVQueuedSampleBufferRenderingStatusFailed introduced in OSX 10.10
# plugin applemedia also fails on Sierra (darwin 16) due to missing QTKit
# chromaprint 1.4+ requires libc++ (see #53072)

platform darwin {
    if {${os.major} < 10} {
        depends_lib-delete      port:soundtouch port:x265
        configure.args-append   --disable-soundtouch --disable-x265
    }
    if {${os.major} < 13 } {
        configure.args-append   --disable-cocoa --disable-opengl
    }
    if {${os.major} < 14 || ${os.major} > 15} {
        configure.args-append   --disable-apple_media
    }
    if {${configure.cxx_stdlib} eq "libstdc++"} {
        configure.args-append   --disable-chromaprint
    } else {
        depends_lib-append      port:chromaprint
    }

    # gstgl doesn't properly handle separation of CGL from MesaGL.  This
    # is a minimal hack to at least get things building.
    # See https://trac.macports.org/ticket/54649
    configure.args-append --disable-gles2
}

#
# X11 is only used for examples that are not installed
# so just disable examples and drop the deprecated +no_x11 variant
#

configure.args-append       --disable-examples

configure.cppflags-append   "-L${prefix}/lib"
configure.cflags-append     -std=c99 -funroll-loops -fstrict-aliasing
configure.env-append        "HAVE_CXX=yes"

variant faac description {Enable faac AAC plugin} {
    depends_lib-append      port:faac
    configure.args-delete   --disable-faac
    notes-append "Use of the +faac variant may affect licensing due to the restrictive license of port faac itself."
}

variant gtk3 description {Enable GTK3 X11/GL windowing elements} {
    depends_lib-append      port:gtk3
    configure.args-delete   --disable-gtk3
}

# gtk3 elements require gtk3 +x11

if {[variant_isset gtk3]} {
    require_active_variants gtk3 x11
}

variant qt description {Enable QT5 MAC windowing elements } {
    PortGroup               qt5 1.0
    PortGroup               cxx11 1.1

    qt5.depends_component   qtdeclarative \
                            qtmacextras

    configure.args-replace  --disable-qt --enable-qt

    # avoid:
    #    ${prefix}/libexec/qt5/include/QtCore/qcompilerdetection.h:562:6: error: Qt requires a C++11 compiler and yours does not seem to be that.
    configure.cxxflags-append -std=c++11
}

if {[variant_isset universal]} {
    set merger_host(x86_64) x86_64-apple-${os.platform}${os.major}
    set merger_host(i386) i686-apple-${os.platform}${os.major}
    set merger_configure_args(x86_64) --build=x86_64-apple-${os.platform}${os.major}
    set merger_configure_args(i386) --build=i686-apple-${os.platform}${os.major}
} else {

    if {${build_arch} eq "i386"} {
        configure.args-append \
            --host=i686-apple-${os.platform}${os.major} \
            --build=i686-apple-${os.platform}${os.major}
    } elseif {${build_arch} eq "x86_64"} {
        configure.args-append \
            --host=${build_arch}-apple-${os.platform}${os.major} \
            --build=${build_arch}-apple-${os.platform}${os.major}
    }
}

# In 1.12.1, --enable-cocoa enables ARC code, so we cannot enable it for i386.
# Remove this in the future if that requirement is removed.
platform darwin {
    if {[variant_isset universal] || ${build_arch} eq "i386"} {
        configure.args-append --disable-cocoa
    }
}

livecheck.type      regex
livecheck.url       ${master_sites}
livecheck.regex     "${my_name}-(\\d+\\\.\\d*\[02468\](?:\\.\\d+)*)${extract.suffix}"
