# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           meson 1.0

name                libgdata
version             0.17.13
set branch          [join [lrange [split ${version} .] 0 1] .]
description         libgdata is a GLib-based library for accessing online service APIs using the \
                    GData protocol --- most notably, Google's services.

long_description    ${description} \
                    It provides APIs to access the common Google services, and has full asynchronous support.

maintainers         {devans @dbevans} openmaintainer
categories          gnome net
license             LGPL-2.1+
platforms           darwin
homepage            https://wiki.gnome.org/Projects/${name}
master_sites        gnome:sources/${name}/${branch}/

use_xz              yes

checksums           rmd160  f34fc36ba282c55c34f440e0aea2daf9988fc9c2 \
                    sha256  eab9ef792c3c2b9ece19d45aea15225aba8df2521bc12785b1b2d3318d8c472e \
                    size    849888

depends_build-append \
                    port:pkgconfig \
                    port:gtk-doc

depends_lib         path:lib/pkgconfig/gtk+-3.0.pc:gtk3 \
                    port:gcr \
                    port:gdk-pixbuf2 \
                    port:gnome-online-accounts \
                    port:gobject-introspection \
                    port:json-glib \
                    port:libsoup \
                    port:libxml2 \
                    port:uhttpmock

configure.args      -Dgtk_doc=true

test.run            yes

if {![info exists universal_possible]} {
    set universal_possible [expr {${os.universal_supported} && [llength ${configure.universal_archs}] >= 2}]
}
# uses g-ir-scanner, which uses $CC from env
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_env(${arch})  "CC=${configure.cc} -arch ${arch}"
        lappend merger_destroot_env(${arch})  "CC=${configure.cc} -arch ${arch}"
    }
} else {
    build.env-append       "CC=${configure.cc} ${configure.cc_archflags}"
    destroot.env-append    "CC=${configure.cc} ${configure.cc_archflags}"
}

livecheck.type      gnome-with-unstable
