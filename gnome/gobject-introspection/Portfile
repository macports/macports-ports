# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           meson 1.0
PortGroup           active_variants 1.1
PortGroup           muniversal 1.1

name                gobject-introspection
conflicts           gobject-introspection-devel
set my_name         gobject-introspection

version             1.72.0
revision            0

categories          gnome
platforms           darwin
# library under LGPL-2+, tools under GPL-2+
license             {LGPL GPL-2+}
maintainers         {mascguy @mascguy} openmaintainer

description         GObject Introspection
long_description    Gobject Introspection acts as a bridge between low-level C+GObject code and \
                    a managed runtime (JavaScript, Python, Java, Lua, .NET, Scheme, etc.).
homepage            https://wiki.gnome.org/Projects/GObjectIntrospection

set branch          [join [lrange [split ${version} .] 0 1] .]
master_sites        gnome:sources/${my_name}/${branch}/
dist_subdir         ${my_name}
distname            ${my_name}-${version}
use_xz              yes

checksums           rmd160  9a340f9c422a0ee215f543e49553405276f3d760 \
                    sha256  02fe8e590861d88f83060dd39cda5ccaa60b2da1d21d0f95499301b186beaabc \
                    size    1040936

set py_ver          3.10
set py_ver_nodot    [string map {. {}} ${py_ver}]

depends_build       port:pkgconfig \
                    port:bison \
                    port:python${py_ver_nodot} \
                    port:py${py_ver_nodot}-cython

depends_lib         path:lib/pkgconfig/cairo.pc:cairo \
                    path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    port:libffi \
                    port:py${py_ver_nodot}-mako \
                    port:py${py_ver_nodot}-markdown

patchfiles          patch-fix-rpath-gir-typelib.diff \
                    patch-fix-scanner-in-build-execution.diff \
                    patch-fix-tools-python.diff

post-patch {
    reinplace "s|libcairo-gobject.2.dylib|${prefix}/lib/libcairo-gobject.2.dylib|g" ${worksrcpath}/gir/meson.build
    reinplace "s|@MP_LIB@|${prefix}/lib/|g" ${worksrcpath}/giscanner/shlibs.py
    reinplace "s|@MP_PYTHON_CMD@|/usr/bin/arch ${configure.python}|g" ${worksrcpath}/tools/meson.build
    reinplace "s|#!/usr/bin/env python3|#!/usr/bin/arch ${configure.python}|g" \
        ${worksrcpath}/misc/update-glib-annotations.py \
        misc/update-gtkdoc-tests.py \
        misc/update-vulkan-gir.py \
        tests/gi-tester
}

configure.python    ${prefix}/bin/python${py_ver}

configure.args      -Ddoctool=enabled \
                    -Dpython=${workpath}/python

post-extract {
    set python_file [open "${workpath}/python" w 0755]
    puts ${python_file} "#!/bin/sh"
    puts ${python_file} "exec /usr/bin/arch ${configure.python} \"$@\""
    close ${python_file}
}

post-destroot {
    reinplace "s|#!/usr/bin/arch ${configure.python}|#!${configure.python}|g" \
        ${destroot}${prefix}/bin/g-ir-annotation-tool \
        ${destroot}${prefix}/bin/g-ir-doc-tool \
        ${destroot}${prefix}/bin/g-ir-scanner
}

# By default, gir will attempt to link programs using
# the same compiler used to build Python itself. However,
# the system clang on 10.6 does not appear to respect
# LIBRARY_PATH, resulting in g-ir-scanner errors such as:
#
# ld: library not found for -lgio-2.0
#
# The following workaround selects a more up-to-date linker
# when building this project. Identical logic already exists
# in the gobject_introspection PortGroup, so dependent projects
# should not require modification.
build.env-append    CC=${configure.cc}

foreach arch ${muniversal.architectures} {
    # There seem to be parts of the build system that do not have the `-arch` flag.
    build.env.${arch}-append    "CFLAGS=${configure.cflags}   [option configure.cc_archflags.${arch}]"
    build.env.${arch}-append    "LDFLAGS=${configure.ldflags} [option configure.ld_archflags.${arch}]"
}

platform darwin 8 {
    # Tiger does not support RPATHs at this time
    patchfiles-append patch-girscanner-tiger-no-rpath.diff

    build.env-append DYLD_LIBRARY_PATH=${workpath}/build/girepository
}

livecheck.type      gnome
livecheck.name      ${my_name}
