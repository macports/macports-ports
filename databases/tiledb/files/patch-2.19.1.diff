These are specific to 2.19.1 and to be dropped with the next release.

--- tiledb/sm/query/readers/test/CMakeLists.txt
+++ tiledb/sm/query/readers/test/CMakeLists.txt
@@ -28,4 +28,5 @@
 
 commence(unit_test readers)
     this_target_sources(main.cc unit_reader_base.cc)
+    this_target_object_libraries(baseline)
 conclude(unit_test)


--- tiledb/sm/misc/test/unit_uuid.cc
+++ tiledb/sm/misc/test/unit_uuid.cc
@@ -40,7 +40,7 @@
 
 using namespace tiledb::sm;
 
-std::mutex catch2_macro_mutex;
+extern std::mutex catch2_macro_mutex;
 
 // A thread-safe variant of the REQUIRE macro.
 #define REQUIRE_SAFE(a)                                   \

--- test/src/unit-cppapi-global-order-writes-remote.cc
+++ test/src/unit-cppapi-global-order-writes-remote.cc
@@ -36,6 +36,7 @@
 
 #include <cstring>
 #include <iostream>
+#include <numeric>
 
 using namespace tiledb;
 
--- test/src/unit-enumerations.cc
+++ test/src/unit-enumerations.cc
@@ -2073,7 +2073,7 @@
 TEST_CASE_METHOD(
     EnumerationFx,
     "Cap'N Proto - Basic New ArraySchema Serialization",
-    "[enumeration][capnp][basic][initialized-in-ram") {
+    "[enumeration][capnp][basic][initialized-in-ram]") {
   auto client_side = GENERATE(true, false);
   auto ser_type = GENERATE(SerializationType::CAPNP, SerializationType::JSON);
 
--- test/src/unit-dimension.cc
+++ test/src/unit-dimension.cc
@@ -273,7 +273,7 @@
 
 TEST_CASE(
     "Dimension: Test map_to_uint64, float32",
-    "[dimension][map_to_uint64][float32") {
+    "[dimension][map_to_uint64][float32]") {
   // Create dimensions
   Dimension d1("d1", Datatype::FLOAT32);
   float dom1[] = {0.0f, 1.0f};
