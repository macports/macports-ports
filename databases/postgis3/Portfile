# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                postgis3
categories          databases gis
license             GPL-2+
version             3.2.0
revision            0
platforms           darwin
maintainers         {vince @Veence} openmaintainer

description         PostGIS is the spatial extension to the\
                    PostGreSQL database.

long_description    PostGIS adds geometrical, geographical and topological\
                    types, and functions operating thereon, to the PostGreSQL\
                    database. It also handles raster tiles and MVT format.

homepage            http://postgis.net/

master_sites        http://download.osgeo.org/postgis/source
distname            postgis-${version}

checksums           rmd160  ac46701c61ef4b86b4346eb9c5f17d5e8bee6cbd \
                    sha256  7ab9e154c6947c0cffb8fa12d70806add9aa060e62b6c86a2e206f9d4b507cfd \
                    size    16884722

depends_build       port:autoconf \
                    port:automake \
                    port:libtool \
                    port:libxslt \
                    port:pkgconfig

depends_lib         port:geos\
                    port:libiconv\
                    port:libxml2\
                    port:json-c\
                    port:protobuf-c

# PostGIS 3.0 is not compatible with prior releases

conflicts           postgis postgis2

# Neither is PostGIS 2.0 compatible with PostGreSQL 8
# Database variants (from the GDAL port)
set postgresql_suffixes {14 13 12}

set postgresql_variants {}

foreach suffix ${postgresql_suffixes} {
    lappend postgresql_variants postgresql${suffix}
}

foreach suffix ${postgresql_suffixes} {
    set vrt postgresql${suffix}
    set pgversion [string index ${suffix} 0].[string index ${suffix} 1]
    set index [lsearch -exact ${postgresql_variants} ${vrt}]
    set conf [lreplace ${postgresql_variants} ${index} ${index}]

    variant ${vrt} \
        conflicts ${conf} \
        description "Use PostgreSQL ${pgversion}" \
        "
        depends_lib-append      port:${vrt}
        configure.args-append   --libdir=${prefix}/lib/${vrt} \
            --with-pgconfig=${prefix}/lib/${vrt}/bin/pg_config
        build.args-append       \
            PGSQL_DOCDIR=${destroot}${prefix}/share/doc/${vrt} \
            PGSQL_MANDIR=${destroot}${prefix}/share/man
        "
}

# postgresql default
set pgdefault "if {"

foreach suffix ${postgresql_suffixes} {
    set pgdefault "${pgdefault}!\[variant_isset postgresql${suffix}\] && "
}

set pgdefault [string range ${pgdefault} 0 end-4]
set pgdefault "${pgdefault}} { default_variants +postgresql14 }"

eval ${pgdefault}

variant raster              description {Build raster support} {

    depends_lib-append      port:gdal
    configure.args-append   --with-raster
    configure.args-append   --with-gdalconfig=${prefix}/bin/gdal-config
}

variant topology            description {Build topology support} {

    configure.args-append   --with-topology
}

variant sfcgal              description {Uses SFCGAL for 3D queries} {
    depends_lib-append      port:sfcgal
    configure.args-append   --with-sfcgal=${prefix}/bin/sfcgal-config
}

variant proj6 description {Build with Proj 6} conflicts proj7 proj8 {
    depends_lib-append      port:proj6
    configure.args-append   PROJ_CFLAGS=-I${prefix}/lib/proj6/include
    configure.args-append   PROJ_LIBS="-L${prefix}/lib/proj6/lib -lproj"
}

variant proj7 description {Build with Proj 7} conflicts proj6 proj8 {
    depends_lib-append      port:proj7
    configure.args-append   PROJ_CFLAGS=-I${prefix}/lib/proj7/include
    configure.args-append   PROJ_LIBS="-L${prefix}/lib/proj7/lib -lproj"
}

variant proj8 description {Build with Proj 8} conflicts proj6 proj7 {
    depends_lib-append      port:proj8
    configure.args-append   PROJ_CFLAGS=-I${prefix}/lib/proj8/include
    configure.args-append   PROJ_LIBS="-L${prefix}/lib/proj8/lib -lproj"
}

default_variants            +raster +topology

if {![variant_isset proj6] && ![variant_isset proj7] && ![variant_isset proj8]} {
    default_variants        +proj8
}

# Port phases

configure.cflags-append \
    -Diconv=libiconv -Diconv_open=libiconv_open -Diconv_close=libiconv_close

# see https://trac.macports.org/wiki/UsingTheRightCompiler
configure.env-append    CPPBIN=${configure.cpp}

post-configure {
    if {[variant_exists universal] && [variant_isset universal]} {
        # We must add universal flags to compile liblwgeom properly
        file copy ${filespath}/ed_command ${worksrcpath}/ed_command
        reinplace -E "s#XXX#${configure.universal_cflags}#" \
                    ${worksrcpath}/ed_command
        system -W ${worksrcpath}/liblwgeom \
                "ed Makefile < ${worksrcpath}/ed_command"
    }
}

build.args                  ICONV_LDFLAGS='-L${prefix}/lib -liconv'
use_parallel_build          yes 

notes                       "\
                            ! This version comes with the following warning if you use postgresql14:\
                            ‘Due to some query performance degradation with the new fast index build\
                            that requires PG14, we have decided to disable the feature by default\
                            until we get more user testing as to the true impact of real-world queries.\
                            If you are running PG14+, you can reenable it by doing: \
                            \
                                ALTER OPERATOR FAMILY gist_geometry_ops_2d USING gist \
                                    ADD FUNCTION 11 (geometry) \
                                        geometry_gist_sortsupport_2d (internal); \
                            \
                            and then reindex your gist indexes.\
                            To revert back to the old index behavior:\
                            \
                                ALTER OPERATOR FAMILY gist_geometry_ops_2d using gist\
                                    DROP FUNCTION 11 (geometry);\
                            \
                            and then reindex your gist indexes.’"

livecheck.type              regex
livecheck.url               ${master_sites}
livecheck.regex             {postgis2?-(\d+(?:\.\d+)*)\.[tz]}
