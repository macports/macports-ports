# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                postgis3
categories          databases gis
license             GPL-2+
version             3.0.2
revision            2
platforms           darwin
maintainers         {vince @Veence} openmaintainer

description         PostGIS is the spatial extension to the\
                    PostGreSQL database.

long_description    PostGIS adds geometrical, geographical and topological\
                    types, and functions operating thereon, to the PostGreSQL\
                    database. It also handles raster tiles and MVT format.

homepage            http://postgis.net/

master_sites        http://download.osgeo.org/postgis/source
distname            postgis-${version}

checksums           rmd160  943a38414ad29b6849402db2cce1523e7a96b7d6 \
                    sha256  a3a1641dfd73c83924088a185bdb8b35567b3d1dc8d0887f9e4b492e228ab2ca \
                    size    16855299

depends_build       port:autoconf \
                    port:automake \
                    port:libtool \
                    port:libxslt

depends_lib         port:geos\
                    port:libiconv\
                    port:libxml2\
                    port:json-c

# PostGIS 2.0 is not compatible with PostGIS 1.5

conflicts           postgis postgis2

# Neither is PostGIS 2.0 compatible with PostGreSQL 8
# Database variants (from the GDAL port)
set postgresql_suffixes {12 11 10}

set postgresql_variants {}

foreach suffix ${postgresql_suffixes} {
    lappend postgresql_variants postgresql${suffix}
}

foreach suffix ${postgresql_suffixes} {
    set vrt postgresql${suffix}
    set pgversion [string index ${suffix} 0].[string index ${suffix} 1]
    set index [lsearch -exact ${postgresql_variants} ${vrt}]
    set conf [lreplace ${postgresql_variants} ${index} ${index}]

    variant ${vrt} \
        conflicts ${conf} \
        description "Use PostgreSQL ${pgversion}" \
        "
        depends_lib-append      port:${vrt}
        configure.args-append   --libdir=${prefix}/lib/${vrt} \
            --with-pgconfig=${prefix}/lib/${vrt}/bin/pg_config
        build.args-append       \
            PGSQL_DOCDIR=${destroot}${prefix}/share/doc/${vrt} \
            PGSQL_MANDIR=${destroot}${prefix}/share/man 
        " 
}

# postgresql default
set pgdefault "if {"

foreach suffix ${postgresql_suffixes} {
    set pgdefault "${pgdefault}!\[variant_isset postgresql${suffix}\] && "
}

set pgdefault [string range ${pgdefault} 0 end-4]
set pgdefault "${pgdefault}} { default_variants +postgresql12 }"

eval ${pgdefault}

variant raster              description {Build raster support} {

    depends_lib-append      port:gdal
    configure.args-append   --with-raster
}

variant topology            description {Build topology support} {

    configure.args-append   --with-topology
}

variant sfcgal              description {Uses SFCGAL for 3D queries} {
    depends_lib-append      port:sfcgal
    configure.args-append   --with-sfcgal=${prefix}/bin/sfcgal-config
}

variant proj6 conflicts proj7 {
    depends_lib-append      port:proj6
    configure.args-append   --with-projdir=${prefix}/lib/proj6
}

variant proj7 conflicts proj6 {
    depends_lib-append      port:proj7
    configure.args-append   --with-projdir=${prefix}/lib/proj7
}

default_variants            +raster +topology
if {![variant_isset proj6] && ![variant_isset proj7]} {
    default_variants        +proj7
}

# Port phases

configure.cflags-append \
    -Diconv=libiconv -Diconv_open=libiconv_open -Diconv_close=libiconv_close 

# see https://trac.macports.org/wiki/UsingTheRightCompiler
configure.env-append    CPPBIN=${configure.cpp}

post-configure {
    if {[variant_isset universal]} {
        # We must add universal flags to compile liblwgeom properly
        file copy ${filespath}/ed_command ${worksrcpath}/ed_command
        reinplace -E "s#XXX#${configure.universal_cflags}#" \
                    ${worksrcpath}/ed_command
        system -W ${worksrcpath}/liblwgeom \
                "ed Makefile < ${worksrcpath}/ed_command"
    }
}

build.args                  ICONV_LDFLAGS='-L${prefix}/lib -liconv'
use_parallel_build          no

livecheck.type              regex
livecheck.url               ${master_sites}
livecheck.regex             {postgis2?-(\d+(?:\.\d+)*)\.[tz]}
