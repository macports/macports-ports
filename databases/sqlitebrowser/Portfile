# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        sqlitebrowser sqlitebrowser 3.11.2 v
revision            1

categories          databases
platforms           darwin linux
license             GPL-3
maintainers         {@i0ntempest me.com:szf1234} openmaintainer

description         GUI editor for SQLite databases
long_description    SQLite Database Browser is a visual tool used to create, design and edit \
                    database files compatible with SQLite. Its interface is based on Qt, and is \
                    meant to be used by users and developers who want to create databases or edit \
                    and search data using a familiar spreadsheet-like interface, without the need \
                    to learn complicated SQL commands. Controls and wizards are available for users \
                    to: \
                    * Create and compact database files \
                    * Create, define, modify and delete tables \
                    * Create, define and delete indexes \
                    * Browse, edit, add and delete records \
                    * Search records \
                    * Import and export records as text \
                    * Import and export tables from/to CSV files \
                    * Import and export databases from/to SQL dump files \
                    * Issue SQL queries and inspect the results \
                    * Examine a log of all SQL commands issued by the application. \
                    SQLite Database Browser is not a visual shell for the sqlite command line tool. \
                    It does not require familiarity with SQL commands.

homepage            http://sqlitebrowser.org

checksums           rmd160  f1e925b87be61b9badba625b3847dd403860cc28 \
                    sha256  62d1385c16d771758c7dd36612f5b8c0dffbd37bc40a4c23efc3b0243779291e \
                    size    2530537

# Exclude pre-release candidates
github.livecheck.regex  {([0-9.]+)}

universal_variant   no

depends_lib-append  port:antlr \
                    port:qscintilla-qt5

patchfiles-append   0001-Changes-for-MacPorts.patch
patch.pre_args      -p1

compiler.cxx_standard 2011

platform darwin {
    PortGroup           qmake5 1.0

    configure.args-append \
                        CONFIG+=c++11 \
                        INCLUDEPATH+=${qt_includes_dir} \
                        QMAKE_LIBDIR+=${qt_libs_dir}

    # Uses QSysInfo::buildAbi and QSysInfo::currentCpuArchitecture
    qt5.min_version     5.4

    pre-configure {
        reinplace "s|libs/antlr-2.7.7/antlr.pro||g" ${worksrcpath}/sqlitebrowser.pro
        reinplace "s|libs/qscintilla/Qt4Qt5/qscintilla.pro||g" ${worksrcpath}/sqlitebrowser.pro
        reinplace "s|-lqscintilla2|-lqscintilla2_qt5|g" ${worksrcpath}/src/src.pro
        reinplace "s|\$\$PWD/../libs/antlr-2.7.7||g" ${worksrcpath}/src/src.pro
        reinplace "s|\$\$PWD/../libs/qscintilla/Qt4Qt5||g" ${worksrcpath}/src/src.pro
        delete ${worksrcpath}/libs/antlr-2.7.7 ${worksrcpath}/libs/qscintilla
    }

    depends_lib-append  port:sqlite3
    qt5.depends_component \
                        qtmacextras qttools

    destroot {
            copy "${worksrcpath}/src/DB Browser for SQLite.app" ${destroot}${applications_dir}
    }

    post-destroot {
            ln -s "${applications_dir}/DB Browser for SQLite.app/Contents/MacOS/DB Browser for SQLite" ${destroot}${prefix}/bin/sqlitebrowser
    }
}

platform linux {
    PortGroup       qt5 1.0
    PortGroup       cmake 1.1

    qt5.min_version 5.4

    qt5.depends_component \
                    qtmacextras qttools
    cmake.install_rpath-prepend \
                    ${qt_libs_dir} ${prefix}/lib
    configure.args-append \
                    -DCMAKE_PREFIX_PATH=${prefix} \
                    -DQSCINTILLA_INCLUDE_DIR=${qt_includes_dir} \
                    -DQT_LIBRARY_DIR=${qt_libs_dir}
    if {[info procs cmake.save_configure_cmd] ne ""} {
        # create a .macports-$subport-configure.cmd file containing the cmake invocation details
        # (provided by a pending update to cmake-1.1
        cmake.save_configure_cmd "log too"
    }
}
