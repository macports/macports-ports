# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           deprecated 1.0

# New 5.6.x releases will be available until 2021-02;
# however, support for macOS has ended early (2018-10-19)
deprecated.upstream_support no

name                mysql56
set name_mysql      ${name}
version             5.6.49
# Set revision_client and revision_server to 0 on
# version bump.
set revision_client 0
set revision_server 0
set version_branch  [join [lrange [split ${version} .] 0 1] .]
categories          databases
platforms           darwin
license             GPL-2
maintainers         nomaintainer
homepage            https://www.mysql.com/

if {$subport eq $name} {

    PortGroup           muniversal 1.0
    PortGroup           cmake 1.0
    PortGroup           select 1.0

    revision            ${revision_client}
    license             GPL-2
    description         Multithreaded SQL database server
    long_description    MySQL is an open-source, multi-threaded SQL database.

    master_sites        mysql:MySQL-${version_branch}

    distname            mysql-${version}
    cmake.out_of_source yes
    use_parallel_build  yes

    # gcc-4.2 could not meed the atomics requirements
    # https://trac.macports.org/ticket/60400
    compiler.blacklist-append *gcc-3.* *gcc-4.*

    patch.pre_args      -p1
    patchfiles          patch-cmake-install_layout.cmake.diff

    # Fix detection of htonll/ntohll.
    patchfiles-append   patch-configure.cmake.diff \
                        patch-innodb_memcached-daemon_memcached-include-memcached-util.h.diff

    # Patch scripts/* files that do not find configuration, support and binary files.
    patchfiles-append   patch-scripts-mysql_install_db.pl.in.diff \
                        patch-scripts-mysql_secure_installation.pl.in.diff

    # we have to slightly alter this script as we change the name of the
    # VERSION file to VERSION.txt below (c++17 conflict)
    patchfiles-append   patch-mysql56-version-change.diff

    # Add missing `#include <string>`
    patchfiles-append   patch-storage-innobase-handler-i_s.cc.diff

    checksums           rmd160  42c4d1bc553133438f3367e0aa8b537b135c3e78 \
                        sha256  75dc58ed62e3b1e5a332b8857f8d67e9043c1a6d7ba49a87bea6ae7c705f81f2 \
                        size    32402099

    depends_lib-append  path:lib/libssl.dylib:openssl \
                        port:ncurses \
                        port:tcp_wrappers \
                        port:zlib

    depends_run-append  port:mysql_select

    select.group        mysql
    select.file         ${filespath}/${name_mysql}

    post-extract {
        file mkdir ${cmake.build_dir}/macports
        copy ${filespath}/macports-default.cnf \
            ${filespath}/my.cnf \
            ${cmake.build_dir}/macports/

        # c++17 has a header conflict with VERSION files
        move ${worksrcpath}/VERSION \
             ${worksrcpath}/VERSION.txt
        move ${worksrcpath}/storage/ndb/VERSION \
             ${worksrcpath}/storage/ndb/VERSION.txt

    }

    post-patch {
        reinplace "s|@NAME@|${name_mysql}|g" \
            ${worksrcpath}/cmake/install_layout.cmake
        reinplace "s|@WORKSRCPATH@|${worksrcpath}|g" \
            ${worksrcpath}/cmake/install_layout.cmake
        reinplace "s|@NAME@|${name_mysql}|g" \
            ${cmake.build_dir}/macports/macports-default.cnf \
            ${cmake.build_dir}/macports/my.cnf
        reinplace "s|@PREFIX@|${prefix}|g" \
            ${cmake.build_dir}/macports/macports-default.cnf \
            ${cmake.build_dir}/macports/my.cnf
        reinplace "s|@SYSCONFDIR@|/etc/${name_mysql}|g" \
            ${worksrcpath}/scripts/mysql_install_db.pl.in
        reinplace "s|@SUPPORTFILESDIR@|share/${name_mysql}/support-files|g" \
            ${worksrcpath}/scripts/mysql_install_db.pl.in
        reinplace "s|@BINDIR@|${prefix}/lib/${name}/bin|g" \
            ${worksrcpath}/scripts/mysql_secure_installation.pl.in

        # don't force /usr/bin/libtool -- allow cctools' version to be used
        reinplace "s|/usr/bin/libtool|libtool|g" \
            ${worksrcpath}/cmake/libutils.cmake

    }

    configure.args-delete \
                        -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib
    configure.args-append \
                        -DCMAKE_INSTALL_NAME_DIR:STRING=${prefix}/lib/${name_mysql}/mysql \
                        -DINSTALL_LAYOUT:STRING=MACPORTS \
                        -DSYSCONFDIR:PATH=${prefix}/etc/${name_mysql} \
                        -DMYSQL_UNIX_ADDR:PATH=${prefix}/var/run/${name_mysql}/mysqld.sock \
                        -DMYSQL_DATADIR:PATH=${prefix}/var/db/${name_mysql} \
                        -DDEFAULT_CHARSET:STRING=utf8 \
                        -DDEFAULT_COLLATION:STRING=utf8_general_ci \
                        -DWITH_EMBEDDED_SERVER:BOOL=ON \
                        -DWITH_ZLIB:STRING=system \
                        -DWITH_UNIT_TESTS:BOOL=ON \
                        -DENABLE_DOWNLOADS:BOOL=OFF \
                        -DENABLE_GCOV:BOOL=OFF \
                        -DENABLE_DTRACE:BOOL=OFF \
                        -DWITH_LIBWRAP:BOOL=ON \
                        -DWITH_SSL:STRING=${prefix} \
                        -DWITH_INNODB_MEMCACHED=1 \
                        -DWITH_PARTITION_STORAGE_ENGINE=1
    configure.cppflags-delete \
                        -I${prefix}/include

    post-destroot {
        # proc portdestroot::destroot_finish fails to find and compress our man pages
        # so borrow the compress command and run on our files now.
        set manpath "${destroot}${prefix}/share/man"
        set gzip [findBinary gzip ${portutil::autoconf::gzip_path}]
        foreach manpage [glob -type f ${destroot}${prefix}/share/man/${name_mysql}/man\[1-9\]/*] {
            # Fix paths in manpages
            reinplace -q "s|/etc/|${prefix}/etc/${name_mysql}/|g" ${manpage}
            # Compress all manpages with gzip
            system "$gzip -9vf ${manpage}"
        }
        foreach samp_conffile [glob -type f ${destroot}${prefix}/share/${name_mysql}/support-files/my-*.cnf] {
            # Fix paths in sample configuration files
            reinplace -q "s|/etc/my.cnf|${prefix}/etc/${name_mysql}/my.cnf|g" ${samp_conffile}
        }
        xinstall -m 755 -o root -d \
            ${destroot}${prefix}/etc/${name_mysql}
        copy ${cmake.build_dir}/macports/macports-default.cnf \
            ${destroot}${prefix}/etc/${name_mysql}/
        xinstall -m 755 -o root -d \
            ${destroot}${prefix}/share/${name_mysql}/support-files/macports
        copy ${cmake.build_dir}/macports/my.cnf \
            ${destroot}${prefix}/share/${name_mysql}/support-files/macports/
    }

    post-install {
        if {![file exists ${prefix}/etc/LaunchDaemons/org.macports.${name_mysql}/org.macports.${name_mysql}-server.plist]} {
            ui_msg "The ${name_mysql} client has been installed."
            ui_msg "To install the ${name_mysql} server, install the ${name_mysql}-server port."
        }
    }

    post-activate {
        if {![file exists ${prefix}/etc/${name_mysql}/my.cnf]} {
            copy ${prefix}/share/${name_mysql}/support-files/macports/my.cnf \
                ${prefix}/etc/${name_mysql}/
        }
    }

    notes "
On activation if no ${prefix}/etc/${name_mysql}/my.cnf file exists one
will be created which loads
${prefix}/etc/${name_mysql}/macports-default.cnf.

If a ${prefix}/etc/${name_mysql}/my.cnf file exists MacPorts does not
touch it and any changes you make to ${prefix}/etc/${name_mysql}/my.cnf
will be preserved (e.g., during port upgrades, deactivations or
activations). ${prefix}/etc/${name_mysql}/my.cnf is a good place to
customize your ${name_mysql} installation.

Any changes made to ${prefix}/etc/${name_mysql}/macports-default.cnf
will be lost during port upgrades, deactivations or activations so you
are advised to not make changes here. Currently
${prefix}/etc/${name_mysql}/macports-default.cnf contains only one
directive; to disable networking. With disabled networking it is
possible to install and have running all the MacPorts mysql ports
simultaneously.
"

    livecheck.type          regex
    livecheck.url           https://dev.mysql.com/downloads/mysql/${version_branch}.html
    livecheck.regex         "MySQL Community Server (${version_branch}(\.\[0-9.\]+)?)"
}

subport ${name_mysql}-server {

    revision            ${revision_server}
    license             BSD
    description         Run ${name_mysql} as server
    long_description    {*}${description}

    supported_archs     noarch
    distfiles

    depends_run         port:${name_mysql}

    if {"darwin" eq ${os.platform} && ${os.major} > 8} {
        set mysqluser       _mysql
    } else {
        set mysqluser       mysql
    }
    add_users ${mysqluser} group=${mysqluser} realname=MySQL\ Server

    pre-extract {
        copy ${filespath}/org.macports.mysql-server.plist ${workpath}/org.macports.${subport}.plist
    }

    post-patch {
        reinplace "s|@NAME@|${subport}|g" \
            ${workpath}/org.macports.${subport}.plist
        reinplace "s|@NAMEMYSQL@|${name_mysql}|g" \
            ${workpath}/org.macports.${subport}.plist
        reinplace "s|@PREFIX@|${prefix}|g" \
            ${workpath}/org.macports.${subport}.plist
        reinplace "s|@SUBPORT@|${subport}|g" \
            ${workpath}/org.macports.${subport}.plist
        reinplace "s|@USER@|${mysqluser}|g" \
            ${workpath}/org.macports.${subport}.plist
        reinplace "s|@GROUP@|${mysqluser}|g" \
            ${workpath}/org.macports.${subport}.plist
    }
    
    use_configure       no

    build {}

    destroot {
        xinstall -d -m 755 ${destroot}${prefix}/etc/LaunchDaemons/org.macports.${subport}
        xinstall -m 0644 -o root -W ${workpath} \
            org.macports.${subport}.plist \
            ${destroot}${prefix}/etc/LaunchDaemons/org.macports.${subport}
        xinstall -d -m 755 ${destroot}/Library/LaunchDaemons
        ln -s ${prefix}/etc/LaunchDaemons/org.macports.${subport}/org.macports.${subport}.plist \
            ${destroot}/Library/LaunchDaemons/org.macports.${subport}.plist
        xinstall -m 755 -o root -d \
            ${destroot}${prefix}/var/run
        xinstall -m 755 -o ${mysqluser} -g ${mysqluser} -d \
            ${destroot}${prefix}/etc/${name_mysql} \
            ${destroot}${prefix}/var/db/${name_mysql} \
            ${destroot}${prefix}/var/log/${name_mysql} \
            ${destroot}${prefix}/var/run/${name_mysql}
        destroot.keepdirs-append  \
            ${destroot}${prefix}/var/db/${name_mysql} \
            ${destroot}${prefix}/var/log/${name_mysql} \
            ${destroot}${prefix}/var/run/${name_mysql}
    }

    notes "
If this is a new install you might want to run:

\$ sudo -u ${mysqluser} ${prefix}/lib/${name_mysql}/bin/mysql_install_db
"

    livecheck.type          none
}
