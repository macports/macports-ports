# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github 1.0
PortGroup           muniversal 1.0

epoch               1
github.setup        mongodb mongo 4.4.1 r
revision            0
checksums           rmd160  d6d595b0bd80e30aaaddf48e754aeed6bfe91295 \
                    sha256  5a2ee786c75f18545f62cd21bcb7a47dee5cd71bb357e066654283f199cd8751 \
                    size    49644743

name                mongodb
license             SSPL
categories          databases
platforms           darwin
maintainers         {ryandesign @ryandesign}

description         High-performance, schema-free document-oriented database
long_description    ${description}

homepage            https://www.mongodb.com/community
master_sites        https://fastdl.mongodb.org/src
distname            ${name}-src-r${version}

depends_build       port:python38 \
                    port:py38-cheetah \
                    port:py38-psutil \
                    port:py38-regex \
                    port:py38-setuptools \
                    port:py38-yaml

depends_lib         port:curl \
                    port:cyrus-sasl2 \
                    port:libpcap \
                    port:libstemmer \
                    port:pcre \
                    port:snappy \
                    port:yaml-cpp \
                    port:zlib \
                    port:zstd

use_configure       no

compiler.c_standard 2011
compiler.cxx_standard 2017

# This matches a version check of __apple_build_version__ in SConstruct.
compiler.blacklist-append {clang < 1001.0.46}

# It sets its own optimization flags via the --opt flag.
configure.optflags

# -L flags are handled via LIBPATH.
configure.ldflags-delete -L${prefix}/lib

build.cmd           ${prefix}/bin/python3.8 buildscripts/scons.py
build.target        install-core
build.args          CC="${configure.cc}" \
                    CPPPATH="${prefix}/include" \
                    CXX="${configure.cxx}" \
                    DESTDIR="${destroot}" \
                    LIBPATH="${prefix}/lib" \
                    PREFIX="${prefix}" \
                    --disable-warnings-as-errors \
                    --enable-http-client=on \
                    --install-action=hardlink \
                    --libc++ \
                    --opt=size \
                    --release \
                    --ssl=on \
                    --use-sasl-client \
                    --use-system-pcre \
                    --use-system-snappy \
                    --use-system-stemmer \
                    --use-system-yaml \
                    --use-system-zlib \
                    --use-system-zstd \
                    --wiredtiger=on

# It should build with --use-system-asio, but doesn't:
# TODO: Report bug and put link here

# It should build with --use-system-icu, but doesn't:
# TODO: Report bug and put link here

# Do not build mongoc_embedded.
# See https://jira.mongodb.org/browse/SERVER-44592
build.args-append   --use-system-mongo-c=off

# Specify a short variant dir because the default variant dir is deeply nested
# and can be very long, so long that on some systems the build will fail with
# "Argument list too long"; see https://jira.mongodb.org/browse/SERVER-13829
build.args-append   VARIANT_DIR=MP

# i386 was never supported on macOS.
# See https://jira.mongodb.org/browse/SERVER-22810
supported_archs     arm64 x86_64

array set merger_build_args {arm64 "TARGET_ARCH=aarch64" x86_64 "TARGET_ARCH=x86_64"}
foreach a ${supported_archs} {
    lappend merger_build_args($a) \
                    CCFLAGS="${configure.cflags} -arch ${a}" \
                    CXXFLAGS="${configure.cxxflags} -arch ${a}" \
                    LINKFLAGS="${configure.ldflags} -arch ${a}" \
}
if {![variant_isset universal] && [info exists merger_build_args(${build_arch})]} {
    build.args-append {*}$merger_build_args(${build_arch})
}

set dbdir           ${prefix}/var/db/mongodb
set logdir          ${prefix}/var/log/mongodb
set docdir          ${prefix}/share/doc/mongodb
set mongouser       _mongo
add_users           ${mongouser} group=${mongouser} realname=MongoDB\ Server

destroot {
    # The programs have already been installed into the destroot during
    # the build phase because I don't know how to prevent it from doing
    # that. Documentation files have also already been installed to an
    # unreasonable location so move them.
    xinstall -d ${destroot}${docdir}
    foreach f [glob ${destroot}${prefix}/*] {
        if {[file isfile ${f}]} {
            move ${f} ${destroot}${docdir}
        }
    }

    xinstall -m 0755 -o ${mongouser} -g ${mongouser} -d \
        ${destroot}${dbdir} \
        ${destroot}${logdir}
    destroot.keepdirs-append  \
        ${destroot}${dbdir} \
        ${destroot}${logdir}
}

startupitem.create      yes
startupitem.executable  sudo -u ${mongouser} ${prefix}/bin/mongod --dbpath ${dbdir} --logpath ${logdir}/mongodb.log --logappend

if {${os.platform} eq "darwin" && ${os.major} < 16} {
    known_fail          yes
    depends_build
    depends_lib
    pre-fetch {
        ui_error "${name} @${version} requires macOS 10.12 or greater"
        return -code error "incompatible OS X version"
    }
}

if {${os.platform} eq "darwin" && ${os.major} >= 16 && [vercmp ${os.version} 18.2.0] < 0} {
    notes-append {
        Warning: MONGODB MAY LOSE DATA if it crashes on macOS 10.14.0 or\
        earlier and the database is on an APFS volume. This problem is fixed\
        in macOS 10.14.1 and later so please update your operating system or\
        make sure your database is on a Mac OS Extended (Journaled) volume.\
        See https://jira.mongodb.org/browse/WT-4112 for more information.
    }
}

github.livecheck.regex  {([0-9.]+)}
