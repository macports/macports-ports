# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           xcode_workaround 1.0
PortGroup           makefile 1.0

name                redis
version             6.0.1
categories          databases
platforms           darwin
license             BSD

maintainers         {gmail.com:davidgilman1 @dgilman} openmaintainer

description         Redis is an open source, advanced key-value store.
long_description    {*}${description}

homepage            https://redis.io/
master_sites        http://download.redis.io/releases/

checksums           rmd160  b6b3c04aa80bf8df6ff0476482c3cb929bc102c2 \
                    sha256  b8756e430479edc162ba9c44dc89ac394316cd482f2dc6b91bcd5fe12593f273 \
                    size    2204138

patchfiles          patch-redis.conf.diff

post-patch {
    reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/redis.conf
}

use_configure       no

# see ${worksrcpath}/deps/jemalloc/Makefile
compiler.cxx_standard   2014
configure.cxx-append    -std=c++14

# https://trac.macports.org/ticket/59245
xcode_workaround.fixed_xcode_version 11.2
xcode_workaround.type append_to_compiler_name

if {[string match *clang* ${configure.cxx}]} {
    configure.cxx-append -stdlib=${configure.cxx_stdlib}
}

# redis and dep makefiles have their own optflags
configure.optflags

# avoid build conflict with lua
configure.cppflags-replace \
                    -I${prefix}/include \
                    -isystem${prefix}/include

# redis doesn't know about CPPFLAGS so pass it this way
build.args-append   REDIS_CFLAGS=${configure.cppflags}

# disable silent rules
build.args-append   V=1

# https://github.com/antirez/redis/issues/7254
# We have to define environment variables in both
# build and destroot to work around bugs in the Makefile
# that would cause the destroot's make install to compile
# redis twice.

foreach mp_phase {build destroot} {
    # use jemalloc
    ${mp_phase}.args-append   MALLOC=jemalloc

    # enable TLS.
    ${mp_phase}.args-append   BUILD_TLS=yes
}

# more TLS
depends_lib         port:openssl

destroot.keepdirs   ${destroot}${prefix}/var/db/redis

if {![variant_isset universal]} {
    destroot.args-append PREFIX=${destroot}${prefix}
} else {
    foreach arch ${configure.universal_archs} {
        lappend merger_destroot_args(${arch}) PREFIX=${destroot}-${arch}${prefix}
    }
}

post-destroot {
    foreach conffile {redis.conf sentinel.conf} {
        xinstall -m 0644 ${worksrcpath}/${conffile} \
            ${destroot}${prefix}/etc/${conffile}.sample
    }

    # https://github.com/antirez/redis/pull/3494
    foreach dup_binary {redis-check-aof redis-check-rdb} {
        delete ${destroot}${prefix}/bin/${dup_binary}
        ln -s redis-server ${destroot}${prefix}/bin/${dup_binary}
    }
}

post-activate {
    foreach conffile {redis.conf sentinel.conf} {
        if {![file exists ${prefix}/etc/${conffile}]} {
            file copy ${prefix}/etc/${conffile}.sample ${prefix}/etc/${conffile}
        }
    }
    xinstall -d ${prefix}/var/log
    touch ${prefix}/var/log/redis.log
}

startupitem.create  yes
startupitem.executable  ${prefix}/bin/redis-server ${prefix}/etc/redis.conf

notes "
If you prefer to start a redis server manually, rather than using 'port load', then use this command:

    redis-server ${prefix}/etc/redis.conf
"

livecheck.regex     ${name}-(\\d+.\\d+.\\d+)
