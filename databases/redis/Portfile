# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           xcode_workaround 1.0

name                redis
version             5.0.7
categories          databases
platforms           darwin
license             BSD

maintainers         {gmail.com:davidgilman1 @dgilman} openmaintainer

description         Redis is an open source, advanced key-value store.
long_description    ${description}

homepage            https://redis.io/
master_sites        http://download.redis.io/releases/

checksums           rmd160  0490b980daaba10d5697af8b8b719c6ab54a821c \
                    sha256  61db74eabf6801f057fd24b590232f2f337d422280fd19486eca03be87d3a82b \
                    size    1984203

patchfiles          patch-redis.conf.diff

post-patch {
    reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/redis.conf
}

use_configure       no

# see ${worksrcpath}/deps/jemalloc/Makefile
compiler.cxx_standard   2014
configure.cxx-append    -std=c++14

# https://trac.macports.org/ticket/59245
xcode_workaround.fixed_xcode_version 11.2
xcode_workaround.type append_to_compiler_name

if {[string match *clang* ${configure.cxx}]} {
    configure.cxx-append -stdlib=${configure.cxx_stdlib}
}

if {${configure.sdkroot} ne ""} {
    configure.cc-append     -isysroot${configure.sdkroot}
    configure.cxx-append    -isysroot${configure.sdkroot}
}

if {![variant_isset universal]} {
    build.args-append \
        CC="${configure.cc} [get_canonical_archflags cc]" \
        CXX="${configure.cxx} [get_canonical_archflags cxx]"
} else {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_args(${arch}) CC='${configure.cc} -arch ${arch}' \
                                           CXX='${configure.cxx} -arch ${arch}'
    }
}

# disable silent rules
build.args-append   V=1

# use jemalloc
build.args-append   MALLOC=jemalloc

destroot.keepdirs   ${destroot}${prefix}/var/db/redis

if {![variant_isset universal]} {
    destroot.args-append PREFIX=${destroot}${prefix}
} else {
    foreach arch ${configure.universal_archs} {
        lappend merger_destroot_args(${arch}) PREFIX=${destroot}-${arch}${prefix}
    }
}

post-destroot {
    xinstall -m 0644 ${worksrcpath}/redis.conf \
        ${destroot}${prefix}/etc/redis.conf.sample
}

post-activate {
    if {![file exists ${prefix}/etc/redis.conf]} {
        file copy ${prefix}/etc/redis.conf.sample ${prefix}/etc/redis.conf
    }
    xinstall -d ${prefix}/var/log
    touch ${prefix}/var/log/redis.log
}

startupitem.create  yes
startupitem.executable  ${prefix}/bin/redis-server ${prefix}/etc/redis.conf

notes "
If you prefer to start a redis server manually, rather than using 'port load', then use this command:

    redis-server ${prefix}/etc/redis.conf
"

livecheck.regex     ${name}-(\\d+.\\d+.\\d+)
