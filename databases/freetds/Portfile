# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                freetds
epoch               1
version             1.00.91
categories          databases
platforms           darwin
maintainers         {ryandesign @ryandesign} openmaintainer
# libs are LGPL, tdspool executable is GPL
license             {GPL-2+ LGPL}

description         A set of libraries for Unix and Linux that allows your programs to natively \
                    talk to Microsoft SQL Server and Sybase databases

long_description    FreeTDS is an open source implementation of the TDS (Tabular DataStream) \
                    protocol used by these databases for their own clients. It supports many \
                    different flavors of the protocol and supports several APIs to access it. \
                    Additionally FreeTDS works with other software such as Perl and PHP, \
                    providing access from those languages as well. There is also a native (type 4) \
                    JDBC driver available for platform-independent Java clients (including Java \
                    Server Pages applications), with support for most of the JDBC 1 API and \
                    portions of the JDBC 2 API.

homepage            http://www.freetds.org/
master_sites        ftp://ftp.freetds.org/pub/${name}/stable/
use_bzip2           yes

checksums           rmd160  d86f4928204fd3de3d2145ecccc45c0bb50ab3b0 \
                    sha256  4218c83dc7d8f8c6e1f53b7d40233226ac5c3cf407de00b21952c0dd3a218311 \
                    size    2152567

depends_lib         port:libiconv \
                    port:ncurses \
                    path:lib/libssl.dylib:openssl \
                    port:readline

configure.args      --disable-silent-rules \
                    --includedir=${prefix}/include/${name} \
                    --sysconfdir=${prefix}/etc/${name} \
                    --with-libiconv-prefix=${prefix}

use_parallel_build  yes

post-destroot {
    # rename the freetds conf files so we don't clobber any existing ones
    foreach file [list "freetds.conf" "locales.conf" "pool.conf"] {
        move ${destroot}${prefix}/etc/freetds/${file} ${destroot}${prefix}/etc/freetds/${file}.sample
    }
}

post-activate {
    # copy over freetds sample files if none exists
    foreach file [list "freetds.conf" "locales.conf" "pool.conf"] {
        if {![file exists ${prefix}/etc/freetds/${file}]} {
            ui_msg "Configuration file ${file} does not exist and has been created using"
            ui_msg "    ${prefix}/etc/freetds/${file}.sample"
            file copy ${prefix}/etc/freetds/${file}.sample ${prefix}/etc/freetds/${file}
        } else {
            ui_msg "Configuration file ${file} exists and has been retained."
            ui_msg "(The distribution's version has been installed to ${prefix}/etc/freetds/${file}.sample)"
        }
    }
}

variant mssql description {Use MS style dblib} {
    configure.args-append --enable-msdblib --with-tdsver=7.4
}

variant odbc conflicts iodbc description {Build odbc driver against unixODBC} {
    depends_lib-append port:unixODBC
    configure.args-append --with-unixodbc=${prefix}
}

variant iodbc conflicts odbc description {Build odbc driver against iODBC} {
    depends_lib-append port:libiodbc
    configure.args-append --with-iodbc=${prefix}
}
