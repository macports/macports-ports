# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           muniversal 1.0

github.setup        lz4 lz4 1.9.0 v
categories          archivers
maintainers         {ryandesign @ryandesign} openmaintainer
license             BSD GPL-2+
platforms           darwin

description         Extremely Fast Compression algorithm
long_description    LZ4 is a very fast lossless compression algorithm, \
                    providing compression speed at 400 MB/s per core, \
                    scalable with multi-cores CPU. It also features an \
                    extremely fast decoder, with speed in multiple GB/s per \
                    core, typically reaching RAM speed limits on multi-core \
                    systems.

homepage            http://www.lz4.org/

checksums           rmd160  ec231b9e3881045c0685cf6958b79ffc81e35aaa \
                    sha256  aad63255bf15ebb6aa99266f331631e141c4ba11b6469e437daa7ef61c4d39ac \
                    size    281787

use_configure       no

build.args-append           CC=${configure.cc} \
                            CXX=${configure.cxx} \
                            PREFIX=${prefix}
destroot.args-append        CC=${configure.cc} \
                            CXX=${configure.cxx} \
                            PREFIX=${prefix}

if { ![variant_isset universal] } {
    build.args-append       CFLAGS="${configure.cflags} [get_canonical_archflags cc]" \
                            CXXFLAGS="${configure.cxxflags} [get_canonical_archflags cxx]"
    destroot.args-append    CFLAGS="${configure.cflags} [get_canonical_archflags cc]" \
                            CXXFLAGS="${configure.cxxflags} [get_canonical_archflags cxx]"
} else {
    foreach arch ${configure.universal_archs} {
        lappend merger_build_args(${arch})      CFLAGS="${configure.cflags} -arch ${arch}" \
                                                CXXFLAGS="${configure.cxxflags} -arch ${arch}"
        lappend merger_destroot_args(${arch})   CFLAGS="${configure.cflags} -arch ${arch}" \
                                                CXXFLAGS="${configure.cxxflags} -arch ${arch}"
    }
}
