--- configure.ac.orig	2012-09-17 06:30:07.000000000 -0500
+++ configure.ac	2019-10-23 16:19:40.000000000 -0500
@@ -266,56 +266,82 @@
 dnl 
 dnl Configure libxml2.
 dnl 
-LIBXML2_VERSION_MIN=2.6.11
-
-have_libxml2="1"
-
-AC_ARG_WITH([xml2-config], [  --with-xml2-config      libxml2 config program],
-if test "x${with_xml2_config}" = "xno" ; then
-  XML2_CONFIG=
+AC_ARG_WITH([pkg-config], [  --with-pkg-config      pkg config program]
+if test "x${with_pkg_config}" = "xno" ; then
+  PKG_CONFIG=
 else
-  XML2_CONFIG="${with_xml2_config}"
+  PKG_CONFIG="${with_pkg_config}"
 fi
 ,
   XML2_CONFIG=
 )
-if test "x${XML2_CONFIG}" != "x" ; then
-   if test ! -x "${XML2_CONFIG}" ; then
-     AC_MSG_ERROR([Unusable or missing xml2-config: ${XML2_CONFIG}])
-   fi
-else
-  AC_PATH_PROG([XML2_CONFIG], [xml2-config], , [${PATH}])
-  if test "x${XML2_CONFIG}" = "x" ; then
-    AC_MSG_ERROR([Cannot configure without xml2-config])
-  fi
+if test -z "$PKG_CONFIG"; then
+  AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
 fi
 
-dnl Make sure the version of libxml2 found is sufficient.
-AC_MSG_CHECKING([for libxml >= ${LIBXML2_VERSION_MIN}])
-LIBXML2_FOUND=`2>&1 ${XML2_CONFIG} --version`
-LIBXML2_MAJOR=`echo ${LIBXML2_FOUND} | tr . " " | awk '{print $1}'`
-LIBXML2_MINOR=`echo ${LIBXML2_FOUND} | tr . " " | awk '{print $2}' | tr a-z " " |awk '{print $1}'`
-LIBXML2_BRANCH=`echo ${LIBXML2_FOUND} | tr . " " | awk '{print $3}' | tr a-z " " |awk '{print $1}'`
-if test "x${LIBXML2_BRANCH}" = "x" ; then
-  LIBXML2_BRANCH=0
-fi
-LIBXML2_MAJOR_MIN=`echo ${LIBXML2_VERSION_MIN} | tr . " " | awk '{print $1}'`
-LIBXML2_MINOR_MIN=`echo ${LIBXML2_VERSION_MIN} | tr . " " | awk '{print $2}'`
-LIBXML2_BRANCH_MIN=`echo ${LIBXML2_VERSION_MIN} | tr . " " | awk '{print $3}'`
-if test ${LIBXML2_MAJOR} -gt ${LIBXML2_MAJOR_MIN} \
-     -o ${LIBXML2_MAJOR} -eq ${LIBXML2_MAJOR_MIN} \
-     -a ${LIBXML2_MINOR} -gt ${LIBXML2_MINOR_MIN} \
-     -o ${LIBXML2_MAJOR} -eq ${LIBXML2_MAJOR_MIN} \
-     -a ${LIBXML2_MINOR} -eq ${LIBXML2_MINOR_MIN} \
-     -a ${LIBXML2_BRANCH} -ge $LIBXML2_BRANCH_MIN ; then
-  AC_MSG_RESULT([${LIBXML2_MAJOR}.${LIBXML2_MINOR}.${LIBXML2_BRANCH}])
-  have_libxml2="1"
-  CPPFLAGS="${CPPFLAGS} `${XML2_CONFIG} --cflags`"
-  LIBS="${LIBS} `${XML2_CONFIG} --libs`"
-else
-  AC_MSG_RESULT([no])
-  have_libxml2="0"
+dnl If pkg-config is found try using it
+have_libxml2="1"
+if test -x "$PKG_CONFIG" && $PKG_CONFIG --exists libxml-2.0; then
+  if `${PKG_CONFIG} --atleast-version=2.6.11 libxml-2.0`; then
+    found_libxml=yes
+    CPPFLAGS="${CPPFLAGS} `${PKG_CONFIG} --cflags-only-I libxml-2.0`"
+    LIBS="${LIBS} `${PKG_CONFIG} --libs libxml-2.0`"
+  else
+    AC_MSG_ERROR([libxml2 version 2.6.11 or greater required.])
+    have_libxml2="0"
+  fi
 fi
+
+# LIBXML2_VERSION_MIN=2.6.11
+# 
+# have_libxml2="1"
+# 
+# AC_ARG_WITH([xml2-config], [  --with-xml2-config      libxml2 config program],
+# if test "x${with_xml2_config}" = "xno" ; then
+#   XML2_CONFIG=
+# else
+#   XML2_CONFIG="${with_xml2_config}"
+# fi
+# ,
+#   XML2_CONFIG=
+# )
+# if test "x${XML2_CONFIG}" != "x" ; then
+#    if test ! -x "${XML2_CONFIG}" ; then
+#      AC_MSG_ERROR([Unusable or missing xml2-config: ${XML2_CONFIG}])
+#    fi
+# else
+#   AC_PATH_PROG([XML2_CONFIG], [xml2-config], , [${PATH}])
+#   if test "x${XML2_CONFIG}" = "x" ; then
+#     AC_MSG_ERROR([Cannot configure without xml2-config])
+#   fi
+# fi
+# 
+# dnl Make sure the version of libxml2 found is sufficient.
+# AC_MSG_CHECKING([for libxml >= ${LIBXML2_VERSION_MIN}])
+# LIBXML2_FOUND=`2>&1 ${XML2_CONFIG} --version`
+# LIBXML2_MAJOR=`echo ${LIBXML2_FOUND} | tr . " " | awk '{print $1}'`
+# LIBXML2_MINOR=`echo ${LIBXML2_FOUND} | tr . " " | awk '{print $2}' | tr a-z " " |awk '{print $1}'`
+# LIBXML2_BRANCH=`echo ${LIBXML2_FOUND} | tr . " " | awk '{print $3}' | tr a-z " " |awk '{print $1}'`
+# if test "x${LIBXML2_BRANCH}" = "x" ; then
+#   LIBXML2_BRANCH=0
+# fi
+# LIBXML2_MAJOR_MIN=`echo ${LIBXML2_VERSION_MIN} | tr . " " | awk '{print $1}'`
+# LIBXML2_MINOR_MIN=`echo ${LIBXML2_VERSION_MIN} | tr . " " | awk '{print $2}'`
+# LIBXML2_BRANCH_MIN=`echo ${LIBXML2_VERSION_MIN} | tr . " " | awk '{print $3}'`
+# if test ${LIBXML2_MAJOR} -gt ${LIBXML2_MAJOR_MIN} \
+#      -o ${LIBXML2_MAJOR} -eq ${LIBXML2_MAJOR_MIN} \
+#      -a ${LIBXML2_MINOR} -gt ${LIBXML2_MINOR_MIN} \
+#      -o ${LIBXML2_MAJOR} -eq ${LIBXML2_MAJOR_MIN} \
+#      -a ${LIBXML2_MINOR} -eq ${LIBXML2_MINOR_MIN} \
+#      -a ${LIBXML2_BRANCH} -ge $LIBXML2_BRANCH_MIN ; then
+#   AC_MSG_RESULT([${LIBXML2_MAJOR}.${LIBXML2_MINOR}.${LIBXML2_BRANCH}])
+#   have_libxml2="1"
+#   CPPFLAGS="${CPPFLAGS} `${XML2_CONFIG} --cflags`"
+#   LIBS="${LIBS} `${XML2_CONFIG} --libs`"
+# else
+#   AC_MSG_RESULT([no])
+#   have_libxml2="0"
+# fi
 if test "x${have_libxml2}" = "x1" ; then
   dnl Final sanity check, to make sure that xmlwriter is present.
   AC_CHECK_HEADER([libxml/xmlwriter.h], , [have_libxml2="0"])
@@ -329,7 +355,11 @@
 dnl 
 have_libcrypto="1"
 AC_CHECK_HEADERS([openssl/evp.h], , [have_libcrypto="0"])
-AC_CHECK_LIB([crypto], [OpenSSL_add_all_ciphers], , [have_libcrypto="0"])
+AC_CHECK_LIB([crypto], [OpenSSL_add_all_ciphers], , [have_libcrypto_ossl10="0"])
+AC_CHECK_LIB([crypto], [OPENSSL_init_crypto], , [have_libcrypto_ossl11="0"])
+if test "x${have_libcrypto_ossl10}" = "x0" -a "x${have_libcrypto_ossl11}" = "x0" ; then
+  have_libcrypto="0"
+fi
 if test "x${have_libcrypto}" = "x0" ; then
   AC_MSG_ERROR([Cannot build without libcrypto (OpenSSL)])
 fi
