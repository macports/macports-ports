Fix build on macOS and other systems that don't have syncfs.
https://sourceforge.net/p/dar/bugs/201/
https://sourceforge.net/p/dar/code/ci/28e0ff2c01628e285b594fc0c9b8b364f38dbad8
--- configure.orig	2017-12-20 09:19:57.000000000 -0600
+++ configure	2017-12-26 15:42:49.000000000 -0600
@@ -21757,6 +21757,39 @@
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for syncfs() availability" >&5
+$as_echo_n "checking for syncfs() availability... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+extern "C" {
+			           #if HAVE_UNISTD_H
+				   #include <unistd.h>
+				   #endif
+				   }
+int
+main ()
+{
+
+				   (void)syncfs(0);
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_cxx_try_compile "$LINENO"; then :
+
+$as_echo "#define HAVE_SYNCFS 1" >>confdefs.h
+
+		     { $as_echo "$as_me:${as_lineno-$LINENO}: result: available" >&5
+$as_echo "available" >&6; }
+
+else
+   { $as_echo "$as_me:${as_lineno-$LINENO}: result: not available" >&5
+$as_echo "not available" >&6; }
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for the possibility to set timestamps at a microsecond precision" >&5
 $as_echo_n "checking for the possibility to set timestamps at a microsecond precision... " >&6; }
--- src/dar_suite/dar_split.c.orig
+++ src/dar_suite/dar_split.c
@@ -302,7 +302,11 @@
 			step /= 2;
 		    else
 		    {
+#if HAVE_SYNCFS
 			syncfs(fd);
+#else
+			sync();
+#endif
 			close(fd);
 			fprintf(stderr, "No space left on destination after having written %ld bytes, please to something!\n", tape_size);
 			tape_size = 0;
@@ -343,7 +347,11 @@
 
     if(fd >= 0)
     {
+#if HAVE_SYNCFS
 	syncfs(fd);
+#else
+	sync();
+#endif
 	close(fd);
     }
     if(buffer != NULL)
