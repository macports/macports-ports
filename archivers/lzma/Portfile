# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       legacysupport 1.1
PortGroup       makefile 1.0

# utimensat
legacysupport.newest_darwin_requires_legacy 16

name            lzma
version         22.01
revision        2
categories      archivers
license         public-domain
platforms       darwin
maintainers     {ryandesign @ryandesign} openmaintainer

description     high compression ratio archiver

long_description \
    LZMA is default and general compression method of 7z \
    format in 7-Zip program. LZMA provides high compression \
    ratio and very fast decompression.

homepage        https://www.7-zip.org/sdk.html
master_sites    https://www.7-zip.org/a/

use_7z          yes
distname        lzma[strsed ${version} {/\.//}]

checksums       rmd160  beb1e2c42719e4156935dc573df018146406e353 \
                sha256  35b1689169efbc7c3c147387e5495130f371b4bad8ec24f049d28e126d52d9fe \
                size    1261282

extract.mkdir   yes

post-extract {
    fs-traverse item [list ${worksrcpath}] {
        if {[file isdirectory ${item}]} {
            file attributes ${item} -permissions ag+rx
        }
    }
}

patchfiles      patch-7zip_gcc_mak.diff \
                patch-lzma.1

post-patch {
    reinplace "s|#include <sys/sysmacros.h>|//#include <sys/sysmacros.h>|" \
    ${worksrcpath}/CPP/7zip/Common/FileStreams.cpp \
    ${worksrcpath}/CPP/7zip/UI/Common/UpdateCallback.cpp
    # needed for legacysupport
    reinplace "s|LDFLAGS = $\(\LDFLAGS_STATIC\)\|LDFLAGS += $\(\LDFLAGS_STATIC\)\|" \
    ${worksrcpath}/C/7zip_gcc_c.mak \
    ${worksrcpath}/CPP/7zip/7zip_gcc.mak
    # ld: warning: option -s is obsolete and being ignored
    # atom not found in symbolIndex on 10.6
    reinplace "s|LFLAGS_ALL = -s|LFLAGS_ALL =|" \
    ${worksrcpath}/C/7zip_gcc_c.mak \
    ${worksrcpath}/CPP/7zip/7zip_gcc.mak

    reinplace "s|@CFLAGS@|${configure.cflags} [get_canonical_archflags cc]|g" \
        ${worksrcpath}/CPP/7zip/7zip_gcc.mak
    reinplace "s|@CXXFLAGS@|${configure.cxxflags} [get_canonical_archflags cxx]|g" \
        ${worksrcpath}/CPP/7zip/7zip_gcc.mak

}

use_configure   no

# this build sets the optflags it wants internally
configure.optflags

variant universal {}

build.dir       ${worksrcpath}/CPP/7zip/Bundles/LzmaCon
build.type      gnu
build.args      -f makefile.gcc

installs_libs   no

destroot {
    xinstall ${worksrcpath}/CPP/7zip/Bundles/LzmaCon/_o/lzma \
        ${destroot}${prefix}/bin/lzma_alone
    xinstall ${worksrcpath}/lzma.1 \
        ${destroot}${prefix}/share/man/man1/lzma_alone.1

    set docdir ${prefix}/share/doc/${name}/
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath}/DOC \
        lzma.txt lzma-history.txt lzma-specification.txt \
        ${destroot}${docdir}
}

notes "
The LZMA SDK program is installed as \"lzma_alone\", to avoid conflict with LZMA Utils
"

livecheck.type  regex
livecheck.regex {>(\d+(?:\.\d+)*)</td>}
