--- src/bluetooth/osx/osxbtcentralmanager.mm.orig	2016-11-02 01:10:05.000000000 -0700
+++ src/bluetooth/osx/osxbtcentralmanager.mm	2017-09-25 15:29:36.000000000 -0700
@@ -1077,13 +1077,13 @@
 {
     using namespace OSXBluetooth;
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     const CBManagerState state = central.state;
 #else
     const CBCentralManagerState state = central.state;
 #endif
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     if (state == CBManagerStateUnknown
         || state == CBManagerStateResetting) {
 #else
@@ -1099,7 +1099,7 @@
     }
 
     // Let's check some states we do not like first:
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     if (state == CBManagerStateUnsupported || state == CBManagerStateUnauthorized) {
 #else
     if (state == CBCentralManagerStateUnsupported || state == CBCentralManagerStateUnauthorized) {
@@ -1119,7 +1119,7 @@
         return;
     }
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     if (state == CBManagerStatePoweredOff) {
 #else
     if (state == CBCentralManagerStatePoweredOff) {
@@ -1138,7 +1138,7 @@
         return;
     }
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     if (state == CBManagerStatePoweredOn) {
 #else
     if (state == CBCentralManagerStatePoweredOn) {
--- src/bluetooth/osx/osxbtledeviceinquiry.mm.orig	2016-11-02 01:10:05.000000000 -0700
+++ src/bluetooth/osx/osxbtledeviceinquiry.mm	2017-09-25 15:30:53.000000000 -0700
@@ -204,7 +204,7 @@
     dispatch_queue_t leQueue(qt_LE_queue());
     Q_ASSERT(leQueue);
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     const CBManagerState cbState(central.state);
     if (cbState == CBManagerStatePoweredOn) {
 #else
@@ -225,7 +225,7 @@
                                           });
             [manager scanForPeripheralsWithServices:nil options:nil];
         } // Else we ignore.
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     } else if (state == CBManagerStateUnsupported || state == CBManagerStateUnauthorized) {
 #else
     } else if (state == CBCentralManagerStateUnsupported || state == CBCentralManagerStateUnauthorized) {
@@ -239,7 +239,7 @@
         }
 
         [manager setDelegate:nil];
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     } else if (cbState == CBManagerStatePoweredOff) {
 #else
     } else if (cbState == CBCentralManagerStatePoweredOff) {
