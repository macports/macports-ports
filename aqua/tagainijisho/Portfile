# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0
PortGroup           qt4 1.0

github.setup        Gnurou tagainijisho 1.0.3
license             GPL-3+
categories          aqua education japanese
platforms           darwin
maintainers         nomaintainer

description         A free Japanese dictionary and study assistant

long_description    Tagaini Jisho is a free, open-source Japanese \
                    dictionary and kanji lookup tool that is available \
                    for Windows, Mac OS X and Linux and aims at \
                    becoming your Japanese study assistant. It allows \
                    you to quickly search for entries and mark those \
                    that you wish to study, along with tags and \
                    personal notes. \
                    It also let you train entries you are studying \
                    and follows your progression in remembering them. \
                    Finally, it makes it easy to review entries you \
                    did not remember by listing them on screen \
                    or printing them on a small booklet.

homepage            http://www.tagaini.net/
github.tarball_from releases

checksums           rmd160  eda4b6c645ffce4298da6890260a246747bf3612 \
                    sha256  6fe3c579ec1cea6c41393ac9a82dd12d0e240032d2bb7837a90e470f480aaf4e \
                    size    24816175

patchfiles          patch-CMakeLists.txt.diff \
                    patch-pack-CMakeLists.txt.diff

configure.pre_args  -DCMAKE_INSTALL_PREFIX=${applications_dir}

pre-activate {
    # tagainijisho before 1.0.2_0 installed this file directly, bypassing the
    # destroot; remove it if found to prevent an activation error.
    set filepath "${applications_dir}/Tagaini Jisho.app/Contents/Resources/qt.conf"
    if {[file exists ${filepath}] && [registry_file_registered ${filepath}] == "0"} {
        if {[catch {delete ${filepath}}]} {
            return -code error "Cannot delete ${filepath}; please remove it manually"
        }
    }
}
