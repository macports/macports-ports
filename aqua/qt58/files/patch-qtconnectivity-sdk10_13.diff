--- src/bluetooth/osx/osxbtcentralmanager.mm.orig	2016-12-08 00:08:08.000000000 -0700
+++ src/bluetooth/osx/osxbtcentralmanager.mm	2017-09-25 16:10:08.000000000 -0700
@@ -1032,13 +1032,13 @@
 {
     using namespace OSXBluetooth;
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     const CBManagerState state = central.state;
 #else
     const CBCentralManagerState state = central.state;
 #endif
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     if (state == CBManagerStateUnknown
         || state == CBManagerStateResetting) {
 #else
@@ -1054,7 +1054,7 @@
     }
 
     // Let's check some states we do not like first:
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     if (state == CBManagerStateUnsupported || state == CBManagerStateUnauthorized) {
 #else
     if (state == CBCentralManagerStateUnsupported || state == CBCentralManagerStateUnauthorized) {
@@ -1074,7 +1074,7 @@
         return;
     }
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     if (state == CBManagerStatePoweredOff) {
 #else
     if (state == CBCentralManagerStatePoweredOff) {
@@ -1093,7 +1093,7 @@
         return;
     }
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     if (state == CBManagerStatePoweredOn) {
 #else
     if (state == CBCentralManagerStatePoweredOn) {
--- src/bluetooth/osx/osxbtledeviceinquiry.mm.orig	2016-12-08 00:08:08.000000000 -0700
+++ src/bluetooth/osx/osxbtledeviceinquiry.mm	2017-09-25 16:10:16.000000000 -0700
@@ -233,7 +233,7 @@
     dispatch_queue_t leQueue(qt_LE_queue());
     Q_ASSERT(leQueue);
 
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     const CBManagerState state(central.state);
     if (state == CBManagerStatePoweredOn) {
 #else
@@ -260,7 +260,7 @@
 
             [manager scanForPeripheralsWithServices:nil options:nil];
         } // Else we ignore.
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     } else if (state == CBManagerStateUnsupported || state == CBManagerStateUnauthorized) {
 #else
     } else if (state == CBCentralManagerStateUnsupported || state == CBCentralManagerStateUnauthorized) {
@@ -277,7 +277,7 @@
         }
 
         [manager setDelegate:nil];
-#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0)
+#if QT_IOS_PLATFORM_SDK_EQUAL_OR_ABOVE(__IPHONE_10_0) || QT_OSX_PLATFORM_SDK_EQUAL_OR_ABOVE(101300)
     } else if (state == CBManagerStatePoweredOff) {
 #else
     } else if (state == CBCentralManagerStatePoweredOff) {
