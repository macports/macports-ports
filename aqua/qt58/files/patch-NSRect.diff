--- src/plugins/platforms/cocoa/qcocoadrag.mm.orig	2017-01-18 07:20:58.000000000 -0700
+++ src/plugins/platforms/cocoa/qcocoadrag.mm	2017-05-14 07:58:37.000000000 -0700
@@ -132,7 +132,7 @@
     QPixmap pm = dragPixmap(m_drag, hotSpot);
     QSize pmDeviceIndependentSize = pm.size() / pm.devicePixelRatio();
     NSImage *nsimage = qt_mac_create_nsimage(pm);
-    [nsimage setSize:pmDeviceIndependentSize.toCGSize()];
+    [nsimage setSize:NSSizeFromCGSize(pmDeviceIndependentSize.toCGSize())];
 
     QMacPasteboard dragBoard((CFStringRef) NSDragPboard, QMacInternalPasteboardMime::MIME_DND);
     m_drag->mimeData()->setData(QLatin1String("application/x-qt-mime-type-name"), QByteArray("dummy"));
--- src/plugins/platforms/cocoa/qcocoawindow.mm.orig	2017-01-18 07:20:58.000000000 -0700
+++ src/plugins/platforms/cocoa/qcocoawindow.mm	2017-05-14 08:00:30.000000000 -0700
@@ -491,7 +491,7 @@
         NSRect screenRect = [[m_view window] convertRectToScreen:NSMakeRect(windowPoint.x, windowPoint.y, 1, 1)];
         NSPoint screenPoint = screenRect.origin;
         QPoint position = qt_mac_flipPoint(screenPoint).toPoint();
-        QSize size = QRectF::fromCGRect([m_view bounds]).toRect().size();
+        QSize size = QRectF::fromCGRect(NSRectToCGRect([m_view bounds])).toRect().size();
         return QRect(position, size);
     }
 
@@ -1095,7 +1095,7 @@
     QSize sizeIncrement = windowSizeIncrement();
     if (sizeIncrement.isEmpty())
         sizeIncrement = QSize(1, 1);
-    [m_nsWindow setResizeIncrements:sizeIncrement.toCGSize()];
+    [m_nsWindow setResizeIncrements:NSSizeFromCGSize(sizeIncrement.toCGSize())];
 
     QRect rect = geometry();
     QSize baseSize = windowBaseSize();
--- src/plugins/platforms/cocoa/qnsview.mm.orig	2017-01-18 07:20:58.000000000 -0700
+++ src/plugins/platforms/cocoa/qnsview.mm	2017-05-14 08:02:06.000000000 -0700
@@ -336,10 +336,10 @@
         geometry = QRect(windowRect.origin.x, qt_mac_flipYCoordinate(windowRect.origin.y + rect.size.height), rect.size.width, rect.size.height);
     } else if (m_platformWindow->m_viewIsToBeEmbedded) {
         // embedded child window, use the frame rect ### merge with case below
-        geometry = QRectF::fromCGRect([self bounds]).toRect();
+        geometry = QRectF::fromCGRect(NSRectToCGRect([self bounds])).toRect();
     } else {
         // child window, use the frame rect
-        geometry = QRectF::fromCGRect([self frame]).toRect();
+        geometry = QRectF::fromCGRect(NSRectToCGRect([self frame])).toRect();
     }
 
     if (m_platformWindow->m_nsWindow && geometry == m_platformWindow->geometry())
@@ -553,7 +553,7 @@
 
 - (void) drawRect:(NSRect)dirtyRect
 {
-    qCDebug(lcQpaCocoaWindow) << "[QNSView drawRect:]" << m_platformWindow->window() << QRectF::fromCGRect(dirtyRect);
+    qCDebug(lcQpaCocoaWindow) << "[QNSView drawRect:]" << m_platformWindow->window() << QRectF::fromCGRect(NSRectToCGRect(dirtyRect));
 
 #ifndef QT_NO_OPENGL
     if (m_glContext && m_shouldSetGLContextinDrawRect) {
