See https://github.com/chromium/chromium/commit/65b25840093c14bccf9e4108ef1a4340bf2b31d1,
https://github.com/v8/v8/commit/2c60d0a0872cd2a8a1ffe20e3d50517afd7c8c02

diff --git a/base/process/launch_mac.cc b/base/process/launch_mac.cc
index 05ad8648a42cdc..a0dfda42bd4bc3 100644
--- src/3rdparty/chromium/base/process/launch_mac.cc
+++ src/3rdparty/chromium/base/process/launch_mac.cc
@@ -4,6 +4,7 @@
 
 #include "base/process/launch.h"
 
+#include <Availability.h>
 #include <crt_externs.h>
 #include <mach/mach.h>
 #include <os/availability.h>
@@ -264,11 +265,13 @@ Process LaunchProcess(const std::vector<std::string>& argv,
   }
 #endif  // ARCH_CPU_ARM64
 
+#if defined(__MAC_11_0)
   if (__builtin_available(macOS 11.0, *)) {
     if (options.enable_cpu_security_mitigations) {
       DPSXCHECK(posix_spawnattr_set_csm_np(attr.get(), POSIX_SPAWN_NP_CSM_ALL));
     }
   }
+#endif  // __MAC_11_0
 
   if (!options.current_directory.empty()) {
     const char* chdir_str = options.current_directory.value().c_str();
--- src/3rdparty/chromium/v8/src/regexp/regexp-parser.cc.orig	2023-03-12 04:16:34.000000000 +0100
+++ src/3rdparty/chromium/v8/src/regexp/regexp-parser.cc	2023-07-10 21:49:00.000000000 +0200
@@ -346,13 +346,7 @@
   bool failed_;
   const uintptr_t stack_limit_;
 
-  friend bool RegExpParser::ParseRegExpFromHeapString(Isolate*, Zone*,
-                                                      Handle<String>,
-                                                      RegExpFlags,
-                                                      RegExpCompileData*);
-  friend bool RegExpParser::VerifyRegExpSyntax<CharT>(
-      Zone*, uintptr_t, const CharT*, int, RegExpFlags, RegExpCompileData*,
-      const DisallowGarbageCollection&);
+  friend class v8::internal::RegExpParser;
 };
 
 template <class CharT>
