--- Source/JavaScriptCore/runtime/DatePrototype.cpp.orig	2017-06-16 05:46:36.000000000 -0700
+++ Source/JavaScriptCore/runtime/DatePrototype.cpp	2019-10-07 15:34:27.000000000 -0700
@@ -167,7 +167,7 @@
     CFRelease(locale);
 
     if (useCustomFormat) {
-        CFStringRef customFormatCFString = CFStringCreateWithCharacters(0, customFormatString.characters(), customFormatString.length());
+        CFStringRef customFormatCFString = CFStringCreateWithCharacters(0, reinterpret_cast<const UniChar *>(customFormatString.characters()), customFormatString.length());
         CFDateFormatterSetFormat(formatter, customFormatCFString);
         CFRelease(customFormatCFString);
     }
@@ -184,7 +184,7 @@
     ASSERT(length <= bufferLength);
     if (length > bufferLength)
         length = bufferLength;
-    CFStringGetCharacters(string, CFRangeMake(0, length), buffer);
+    CFStringGetCharacters(string, CFRangeMake(0, length), reinterpret_cast<UniChar *>(buffer));
 
     CFRelease(string);
 
--- Source/WebCore/platform/graphics/SegmentedFontData.cpp.orig	2017-06-16 05:46:36.000000000 -0700
+++ Source/WebCore/platform/graphics/SegmentedFontData.cpp	2019-10-07 16:34:39.000000000 -0700
@@ -61,7 +61,7 @@
 {
     UChar32 c;
     for (int i = 0; i < length; ) {
-        U16_NEXT(characters, i, length, c)
+        U16_NEXT(characters, i, length, c);
         if (!containsCharacter(c))
             return false;
     }
--- Source/WebCore/dom/Document.cpp.orig	2017-06-16 05:46:36.000000000 -0700
+++ Source/WebCore/dom/Document.cpp	2019-10-07 17:30:02.000000000 -0700
@@ -3846,12 +3846,12 @@
     unsigned i = 0;
 
     UChar32 c;
-    U16_NEXT(characters, i, length, c)
+    U16_NEXT(characters, i, length, c);
     if (!isValidNameStart(c))
         return false;
 
     while (i < length) {
-        U16_NEXT(characters, i, length, c)
+        U16_NEXT(characters, i, length, c);
         if (!isValidNamePart(c))
             return false;
     }
@@ -3914,7 +3914,7 @@
     const UChar* s = qualifiedName.characters();
     for (unsigned i = 0; i < length;) {
         UChar32 c;
-        U16_NEXT(s, i, length, c)
+        U16_NEXT(s, i, length, c);
         if (c == ':') {
             if (sawColon) {
                 ec = NAMESPACE_ERR;
