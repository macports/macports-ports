--- tools/qmake/mkspecs/features/functions.prf.orig	2018-10-20 09:02:12.000000000 -0700
+++ tools/qmake/mkspecs/features/functions.prf	2018-10-20 09:05:57.000000000 -0700
@@ -7,7 +7,7 @@
     skipBuild("Static builds of QtWebEngine aren't supported.")
     return(false)
   }
-  osx:lessThan(QMAKE_XCODE_VERSION, 5.1) {
+  osx:!isMinXcodeVersion(6, 1) {
     skipBuild("Using xcode version $$QMAKE_XCODE_VERSION, but at least version 5.1 is required to build Qt WebEngine.")
     return(false)
   }
@@ -29,6 +29,26 @@
   return(false)
 }
 
+defineTest(isMinXcodeVersion) {
+    requested_major = $$1
+    requested_minor = $$2
+    requested_patch = $$3
+    isEmpty(requested_minor): requested_minor = 0
+    isEmpty(requested_patch): requested_patch = 0
+    target_var = QMAKE_XCODE_VERSION
+    major_version = $$section($$target_var, ., 0, 0)
+    minor_version = $$section($$target_var, ., 1, 1)
+    patch_version = $$section($$target_var, ., 2, 2)
+    isEmpty(minor_version): minor_version = 0
+    isEmpty(patch_version): patch_version = 0
+
+    greaterThan(major_version, $$requested_major):return(true)
+    equals(major_version, $$requested_major):greaterThan(minor_version, $$requested_minor):return(true)
+    equals(major_version, $$requested_major):equals(minor_version, $$requested_minor):!lessThan(patch_version, $$requested_patch):return(true)
+
+    return(false)
+}
+
 defineTest(isGCCVersionSupported) {
   # The below will work for gcc 4.7 and up and also match gcc 5
   greaterThan(QT_GCC_MINOR_VERSION, 6):return(true)
