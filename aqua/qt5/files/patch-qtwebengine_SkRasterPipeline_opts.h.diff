Adapted from OpenBSD patch:
https://cvsweb.openbsd.org/cgi-bin/cvsweb/ports/x11/qt5/qtwebengine/patches/patch-src_3rdparty_chromium_third_party_skia_src_opts_SkRasterPipeline_opts_h

aarch64: revert "Fix building on aarch64 without fp16"
https://github.com/qt/qtwebengine-chromium/commit/918116a76b56c63e740157b68d1c35708c091e4d

Index: src/3rdparty/chromium/third_party/skia/src/opts/SkRasterPipeline_opts.h
--- src/3rdparty/chromium/third_party/skia/src/opts/SkRasterPipeline_opts.h.orig
+++ src/3rdparty/chromium/third_party/skia/src/opts/SkRasterPipeline_opts.h
@@ -980,9 +980,7 @@ SI F approx_powf(F x, F y) {
 SI F from_half(U16 h) {
 #if defined(JUMPER_IS_NEON) && defined(SK_CPU_ARM64) \
     && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
-    __fp16 fp16;
-    memcpy(&fp16, &h, sizeof(U16));
-    return float(fp16);
+    return vcvt_f32_f16(h);
 
 #elif defined(JUMPER_IS_HSW) || defined(JUMPER_IS_SKX)
     return _mm256_cvtph_ps(h);
@@ -1003,10 +1001,7 @@ SI F from_half(U16 h) {
 SI U16 to_half(F f) {
 #if defined(JUMPER_IS_NEON) && defined(SK_CPU_ARM64) \
     && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
-    __fp16 fp16 = __fp16(f);
-    U16 u16;
-    memcpy(&u16, &fp16, sizeof(U16));
-    return u16;
+    return vcvt_f16_f32(f);
 
 #elif defined(JUMPER_IS_HSW) || defined(JUMPER_IS_SKX)
     return _mm256_cvtps_ph(f, _MM_FROUND_CUR_DIRECTION);
