diff --git Makefile.in Makefile.in
index 3f78b0d968..f6447239ce 100644
--- Makefile.in
+++ Makefile.in
@@ -104,23 +104,23 @@ USE_STARTUP_NOTIFICATION =
 
 # ==================== Where To Install Things ====================
 
-# Location to install Emacs.app on macOS
+# Location to install EmacsMac.app on macOS
 mac_appdir=@mac_appdir@
 mac_appbindir=@mac_appbindir@
 mac_applibexecdir=@mac_applibexecdir@
 mac_appresdir=@mac_appresdir@
 mac_applibdir=@mac_applibdir@
-# Either yes or no depending on whether this is a relocatable Emacs.app.
+# Either yes or no depending on whether this is a relocatable EmacsMac.app.
 mac_self_contained=@mac_self_contained@
 
-# Location to install Emacs.app under GNUstep / macOS.
+# Location to install EmacsMac.app under GNUstep / macOS.
 # Later values may use these.
 ns_appdir=@ns_appdir@
 ns_appbindir=@ns_appbindir@
 ns_applibexecdir=@ns_applibexecdir@
 ns_appresdir=@ns_appresdir@
 ns_applibdir=@ns_applibdir@
-# Either yes or no depending on whether this is a relocatable Emacs.app.
+# Either yes or no depending on whether this is a relocatable EmacsMac.app.
 ns_self_contained=@ns_self_contained@
 
 # The default location for installation.  Everything is placed in
@@ -355,8 +355,8 @@ BIN_DESTDIR=
 ELN_DESTDIR = ${ns_applibdir}/
 endif
 else
-BIN_DESTDIR='${mac_appbindir}/'
-ELN_DESTDIR = ${mac_applibdir}/
+BIN_DESTDIR='$(DESTDIR)${mac_appbindir}/'
+ELN_DESTDIR = $(DESTDIR)${mac_applibdir}/
 endif
 
 all: ${SUBDIR} info
@@ -438,7 +438,7 @@ epaths-force-w32:
 # bundle root itself with the relative path.
 epaths-force-mac-self-contained: epaths-force
 	@(sed < src/epaths.h > epaths.h.$$$$		\
-	  -e 's;${mac_appdir}/Emacs.app/;;') &&			\
+	  -e 's;${mac_appdir}/EmacsMac.app/;;') &&			\
 	${srcdir}/build-aux/move-if-change epaths.h.$$$$ src/epaths.h
 
 epaths-force-ns-self-contained: epaths-force
@@ -541,9 +541,9 @@ install-arch-dep:
 	umask 022; ${MKDIR_P} "$(DESTDIR)${bindir}"
 	$(MAKE) -C lib-src install
 	if test "$(realpath $(DESTDIR)${mac_appdir})" != "`cd mac && /bin/pwd`"; then \
-	  umask 022; ${MKDIR_P} $(DESTDIR)${mac_appdir}/Emacs.app; \
-	  (cd mac/Emacs.app; (tar -chf - . | \
-		(cd $(DESTDIR)${mac_appdir}/Emacs.app; umask 022; tar -xvf - \
+	  umask 022; ${MKDIR_P} $(DESTDIR)${mac_appdir}/EmacsMac.app; \
+	  (cd mac/EmacsMac.app; (tar -chf - . | \
+		(cd $(DESTDIR)${mac_appdir}/EmacsMac.app; umask 022; tar -xvf - \
 			&& cat > /dev/null))) || exit 1; \
 	fi
 ifeq (${mac_self_contained},no)
@@ -562,8 +562,8 @@ install-arch-dep:
 	rm -rf ${ns_appresdir}/share
 endif
 else
-	subdir=${mac_appresdir}/site-lisp && ${write_subdir}
-	rm -rf ${mac_appresdir}/share
+	subdir=$(DESTDIR)${mac_appresdir}/site-lisp && ${write_subdir}
+	rm -rf $(DESTDIR)${mac_appresdir}/share
 endif
 
 ### Windows-specific install target for installing programs produced
diff --git configure.ac configure.ac
index 6c09f86725..9792c534c4 100644
--- configure.ac
+++ configure.ac
@@ -536,7 +536,7 @@ AC_DEFUN
 
 AC_ARG_ENABLE(mac-app,
 [AS_HELP_STRING([--enable-mac-app@<:@=DIR@:>@],
-                [specify install directory for Emacs.app on macOS
+                [specify install directory for EmacsMac.app on macOS
 		 [DIR=/Application]])],
 [ mac_appdir_x=${enableval}])
 
@@ -1910,10 +1910,10 @@ AC_DEFUN
     esac
   fi
 
-  mac_appbindir=${mac_appdir}/Emacs.app/Contents/MacOS
-  mac_applibexecdir=${mac_appdir}/Emacs.app/Contents/MacOS/libexec/${configuration}
-  mac_applibdir=${mac_appdir}/Emacs.app/Contents/Frameworks
-  mac_appresdir=${mac_appdir}/Emacs.app/Contents/Resources
+  mac_appbindir=${mac_appdir}/EmacsMac.app/Contents/MacOS
+  mac_applibexecdir=${mac_appdir}/EmacsMac.app/Contents/MacOS/libexec/${configuration}
+  mac_applibdir=${mac_appdir}/EmacsMac.app/Contents/Frameworks
+  mac_appresdir=${mac_appdir}/EmacsMac.app/Contents/Resources
 
   if test "${with_native_image_api}" = yes; then
      AC_DEFINE(HAVE_NATIVE_IMAGE_API, 1, [Define to use native OS APIs for images.])
@@ -1937,7 +1937,7 @@ AC_DEFUN
   # Even a headless Emacs can build macuvs.h, so this should let you bootstrap.
   if test "${opsys}" = darwin && test -f "$srcdir/src/macuvs.h"; then
      NS_IMPL_COCOA=yes
-     ns_appdir=`pwd`/nextstep/Emacs.app
+     ns_appdir=`pwd`/nextstep/EmacsMac.app
      ns_appbindir=${ns_appdir}/Contents/MacOS
      ns_applibexecdir=${ns_appdir}/Contents/MacOS/libexec
      ns_applibdir=${ns_appdir}/Contents/Frameworks
@@ -1996,7 +1996,7 @@ AC_DEFUN
      fi
   fi
   if test $NS_IMPL_GNUSTEP = yes; then
-     ns_appdir=`pwd`/nextstep/Emacs.app
+     ns_appdir=`pwd`/nextstep/EmacsMac.app
      ns_appbindir=${ns_appdir}
      ns_applibexecdir=${ns_appdir}/libexec
      ns_applibdir=${ns_appdir}/Frameworks
@@ -4204,7 +4204,7 @@ AC_DEFUN
   # We also have mouse menus.
   HAVE_MENUS=yes
   # Tell src/Makefile.in to create files in the macOS application
-  # bundle mac/Emacs.app.
+  # bundle mac/EmacsMac.app.
   OTHER_FILES=macosx-app
 fi
 
@@ -6162,7 +6162,7 @@ AC_DEFUN
    echo
    AS_ECHO(["Run '${MAKE-make}' to build Emacs, then run 'src/emacs' to test it.
 Run '${MAKE-make} install' in order to build an application bundle.
-The application will go to nextstep/Emacs.app and can be run or moved
+The application will go to nextstep/EmacsMac.app and can be run or moved
 from there."])
    if test "$EN_NS_SELF_CONTAINED" = "yes"; then
       echo "The application will be fully self-contained."
@@ -6194,8 +6194,8 @@ AC_DEFUN
 
 MAC_TEMPLATE_FILES=
 if test "$HAVE_MACGUI" = "yes"; then
-    AC_CONFIG_FILES([mac/Emacs.app/Contents/Info.plist:mac/templates/Info.plist.in \
-    mac/Emacs.app/Contents/Resources/English.lproj/InfoPlist.strings:mac/templates/InfoPlist.strings.in])
+    AC_CONFIG_FILES([mac/EmacsMac.app/Contents/Info.plist:mac/templates/Info.plist.in \
+    mac/EmacsMac.app/Contents/Resources/English.lproj/InfoPlist.strings:mac/templates/InfoPlist.strings.in])
     MAC_TEMPLATE_FILES="mac/templates/Info.plist.in mac/templates/InfoPlist.strings.in"
 fi
 AC_SUBST(MAC_TEMPLATE_FILES)
diff --git lib-src/Makefile.in lib-src/Makefile.in
index 338ba0d576..9aa30193cc 100644
--- lib-src/Makefile.in
+++ lib-src/Makefile.in
@@ -49,6 +49,8 @@ top_builddir =
 
 # ==================== Where To Install Things ====================
 
+mac_applibexecdir=@mac_applibexecdir@
+
 # Location to install Emacs.app under GNUstep / macOS.
 # Later values may use this.
 ns_appbindir=@ns_appbindir@
diff --git mac/Emacs.app/Contents/MacOS/Emacs.sh mac/EmacsMac.app/Contents/MacOS/Emacs.sh
similarity index 100%
rename from mac/Emacs.app/Contents/MacOS/Emacs.sh
rename to mac/EmacsMac.app/Contents/MacOS/Emacs.sh
diff --git mac/Emacs.app/Contents/PkgInfo mac/EmacsMac.app/Contents/PkgInfo
similarity index 100%
rename from mac/Emacs.app/Contents/PkgInfo
rename to mac/EmacsMac.app/Contents/PkgInfo
diff --git mac/Emacs.app/Contents/Resources/Emacs.icns mac/EmacsMac.app/Contents/Resources/Emacs.icns
similarity index 100%
rename from mac/Emacs.app/Contents/Resources/Emacs.icns
rename to mac/EmacsMac.app/Contents/Resources/Emacs.icns
diff --git mac/Emacs.app/Contents/Resources/document.icns mac/EmacsMac.app/Contents/Resources/document.icns
similarity index 100%
rename from mac/Emacs.app/Contents/Resources/document.icns
rename to mac/EmacsMac.app/Contents/Resources/document.icns
diff --git mac/Makefile.in mac/Makefile.in
index e1663c1a8f..7e1cdea452 100644
--- mac/Makefile.in
+++ mac/Makefile.in
@@ -33,9 +33,9 @@ mac_self_contained=
 
 ifeq ($(DUMPING),pdumper)
 ifeq (${mac_self_contained},no)
-bundle_pdmp := Emacs.app/Contents/MacOS/Emacs.pdmp
+bundle_pdmp := EmacsMac.app/Contents/MacOS/Emacs.pdmp
 else
-bundle_pdmp := Emacs.app/Contents/MacOS/libexec/${configuration}/Emacs.pdmp
+bundle_pdmp := EmacsMac.app/Contents/MacOS/libexec/${configuration}/Emacs.pdmp
 endif
 else
 bundle_pdmp :=
@@ -44,31 +44,31 @@ bundle_pdmp :=
 lprojs = English Dutch French German Italian Japanese Spanish \
   ar ca cs da el en_AU en_GB es_419 es_MX fi fr_CA he hi hr hu id ko ms no \
   pl pt pt_BR pt_PT ro ru sk sv th tr uk vi zh_CN zh_HK zh_TW
-lprojdirs = $(patsubst %,Emacs.app/Contents/Resources/%.lproj,${lprojs})
+lprojdirs = $(patsubst %,EmacsMac.app/Contents/Resources/%.lproj,${lprojs})
 
 ${lprojdirs}:
 	${MKDIR_P} $@
 
 ifneq ($(CURDIR), $(realpath ${srcdir}))
-Emacs.app/Contents/MacOS/Emacs.sh: ${srcdir}/Emacs.app/Contents/MacOS/Emacs.sh
-	${MKDIR_P} Emacs.app/Contents/MacOS
+EmacsMac.app/Contents/MacOS/Emacs.sh: ${srcdir}/EmacsMac.app/Contents/MacOS/Emacs.sh
+	${MKDIR_P} EmacsMac.app/Contents/MacOS
 	cp $< $@
-Emacs.app/Contents/PkgInfo: ${srcdir}/Emacs.app/Contents/PkgInfo
+EmacsMac.app/Contents/PkgInfo: ${srcdir}/EmacsMac.app/Contents/PkgInfo
 	cp $< $@
-Emacs.app/Contents/Resources/Emacs.icns: ${srcdir}/Emacs.app/Contents/Resources/Emacs.icns
-	${MKDIR_P} Emacs.app/Contents/Resources
+EmacsMac.app/Contents/Resources/Emacs.icns: ${srcdir}/EmacsMac.app/Contents/Resources/Emacs.icns
+	${MKDIR_P} EmacsMac.app/Contents/Resources
 	cp $< $@
-Emacs.app/Contents/Resources/document.icns: ${srcdir}/Emacs.app/Contents/Resources/document.icns
-	${MKDIR_P} Emacs.app/Contents/Resources
+EmacsMac.app/Contents/Resources/document.icns: ${srcdir}/EmacsMac.app/Contents/Resources/document.icns
+	${MKDIR_P} EmacsMac.app/Contents/Resources
 	cp $< $@
 endif
 
-macosx-bundle: ${lprojdirs} Emacs.app/Contents/MacOS/Emacs.sh \
-	Emacs.app/Contents/PkgInfo Emacs.app/Contents/Resources/Emacs.icns \
-	Emacs.app/Contents/Resources/document.icns
-macosx-app: macosx-bundle Emacs.app/Contents/MacOS/Emacs $(bundle_pdmp)
-Emacs.app/Contents/MacOS/Emacs: ../src/emacs${EXEEXT}
-	${MKDIR_P} Emacs.app/Contents/MacOS
+macosx-bundle: ${lprojdirs} EmacsMac.app/Contents/MacOS/Emacs.sh \
+	EmacsMac.app/Contents/PkgInfo EmacsMac.app/Contents/Resources/Emacs.icns \
+	EmacsMac.app/Contents/Resources/document.icns
+macosx-app: macosx-bundle EmacsMac.app/Contents/MacOS/Emacs $(bundle_pdmp)
+EmacsMac.app/Contents/MacOS/Emacs: ../src/emacs${EXEEXT}
+	${MKDIR_P} EmacsMac.app/Contents/MacOS
 	rm -f $@
 	cp $< $@
 ifeq ($(DUMPING),pdumper)
@@ -86,12 +86,12 @@ .PHONY:
 
 clean:
 	rm -rf ${lprojdirs}
-	rm -f Emacs.app/Contents/MacOS/Emacs $(bundle_pdmp)
+	rm -f EmacsMac.app/Contents/MacOS/Emacs $(bundle_pdmp)
 
 distclean: clean
 	rm -f Makefile
-	rm -f Emacs.app/Contents/Info.plist \
-	  Emacs.app/Contents/Resources/English.lproj/InfoPlist.strings
+	rm -f EmacsMac.app/Contents/Info.plist \
+	  EmacsMac.app/Contents/Resources/English.lproj/InfoPlist.strings
 
 bootstrap-clean maintainer-clean: distclean
 
diff --git src/emacs.c src/emacs.c
index c0df96f828..d598e8d48c 100644
--- src/emacs.c
+++ src/emacs.c
@@ -531,10 +531,10 @@ init_cmdargs (int argc, char **argv, int skip_args, char const *original_pwd)
 #elif defined HAVE_MACGUI
       /* If we are running from the build directory, set DIR to the
 	 src subdirectory of the Emacs tree.  */
-      if (SBYTES (dir) > sizeof ("/mac/Emacs.app/Contents/MacOS/") - 1
+      if (SBYTES (dir) > sizeof ("/mac/EmacsMac.app/Contents/MacOS/") - 1
 	  && 0 == strcmp ((SSDATA (dir) + SBYTES (dir)
-			   - sizeof ("/mac/Emacs.app/Contents/MacOS/") + 1),
-			  "/mac/Emacs.app/Contents/MacOS/"))
+			   - sizeof ("/mac/EmacsMac.app/Contents/MacOS/") + 1),
+			  "/mac/EmacsMac.app/Contents/MacOS/"))
 	{
 	  if (NILP (Vpurify_flag))
 	    {
