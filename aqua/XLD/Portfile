# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           xcode 1.0

name                XLD
version             20230627
categories          aqua audio
platforms           macosx
supported_archs     x86_64 arm64 i386 ppc
license             GPL-2
maintainers         nomaintainer
description         X Lossless Decoder: Lossless audio decoder for Mac OS X
long_description    X Lossless Decoder(XLD) is a tool for Mac OS X that is \
                    able to decode/convert/play various 'lossless' audio \
                    files. The supported audio files can be split into some \
                    tracks with cue sheet when decoding.

homepage            https://tmkk.undo.jp/xld/index_e.html

fetch.type          svn
svn.url             https://svn.code.sf.net/p/xld/code/tags/xld-${version}/${subport}
worksrcdir          ${subport}

xcode.project       ${subport}_export.xcodeproj
xcode.target        ${subport}
xcode.configuration Release

variant universal   {}

post-patch {
    if {${os.major} > 10} {
        # patch Interface Builder files to make them compile with newer versions
        # of Xcode
        system "find [file dirname ${worksrcpath}] -name '*.xib' -exec sed -i.bak \\
            -e 's#<int key=\"IBDocument.SystemTarget\">10\[456\]0</int>#<int key=\"IBDocument.SystemTarget\">1070</int>#' \\
            -e 's#<integer value=\"10\[456\]0\" key=\"NS.object.0\"/>#<integer value=\"1070\" key=\"NS.object.0\"/>#' \\
            {} \\;"
    }
}

# This should be removed if/when dealt with in the xcode portgroup; see:
# https://trac.macports.org/ticket/57137
# TODO: check if Xcode 5.0 is the correct cutoff version for all these options
if {[vercmp $xcodeversion 5.0] >= 0} {
    xcode.scheme        ${subport}

    build.pre_args      -derivedDataPath ${worksrcpath}/DerivedData
    destroot.pre_args   -derivedDataPath ${worksrcpath}/DerivedData

    build.pre_args-append    -destination "generic/platform=macOS,name='Any Mac'"
    destroot.pre_args-append -destination "generic/platform=macOS,name='Any Mac'"
}

build.args-append   HEADER_SEARCH_PATHS='\$(HEADER_SEARCH_PATHS) ${prefix}/include' \
                    LIBRARY_SEARCH_PATHS='\$(LIBRARY_SEARCH_PATHS) ${prefix}/lib'
destroot.args-append \
                    HEADER_SEARCH_PATHS='\$(HEADER_SEARCH_PATHS) ${prefix}/include' \
                    LIBRARY_SEARCH_PATHS='\$(LIBRARY_SEARCH_PATHS) ${prefix}/lib'

if {${subport} eq "XLD"} {
    depends_lib     port:libebur128 \
                    port:libcddb \
                    port:openssl \
                    port:libsndfile \
                    port:soxr

    patch.args-append -p 1 --fuzz 20

    patchfiles-append \
                    xcodeproj-link-SystemConfiguration_framework.patch \
                    xcodeproj-add-XLDGainAnalyzer.patch \
                    xcodeproj-no-libcrypto.patch \
                    xcodeproj-deps.patch \
                    cddb.png.patch \
                    xcodeproj-remove-legacy.patch \
                    XLD.patch \
                    XLDPluginManager-global-plugins.patch

    post-fetch {
        # HACK: export the XLDID3 framework which is required to build XLD
        system -W [file dirname ${worksrcpath}] "${prefix}/bin/svn --non-interactive export [regsub -- {/XLD$} ${svn.url} "/XLDID3"] XLDID3"
    }

    post-destroot {
        # install CLI
        file copy ${filespath}/xld ${worksrcpath}/xld.bin
        reinplace "s|@MACPORTS_APP_DIR@|${applications_dir}|g" ${worksrcpath}/xld.bin
        xinstall -m 0755 ${worksrcpath}/xld.bin ${destroot}${prefix}/bin/xld

        # install READMEs
        xinstall -d -m 0755 ${destroot}${prefix}/share/doc/${name}
        xinstall -m 0644 {*}[glob ${filespath}/Readme/*] ${destroot}${prefix}/share/doc/${name}
    }

    variant aac description {AAC format support} {
        depends_lib-append  port:XLDAacOutput2
    }
    variant alac description {ALAC format support} {
        depends_lib-append  port:XLDAlacDecoder \
                            port:XLDAlacOutput
    }
    variant ape description {Ape (Monkey's Audio) format support} {
        depends_lib-append  port:XLDApeDecoder
    }
    variant dsd description {DSD format support} {
        depends_lib-append  port:XLDDSDDecoder \
                            port:XLDDSDOutput
    }
    variant flac description {FLAC format support} {
        depends_lib-append  port:XLDFlacDecoder \
                            port:XLDFlacOutput
    }
    variant heaac description {HE-AAC format support} {
        depends_lib-append  port:XLDHEAACOutput
    }
    variant libsndfile {
        depends_lib-append  port:XLDLibsndfileDecoder
    }
    variant mp3 description {MP3 format support} {
        depends_lib-append  port:XLDLameOutput \
                            port:XLDMP3Decoder
    }
    variant opus description {OPUS format support} {
        depends_lib-append  port:XLDOpusOutput
    }
    variant shorten description {Shorten format support} {
        depends_lib-append  port:XLDShortenDecover
    }
    variant tta {
        depends_lib-append  port:XLDTtaDecoder
    }
    variant vorbis description {OGG Vorbis format support} {
        depends_lib-append  port:XLDVorbisOutput \
                            port:XLDVorbisDecoder
    }
    variant wavpack description {WavPack format support} {
        depends_lib-append  port:XLDWavpackOutput \
                            port:XLDWavpackDecoder
    }
}


# Plug-Ins
set plugins {
    XLDAacOutput
    XLDAacOutput2
    XLDAlacDecoder
    XLDAlacOutput
    XLDApeDecoder
    XLDDSDDecoder
    XLDDSDOutput
    XLDFlacDecoder
    XLDFlacOutput
    XLDHEAACOutput
    XLDLameOutput
    XLDLibsndfileDecoder
    XLDMP3Decoder
    XLDOpusOutput
    XLDShortenDecoder
    XLDTakDecoder
    XLDTtaDecoder
    XLDVorbisDecoder
    XLDVorbisOutput
    XLDWavpackDecoder
    XLDWavpackOutput
}

set plugin_depends_lib(XLDApeDecoder) { port:monkeys-audio }
set plugin_depends_lib(XLDDSDDecoder) { port:soxr }
set plugin_depends_lib(XLDDSDOutput) { port:soxr }
set plugin_depends_lib(XLDFlacDecoder) { port:flac port:libogg }
set plugin_depends_lib(XLDFlacOutput) { port:flac port:libogg }
set plugin_depends_lib(XLDHEAACOutput) { port:aacplusenc }
set plugin_depends_lib(XLDLameOutput) { port:lame }
set plugin_depends_lib(XLDLibsndfileDecoder) { port:libsndfile }
set plugin_depends_lib(XLDOpusOutput) { port:libopus port:libogg }
set plugin_depends_lib(XLDSd2fOutput) { port:libsndfile }
set plugin_depends_lib(XLDShortenDecoder) { port:shorten }
set plugin_depends_lib(XLDTakDecoder) { port:ffmpeg port:wine }
set plugin_depends_lib(XLDVorbisDecoder) { port:libvorbis }
set plugin_depends_lib(XLDVorbisOutput) { port:libvorbis }
set plugin_depends_lib(XLDWavpackDecoder) { port:wavpack }
set plugin_depends_lib(XLDWavpackOutput) { port:wavpack }

foreach p ${plugins} {
    subport ${p} {
        name ${p}
        description     ${p} plugin for XLD

        if {[info exists plugin_depends_lib(${p})]} {
            depends_lib-append {*}$plugin_depends_lib(${p})
        }

        xcode.destroot.path /Library/Application Support/XLD/PlugIns
    }
}
