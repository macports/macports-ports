# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        neomutt neomutt 20171013 neomutt-
revision            1
categories          mail
platforms           darwin
license             GPL-2+
maintainers         {schenkel.net:leonardo @lbschenkel} {l2dy @l2dy} openmaintainer

description         The Mutt E-Mail Client (patched version with added features)
long_description    Mutt is a small but very powerful text-based MIME \
                    mail client. Mutt is highly configurable, and is \
                    well suited to the mail power user with advanced \
                    features like key bindings, keyboard macros, mail \
                    threading, regular expression searches and \
                    a powerful pattern matching language for selecting \
                    groups of messages.
homepage            https://www.neomutt.org

checksums           rmd160  e1533dc0df2d9c60a26fce6d2b8e05cd1301d800 \
                    sha256  23147c3f90dc64e627517ff5c8d3fb3d5eb4da2f8bbc3f18c4cf1553fb52d082

depends_build       port:docbook-xml-4.2 port:docbook-xsl port:libxslt port:w3m
depends_lib         path:lib/libssl.dylib:openssl \
                    port:gettext \
                    port:libiconv \
                    port:ncurses \
                    port:zlib
depends_run         path:share/curl/curl-ca-bundle.crt:curl-ca-bundle
# needed by smime_keys
depends_run-append  path:bin/perl:perl5

# fixes build on macOS <= 10.6:
# https://github.com/neomutt/neomutt/commit/d424b60dd1e1f11c871ae322ac3c4e61a19ce0ec
patchfiles          patch-wcscasecmp.diff
patch.pre_args      -p1

configure.cmd       ./configure.autosetup
configure.args      --disable-idn \
                    --with-ncurses=${prefix} \
                    --with-nls=${prefix} \
                    --with-ssl=${prefix}

default_variants    +idn +mutt
if {${install.user} ne "root"} {
    default_variants-append     +homespool
}

variant db4 description {Support Berkeley DB database} {
    configure.args-append       --with-bdb=${prefix}
    configure.cppflags-append   "-I${prefix}/include/db48"
    configure.ldflags-append    "-L${prefix}/lib/db48"
    depends_lib-append          port:db48
}
variant gdbm description {Support GNU dbm database} {
    configure.args-append       --with-gdbm=${prefix}
    depends_lib-append          port:gdbm
}
variant gpgme description {Enable GPGME crypto support} {
    configure.args-append       --with-gpgme=${prefix}
    depends_lib-append          port:gpgme
}
variant gss description {Support GSS API (Kerberos)} {
    configure.args-append       --with-gss=${prefix}
    depends_lib-append          port:kerberos5
}
variant homespool description {Spool mail in home directory (allows installing without root privileges)} {
    configure.args-append       --homespool
}
variant idn description {Internationalized Domain Name support} {
    configure.args-replace      --disable-idn --with-idn=${prefix}
    depends_lib-append          port:libidn
}
variant kyotocabinet description {Support Kyoto Cabinet database} {
    configure.args-append       --with-kyotocabinet=${prefix}
    depends_lib-append          port:kyotocabinet
}
variant lmdb description {Support LMDB database} {
    configure.args-append       --with-lmdb=${prefix}
    depends_lib-append          port:lmdb
}
variant lua description {Lua scripting support} {
    configure.args-append       --with-lua=${prefix}
    depends_lib-append          port:lua
}
variant mutt description {Create 'mutt' symlink} {
    post-destroot {
        file link -symbolic ${destroot}${prefix}/bin/mutt neomutt
    }
}
variant notmuch description {Notmuch support} {
    configure.args-append       --with-notmuch=${prefix}
    depends_lib-append          port:notmuch
}
variant qdbm description {Support QDBM database} {
    configure.args-append       --with-qdbm=${prefix}
    depends_lib-append          port:qdbm
}
variant sasl description {Simple Authentication and Security Layer support} {
    configure.args-append       --with-sasl=${prefix}
    depends_lib-append          port:cyrus-sasl2
}
variant slang description {Use S-lang instead of ncurses} {
    configure.args-append       --with-ui=slang --with-slang=${prefix}
    depends_lib-replace         port:ncurses port:slang2
}
variant tokyocabinet description {Support Tokyo Cabinet database} {
    configure.args-append       --with-tokyocabinet=${prefix}
    depends_lib-append          port:tokyocabinet
}

post-extract {
    reinplace -W ${worksrcpath}/contrib "s|/usr/bin/|${prefix}/bin/|g" \
              smime_keys
    reinplace -W ${worksrcpath}/contrib "s|/usr/lib/|${prefix}/lib/|g" \
              gpg.rc pgp5.rc smime.rc
}
post-destroot {
    move ${destroot}${prefix}/etc/neomuttrc \
         ${destroot}${prefix}/etc/neomuttrc.sample
    # install mime.types in ${prefix}/etc as previous versions used to do
    copy ${destroot}${prefix}/share/doc/neomutt/mime.types \
         ${destroot}${prefix}/etc/mime.types.sample
    # install examples in ${prefix}/share/examples
    xinstall -d ${destroot}${prefix}/share/examples
    move ${destroot}${prefix}/share/doc/neomutt/samples \
         ${destroot}${prefix}/share/examples/neomutt
}
post-activate {
    foreach f { mime.types neomuttrc } {
        if {![file exists ${prefix}/etc/${f}]} {
            copy ${prefix}/etc/${f}.sample \
                 ${prefix}/etc/${f}
        }
    }
}
