Add BUILD_PHYSFS flag to select whether to build a local copy of physfs.
--- lib/CMakeLists.txt.orig	2017-06-05 11:30:44.000000000 -0500
+++ lib/CMakeLists.txt	2018-03-15 10:36:33.000000000 -0500
@@ -121,27 +121,29 @@
 ###
 # PhysicsFS
 
-# I want 2.1 features, even if they're not out yet, so I made my own tarball
-#set (physfs_Version 2.0.3)
-#set (physfs_URL http://icculus.org/physfs/downloads/physfs-${physfs_Version}.tar.bz2)
-set (physfs_Version 2.1.0-pre20121013)
-set (physfs_URL https://s3.amazonaws.com/willglynn/physfs-${physfs_Version}.tgz)
-set (physfs_Dir ${CMAKE_CURRENT_BINARY_DIR}/physfs-${physfs_Version})
-
-# physfs 2.0.3 complains about FSPathMakeRef et al being deprecated, and warnings are treated as errors
-# Turn it back into a warning instead
-if (APPLE)
-  set (physfs_Flags -Wno-error=deprecated-declarations)
-endif (APPLE)
-
-ExternalProject_Add(ext_physfs
-  DOWNLOAD_DIR ${CMAKE_CURRENT_BINARY_DIR}/downloads
-  URL ${physfs_URL}
-  PREFIX ${physfs_Dir}
-  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${LocalPrefix} -DPHYSFS_ARCHIVE_7Z=false -DPHYSFS_ARCHIVE_GRP=false -DPHYSFS_ARCHIVE_WAD=false -DPHYSFS_ARCHIVE_HOG=false -DPHYSFS_ARCHIVE_MVL=false -DPHYSFS_ARCHIVE_QPAK=false -DPHYSFS_ARCHIVE_ISO9660=false -DPHYSFS_HAVE_CDROM_SUPPORT=false -DPHYSFS_BUILD_SHARED=false -DPHYSFS_BUILD_TEST=false -DCMAKE_C_FLAGS=${physfs_Flags}
-  )
+IF (BUILD_PHYSFS)
+  # I want 2.1 features, even if they're not out yet, so I made my own tarball
+  #set (physfs_Version 2.0.3)
+  #set (physfs_URL http://icculus.org/physfs/downloads/physfs-${physfs_Version}.tar.bz2)
+  set (physfs_Version 2.1.0-pre20121013)
+  set (physfs_URL https://s3.amazonaws.com/willglynn/physfs-${physfs_Version}.tgz)
+  set (physfs_Dir ${CMAKE_CURRENT_BINARY_DIR}/physfs-${physfs_Version})
+
+  # physfs 2.0.3 complains about FSPathMakeRef et al being deprecated, and warnings are treated as errors
+  # Turn it back into a warning instead
+  if (APPLE)
+    set (physfs_Flags -Wno-error=deprecated-declarations)
+  endif (APPLE)
 
-add_dependencies(libs ext_physfs)
+  ExternalProject_Add(ext_physfs
+    DOWNLOAD_DIR ${CMAKE_CURRENT_BINARY_DIR}/downloads
+    URL ${physfs_URL}
+    PREFIX ${physfs_Dir}
+    CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${LocalPrefix} -DPHYSFS_ARCHIVE_7Z=false -DPHYSFS_ARCHIVE_GRP=false -DPHYSFS_ARCHIVE_WAD=false -DPHYSFS_ARCHIVE_HOG=false -DPHYSFS_ARCHIVE_MVL=false -DPHYSFS_ARCHIVE_QPAK=false -DPHYSFS_ARCHIVE_ISO9660=false -DPHYSFS_HAVE_CDROM_SUPPORT=false -DPHYSFS_BUILD_SHARED=false -DPHYSFS_BUILD_TEST=false -DCMAKE_C_FLAGS=${physfs_Flags}
+    )
+
+  add_dependencies(libs ext_physfs)
+endif (BUILD_PHYSFS)
 
 
 ###
