--- CMakeLists.txt	2024-01-12 03:01:41.000000000 +0800
+++ CMakeLists.txt	2024-05-31 18:12:08.000000000 +0800
@@ -18,11 +18,6 @@
 set(GITVERSION ${VERSION})
 set(CMAKE_CXX_STANDARD 14)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
-set(MACOSX_BUNDLE_COPYRIGHT "GPL2+")
-set(MACOSX_BUNDLE_BUNDLE_VERSION ${VERSION})
-set(MACOSX_BUNDLE_BUNDLE_NAME "wxMaxima")
-set(MACOSX_BUNDLE_LONG_VERSION_STRING "wxMaxima ${VERSION}")
-# set(MACOSX_BUNDLE_GUI_IDENTIFIER "wxMaxima")
 ##
 # Options
 #

--- src/CMakeLists.txt	2024-01-12 03:01:41.000000000 +0800
+++ src/CMakeLists.txt	2024-05-31 18:11:09.000000000 +0800
@@ -213,54 +213,11 @@
 
 include_directories(${CMAKE_SOURCE_DIR}/data/winrc)
 
-if(APPLE)
-  file(GLOB RESOURCE_FILES
-      ${CMAKE_SOURCE_DIR}/data/io.github.wxmaxima_developers.wxMaxima.png
-      ${CMAKE_SOURCE_DIR}/data/io.github.wxmaxima_developers.wxMaxima.svg
-      ${CMAKE_SOURCE_DIR}/art/wxmac.icns
-      ${CMAKE_SOURCE_DIR}/art/wxmac-doc.icns
-      ${CMAKE_SOURCE_DIR}/art/wxmac-doc-wxm.icns
-      ${CMAKE_SOURCE_DIR}/art/wxmac-doc-wxmx.icns
-      ${CMAKE_SOURCE_DIR}/info/*.html
-      ${CMAKE_SOURCE_DIR}/info/*.png
-      ${CMAKE_SOURCE_DIR}/data/PkgInfo
-      ${CMAKE_SOURCE_DIR}/data/fonts/*.ttf
-      ${CMAKE_SOURCE_DIR}/locales/wxwin/*.mo
-      ${CMAKE_SOURCE_DIR}/data/fonts/*.otf
-      ${CMAKE_SOURCE_DIR}/data/fonts/*.ttf
-      ${CMAKE_BINARY_DIR}/locale/*.mo
-      )
-endif()
-
 if(WIN32)
   add_executable(wxmaxima WIN32 ${SOURCE_FILES})
   if(CMAKE_VERSION VERSION_GREATER_EQUAL "3.16")
     set_target_properties(wxmaxima PROPERTIES VS_DPI_AWARE "PerMonitor")
   endif()
-elseif(APPLE)
-    set(MACOSX_BUNDLE_NAME wxmaxima)
-    set(MACOSX_BUNDLE_ICON_FILE wxmac.icns)
-    set(MACOSX_BUNDLE TRUE)
-    list(APPEND SOURCE_FILES ${RESOURCE_FILES})
-    add_executable(wxmaxima ${SOURCE_FILES})
-    set_target_properties(wxmaxima PROPERTIES
-        MACOSX_BUNDLE TRUE
-	MACOSX_BUNDLE_INFO_PLIST ${CMAKE_CURRENT_BINARY_DIR}/Info.plist
-        RESOURCE "${RESOURCE_FILES}"
-    )
-
-    install(
-        # The bundle utilities need to be run in a
-        # separate step, meaning from within a string.
-        # they provide the fixup command that makes the
-        # .dylibs run from within the app bundle.
-        CODE "include(BundleUtilities)
-        # the separate step doesn't know about
-        # the values our variables had in the
-        # cmakefile so we need to set them again.
-        set(BU_CHMOD_BUNDLE_ITEMS TRUE)
-        fixup_bundle(\"${CMAKE_BINARY_DIR}/src/wxmaxima.app\"   \"\"   \"\")"
-        COMPONENT Runtime)
 else()
     add_executable(wxmaxima ${SOURCE_FILES})
 endif()
@@ -317,15 +274,7 @@
 
 configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Version.h.cin ${CMAKE_BINARY_DIR}/Version.h)
 
-if(APPLE)
-    install(TARGETS wxmaxima
-	     BUNDLE  DESTINATION .
-	     RUNTIME DESTINATION bin
-	     COMPONENT Runtime
-	     RESOURCE DESTINATION resource)
-else()
-    install(TARGETS wxmaxima RUNTIME DESTINATION bin)
-endif()
+install(TARGETS wxmaxima RUNTIME DESTINATION bin)
 
 # Build Packages
 if(WIN32)
@@ -333,10 +282,6 @@
     set(CPACK_NSIS_DEFINES "ManifestDPIAware true")
     include(InstallRequiredSystemLibraries)
     install(FILES ${CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS} DESTINATION bin)
-elseif(APPLE)
-    # If we have generated an .apk bundle we can package this in a DMG image
-    set(CPACK_GENERATOR "DragNDrop")
-    set(CPACK_BINARY_DragNDrop "ON")
 else()
     set(CPACK_GENERATOR "DEB;TGZ;TBZ2")
     # build RPMs only if rpmbuild is installed
