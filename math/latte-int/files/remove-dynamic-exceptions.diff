diff --git code/latte/ExponentialSubst.cpp code/latte/ExponentialSubst.cpp
index a839b820..bcbfa934 100644
--- code/latte/ExponentialSubst.cpp
+++ code/latte/ExponentialSubst.cpp
@@ -57,7 +57,6 @@ mpq_vector
 computeExponentialResidueWeights(const vec_ZZ &generic_vector,
 				 mpz_class &prod_ray_scalar_products,
 				 const listCone *cone, int numOfVars)
-  throw(NotGenericException)
 {
   // Compute dimension; can be smaller than numOfVars
   int dimension = 0;
@@ -95,7 +94,6 @@ computeExponentialResidueWeights(const vec_ZZ &generic_vector,
 mpq_vector
 computeExponentialResidueWeights(const vec_ZZ &generic_vector,
 				 const listCone *cone, int numOfVars)
-  throw(NotGenericException)
 {
   mpz_class prod_ray_scalar_products;
   return computeExponentialResidueWeights(generic_vector,
diff --git code/latte/ExponentialSubst.h code/latte/ExponentialSubst.h
index c9fa4ace..43a4ab63 100644
--- code/latte/ExponentialSubst.h
+++ code/latte/ExponentialSubst.h
@@ -58,13 +58,11 @@ class Exponential_Single_Cone_Parameters
 mpq_vector /* FIXME: This version can probably go away */
 computeExponentialResidueWeights(const vec_ZZ &generic_vector,
 				 mpz_class &prod_ray_scalar_products,
-				 const listCone *cone, int numOfVars)
-  throw(NotGenericException);
+				 const listCone *cone, int numOfVars);
 
 mpq_vector
 computeExponentialResidueWeights(const vec_ZZ &generic_vector,
-				 const listCone *cone, int numOfVars)
-  throw(NotGenericException);
+				 const listCone *cone, int numOfVars);
 
 ZZ
 scalar_power(const vec_ZZ &generic_vector,
diff --git code/latte/sqlite/IntegrationDB.cpp code/latte/sqlite/IntegrationDB.cpp
index ab8df535..c1dde830 100644
--- code/latte/sqlite/IntegrationDB.cpp
+++ code/latte/sqlite/IntegrationDB.cpp
@@ -1277,7 +1277,7 @@ void  IntegrationDB::insertSpecficPolytopeIntegrationTest(string polymakeFile, i
  * @parm filePath: to the latte-style polynomial.
  * @return rowid of the inserted row.
  */
-int IntegrationDB::insertPolynomial(int dim, int degree, const char*filePath) throw(SqliteDBexception)
+int IntegrationDB::insertPolynomial(int dim, int degree, const char*filePath)
 {
 	if ( doesPolynomialExist(filePath))
 		throw SqliteDBexception(string("insertPolynomial::Polynomial ")+filePath+" already exist");
diff --git code/latte/sqlite/IntegrationDB.h code/latte/sqlite/IntegrationDB.h
index d690a832..ce8cfac6 100644
--- code/latte/sqlite/IntegrationDB.h
+++ code/latte/sqlite/IntegrationDB.h
@@ -67,7 +67,7 @@ class IntegrationDB: public SqliteDB
 	int insertIntegrationTest(int polynomialID, int polytopeID);
 	void insertIntegrationTest(int dim, int degree, int vertexCount, int count);
 	void insertSpecficPolytopeIntegrationTest(string polymakeFile, int degree, int count);
-	int insertPolynomial(int dim, int degree, const char*filePath) throw(SqliteDBexception);
+        int insertPolynomial(int dim, int degree, const char*filePath);
 
 	int insertPolytope(int dim, int vertexCount, int simple, int dualRowID, const char* latteFilePath, const char* polymakeFilePath);
 
