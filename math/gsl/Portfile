# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compilers 1.0

name                gsl
version             2.5
revision            1
categories          math science
platforms           darwin
maintainers         {dtakahashi @daitakahashi} openmaintainer
license             GPL-3+
homepage            https://www.gnu.org/software/gsl

description         A numerical library for C and C++ programmers

long_description    The GNU Scientific Library (GSL) is a numerical library \
                    for C and C++ programmers.  It is free software under the \
                    GNU General Public License. \
                    \
                    The library provides a wide range of mathematical routines \
                    such as random number generators, special functions and \
                    least-squares fitting.  There are over 1000 functions in \
                    total.

master_sites        gnu

checksums           rmd160  2ec06d425adf5992191ff1c0dd992f3bae3af064 \
                    sha256  0460ad7c2542caaddc6729762952d345374784100223995eb14d614861f2258d \
                    size    7303881

patchfiles-append   yosemite-libtool.patch

configure.args      --infodir=${prefix}/share/info \
                    --mandir=${prefix}/share/man

use_parallel_build  yes

test.run            yes
test.target         check

post-activate {
    system "install-info ${prefix}/share/info/gsl-ref.info ${prefix}/share/info/dir"
}

compilers.choose    cc
compilers.setup

if {[variant_isset doc_python27]} { set PythonVersion 27 }
if {[variant_isset doc_python35]} { set PythonVersion 35 }
if {[variant_isset doc_python36]} { set PythonVersion 36 }
if {[variant_isset doc_python37]} { set PythonVersion 37 }

variant doc_python27 conflicts doc_python35 doc_python36 doc_python37 description {Install PDF and HTML documentation using Python 2.7} {}
variant doc_python35 conflicts doc_python27 doc_python36 doc_python37 description {Install PDF and HTML documentation using Python 3.5} {}
variant doc_python36 conflicts doc_python27 doc_python35 doc_python37 description {Install PDF and HTML documentation using Python 3.6} {}
variant doc_python37 conflicts doc_python27 doc_python35 doc_python36 description {Install PDF and HTML documentation using Python 3.7} {}

if {[variant_isset doc_python27] || [variant_isset doc_python35] || [variant_isset doc_python36] || [variant_isset doc_python37]} {
    depends_build   port:ghostscript \
                    bin:latexmk:latexmk \
                    bin:latex:texlive \
                    port:texlive-latex-extra \
                    port:py${PythonVersion}-sphinx \
                    port:py${PythonVersion}-sphinx_rtd_theme \
                    port:py${PythonVersion}-sphinxcontrib-websupport

    ## for python>=3.5, typing has been installed as a standard library
    if {${PythonVersion} < 35} {
        depends_build-append port:py${PythonVersion}-typing
    }

    patchfiles-append patch-python_version.diff
    post-patch {
        set PythonBranch [string range ${PythonVersion} 0 end-1].[string index ${PythonVersion} end]
        reinplace "s|__MACPORTS_SPHINX_BUILD__|sphinx-build-${PythonBranch}|g" ${worksrcpath}/doc/Makefile.in
    }

    post-build {
        system -W ${worksrcpath}/doc "make latexpdf"
        system -W ${worksrcpath}/doc "make html"
    }

    post-destroot {
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/${name}
        xinstall -c -m 644 ${worksrcpath}/doc/_build/latex/gsl-ref.pdf ${destroot}${prefix}/share/doc/${name}
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/${name}/
        copy ${worksrcpath}/doc/_build/html ${destroot}${prefix}/share/doc/${name}/
    }
}

variant optimize description "Provide further optimization options (depending on compiler used)" {
    configure.optflags-append   -O3
}

platform darwin i386 {
    if { [variant_isset optimize] } {
        if { [clang_variant_isset] } {
            configure.optflags  -march=native
        } elseif { [gcc_variant_isset] } {
            configure.optflags  -ftree-vectorize -march=native -mno-avx
            if { ! ([variant_isset gcc44] ||
                    [variant_isset gcc45] ||
                    [variant_isset gcc46]) } {
                ## Haswell's new instruction sets need to be disabled,
                ## because these instructions are not recognized by
                ## cctools' assembler
                configure.optflags-append -mno-avx2 -mno-bmi -mno-bmi2
            }
        } else {
            #Default compiler. Check if the compiler supports "native" architecture
            if { [string match "clang" ${configure.cc}] } {
                configure.optflags  -march=native
            }
        }
    }
}

livecheck.type      regex
livecheck.url       https://ftp.gnu.org/gnu/gsl/
livecheck.regex     ${name}-(\[\\d.\]+)${extract.suffix}
