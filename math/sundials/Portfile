# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           mpi 1.0

name                sundials
version             2.7.0
#revision            0
categories          math devel
license             bsd
platforms           darwin
maintainers         sean openmaintainer

description         SUite of Nonlinear and DIfferential/ALgebraic equation Solvers

long_description    SUNDIALS consists of the following five solvers: CVODE\
                    solves initial value problems for ordinary differential\
                    equation (ODE) systems.  CVODES solves ODE systems and\
                    includes sensitivity analysis capabilities (forward and\
                    adjoint).  IDA solves initial value problems for\
                    differential-algebraic equation (DAE) systems.  IDAS solves\
                    DAE systems and includes sensitivity analysis capabilities\
                    (forward and adjoint).  KINSOL solves nonlinear algebraic\
                    systems.

homepage            https://computation.llnl.gov/projects/sundials
master_sites        http://computation.llnl.gov/projects/sundials-suite-nonlinear-differential-algebraic-equation-solvers/download/

checksums           rmd160  7bbbff19828c8235422497e11891d07fe02e4021 \
                    sha256  d39fcac7175d701398e4eb209f7e92a5b30a78358d4a0c0fcc23db23c11ba104

cmake.out_of_source yes

# use default cmake behavior to find Lapack
patchfiles-append   patch-find_lapack.diff

depends_lib-append  port:SuiteSparse

if {[variant_isset examples]} {
    mpi.setup \
        require_fortran
} else {
    mpi.setup
}

configure.args-append \
                    -DEXAMPLES_ENABLE=OFF \
                    -DCXX_ENABLE=OFF \
                    -DF90_ENABLE=OFF \
                    -DLAPACK_ENABLE=OFF \
                    -DFCMIX_ENABLE=OFF \
                    -DKLU_ENABLE=ON \
                    -DKLU_LIBRARY_DIR=${prefix}/lib \
                    -DKLU_INCLUDE_DIR=${prefix}/include \
                    -DMPI_ENABLE=OFF

pre-configure {
    if {[mpi_variant_isset]} {
        configure.args-delete -DMPI_ENABLE=OFF
        configure.args-append -DMPI_ENABLE=ON \
                              -DMPI_MPICC=${prefix}/bin/${mpi.cc} \
                              -DMPI_RUN_COMMAND=${prefix}/bin/${mpi.exec}
    }
}

# without this, previously installed sundials headers are found first
# this can cause problem when upgrading
# see https://cmake.org/cmake/help/latest/variable/CMAKE_INCLUDE_DIRECTORIES_BEFORE.html
configure.args-append \
    -DCMAKE_INCLUDE_DIRECTORIES_BEFORE=ON

# cmake files (e.g. config/SundialsFortran.cmake) create CMakeLists.txt files
#    to test for functionality (e.g. a Fortran compiler).
# CMAKE_OSX_SYSROOT is not passed to the functionality test.
# Because CMAKE_OSX_DEPLOYMENT_TARGET is set as an environmental variable,
#    -isysroot is added to the compiler flags.
# Only Apple Clang compilers support tbd files.
# See https://trac.macports.org/ticket/53151
# See https://cmake.org/cmake/help/latest/variable/CMAKE_OSX_SYSROOT.html
configure.env-append SDKROOT="/"

if {![mpi_variant_isset]} {
    default_variants      +mpich
}

variant examples description {Install Examples} {
    configure.args-replace \
        -DEXAMPLES_ENABLE=OFF \
        -DEXAMPLES_ENABLE=ON

    configure.args-replace \
        -DLAPACK_ENABLE=OFF \
        -DLAPACK_ENABLE=ON

    configure.args-replace \
        -DCXX_ENABLE=OFF \
        -DCXX_ENABLE=ON

    configure.args-replace \
        -DF90_ENABLE=OFF \
        -DF90_ENABLE=ON

    configure.args-replace \
        -DFCMIX_ENABLE=OFF \
        -DFCMIX_ENABLE=ON

    configure.args-append \
        -DEXAMPLES_INSTALL_PATH=${prefix}/share/examples/${name}

    pre-fetch {
        if {![variant_isset accelerate] && ![variant_isset openblas] && ![variant_isset atlas] } {
            ui_error "You must select either the +accelerate, +atlas, or +openblas variant for linear algebra."
            return -code error "No linear-algebra variant selected."
        }
    }
}

variant accelerate requires examples conflicts atlas openblas description {Use Apple Accelerate Libraries} {
    configure.args-append -DBLA_VENDOR=Apple
}

variant atlas requires examples conflicts accelerate openblas description {Use MacPorts ATLAS Libraries} {
    depends_lib-append port:atlas

    configure.args-append   \
        -DBLA_VENDOR=ATLAS

    # FindBLAS.cmake and FindLAPACK.cmake do not seem to find MacPorts Atlas properly
    configure.args-append          \
        -DBLAS_LIBRARIES=satlas    \
        -DLAPACK_LIBRARIES=satlas
}

variant openblas requires examples conflicts atlas accelerate description {Use MacPorts OpenBLAS Libraries} {
    depends_lib-append path:lib/libopenblas.dylib:openblas
    require_active_variants path:lib/libopenblas.dylib:OpenBLAS lapack

    configure.args-append  -DBLA_VENDOR=OpenBLAS
}

if {[variant_isset examples] && ![variant_isset accelerate] && ![variant_isset atlas] && ![variant_isset openblas]} {
    default_variants-append +accelerate
}

variant doc description {install pdf documentation} {
    post-destroot {
        xinstall -d -m 0755 ${destroot}${prefix}/share/doc/${name}
        copy {*}[glob ${worksrcpath}/doc/*] ${destroot}${prefix}/share/doc/${name}
        system "find ${destroot}${prefix}/share/doc -type f -exec chmod 644 {} \\;"
    }
}

livecheck.type      none
