# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           mpi 1.0

name                sundials
version             3.1.0
revision            1
categories          math devel
license             bsd
platforms           darwin
maintainers         {sean @seanfarley} openmaintainer

description         SUite of Nonlinear and DIfferential/ALgebraic equation Solvers

long_description    SUNDIALS consists of the following five solvers: CVODE\
                    solves initial value problems for ordinary differential\
                    equation (ODE) systems.  CVODES solves ODE systems and\
                    includes sensitivity analysis capabilities (forward and\
                    adjoint).  IDA solves initial value problems for\
                    differential-algebraic equation (DAE) systems.  IDAS solves\
                    DAE systems and includes sensitivity analysis capabilities\
                    (forward and adjoint).  KINSOL solves nonlinear algebraic\
                    systems.

homepage            https://computation.llnl.gov/projects/sundials
master_sites        http://computation.llnl.gov/projects/sundials-suite-nonlinear-differential-algebraic-equation-solvers/download/

checksums           rmd160  f2f77ea9ff638bc5f32daeba30ebda2e0c85073a \
                    sha256  18d52f8f329626f77b99b8bf91e05b7d16b49fde2483d3a0ea55496ce4cdd43a

cmake.out_of_source yes

conflicts           sundials2

# use default cmake behavior to find Lapack
patchfiles-append   patch-find_lapack.diff

depends_lib-append  port:SuiteSparse

mpi.setup \
        require_fortran

configure.args-append \
                    -DEXAMPLES_ENABLE_C=OFF \
                    -DEXAMPLES_ENABLE_CXX=OFF \
                    -DEXAMPLES_ENABLE_F77=OFF \
                    -DEXAMPLES_ENABLE_F90=OFF \
                    -DBLAS_ENABLE=OFF \
                    -DLAPACK_ENABLE=OFF \
                    -DFCMIX_ENABLE=ON \
                    -DKLU_ENABLE=ON \
                    -DKLU_LIBRARY_DIR=${prefix}/lib \
                    -DKLU_INCLUDE_DIR=${prefix}/include \
                    -DMPI_ENABLE=OFF

pre-configure {
    if {[mpi_variant_isset]} {
        configure.args-delete -DMPI_ENABLE=OFF
        configure.args-append -DMPI_ENABLE=ON \
                              -DMPI_MPICC=${prefix}/bin/${mpi.cc} \
                              -DMPI_MPICXX=${prefix}/bin/${mpi.cxx} \
                              -DMPI_MPIF77=${prefix}/bin/${mpi.f77} \
                              -DMPI_MPIF90=${prefix}/bin/${mpi.f90} \
                              -DMPI_RUN_COMMAND=${prefix}/bin/${mpi.exec}
    }
}

# without this, previously installed sundials headers are found first
# this can cause problem when upgrading
# see https://cmake.org/cmake/help/latest/variable/CMAKE_INCLUDE_DIRECTORIES_BEFORE.html
configure.args-append \
    -DCMAKE_INCLUDE_DIRECTORIES_BEFORE=ON

# cmake files (e.g. config/SundialsFortran.cmake) create CMakeLists.txt files
#    to test for functionality (e.g. a Fortran compiler).
# CMAKE_OSX_SYSROOT is not passed to the functionality test.
# Because CMAKE_OSX_DEPLOYMENT_TARGET is set as an environmental variable,
#    -isysroot is added to the compiler flags.
# Only Apple Clang compilers support tbd files.
# See https://trac.macports.org/ticket/53151
# See https://cmake.org/cmake/help/latest/variable/CMAKE_OSX_SYSROOT.html
configure.env-append SDKROOT="/"

if {![mpi_variant_isset]} {
    default_variants      +mpich
}

variant examples description {Install Examples} {
    # F77 examples fail with:
    #Undefined symbols for architecture x86_64:
    #  "_F2C_ARKODE_mass_matrix", referenced from:
    #      _farkdlsmassinit_ in libsundials_farkode.a(farkode.c.o)
    #      _farkfree_ in libsundials_farkode.a(farkode.c.o)
    #  "_F2C_ARKODE_matrix", referenced from:
    #      _farkdlsinit_ in libsundials_farkode.a(farkode.c.o)
    #      _farkfree_ in libsundials_farkode.a(farkode.c.o)
    set example_langs {C CXX F90}
    foreach lang ${example_langs} {
    configure.args-replace \
            -DEXAMPLES_ENABLE_${lang}=OFF \
            -DEXAMPLES_ENABLE_${lang}=ON
    }
    configure.args-append \
        -DEXAMPLES_INSTALL_PATH=${prefix}/share/examples/${name}
}

variant lapack conflicts fortran_klu description {Enable LAPACK support} {
    # from CMakeLists.txt:
    #    LAPACK is not compatible with INT64_T precision
    configure.args-append \
        -DSUNDIALS_INDEX_TYPE=int32_t

    configure.args-replace \
        -DLAPACK_ENABLE=OFF \
        -DLAPACK_ENABLE=ON
}

variant fortran_klu conflicts lapack description {Build Fortran interface to KLU} {
    # from src/sunlinsol_klu/CMakeLists.txt:
    #    The Fortran interface to KLU is not compatible with INT32_T
    configure.args-append \
        -DSUNDIALS_INDEX_TYPE=int64_t
}

if {![variant_isset lapack] && ![variant_isset fortran_klu]} {
    default_variants-append +fortran_klu
}

variant accelerate conflicts atlas openblas description {Use Apple Accelerate Libraries} {
    configure.args-append -DBLA_VENDOR=Apple
}

variant atlas conflicts accelerate openblas description {Use MacPorts ATLAS Libraries} {
    depends_lib-append port:atlas

    configure.args-append   \
        -DBLA_VENDOR=ATLAS

    # FindBLAS.cmake and FindLAPACK.cmake do not seem to find MacPorts Atlas properly
    configure.args-append          \
        -DBLAS_LIBRARIES=satlas    \
        -DLAPACK_LIBRARIES=satlas
}

variant openblas conflicts atlas accelerate description {Use MacPorts OpenBLAS Libraries} {
    depends_lib-append path:lib/libopenblas.dylib:OpenBLAS
    require_active_variants path:lib/libopenblas.dylib:OpenBLAS lapack

    configure.args-append  -DBLA_VENDOR=OpenBLAS
}

if {![variant_isset accelerate] && ![variant_isset atlas] && ![variant_isset openblas]} {
    default_variants-append +accelerate
}
pre-fetch {
    if {![variant_isset accelerate] && ![variant_isset openblas] && ![variant_isset atlas] } {
        ui_error "You must select either the +accelerate, +atlas, or +openblas variant for linear algebra."
        return -code error "No linear-algebra variant selected."
    }
}

variant doc description {install pdf documentation} {
    post-destroot {
        xinstall -d -m 0755 ${destroot}${prefix}/share/doc/${name}
        copy {*}[glob ${worksrcpath}/doc/*] ${destroot}${prefix}/share/doc/${name}
        system "find ${destroot}${prefix}/share/doc -type f -exec chmod 644 {} \\;"
    }
}

# LICENSE file is installed in a bad location
post-destroot {
    xinstall -d -m 0755 ${destroot}${prefix}/share/doc/${name}
    move ${destroot}${prefix}/LICENSE ${destroot}${prefix}/share/doc/${name}
}

livecheck.url       https://computation.llnl.gov/projects/sundials/sundials-software
