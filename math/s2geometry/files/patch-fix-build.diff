--- src/s2/util/endian/endian.h	2023-05-14 04:29:12.000000000 +0800
+++ src/s2/util/endian/endian.h	2023-05-18 14:18:31.000000000 +0800
@@ -768,6 +768,7 @@
 
 // Load/Store for bool. Sanitizes bool on the way in for safety.
 
+#if !(defined(__MACH__) && defined(__ppc__))
 template<>
 inline bool LittleEndian::Load<bool>(const char* p) {
   static_assert(sizeof(bool) == 1, "Unexpected sizeof(bool)");
@@ -791,6 +792,7 @@
   static_assert(sizeof(bool) == 1, "Unexpected sizeof(bool)");
   *p = value ? 1 : 0;
 }
+#endif
 
 // Load/Store for float.
 
--- src/s2/value_lexicon.h.orig	2023-05-19 00:29:56.000000000 +0800
+++ src/s2/value_lexicon.h	2023-05-19 00:30:08.000000000 +0800
@@ -29,12 +29,6 @@
 #include "s2/util/gtl/dense_hash_set.h"
 
 class S2Point;
-namespace absl {
-namespace hash_internal {
-template <typename T>
-struct Hash;
-}  // namespace hash_internal
-}  // namespace absl
 
 // ValueLexicon is a class that maps distinct values to sequentially numbered
 // integer identifiers.  It automatically eliminates duplicates and uses a

