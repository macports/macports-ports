--- src/pserver.cc.orig	2018-08-03 00:41:42.000000000 -0700
+++ src/pserver.cc	2019-03-09 09:50:11.000000000 -0700
@@ -169,7 +169,7 @@
           if (octave_completion_matches_called)
             octave_completion_matches_called = false;
           else
-            command_editor::increment_current_command_number ();
+            octave::command_editor::increment_current_command_number ();
           dsprintf ("reval loop, no error, after caring for Octave command number\n");
         }
     }
@@ -1116,10 +1116,10 @@
           OCTAVE__INTERPRETER__SYMBOL_TABLE__ASSIGN ("sockets", sockets);
           dsprintf ("'sockets' installed\n");
 
-          int cd_ok = octave_env::chdir (directory.c_str ());
+          int cd_ok = octave::sys::env::chdir (directory.c_str ());
           if (! cd_ok)
             {
-            octave_env::chdir ("/tmp");
+            octave::sys::env::chdir ("/tmp");
             dsprintf ("performed chdir to /tmp\n");
             }
           else
--- src/minimal-load-save.cc.orig	2018-08-03 00:41:42.000000000 -0700
+++ src/minimal-load-save.cc	2019-03-09 09:59:43.000000000 -0700
@@ -58,7 +58,7 @@
 
   flt_fmt = mopt_digit_to_float_format (tmp);
 
-  if (flt_fmt == OCTAVE__MACH_INFO::flt_fmt_unknown)
+  if (flt_fmt == OCTAVE__MACH_INFO::float_format::flt_fmt_unknown)
     {
       _p_error ("unrecognized binary format");
 
--- src/pconnect.cc.orig	2018-08-03 00:41:42.000000000 -0700
+++ src/pconnect.cc	2019-03-09 09:50:11.000000000 -0700
@@ -533,7 +533,7 @@
               dcprintf ("hostname %i written (%s)\n", j, hosts(j).c_str ());
             }
 
-          std::string directory = octave_env::get_current_directory ();
+          std::string directory = octave::sys::env::get_current_directory ();
 
           conn->get_cmd_stream ()->network_send_string (directory.c_str ());
           dcprintf ("directory written (%s)\n", directory.c_str ());
--- src/error-helpers.cc.orig	2018-08-03 00:41:42.000000000 -0700
+++ src/error-helpers.cc	2019-03-09 09:49:55.000000000 -0700
@@ -20,6 +20,7 @@
 #include <octave/oct.h>
 
 #include "error-helpers.h"
+#include <iostream>
 
 // call verror
 #ifdef HAVE_OCTAVE_VERROR_ARG_EXC
