# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compilers  1.0
PortGroup           linear_algebra 1.0
PortGroup           cxx11 1.1
PortGroup           qt4 1.0

name                octave-devel
categories          math science
platforms           darwin
license             GPL-3+
maintainers         mcalhoun openmaintainer
description         a high-level language for numerical computations
long_description    ${description}

homepage            http://www.gnu.org/software/octave


### Fetch tip of dev tree - change version to today's date

fetch.type          hg
hg.url              http://hg.savannah.gnu.org/hgweb/octave/
hg.tag              -1
version             4.3.0+_20171102



######### Compiler Setup ###########

compilers.choose    fc f77 f90 cc cxx

# overrule cxx11 PortGroup because octave can use GCC compilers
#    even if configure.cxx_stdlib is libc++
compiler.blacklist-delete *gcc*

# for now, limit the number of variants
# some of these compilers may work fine
compilers.setup     \
    require_fortran \
    -dragonegg      \
    -gcc49          \
    -gcc48          \
    -gcc47          \
    -gcc46          \
    -gcc45          \
    -gcc44          \
    -g95            \
    -llvm           \
    -clang36        \
    -clang35        \
    -clang34        \
    -clang33




######### Build Deps #####

depends_build-append        port:autoconf    \
                            port:automake    \
                            port:libtool     \
                            port:coreutils   \
                            port:cctools     \
                            port:desktop-file-utils

depends_build-append        port:icoutils
configure.env-append        ICOTOOL=${prefix}/bin/icotool

depends_build-append        port:librsvg
configure.env-append        RSVG_CONVERT=${prefix}/bin/rsvg-convert

depends_build-append        port:grep
configure.env-append        GREP=${prefix}/bin/grep
configure.env-append        EGREP=${prefix}/bin/egrep
configure.env-append        FGREP=${prefix}/bin/fgrep

depends_build-append        port:findutils
configure.env-append        FIND=${prefix}/bin/gfind

depends_build-append        port:gsed
configure.env-append        SED=${prefix}/bin/gsed

depends_build-append        port:flex
configure.env-append        LEX=${prefix}/bin/flex

depends_build-append        port:bison
configure.env-append        YACC="${prefix}/bin/bison -y"

depends_build-append        port:gperf
configure.env-append        GPERF=${prefix}/bin/gperf

depends_build-append        port:perl5
configure.perl              ${prefix}/bin/perl5

depends_build-append        port:gawk
configure.awk               ${prefix}/bin/gawk




######### Lib Deps #####


depends_lib-append          port:python27
configure.python            ${prefix}/bin/python2.7

depends_lib-append          port:ghostscript
configure.env-append        GHOSTSCRIPT=${prefix}/bin/gs

depends_lib-append          port:gnuplot
configure.env-append        GNUPLOT=${prefix}/bin/gnuplot

depends_lib-append          port:less
configure.env-append        DEFAULT_PAGER=${prefix}/bin/less

depends_lib-append          port:qscintilla
depends_lib-append          port:ncurses
depends_lib-append          port:readline
depends_lib-append          port:pcre
depends_lib-append          port:hdf5
depends_lib-append          port:fftw-3
depends_lib-append          port:fftw-3-single
depends_lib-append          port:glpk
depends_lib-append          port:curl
depends_lib-append          port:qrupdate
depends_lib-append          port:arpack
depends_lib-append          port:openssl
depends_lib-append          port:sundials



######### Run Deps #####


depends_run-append          port:epstool
depends_run-append          port:fig2dev
depends_run-append          port:pstoedit


########## Hacks

# workaround for build failure with Xcode8 (#52301)
configure.env-append "ac_cv_func_mkostemp=no"

# patch for GUI hang
patchfiles                  octave-qt_wait_on_worker_thread-2017sep25.patch


########## Build commands

use_autoconf                yes
autoconf.cmd                ./bootstrap
autoconf.args

# has to be like this for linear algrebra PG to work
pre-configure {
    configure.args-append --with-blas="-L${prefix}/lib ${linalglib}" --with-lapack=""
}

configure.args-append       --disable-silent-rules                  \
                            --enable-link-all-dependencies          \
                            --enable-shared                         \
                            --disable-static                        \
                            --disable-docs                          \
                            --without-osmesa                        \
                            --with-framework-carbon                 \
                            --without-x                             \
                            --with-portaudio                        \
                            --with-sndfile                          \
                            --disable-java                          \
                            --with-qt=4

variant app description "build application bundle to launch octave-devel" {
    depends_build-append port:librsvg

    if {[vercmp ${xcodeversion} 4.5] < 0} {
        # need a way to generate icns file for XCode prior to 4.5
        # see #51487
        depends_build-append port:libicns
    }

    global appName
    set appName Octave_${version}.app

    post-build {
        xinstall -d -m 0755 ${worksrcpath}/${appName}/Contents
        xinstall -d -m 0755 ${worksrcpath}/${appName}/Contents/Resources
        xinstall -d -m 0755 ${worksrcpath}/${appName}/Contents/MacOS

        set script [open "${worksrcpath}/${appName}/Contents/MacOS/Octave" w 0755]
        if { [variant_isset qt4] || [variant_isset qt5] } {
            puts ${script} "#!/bin/sh"
            puts ${script} ""
            puts ${script} "${prefix}/bin/octave-${version} --force-gui"
        } else {
            puts ${script} "#!/usr/bin/osascript"
            puts ${script} ""
            puts ${script} "tell application \"Terminal\" to do script \"${prefix}/bin/octave-${version} --no-gui-libs; exit\""
        }
        close ${script}

        #NSHumanReadableCopyright      ''
        #LSUIElement                   1
        set values "
            CFBundleDevelopmentRegion                         string  English
            CFBundleExecutable                                string  Octave
            CFBundleIconFile                                  string  Octave.icns
            CFBundleIdentifier                                string  org.octave.Octave
            CFBundleInfoDictionaryVersion                     string  6.0
            CFBundleSignature                                 string  Octave
            CFBundleVersion                                   string  ${version}
            CFBundleShortVersionString                        string  ${version}
            CFBundleDocumentTypes                             array   {}
            CFBundleDocumentTypes:                            dict    {}
            CFBundleDocumentTypes:0:CFBundleTypeRole          string  \"Editor\"
            CFBundleDocumentTypes:0:CFBundleTypeExtensions    array   {}
            CFBundleDocumentTypes:0:CFBundleTypeExtensions:   string  \"m\"
            CFBundleDocumentTypes:0:CFBundleTypeOSTypes       array   {}
            CFBundleDocumentTypes:0:CFBundleTypeOSTypes:      string  \"Mfile\"
        "

        foreach {key type value} ${values} {
            system -W "${worksrcpath}/${appName}/Contents" "/usr/libexec/PlistBuddy -c \"Add :${key} ${type} ${value}\" Info.plist"
        }

        # have Info.plist be human readable
        system "/usr/bin/plutil -convert xml1 ${worksrcpath}/${appName}/Contents/Info.plist"

        # conversion by plutil set verys limited permissions
        system "/bin/chmod 0644 ${worksrcpath}/${appName}/Contents/Info.plist"

        xinstall -d -m 0755 ${worksrcpath}/Octave.iconset

        # values from original SVG file
        set svg    etc/icons/octave-logo.svg
        set width  283.28912
        set height 283.28833
        set dpi    90

        foreach res {16 32 128 256 512} {

            set hres [expr 2*${res}]

            # see http://savannah.gnu.org/bugs/?37062
            # see http://hg.savannah.gnu.org/hgweb/octave/rev/1687269e31e4
            system -W ${worksrcpath} "${prefix}/bin/rsvg-convert -w ${res} ${svg}  > Octave.iconset/icon_${res}x${res}.png"
            system -W ${worksrcpath} "${prefix}/bin/rsvg-convert -w ${hres} ${svg} > Octave.iconset/icon_${res}x${res}@2x.png"
        }

        if {[vercmp ${xcodeversion} 4.5] >= 0} {
            system -W ${worksrcpath} "/usr/bin/iconutil -c icns -o ${appName}/Contents/Resources/Octave.icns Octave.iconset"
        } else {
            # /usr/bin/iconutil introduced in XCode 4.5
            # see #51487
            system -W ${worksrcpath}/Octave.iconset \
                "${prefix}/bin/png2icns ${worksrcpath}/${appName}/Contents/Resources/Octave.icns icon_16x16.png icon_32x32.png icon_128x128.png icon_256x256.png icon_512x512.png"
        }
    }

    post-destroot {
        copy ${worksrcpath}/${appName} ${destroot}${applications_dir}
    }
}
default_variants-append +app

                            
