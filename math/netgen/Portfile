# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compilers 1.0
PortGroup           github    1.0
PortGroup           cmake     1.1
PortGroup           cxx11     1.1
PortGroup           active_variants 1.1

github.setup        NGSolve netgen 6.2.1810 v
platforms           darwin
categories          math
license             LGPL-2
maintainers         {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
description         NETGEN is an automatic 3d tetrahedral mesh generator
long_description    ${description}. It accepts input from constructive \
                    solid geometry (CSG) or boundary representation (BRep) \
                    from STL file format. The connection to a geometry kernel \
                    allows the handling of IGES and STEP files. NETGEN contains \
                    modules for mesh optimization and hierarchical mesh \
                    refinement.
homepage            https://ngsolve.org/

checksums           rmd160  f1d335ca6c3dd54db7336401ed6c4903e9f90b04 \
                    sha256  2edb380cb0f8e829fdf8c6aa18249f095c03dd5fbffbbf3b8d2420a16fb6ec00 \
                    size    3003404

compilers.choose    cc cxx
compilers.setup

# do not attempt to download & install tkdnd or Tcl/Tk
patchfiles-append   patch-no-external.diff
# do not install another version of pybind11
patchfiles-append   patch-no-pybind.diff
# link Tcl/Tk libraries like other systems (unnecessary?)
patchfiles-append   patch-link-ng.diff
# behave like other systems except use of RPATH
patchfiles-append   patch-CMakeLists.txt.diff
# prevent console window from appearing
# see http://wiki.tcl.tk/26777
patchfiles-append   patch-no-console.diff

set python_branch   3.7
set python_version  [string map {. ""} ${python_branch}]

depends_lib-append  \
    port:zlib \
    port:tcl \
    port:tk \
    port:tkdnd \
    port:Togl \
    port:python${python_version} \
    path:lib/libavcodec.dylib:ffmpeg \
    port:jpeg

depends_build-append \
    port:pybind11

depends_run-append \
    port:py${python_version}-tkinter

configure.args-append \
    -DUSE_NATIVE_ARCH=OFF \
    -DPYBIND_INCLUDE_DIR=${prefix}/include \
    -DPYTHON_EXECUTABLE=${frameworks_dir}/Python.framework/Versions/${python_branch}/bin/python${python_branch} \
    -DTCL_INCLUDE_PATH:PATH=${prefix}/include \
    -DTK_INCLUDE_PATH:PATH=${prefix}/include \
    -DOPENGL_glu_LIBRARY="" \
    -DUSE_JPEG=ON \
    -DUSE_MPEG=ON

variant quartz conflicts x11 {
    require_active_variants tk    quartz
    require_active_variants tkdnd quartz
    require_active_variants Togl  quartz
    post-patch {
        reinplace \
            "s|MACPORTS_NO_X11|TRUE|g" \
            ${worksrcpath}/CMakeLists.txt
    }
}

variant x11 conflicts quartz {
    require_active_variants tk    x11
    require_active_variants tkdnd x11
    require_active_variants Togl  x11
    depends_lib-append \
        port:xorg-libX11 \
        port:xorg-libXmu \
        port:mesa
    depends_build-append \
        port:libGLU
    configure.args-append \
        -DOPENGL_gl_LIBRARY=${prefix}/lib/libGL.dylib
}

if {![variant_isset quartz]} {
    default_variants +x11
}

variant oce conflicts opencascade description {(not supported) compile with Open CASCADE Community Edition geometry kernel} {
    depends_lib-append     port:oce
    configure.args-append  -DUSE_OCC=ON \
                           -DOCC_INCLUDE_DIR=${prefix}/include/oce \
                           -DOCC_LIBRARY=${prefix}/lib
}

variant opencascade conflicts oce description {(not supported) compile with Open CASCADE geometry kernel} {
    depends_lib-append     port:opencascade
    configure.args-append  -DUSE_OCC=ON \
                           -DOCC_INCLUDE_DIR=${prefix}/include/opencascade \
                           -DOCC_LIBRARY=${prefix}/lib
}

pre-configure {
    if {![variant_isset quartz] && ![variant_isset x11]} {
        error "Either +x11 or +quartz is required"
    }
}

post-destroot {
    delete ${destroot}${prefix}/bin/Netgen1
    delete ${destroot}${prefix}/bin/startup.sh

    xinstall -d -m 0755 ${destroot}${applications_dir}/Netgen.app/Contents/Resources
    xinstall -d -m 0755 ${destroot}${applications_dir}/Netgen.app/Contents/MacOS

    ln -s \
        ${prefix}/bin/netgen \
        ${destroot}${applications_dir}/Netgen.app/Contents/MacOS/Netgen

    move \
        ${destroot}${prefix}/Info.plist \
        ${destroot}${applications_dir}/Netgen.app/Contents

    move \
        ${destroot}${prefix}/Netgen.icns \
        ${destroot}${applications_dir}/Netgen.app/Contents/Resources

    xinstall -d -m 0755 \
        ${destroot}${frameworks_dir}/Python.framework/Versions/${python_branch}/lib/python${python_branch}/site-packages
    ln -s \
        ${prefix}/lib/python${python_branch}/site-packages/netgen \
        ${destroot}${frameworks_dir}/Python.framework/Versions/${python_branch}/lib/python${python_branch}/site-packages/
}
