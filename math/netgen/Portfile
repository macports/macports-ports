# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               compilers 1.0
PortGroup               github    1.0
PortGroup               cmake     1.1
PortGroup               active_variants 1.1

github.setup            NGSolve netgen 6.2.2004 v
revision                1
platforms               darwin
categories              math
license                 LGPL-2
maintainers             {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
description             NETGEN is an automatic 3d tetrahedral mesh generator
long_description        ${description}. It accepts input from constructive \
                        solid geometry (CSG) or boundary representation (BRep) \
                        from STL file format. The connection to a geometry kernel \
                        allows the handling of IGES and STEP files. NETGEN contains \
                        modules for mesh optimization and hierarchical mesh \
                        refinement.
homepage                https://ngsolve.org/

checksums               rmd160  93f0fe02505d76ad77cc3b9be2624a329f2078c8 \
                        sha256  0b15e66e57551e25e8eecaf02751d78cb8182bc3c7d59ae2d01711b05c59e8a9 \
                        size    3245293

compiler.cxx_standard   2011
compilers.choose        cc cxx
compilers.setup

# do not attempt to download & install tkdnd or Tcl/Tk
patchfiles-append       patch-no-external.diff
# do not install another version of pybind11
patchfiles-append       patch-no-pybind.diff
# link Tcl/Tk libraries like other systems (unnecessary?)
patchfiles-append       patch-link-ng.diff
# behave like other systems except use of RPATH
patchfiles-append       patch-CMakeLists.txt.diff
# prevent console window from appearing
# see https://wiki.tcl-lang.org/page/console+hide
patchfiles-append       patch-no-console.diff

depends_lib-append      port:zlib \
                        port:tcl \
                        port:tk \
                        port:tkdnd \
                        port:Togl \
                        path:lib/libavcodec.dylib:ffmpeg \
                        port:jpeg

configure.args-append   -DUSE_NATIVE_ARCH=OFF \
                        -DUSE_PYTHON=OFF \
                        -DTCL_INCLUDE_PATH:PATH=${prefix}/include \
                        -DTK_INCLUDE_PATH:PATH=${prefix}/include \
                        -DOPENGL_glu_LIBRARY="" \
                        -DUSE_JPEG=ON \
                        -DUSE_MPEG=ON

set pythonversions      {3.7 3.8}
set any_python          no
foreach pdv ${pythonversions} {
    set pv [join [lrange [split ${pdv} .] 0 1] ""]
    set conflist ""
    foreach v ${pythonversions} {
        if {${v} ne ${pdv}} {
            set vv [join [lrange [split ${v} .] 0 1] ""]
            set conflist "${conflist} python${vv}"
        }
    }
    variant python${pv} conflicts {*}${conflist} description "Add bindings for Python ${pdv}" {}
    if {[variant_isset python${pv}]} {
        set any_python  yes
    }
}
if {!${any_python}} {
    default_variants    +python38
}
foreach pdv ${pythonversions} {
    set pv [join [lrange [split ${pdv} .] 0 1] ""]
    # settings that depend on loop variables must be set in an appropriate if, not in the
    # variant declaration scope.
    if {[variant_isset python${pv}]} {
        depends_lib-append      port:python${pv} \
                                port:pybind11

        depends_run-append      port:py${pv}-tkinter

        configure.args-replace  -DUSE_PYTHON=OFF \
                                -DUSE_PYTHON=ON

        configure.args-append   -DPYBIND_INCLUDE_DIR=${prefix}/include \
                                -DPYTHON_EXECUTABLE=${frameworks_dir}/Python.framework/Versions/${pdv}/bin/python${pdv}

        post-destroot {
            xinstall    -d -m 0755 \
                        ${destroot}${frameworks_dir}/Python.framework/Versions/${pdv}/lib/python${pdv}/site-packages
            ln -s       ${prefix}/lib/python${pdv}/site-packages/netgen \
                        ${destroot}${frameworks_dir}/Python.framework/Versions/${pdv}/lib/python${pdv}/site-packages/
            ln -s       ${prefix}/lib/python${pdv}/site-packages/pyngcore.cpython-38-darwin.so \
                        ${destroot}${frameworks_dir}/Python.framework/Versions/${pdv}/lib/python${pdv}/site-packages/
        }
    }
}

variant quartz conflicts x11 {
    require_active_variants tk    quartz
    require_active_variants tkdnd quartz
    require_active_variants Togl  quartz
    post-patch {
        reinplace           "s|MACPORTS_NO_X11|TRUE|g" \
                            ${worksrcpath}/CMakeLists.txt
    }
}

variant x11 conflicts quartz {
    require_active_variants tk    x11
    require_active_variants tkdnd x11
    require_active_variants Togl  x11
    depends_lib-append      port:xorg-libX11 \
                            port:xorg-libXmu \
                            port:mesa
    depends_build-append    port:libGLU
    configure.args-append   -DOPENGL_gl_LIBRARY=${prefix}/lib/libGL.dylib
}

if {![variant_isset quartz] && ![variant_isset x11]} {
    default_variants        +x11
}

variant oce conflicts opencascade description {(not supported) compile with Open CASCADE Community Edition geometry kernel} {
    depends_lib-append      port:oce
    configure.args-append   -DUSE_OCC=ON \
                            -DOCC_INCLUDE_DIR=${prefix}/include/oce \
                            -DOCC_LIBRARY_DIR=${prefix}/lib
}

variant opencascade conflicts oce description {(not supported) compile with Open CASCADE geometry kernel} {
    depends_lib-append      port:opencascade
    configure.args-append   -DUSE_OCC=ON \
                            -DOCC_INCLUDE_DIR=${prefix}/include/opencascade \
                            -DOCC_LIBRARY_DIR=${prefix}/lib
}

pre-configure {
    if {![variant_isset quartz] && ![variant_isset x11]} {
        error "Either +x11 or +quartz is required"
    }
}

post-destroot {
    delete ${destroot}${prefix}/bin/Netgen1
    delete ${destroot}${prefix}/bin/startup.sh

    xinstall -d -m 0755 ${destroot}${applications_dir}/Netgen.app/Contents/Resources
    xinstall -d -m 0755 ${destroot}${applications_dir}/Netgen.app/Contents/MacOS

    ln -s \
        ${prefix}/bin/netgen \
        ${destroot}${applications_dir}/Netgen.app/Contents/MacOS/Netgen

    move \
        ${destroot}${prefix}/Info.plist \
        ${destroot}${applications_dir}/Netgen.app/Contents

    move \
        ${destroot}${prefix}/Netgen.icns \
        ${destroot}${applications_dir}/Netgen.app/Contents/Resources
}
