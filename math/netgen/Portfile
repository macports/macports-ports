# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               compilers 1.0
PortGroup               github    1.0
PortGroup               cmake     1.1
PortGroup               active_variants 1.1
PortGroup               compiler_blacklist_versions 1.0
PortGroup               legacysupport 1.1

github.setup            NGSolve netgen 6.2.2204 v
revision                1
platforms               darwin
categories              math
license                 LGPL-2
maintainers             {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
description             NETGEN is an automatic 3d tetrahedral mesh generator
long_description        ${description}. It accepts input from constructive \
                        solid geometry (CSG) or boundary representation (BRep) \
                        from STL file format. The connection to a geometry kernel \
                        allows the handling of IGES and STEP files. NETGEN contains \
                        modules for mesh optimization and hierarchical mesh \
                        refinement.
homepage                https://ngsolve.org/

checksums               rmd160  2dec1f2fc90f11fca6ad5ab28622f2b5fdc37e72 \
                        sha256  ae1dd9e0b9e2946ba9390b222e33dc9227ddfc1ef2f1528c64edbfdc25ec3587 \
                        size    3395435

compiler.cxx_standard   2017

# https://trac.macports.org/ticket/60760
compiler.blacklist-append {clang < 1000}

compilers.choose        cc cxx
compilers.setup

# Enable use of 'macports-libcxx' for macOS 10.14 and earlier, as port uses
# libcxx features normally only available on 10.15 and later.
legacysupport.use_mp_libcxx \
                        yes
legacysupport.newest_darwin_requires_legacy \
                        18

patchfiles-append       patch-no-external.diff \
                        patch-no-pybind.diff \
                        patch-CMakeLists.txt.diff \
                        patch-no-console.diff \
                        patch-link-agains-ffmpeg.diff \
                        patch-cmake-version.diff \
                        patch-MacPorts-rpath.diff \
                        patch-MacPorts-togl.diff \
                        patch-propagate_c_compiler.diff

depends_lib-append      port:zlib \
                        port:tcl \
                        port:tk \
                        port:tkdnd \
                        port:Togl \
                        path:lib/libavcodec.dylib:ffmpeg \
                        path:include/turbojpeg.h:libjpeg-turbo

configure.args-append   -DUSE_NATIVE_ARCH=OFF \
                        -DUSE_PYTHON=OFF \
                        -DTCL_INCLUDE_PATH:PATH=${prefix}/include \
                        -DTK_INCLUDE_PATH:PATH=${prefix}/include \
                        -DOPENGL_glu_LIBRARY="" \
                        -DNETGEN_VERSION_GIT="v${version}" \
                        -DUSE_JPEG=ON \
                        -DUSE_MPEG=ON

if {${os.platform} eq "darwin" && ${os.major} <= 15} {
    # No support for sized operator delete
    patchfiles-append   patch-sized-deallocation.diff
}

set pythonversions      {3.7 3.8 3.9}
set any_python          no
foreach pdv ${pythonversions} {
    set pv [join [lrange [split ${pdv} .] 0 1] ""]
    set conflist ""
    foreach v ${pythonversions} {
        if {${v} ne ${pdv}} {
            set vv [join [lrange [split ${v} .] 0 1] ""]
            set conflist "${conflist} python${vv}"
        }
    }
    variant python${pv} conflicts {*}${conflist} description "Add bindings for Python ${pdv}" {}
    if {[variant_isset python${pv}]} {
        set any_python  yes
    }
}
if {!${any_python}} {
    default_variants    +python39
}
foreach pdv ${pythonversions} {
    set pv [join [lrange [split ${pdv} .] 0 1] ""]
    # settings that depend on loop variables must be set in an appropriate if, not in the
    # variant declaration scope.
    if {[variant_isset python${pv}]} {
        depends_lib-append      port:python${pv} \
                                port:pybind11 \
                                port:py${pv}-pybind11-stubgen

        depends_run-append      port:py${pv}-tkinter

        configure.args-replace  -DUSE_PYTHON=OFF \
                                -DUSE_PYTHON=ON

        configure.args-append   -DPYBIND_INCLUDE_DIR=${prefix}/include \
                                -DPYTHON_EXECUTABLE=${frameworks_dir}/Python.framework/Versions/${pdv}/bin/python${pdv}

        # during destroot, must find pybind11-stubgen binary, netgen Python module, and Netgen library, so
        # must modify PATH, PYTHONPATH, and DYLD_LIBRARY_PATH
        #
        # however, DYLD environment variables are not inherited by subprocesses
        #
        # see https://lists.macports.org/pipermail/macports-dev/2021-April/043222.html
        post-extract {
            xinstall            -d -m 0755 ${cmake.build_dir}/macports_bin/bin
            xinstall            -m 0755 ${filespath}/pybind11-stubgen ${cmake.build_dir}/macports_bin/bin
        }
        post-patch {
            reinplace           "s|__MACPORTS_PYTHONPATH__|${destroot}${prefix}/lib/python${pdv}/site-packages/|g" \
                                ${cmake.build_dir}/macports_bin/bin/pybind11-stubgen
            reinplace           "s|__MACPORTS_DYLD_LIBRARY_PATH__|${destroot}${prefix}/lib|g" \
                                ${cmake.build_dir}/macports_bin/bin/pybind11-stubgen
            reinplace           "s|__MACPORTS_PYTHON_BIN__|${frameworks_dir}/Python.framework/Versions/${pdv}/bin|g" \
                                ${cmake.build_dir}/macports_bin/bin/pybind11-stubgen
        }
        configure.env-append    PATH=${cmake.build_dir}/macports_bin/bin:$env(PATH)
        build.env-append        PATH=${cmake.build_dir}/macports_bin/bin:$env(PATH)

        post-destroot {
            xinstall    -d -m 0755 \
                        ${destroot}${frameworks_dir}/Python.framework/Versions/${pdv}/lib/python${pdv}/site-packages
            ln -s       ${prefix}/lib/python${pdv}/site-packages/netgen \
                        ${destroot}${frameworks_dir}/Python.framework/Versions/${pdv}/lib/python${pdv}/site-packages/
            ln -s       ${prefix}/lib/python${pdv}/site-packages/pyngcore.cpython-${pv}-darwin.so \
                        ${destroot}${frameworks_dir}/Python.framework/Versions/${pdv}/lib/python${pdv}/site-packages/
        }
    }
}

variant quartz conflicts x11 {
    require_active_variants tk    quartz
    require_active_variants tkdnd quartz
    require_active_variants Togl  quartz
    post-patch {
        reinplace           "s|MACPORTS_NO_X11|TRUE|g" \
                            ${worksrcpath}/CMakeLists.txt
    }
}

variant x11 conflicts quartz {
    require_active_variants tk    x11
    require_active_variants tkdnd x11
    require_active_variants Togl  x11
    depends_lib-append      port:xorg-libX11 \
                            port:xorg-libXmu \
                            port:mesa
    depends_build-append    port:libGLU
    configure.args-append   -DOPENGL_gl_LIBRARY=${prefix}/lib/libGL.dylib
}

if {![variant_isset quartz] && ![variant_isset x11]} {
    default_variants        +x11
}

pre-configure {
    if {![variant_isset quartz] && ![variant_isset x11]} {
        error "Either +x11 or +quartz is required"
    }
}

post-destroot {
    delete ${destroot}${prefix}/bin/Netgen1
    delete ${destroot}${prefix}/bin/startup.sh

    xinstall -d -m 0755 ${destroot}${applications_dir}/Netgen.app/Contents/Resources
    xinstall -d -m 0755 ${destroot}${applications_dir}/Netgen.app/Contents/MacOS

    ln -s \
        ${prefix}/bin/netgen \
        ${destroot}${applications_dir}/Netgen.app/Contents/MacOS/Netgen

    move \
        ${destroot}${prefix}/Info.plist \
        ${destroot}${applications_dir}/Netgen.app/Contents

    move \
        ${destroot}${prefix}/Netgen.icns \
        ${destroot}${applications_dir}/Netgen.app/Contents/Resources
}
