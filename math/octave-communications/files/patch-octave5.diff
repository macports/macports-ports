--- a/src/genqamdemod.cc.orig	2015-04-04 09:28:43.000000000 -0700
+++ b/src/genqamdemod.cc	2019-03-09 03:46:43.000000000 -0700
@@ -36,7 +36,7 @@
 
   int nr1 (args(0).rows ());
   int nc1 (args(0).columns ());
-  int arg_is_empty1 = empty_arg ("genqamdemod", nr1, nc1);
+  int arg_is_empty1 = args(0).isempty();
   Matrix y (nr1,nc1);
 
   int nr2 (args(1).rows ());
--- a/src/gf.cc.orig	2015-04-04 09:28:43.000000000 -0700
+++ b/src/gf.cc	2019-03-09 04:20:21.000000000 -0700
@@ -971,7 +971,7 @@
   int nr = arg.rows ();
   int nc = arg.columns ();
 
-  int arg_is_empty = empty_arg ("glu", nr, nc);
+  int arg_is_empty = arg.isempty();
 
   if (arg_is_empty < 0)
     return retval;
@@ -1055,7 +1055,7 @@
 
   galois m = ((const octave_galois&) arg.get_rep ()).galois_value ();
 
-  int arg_is_empty = empty_arg ("ginverse", nr, nc);
+  int arg_is_empty = arg.isempty();
 
   if (arg_is_empty < 0)
     return retval;
@@ -1152,7 +1152,7 @@
 
   galois m = ((const octave_galois&) arg.get_rep ()).galois_value ();
 
-  int arg_is_empty = empty_arg ("gdet", nr, nc);
+  int arg_is_empty = arg.isempty();
 
   if (arg_is_empty < 0)
     return retval;
@@ -1212,7 +1212,7 @@
 
   galois m = ((const octave_galois&) arg.get_rep ()).galois_value ();
 
-  int arg_is_empty = empty_arg ("grank", nr, nc);
+  int arg_is_empty = arg.isempty();
 
   if (arg_is_empty > 0)
     retval = 0.0;
--- a/src/galois-def.h.orig	2015-04-04 09:28:43.000000000 -0700
+++ b/src/galois-def.h	2019-03-09 04:09:06.000000000 -0700
@@ -137,7 +137,7 @@
                 r(i, j) = (int)m1(i, j) ^ (int)m2(0, 0); \
           } \
         else \
-          gripe_nonconformant (#OP, m1_nr, m1_nc, m2_nr, m2_nc); \
+          octave::err_nonconformant (#OP, m1_nr, m1_nc, m2_nr, m2_nc); \
       } \
     else \
       { \
@@ -221,7 +221,7 @@
               } \
           } \
         else \
-          gripe_nonconformant (#F, m1_nr, m1_nc, m2_nr, m2_nc); \
+          octave::err_nonconformant (#F, m1_nr, m1_nc, m2_nr, m2_nc); \
       } \
     else \
       if (m1_nr > 0 && m1_nc > 0) \
@@ -289,7 +289,7 @@
                 r(i, j) = C1 (m1(i, j)) OP C2 (m2(0, 0)); \
           } \
         else \
-          gripe_nonconformant (#F, m1_nr, m1_nc, m2_nr, m2_nc); \
+          octave::err_nonconformant (#F, m1_nr, m1_nc, m2_nr, m2_nc); \
       } \
  \
     return r; \
@@ -350,7 +350,7 @@
                   OP (m2(0, 0) != ZERO); \
           } \
         else if ((m1_nr != 0 || m1_nc != 0) && (m2_nr != 0 || m2_nc != 0)) \
-          gripe_nonconformant (#F, m1_nr, m1_nc, m2_nr, m2_nc); \
+          octave::err_nonconformant (#F, m1_nr, m1_nc, m2_nr, m2_nc); \
       } \
  \
     return r; \
--- a/src/galois.cc.orig	2019-03-09 03:59:21.000000000 -0700
+++ b/src/galois.cc	2019-03-09 04:04:39.000000000 -0700
@@ -20,7 +20,7 @@
 
 #include <octave/config.h>
 #include <octave/error.h>
-#include <octave/gripes.h>
+#include <octave/errwarn.h>
 #include <octave/mx-op-defs.h>
 
 #include "galois.h"
@@ -216,7 +216,7 @@
 
   if (nr != a_nr || nc != a_nc)
     {
-      gripe_nonconformant ("operator +=", nr, nc, a_nr, a_nc);
+      octave::err_nonconformant ("operator +=", nr, nc, a_nr, a_nc);
       return *this;
     }
 
@@ -252,7 +252,7 @@
 
   if (nr != a_nr || nc != a_nc)
     {
-      gripe_nonconformant ("operator -=", nr, nc, a_nr, a_nc);
+      octave::err_nonconformant ("operator -=", nr, nc, a_nr, a_nc);
       return *this;
     }
 
@@ -518,7 +518,7 @@
     {
       if (a_nr != b_nr || a_nc != b_nc)
         {
-          gripe_nonconformant ("operator .^", a_nr, a_nc, a_nr, a_nc);
+          octave::err_nonconformant ("operator .^", a_nr, a_nc, a_nr, a_nc);
           return galois ();
         }
 
@@ -549,7 +549,7 @@
 
   if (a_nr != b_nr || a_nc != b_nc)
     {
-      gripe_nonconformant ("operator .^", a_nr, a_nc, b_nr, b_nc);
+      octave::err_nonconformant ("operator .^", a_nr, a_nc, b_nr, b_nc);
       return galois ();
     }
 
@@ -758,7 +758,7 @@
     return product (a, b);
   else if (a_nc != b_nr)
     {
-      gripe_nonconformant ("operator *", a_nr, a_nc, b_nr, b_nc);
+      octave::err_nonconformant ("operator *", a_nr, a_nc, b_nr, b_nc);
       return galois ();
     }
   else
@@ -1420,7 +1420,7 @@
       int a_nr = a.rows ();
       int b_nr = b.rows ();
 
-      gripe_nonconformant ("operator /", a_nr, a_nc, b_nr, b_nc);
+      octave::err_nonconformant ("operator /", a_nr, a_nc, b_nr, b_nc);
       return galois ();
     }
 
@@ -1464,7 +1464,7 @@
       int a_nc = a.cols ();
       int b_nc = b.cols ();
 
-      gripe_nonconformant ("operator \\", a_nr, a_nc, b_nr, b_nc);
+      octave::err_nonconformant ("operator \\", a_nr, a_nc, b_nr, b_nc);
       return galois ();
     }
 
--- a/src/gf.cc.orig	2015-04-04 09:28:43.000000000 -0700
+++ b/src/gf.cc	2019-03-09 04:16:02.000000000 -0700
@@ -31,7 +31,7 @@
 
 #include <octave/config.h>
 #include <octave/defun-dld.h>
-#include <octave/gripes.h>
+#include <octave/errwarn.h>
 #include <octave/oct-locbuf.h>
 #include <octave/ov.h>
 #include <octave/utils.h>
@@ -142,7 +142,7 @@
 
   if ((!galois_type_loaded) || (a.type_id () !=
                                 octave_galois::static_type_id ()))
-    gripe_wrong_type_arg ("gdiag", a);
+    err_wrong_type_arg ("gdiag", a);
   else
     {
       galois m = ((const octave_galois&) a.get_rep ()).galois_value ();
@@ -196,7 +196,7 @@
             }
         }
       else
-        gripe_wrong_type_arg ("gdiag", a);
+        err_wrong_type_arg ("gdiag", a);
     }
   return retval;
 }
@@ -302,7 +302,7 @@
       if ((!galois_type_loaded) || (args(0).type_id () !=
                                     octave_galois::static_type_id ()))
         {
-          gripe_wrong_type_arg ("greshape", args(0));
+          err_wrong_type_arg ("greshape", args(0));
           return retval;
         }
       galois a = ((const octave_galois&) args(0).get_rep ()).galois_value ();
@@ -372,7 +372,7 @@
                 } \
               else \
                 { \
-                  gripe_wrong_type_arg (#FCN, arg); \
+                  err_wrong_type_arg (#FCN, arg); \
                   return retval; \
                 } \
             } \
@@ -469,7 +469,7 @@
   if (!galois_type_loaded || (args(0).type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("gsqrt", args(0));
+      err_wrong_type_arg ("gsqrt", args(0));
       return retval;
     }
 
@@ -508,7 +508,7 @@
   if (!galois_type_loaded || (args(0).type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("glog", args(0));
+      err_wrong_type_arg ("glog", args(0));
       return retval;
     }
 
@@ -547,7 +547,7 @@
   if (!galois_type_loaded || (args(0).type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("gexp", args(0));
+      err_wrong_type_arg ("gexp", args(0));
       return retval;
     }
 
@@ -962,7 +962,7 @@
   if (!galois_type_loaded || (arg.type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("glu", arg);
+      err_wrong_type_arg ("glu", arg);
       return retval;
     }
 
@@ -1049,7 +1049,7 @@
   if (!galois_type_loaded || (arg.type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("ginverse", arg);
+      err_wrong_type_arg ("ginverse", arg);
       return retval;
     }
 
@@ -1066,7 +1066,7 @@
     }
   if (nr != nc)
     {
-      gripe_square_matrix_required ("ginverse");
+      err_square_matrix_required ("ginverse", "A");
       return retval;
     }
 
@@ -1143,7 +1143,7 @@
   if (!galois_type_loaded || (arg.type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("gdet", arg);
+      err_wrong_type_arg ("gdet", arg);
       return retval;
     }
 
@@ -1164,7 +1164,7 @@
 
   if (nr != nc)
     {
-      gripe_square_matrix_required ("det");
+      err_square_matrix_required ("det", "A");
       return retval;
     }
 
@@ -1203,7 +1203,7 @@
   if (!galois_type_loaded || (arg.type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("grank", arg);
+      err_wrong_type_arg ("grank", arg);
       return retval;
     }
 
@@ -1333,7 +1333,7 @@
   if (!galois_type_loaded || (args(0).type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("rsenc", args(0));
+      err_wrong_type_arg ("rsenc", args(0));
       return retval;
     }
 
@@ -1874,7 +1874,7 @@
   if (!galois_type_loaded || (args(0).type_id () !=
                               octave_galois::static_type_id ()))
     {
-      gripe_wrong_type_arg ("rsdec", args(0));
+      err_wrong_type_arg ("rsdec", args(0));
       return retval;
     }
 
--- a/src/ov-galois.cc.orig	2019-03-09 04:33:21.000000000 -0700
+++ b/src/ov-galois.cc	2019-03-09 04:37:36.000000000 -0700
@@ -22,7 +22,7 @@
 
 #include <octave/config.h>
 #include <octave/byte-swap.h>
-#include <octave/gripes.h>
+#include <octave/errwarn.h>
 #include <octave/lo-ieee.h>
 #include <octave/oct-locbuf.h>
 #include <octave/oct-obj.h>
@@ -328,13 +328,13 @@
 
   if (rows () > 0 && columns () > 0)
     {
-      gripe_implicit_conversion ("Octave:array-as-scalar",
+      warn_implicit_conversion ("Octave:array-as-scalar",
                                  "real matrix", "real scalar");
 
       retval = (double) gval (0, 0);
     }
   else
-    gripe_invalid_conversion ("galois", "real scalar");
+    err_invalid_conversion ("galois", "real scalar");
 
   return retval;
 }
@@ -348,13 +348,13 @@
 
   if (rows () > 0 && columns () > 0)
     {
-      gripe_implicit_conversion ("Octave:array-as-scalar",
+      warn_implicit_conversion ("Octave:array-as-scalar",
                                  "real matrix", "real scalar");
 
       retval = (double) gval (0, 0);
     }
   else
-    gripe_invalid_conversion ("galois", "complex scalar");
+    err_invalid_conversion ("galois", "complex scalar");
 
   return retval;
 }
