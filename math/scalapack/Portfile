# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           active_variants 1.1
PortGroup           cmake 1.0
PortGroup           mpi 1.0
PortGroup           linear_algebra 1.0

name                scalapack
version             2.0.2
revision            2
categories          math
platforms           darwin
maintainers         sean openmaintainer
supported_archs     noarch
license             BSD
description         A package for solving linear equations
long_description    The ScaLAPACK (or Scalable LAPACK) library includes \
                    a subset of LAPACK routines redesigned for distributed \
                    memory MIMD parallel computers. Since version 2.0.0, \
                    ScaLAPACK includes BLACS.

homepage            http://www.netlib.org/scalapack/
master_sites        ${homepage}
extract.suffix      .tgz

checksums           rmd160  cbe6b783aab96cc73f37156b10e28accffdf28e3 \
                    sha256  0c74aeae690fe5ee4db7926f49c5d0bb69ce09eea75beb915e00bba07530395c

mpi.setup           require require_fortran

configure.args      -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib \
                    -DBUILD_SHARED_LIBS=ON \
                    -DBUILD_TESTING=ON
# BUILD_TESTING only affects BLACS directory anyway

test.run            yes

# need to set this for active_variants
depends_build-append port:ld64

# ld64 without the +ld_xcode variant will fail linking with the error:
# ld: unexpected token: !tapi-tbd-v2 file
require_active_variants ld64 ld64_xcode {}

pre-test {
    # test infrastructure uses /bin/ps (I think for checking on job timeout), which is forbidden by sandboxing
    append portsandbox_profile " (allow process-exec (literal \"/bin/ps\") (with no-profile))"
}

pre-configure {
    configure.args-append \
        -DMPI_C_COMPILER=${mpi.cc} \
        -DMPI_Fortran_COMPILER=${mpi.fc} \
        -DMPIEXEC=${prefix}/bin/${mpi.exec} \
        -DLAPACK_LIBRARIES="-L${prefix}/lib ${linalglib}"
}

livecheck.type      regex
livecheck.regex     ${name}-(\[0-9.\]+)${extract.suffix}
