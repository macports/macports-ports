--- src/upfirdn.cc.orig	2018-04-30 13:48:31.000000000 -0700
+++ src/upfirdn.cc	2019-03-09 03:05:57.000000000 -0700
@@ -21,7 +21,7 @@
 #include <octave/oct.h>
 #include <octave/defun-dld.h>
 #include <octave/error.h>
-#include <octave/gripes.h>
+#include <octave/errwarn.h>
 #include <octave/pager.h>
 #include <octave/quit.h>
 #include <octave/variables.h>
@@ -109,7 +109,7 @@
 
   if (error_state)
     {
-      gripe_wrong_type_arg ("upfirdn", args(1));
+      err_wrong_type_arg ("upfirdn", args(1));
       return retval;
     }
 
@@ -117,7 +117,7 @@
 
   if (error_state)
     {
-      gripe_wrong_type_arg ("upfirdn", args(2));
+      err_wrong_type_arg ("upfirdn", args(2));
       return retval;
     }
 
@@ -125,7 +125,7 @@
 
   if (error_state)
     {
-      gripe_wrong_type_arg ("upfirdn", args(3));
+      err_wrong_type_arg ("upfirdn", args(3));
       return retval;
     }
 
@@ -135,7 +135,7 @@
       Matrix x = args (0).matrix_value ();
       if (error_state)
         {
-          gripe_wrong_type_arg ("upfirdn", args(0));
+          err_wrong_type_arg ("upfirdn", args(0));
           return retval;
         }
 
@@ -147,7 +147,7 @@
       ComplexMatrix x = args (0).complex_matrix_value ();
       if (error_state)
         {
-          gripe_wrong_type_arg ("upfirdn", args(0));
+          err_wrong_type_arg ("upfirdn", args(0));
           return retval;
         }
 
@@ -156,7 +156,7 @@
     }
   else
     {
-      gripe_wrong_type_arg ("upfirdn", args(0));
+      err_wrong_type_arg ("upfirdn", args(0));
       return retval;
     }
 
--- src/cl2bp.cc.orig	2018-04-30 13:48:31.000000000 -0700
+++ src/cl2bp.cc	2019-03-09 03:07:05.000000000 -0700
@@ -89,27 +89,27 @@
 
   const int m = args(0).int_value(true);
   if (error_state) {
-    gripe_wrong_type_arg ("cl2bp", args(0));
+    err_wrong_type_arg ("cl2bp", args(0));
     return retval;
   }
   const double w1 = args(1).double_value();
   if (error_state) {
-    gripe_wrong_type_arg ("cl2bp", args(1));
+    err_wrong_type_arg ("cl2bp", args(1));
     return retval;
   }
   const double w2 = args(2).double_value();
   if (error_state) {
-    gripe_wrong_type_arg ("cl2bp", args(2));
+    err_wrong_type_arg ("cl2bp", args(2));
     return retval;
   }
   const ColumnVector up_vector(args(3).vector_value());
   if (error_state) {
-    gripe_wrong_type_arg ("cl2bp", args(3));
+    err_wrong_type_arg ("cl2bp", args(3));
     return retval;
   }
   const ColumnVector lo_vector(args(4).vector_value());
   if (error_state) {
-    gripe_wrong_type_arg ("cl2bp", args(4));
+    err_wrong_type_arg ("cl2bp", args(4));
     return retval;
   }
   if (up_vector.numel() != 3 || lo_vector.numel() != 3) {
@@ -126,7 +126,7 @@
 
   const int L = args(5).int_value(true);
   if (error_state) {
-    gripe_wrong_type_arg ("cl2bp", args(5));
+    err_wrong_type_arg ("cl2bp", args(5));
     return retval;
   }
   if (L > 1000000) {
--- src/sosfilt.cc.orig	2018-04-30 13:48:31.000000000 -0700
+++ src/sosfilt.cc	2019-03-09 03:07:54.000000000 -0700
@@ -21,7 +21,7 @@
 #include <octave/oct.h>
 #include <octave/defun-dld.h>
 #include <octave/error.h>
-#include <octave/gripes.h>
+#include <octave/errwarn.h>
 #include <octave/pager.h>
 #include <octave/quit.h>
 #include <octave/variables.h>
@@ -56,7 +56,7 @@
 
   if (error_state)
     {
-      gripe_wrong_type_arg ("sosfilt", args(0));
+      err_wrong_type_arg ("sosfilt", args(0));
       return retval;
     }
 
@@ -70,7 +70,7 @@
 
   if (error_state)
     {
-      gripe_wrong_type_arg ("sosfilt", args(1));
+      err_wrong_type_arg ("sosfilt", args(1));
       return retval;
     }
 
--- src/remez.cc.orig	2018-04-30 13:48:31.000000000 -0700
+++ src/remez.cc	2019-03-09 03:16:31.000000000 -0700
@@ -789,7 +789,7 @@
     return retval;
   }
 
-  int numtaps = NINT (args(0).double_value()) + 1; // #coeff = filter order+1
+  int numtaps = octave::math::nint (args(0).double_value()) + 1; // #coeff = filter order+1
   if (numtaps < 4) {
     error("remez: number of taps must be an integer greater than 3");
     return retval;
@@ -846,7 +846,7 @@
     if (args(4).is_string() && !args(3).is_string())
       stype = args(4).string_value();
     else if (args(4).is_real_scalar())
-      density = NINT (args(4).double_value());
+      density = octave::math::nint (args(4).double_value());
     else {
       error("remez: incorrect argument list");
       return retval;
@@ -855,7 +855,7 @@
   if (nargin > 5) {
     if (args(5).is_real_scalar()
         && !args(4).is_real_scalar())
-      density = NINT (args(5).double_value());
+      density = octave::math::nint (args(5).double_value());
     else {
       error("remez: incorrect argument list");
       return retval;
