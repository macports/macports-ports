# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        DrTimothyAldenDavis SuiteSparse 5.7.2 v
epoch               20181026
categories          math science
platforms           darwin
maintainers         {mcalhoun @MarcusCalhoun-Lopez} openmaintainer
license             none

description         Sparse matrix routines

long_description    SuiteSparse is a single archive that contains all packages \
                    authored by Tim Davis.

homepage            http://faculty.cse.tamu.edu/davis/suitesparse.html

checksums           rmd160  720c078699ad5ff11604ee077278098b53513b91 \
                    sha256  26f6e3825d11f6a2b737ebce7e3627f9983f208ff191ea9bf2bf50dbb653052a \
                    size    57029410

use_parallel_build  no

configure.optflags  -O3

# see https://github.com/macports/macports-ports/pull/2292#issuecomment-408526461
configure.cppflags-replace \
    -I${prefix}/include \
    -isystem${prefix}/include

subport SuiteSparse_config {
    version 5.7.2
    # from the README.txt:
    #    "[n]o licensing restrictions apply"
    license Permissive
}

subport SuiteSparse_GraphBLAS {
    version 3.2.2
    license Apache-2
    long_description-append ${subport}: graph algorithms in the language of linear algebra.
}

subport SuiteSparse_Mongoose {
    version 2.0.4
    depends_lib-append port:SuiteSparse_config
    patchfiles-append patch-Mongoose.diff
    license GPL-3
    long_description-append ${subport}: graph partitioning.
}

subport SuiteSparse_AMD {
    version 2.4.6
    depends_lib-append port:SuiteSparse_config
    license BSD
    long_description-append ${subport}: approximate minimum degree ordering.
}

subport SuiteSparse_BTF {
    version 1.2.6
    depends_lib-append port:SuiteSparse_config
    license LGPL-2.1+
    long_description-append ${subport}: permutation to block triangular form.
}

subport SuiteSparse_CAMD {
    version 2.4.6
    depends_lib-append port:SuiteSparse_config
    license BSD
    long_description-append ${subport}: constrained approximate minimum degree ordering.
}

subport	SuiteSparse_CCOLAMD {
    version 2.9.6
    depends_lib-append port:SuiteSparse_config
    license BSD
    long_description-append ${subport}: constrained column approximate minimum degree ordering.
}

subport	SuiteSparse_COLAMD {
    version 2.9.6
    depends_lib-append port:SuiteSparse_config
    license BSD
    long_description-append ${subport}: column approximate minimum degree ordering.
}

subport	SuiteSparse_CHOLMOD {
    PortGroup linear_algebra 1.0

    version 3.0.14
    depends_lib-append port:SuiteSparse_config port:SuiteSparse_AMD port:SuiteSparse_CAMD port:SuiteSparse_COLAMD port:SuiteSparse_CCOLAMD
    depends_lib-append port:metis
    build.args-append \
        MY_METIS_LIB="-L${prefix}/lib -lmetis" \
        MY_METIS_INC="${prefix}/include"
    pre-build {
        build.args-append \
            BLAS="-L${prefix}/lib ${linalglib}" \
            LAPACK="-L${prefix}/lib ${linalglib}"
    }
    license LGPL-2.1+
    long_description-append ${subport}: sparse Cholesky factorization.
    linalg.setup noveclibfort
}

subport	SuiteSparse_CSparse {
    license LGPL-2.1+
    long_description-append ${subport}: a concise sparse matrix package.
}

subport	SuiteSparse_CXSparse {
    version 3.2.0
    depends_lib-append port:SuiteSparse_config
    license LGPL-2.1+
    long_description-append ${subport}: CSparse Extended.
}

subport	SuiteSparse_LDL {
    version 2.2.6
    depends_lib-append port:SuiteSparse_config
    license LGPL-2.1+
    long_description-append ${subport}: a very concise LDL' factorization package.
}

subport	SuiteSparse_KLU {
    version 1.3.8
    depends_lib-append port:SuiteSparse_config port:SuiteSparse_AMD port:SuiteSparse_BTF port:SuiteSparse_COLAMD
    license LGPL-2.1+
    long_description-append ${subport}: sparse LU factorization, primarily for circuit simulation.
    patchfiles-append patch-KLU-Include-klu_version.h.diff
}

subport	SuiteSparse_UMFPACK {
    PortGroup linear_algebra 1.0

    version 5.7.9
    depends_lib-append port:SuiteSparse_config port:SuiteSparse_AMD port:SuiteSparse_CHOLMOD
    pre-build {
        build.args-append \
            BLAS="-L${prefix}/lib ${linalglib}" \
            LAPACK="-L${prefix}/lib ${linalglib}"
    }
    license GPL-2+
    long_description-append ${subport}: sparse LU factorization.
    linalg.setup noveclibfort
}

subport	SuiteSparse_RBio {
    version 2.2.6
    depends_lib-append port:SuiteSparse_config
    license GPL-2+
    long_description-append ${subport}: read/write sparse matrices in Rutherford/Boeing format.
}

subport	SuiteSparse_SPQR {
    PortGroup linear_algebra 1.0

    version 2.0.9
    depends_lib-append port:SuiteSparse_config port:SuiteSparse_AMD port:SuiteSparse_CHOLMOD port:SuiteSparse_COLAMD
    pre-build {
        build.args-append \
            BLAS="-L${prefix}/lib ${linalglib}" \
            LAPACK="-L${prefix}/lib ${linalglib}"
    }
    license GPL-2+
    long_description-append ${subport}: sparse QR factorization.
    linalg.setup noveclibfort
}

if {${subport} eq ${name}} {
    depends_lib-append \
        port:SuiteSparse_config \
        port:SuiteSparse_GraphBLAS \
        port:SuiteSparse_Mongoose \
        port:SuiteSparse_AMD \
        port:SuiteSparse_BTF \
        port:SuiteSparse_CAMD \
        port:SuiteSparse_CCOLAMD \
        port:SuiteSparse_COLAMD \
        port:SuiteSparse_CHOLMOD \
        port:SuiteSparse_CSparse \
        port:SuiteSparse_CXSparse \
        port:SuiteSparse_LDL \
        port:SuiteSparse_KLU \
        port:SuiteSparse_UMFPACK \
        port:SuiteSparse_RBio \
        port:SuiteSparse_SPQR

    master_sites
    distfiles
    use_configure     no
    supported_archs   noarch
    installs_libs     no
    universal_variant no
    build {}
    # create a dummy file so the port can be successfully activated
    destroot {
        xinstall -d -m 0755 ${destroot}${prefix}/share/doc/${subport}
        set docfile   [open ${destroot}${prefix}/share/doc/${subport}/README.txt "w"]
        puts ${docfile} "Meta-port for ${name}"
        puts ${docfile} "${long_description}"
        close ${docfile}
    }
} else {
    PortGroup compilers 1.0

    compilers.choose cc cpp cxx
    compilers.setup

    if {${subport} eq "SuiteSparse_config"} {
        set SuiteSparse_name ${subport}
    } else {
        set SuiteSparse_name [join [lindex [split ${subport} _] 1 end]]
    }

    if {${subport} eq "SuiteSparse_GraphBLAS" || ${subport} eq "SuiteSparse_Mongoose"} {
        PortGroup cmake 1.1

        cmake.source_dir ${worksrcpath}/${SuiteSparse_name}
    } else {
        PortGroup         makefile 1.0

        if {${subport} eq "SuiteSparse_config"} {
            build.dir     ${worksrcpath}/${SuiteSparse_name}
        } else {
            build.dir     ${worksrcpath}/${SuiteSparse_name}/Lib
        }
        destroot.dir  ${build.dir}

        patchfiles-append   patch-shared_lib.diff

        configure.universal_cflags
        configure.cc_archflags
        configure.universal_cxxflags
        configure.cxx_archflags
        pre-build {
            build.args-append TARGET_ARCH="[get_canonical_archflags ld]"
        }

        # INSTALL variable has non-standard meaning
        configure.install

        build.args-append       MACPORTS_PREFIX="${prefix}" \
                                OPTIMIZATION="${configure.optflags}" \
                                AUTOCC=no
        # avoid duplicate values
        configure.optflags

        if {${subport} eq "SuiteSparse_CSparse"} {
            build.target all
        } else {
            build.target default
        }

        destroot {
            proc check_copy {directory pattern prefix_directory} {
                global destroot prefix
                set files [glob -nocomplain -directory ${directory} ${pattern}]
                if {${files} ne ""} {
                    xinstall -d -m 0755 ${destroot}${prefix}/${prefix_directory}
                    copy {*}${files}    ${destroot}${prefix}/${prefix_directory}
                }
            }
            check_copy ${worksrcpath}/lib                                     *   lib
            check_copy ${destroot.dir}                                        *.a lib
            check_copy ${worksrcpath}/include                                 *   include
            check_copy ${worksrcpath}/share/doc/suitesparse-${github.version} *   share/doc/suitesparse
        }
    }
}
