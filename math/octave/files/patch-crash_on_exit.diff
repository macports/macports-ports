
# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1504620623 14400
# Node ID 16fae04366b2eaeb6422967fd084213cbd567e6f
# Parent  20dd13700c08bd07acb5fb2cb4c2a27e75393b80
avoid abort on exit from GUI (bug #50664)

* octave-interpreter.cc (octave_interpreter::execute): Emit
octave_finished_signal when execute_interpreter returns.
* octave-interpreter.h (octave_interpreter::octave_finished_signal):
New signal.

* octave-qt-link.cc (octave_qt_link::octave_qt_link): Connect
command_interpreter octave_finished_signal to main_thread quit slot.
Connect main_thread finished signal to main_thread deleteLater slot.
(octave_qt_link::~octave_qt_link): Don't delete main_thread.

diff --git a/libgui/src/octave-interpreter.cc b/libgui/src/octave-interpreter.cc
--- libgui/src/octave-interpreter.cc
+++ libgui/src/octave-interpreter.cc
@@ -48,6 +48,8 @@
   emit octave_ready_signal ();
 
   m_exit_status = m_app_context->execute_interpreter ();
+
+  emit octave_finished_signal (m_exit_status);
 }
 
 void
diff --git a/libgui/src/octave-interpreter.h b/libgui/src/octave-interpreter.h
--- libgui/src/octave-interpreter.h
+++ libgui/src/octave-interpreter.h
@@ -46,6 +46,8 @@
 
   void octave_ready_signal ();
 
+  void octave_finished_signal (int);
+
 public slots:
 
   // Initialize and execute the octave interpreter.
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- libgui/src/octave-qt-link.cc
+++ libgui/src/octave-qt-link.cc
@@ -60,6 +60,12 @@
   connect (command_interpreter, SIGNAL (octave_ready_signal ()),
            p, SLOT (handle_octave_ready ()));
 
+  connect (command_interpreter, SIGNAL (octave_finished_signal (int)),
+           main_thread, SLOT (quit ()));
+
+  connect (main_thread, SIGNAL (finished ()),
+           main_thread, SLOT (deleteLater ()));
+
   command_interpreter->moveToThread (main_thread);
 
   main_thread->start ();
@@ -67,8 +73,11 @@
 
 octave_qt_link::~octave_qt_link (void)
 {
+  // Note that we don't delete main_thread here.  That is handled by
+  // deleteLater slot that is called when the main_thread issues a
+  // finished signal.
+
   delete command_interpreter;
-  delete main_thread;
 }
 
 void

