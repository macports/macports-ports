Fix infinite loop in destroot when using texinfo 7 that causes main.log
to fill all disk space.
https://savannah.gnu.org/bugs/?62648

https://hg.savannah.gnu.org/hgweb/octave/rev/ab6d276f6fcb
--- doc/interpreter/mk-qthelp.pl
+++ doc/interpreter/mk-qthelp.pl
@@ -26,8 +26,11 @@
 open (my $HTML, "<", $htmlfname) or die "Unable to open $htmlfname";
 
 # Skip through preamble of file to find start of list
-while (($_ = <$HTML>) !~ /^<div class="contents">/ ) {;}
-while (($_ = <$HTML>) !~ /^<ul class="no-bullet">/ ) {;}
+while (defined ($_ = <$HTML>) and ! /^<div class="contents">/ ) {;}
+while (defined ($_ = <$HTML>)
+         and ! /^<ul class="(?:no-bullet|toc-numbered-mark)">/ ) {;}
+
+die "index.html: reached EOF without finding data start pattern" if eof ($HTML);
 
 $level = 0;
 while (<$HTML>)
@@ -68,7 +71,11 @@
 open ($HTML, "<", $htmlfname) or die "Unable to open $htmlfname";
 
 # Skip through preamble of file to find start of list
-while (($_ = <$HTML>) !~ /^<table class="index-fn/ ) {;}
+while (defined ($_ = <$HTML>)
+         and ! /^<table class="(?:index-fn|fn-entries)/ ) {;}
+
+die "Function-Index.html: reached EOF without finding data start pattern"
+  if eof ($HTML);
 
 while (<$HTML>)
 {

https://hg.savannah.gnu.org/hgweb/octave/rev/dccc52324b0b
--- scripts/help/__unimplemented__.m
+++ scripts/help/__unimplemented__.m
@@ -1340,8 +1340,8 @@
 
 %!test
 %! str = __unimplemented__ ("matlabrc");
-%! assert (str(1:71), "matlabrc is not implemented.  Octave uses the file '.octaverc' instead.");
+%! assert (regexp (str, "matlabrc is not implemented\.  Octave uses the file .\.octaverc. instead\."));
 
 %!test
 %! str = __unimplemented__ ("MException");
-%! assert (str(1:58), "The 'MException' function is not yet implemented in Octave");
+%! assert (regexp (str, "The .MException. function is not yet implemented in Octave"));

https://hg.savannah.gnu.org/hgweb/octave/rev/21b5e1c4d36e
--- scripts/help/get_first_help_sentence.m
+++ scripts/help/get_first_help_sentence.m
@@ -181,8 +181,8 @@
 endfunction
 
 
-%!assert (get_first_help_sentence ('get_first_help_sentence'), ...
-%!        "Return the first sentence of a function's help text.")
+%!assert (regexp (get_first_help_sentence ('get_first_help_sentence'), ...
+%!                "Return the first sentence of a function.s help text\."))
 
 %!assert (get_first_help_sentence ('get_first_help_sentence', 28), ...
 %!        "Return the first sentence...")
