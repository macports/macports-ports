--- libinterp/octave-value/ov-java.cc.orig	2017-11-08 15:10:37.000000000 -0700
+++ libinterp/octave-value/ov-java.cc	2017-11-08 16:29:46.000000000 -0700
@@ -641,7 +641,7 @@
   //! The number of created jvm's.
   jsize nVMs = 0;
 
-#if ! defined (__APPLE__) && ! defined (__MACH__)
+#if 1
 
   octave::dynamic_library lib (jvm_lib_path);
 
@@ -717,7 +717,7 @@
                               octave::sys::file_ops::dir_sep_str () +
                               "java.opts");
 
-#if ! defined (__APPLE__) && ! defined (__MACH__)
+#if 1
 
       if (create_vm (&jvm, &current_env, vm_args.to_args ()) != JNI_OK)
         error ("unable to start Java VM in %s", jvm_lib_path.c_str ());
--- configure.ac.orig	2017-11-08 15:10:37.000000000 -0700
+++ configure.ac	2017-11-08 16:31:19.000000000 -0700
@@ -2714,7 +2714,7 @@
   case $host_os in
     darwin*)
       ## Sneak the -framework flag into mkoctfile via LDFLAGS
-      LDFLAGS="$LDFLAGS -framework JavaVM"
+      #LDFLAGS="$LDFLAGS -framework JavaVM"
       ## According to: http://developer.apple.com/unix/crossplatform.html
       ## one must explicitly set the include path.
       ## Unfortunately, the include path keeps moving around.
@@ -2723,7 +2723,7 @@
       else
         JAVA_CPPFLAGS="-I${JAVA_HOME}/include -I/System/Library/Frameworks/JavaVM.framework/Home/include -I/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Headers -I/System/Library/Frameworks/JavaVM.framework/Versions/Current/Headers"
       fi
-      JAVA_LIBS="-framework JavaVM"
+      JAVA_LIBS=""
     ;;
     *)
       if test -n "$JAVA_CPPFLAGS"; then
