# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                GiNaC
version             1.8.6
revision            0
categories          math
license             GPL-2
maintainers         {mps @Schamschula} openmaintainer
description         GiNaC is C++ library that provides a set of algebraic capabilities.
long_description    GiNaC is an iterated and recursive acronym for GiNaC is Not a CAS, \
                    where CAS stands for Computer Algebra System. Its design is \
                    revolutionary in a sense that contrary to other CAS it does not try \
                    to provide extensive algebraic capabilities and a simple programming \
                    language but instead accepts a given language (C++) and extends it \
                    by a set of algebraic capabilities.

use_bzip2           yes
distname            ginac-${version}

homepage            http://www.ginac.de/
master_sites        ${homepage}

checksums           rmd160  d9a8fec6c04e66e58c214fcd0ac7c51431a153bd \
                    sha256  00b320b1116cae5b7b43364dbffb7912471d171f484d82764605d715858d975b \
                    size    1152914

compiler.cxx_standard  2011

depends_build       port:pkgconfig

depends_lib         port:cln \
                    port:readline

variant python38 conflicts python39 python310 python311 description {Use Python 3.8} {}
variant python39 conflicts python38 python310 python311 description {Use Python 3.9} {}
variant python310 conflicts python38 python39 python311 description {Use Python 3.10} {}
variant python311 conflicts python38 python39 python310 description {Use Python 3.11} {}

if {![variant_isset python38] && ![variant_isset python39]
        && ![variant_isset python310]} {
    default_variants +python311
}

foreach pv {311 310 39 38} {
    if {[variant_isset python${pv}]} {
        depends_build-append \
                    port:python${pv}

        configure.env-append \
                    PYTHON=${prefix}/bin/python[string index ${pv} 0].[string range ${pv} 1 end]
        break
    }
}

test.run            yes
test.target         check

livecheck.type      regex
livecheck.url       ${homepage}News.html
livecheck.regex     "Version (\[0-9.\]+) released"
