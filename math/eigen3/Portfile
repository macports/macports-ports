# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compilers 1.0
PortGroup           cmake 1.0
PortGroup           gitlab 1.0

name                eigen3
license             MPL-2 LGPL-3+
categories          math science
maintainers         {eborisch @eborisch} \
                    openmaintainer
description         A C++ template library for linear algebra: vectors, \
                    matrices, and related algorithms.
long_description    ${description}
platforms           darwin

depends_build-append    port:pkgconfig

if {${subport} eq ${name}} {
    gitlab.setup        libeigen eigen 3.3.7
    revision            1
    conflicts           eigen3-devel

    checksums \
        rmd160  8ebfad19975ca4c86dcdf7e7c0271aca910a9bc9 \
        sha256  685adf14bd8e9c015b78097c1dc22f2f01343756f196acdc76a678e1ae352e11 \
        size    1663474
}

subport eigen3-devel {
    # No current development version (other than rolling snapshot)
    gitlab.setup        libeigen eigen 14db78c5
    version             3.3-tracking-20200316
    revision            0

    conflicts           eigen3

    long_description    ${description} This (-devel) version tracks \
                        development of the current (3.3) branch.
    gitlab.livecheck.branch 3.3

    # Tired of waiting for an alpha for MKL fixes. Move to tracking 3.3
    # development branch. New epoch to catch as update.
    epoch               3
    checksums \
        rmd160  e89519327a965baca0e253b2ba2be4707fd967fb \
        sha256  2c32b09e496fa70a19a6cd158bb0f135e3245f4c222316464b335d33e362d1ff \
        size    1667286
}

homepage            http://eigen.tuxfamily.org/

variant doc description \
    {Place local documentation into <prefix>/share/doc/eigen3/html} {
        depends_build-append    port:doxygen \
                                port:texlive-latex \
                                path:bin/dot:graphviz
        build.target-append     doc
}

variant blas description \
    {Build eigen's blas (libeigen_blas*) : needs +gccNN, +g95, or +gfortran} {
        PortGroup               muniversal 1.0
        build.target-append     blas
        universal_variant       yes
        configure.universal_args ""
}

if {![variant_isset blas]} {
    configure.env-append    FC=nofortran
}

configure.env-append    PKG_CONFIG_LIBDIR=${prefix}/lib/pkgconfig
cmake.out_of_source     yes

test.run            yes
test.target         check
test.env-append     EIGEN_MAKE_ARGS=-j{build.jobs} \
                    EIGEN_CTEST_ARGS=-j{build.jobs}

# Enable parallel builds
build.env-append    EIGEN_MAKE_ARGS=-j{build.jobs}

### END CMAKE SUPPORT

# Setup compilers support / requirements

if {[variant_isset blas]} {
    compilers.choose    cc cxx cpp fc f77 f90
    compilers.setup     require_fortran
} elseif {[variant_isset doc]} {
    compilers.choose    cc cxx cpp
    compilers.setup
} else {
    # No architecture-dependent files installed; set noarch
    supported_archs     noarch
    compilers.setup
}

### Extra phases

# Install licenses and (if +doc) documentation
pre-destroot {
    set build_suffix {}
    if {![info exists universal_archs_to_use]} {
        lappend build_suffix ""
    } else {
        set dash "-"
        foreach arch ${universal_archs_to_use} {
            lappend build_suffix ${dash}${arch}
        }
    }

    foreach sfx ${build_suffix} {
        set docdir ${destroot}${sfx}${prefix}/share/doc/eigen3
        xinstall -d ${docdir}
        xinstall -m 644 -W ${worksrcpath} \
            COPYING.GPL COPYING.LGPL ${docdir}

        # Install documentation if requested
        if {[variant_isset doc]} {
            if {[string equal ${sfx} [lindex ${build_suffix} 0]]} {
                # The documentation created is slightly different for each arch
                # which makes muniversal hiccup. Just copy one set of docs
                # into destroot directories.
                file copy ${cmake.build_dir}${sfx}/doc/html ${docdir}
            }
        }

        if {[variant_isset blas]} {
            set libdir ${destroot}${sfx}${prefix}/lib
            xinstall -d ${libdir}
            file copy \
                {*}[glob ${cmake.build_dir}${sfx}/blas/libeigen_blas*] ${libdir}
        }
    }
}

post-destroot {
    # Grab extra items install doesn't out of unsupported
    foreach n {README.txt bench} {
        file copy ${worksrcpath}/unsupported/${n} \
            ${destroot}${prefix}/include/eigen3/unsupported
    }

    # Install FindEigen3.cmake file
    xinstall -d ${destroot}${cmake_share_module_dir}
    xinstall -m 444 ${worksrcpath}/cmake/FindEigen3.cmake \
        ${destroot}${cmake_share_module_dir}
}

notes "
This product includes software developed by the University of Chicago, as\
Operator of Argonne National Laboratory.
"
