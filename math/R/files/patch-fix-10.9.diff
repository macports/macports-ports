From 7a66ae025ca1f8a21282dc060a5e9e1a345df483 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <vital.had@gmail.com>
Date: Mon, 4 Mar 2024 10:32:20 +0700
Subject: [PATCH] Drop a breaking hack for Quartz on macOS 14.3.1

This reverts commit 15dfe81edd88baad7a448860f934ce90ced6b473.

See: https://bugs.r-project.org/show_bug.cgi?id=18683
---

diff --git src/library/grDevices/src/qdCocoa.m src/library/grDevices/src/qdCocoa.m
index c4055afec5..825e07c127 100644
--- src/library/grDevices/src/qdCocoa.m
+++ src/library/grDevices/src/qdCocoa.m
@@ -331,12 +331,10 @@ static QuartzFunctions_t *qf;
     ci->pdfMode = NO;
 }
 
-static int sonoma_bug = -1; /* -1 = macOS not checked yet, 0 = no, 1 = yes */
-
 - (void)drawRect:(NSRect)aRect
 {
     CGRect rect;
-    CGContextRef ctx = [NSGraphicsContext currentContext].CGContext;
+    CGContextRef ctx = [[NSGraphicsContext currentContext] graphicsPort];
     /* we have to retain our copy, beause we may need to create a layer
        based on the context in NewPage outside of drawRect: */
     if (ci->context != ctx) {
@@ -344,25 +342,16 @@ static int sonoma_bug = -1; /* -1 = macOS not checked yet, 0 = no, 1 = yes */
             CGContextRelease(ci->context);
         CGContextRetain(ctx);
     }
-
-    if (sonoma_bug == -1) { /* detect os version to work around the nasty Sonoma drawing bug */
-	NSOperatingSystemVersion osver = [[NSProcessInfo processInfo] operatingSystemVersion];
-	sonoma_bug = (osver.majorVersion == 14 && osver.minorVersion > 1) ? 1 : 0;
-	/* Rprintf("macOS %d.%d.%d, buggy = %d\n", (int)osver.majorVersion, (int)osver.minorVersion,
-	   (int)osver.patchVersion, sonoma_bug); */
-    }
-
     ci->context = ctx;
     ci->bounds = [self bounds];        
-    /* Rprintf("drawRect, ctx=%p, bounds=(%f x %f)\n", ctx, ci->bounds.size.width, ci->bounds.size.height); */
     rect = CGRectMake(0.0, 0.0, ci->bounds.size.width, ci->bounds.size.height);
     
     if (ci->pdfMode) {
-	/* Rprintf("  pdfMode - replaying list\n"); */
 	qf->ReplayDisplayList(ci->qd);
 	return;
     }
 
+    /* Rprintf("drawRect, ctx=%p, bounds=(%f x %f)\n", ctx, ci->bounds.size.width, ci->bounds.size.height); */
     if (!ci->layer) {
         CGSize size = CGSizeMake(ci->bounds.size.width, ci->bounds.size.height);
         /* Rprintf(" - have no layer, creating one (%f x %f)\n", ci->bounds.size.width, ci->bounds.size.height); */
@@ -400,24 +389,8 @@ static int sonoma_bug = -1; /* -1 = macOS not checked yet, 0 = no, 1 = yes */
         }
     }
     if ([self inLiveResize]) CGContextSetAlpha(ctx, 0.6); 
-    if (ci->layer) {
-	/* macOS 14.3.1 has a very bizarre bug which appears to be some kind
-	   of over-zealous optimization where it won't update the view even if
-	   the contents changed after drawing the CGLayer. The only way to prevent
-	   this from happening seems to be to draw something different than
-	   CGLayer each time in the same location before drawing the CGLayer. */
-	static double _q = 0.0;
-	if (sonoma_bug) {
-	    CGContextSaveGState(ctx);
-	    CGRect cr = { 0.0, 0.0, 1.0, 1.0 };
-	    CGContextAddRect(ctx, cr);
-	    CGContextSetRGBFillColor(ctx, _q, 1.0, 1.0, 1.0);
-	    _q += 0.1; if (_q > 1.0) _q -= 1.0;
-	    CGContextFillPath(ctx);
-	    CGContextRestoreGState(ctx);
-	}
+    if (ci->layer)
         CGContextDrawLayerInRect(ctx, rect, ci->layer);
-    }
     if ([self inLiveResize]) CGContextSetAlpha(ctx, 1.0); 
 }
 
@@ -709,7 +682,6 @@ static void initialize_cocoa() {
 
 static CGContextRef QuartzCocoa_GetCGContext(QuartzDesc_t dev, void *userInfo) {
     QuartzCocoaDevice *qd = (QuartzCocoaDevice*)userInfo;
-    /* if (!qd->pdfMode) Rprintf("QuartzCocoa_GetCGContext(layer=%p) -> %p (check %p)\n", qd->layer, qd->layerContext, qd->layer ? CGLayerGetContext(qd->layer) : 0); */
     return qd->pdfMode ? qd->context : qd->layerContext;
 }
 
@@ -793,7 +765,6 @@ static void QuartzCocoa_NewPage(QuartzDesc_t dev,void *userInfo, int flags) {
         ci->inHistory = -1;
     }
     if (ci->layer) {
-        /* Rprintf(" - releasing old layer (%p - ctx: %p)\n", ci->layer, ci->layerContext); */
         CGLayerRelease(ci->layer);
         ci->layer = 0;
         ci->layerContext = 0;
@@ -814,7 +785,6 @@ static void QuartzCocoa_Sync(QuartzDesc_t dev,void *userInfo) {
      * via setNeedsDisplay: YES has issues since dev.flush() won't
      * be synchronous and thus animation using dev.flush(); dev.hold()
      * will break by the time the event loop is run */
-    /* Rprintf("QuartzCocoa_Sync()\n"); */
     [ci->view display];
 }
 
