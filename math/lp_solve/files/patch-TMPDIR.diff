Use a randomly-named temporary directory instead of /tmp.
https://groups.google.com/g/lp_solve/c/VKOXWAfjW2M
--- bfp/bfp_LUSOL/ccc.osx.orig	2009-08-09 03:46:22.000000000 -0500
+++ bfp/bfp_LUSOL/ccc.osx	2021-01-08 02:54:47.000000000 -0600
@@ -3,14 +3,18 @@
 
 c=cc
 
+MYTMP=`mktemp -d "${TMPDIR:-"$MYTMP"}"/lp_solve_XXXXXX`
+
 #determine platform (32/64 bit)
->/tmp/platform.c
-echo '#include <stdlib.h>'>>/tmp/platform.c
-echo '#include <stdio.h>'>>/tmp/platform.c
-echo 'main(){printf("osx%d", (int) (sizeof(void *)*8));}'>>/tmp/platform.c
-$c /tmp/platform.c -o /tmp/platform
-PLATFORM=`/tmp/platform`
-rm /tmp/platform /tmp/platform.c >/dev/null 2>&1
+>"$MYTMP"/platform.c
+echo '#include <stdlib.h>'>>"$MYTMP"/platform.c
+echo '#include <stdio.h>'>>"$MYTMP"/platform.c
+echo 'main(){printf("osx%d", (int) (sizeof(void *)*8));}'>>"$MYTMP"/platform.c
+$c "$MYTMP"/platform.c -o "$MYTMP"/platform
+PLATFORM=`"$MYTMP"/platform`
+rm "$MYTMP"/platform "$MYTMP"/platform.c >/dev/null 2>&1
+
+rmdir "$MYTMP"
 
 mkdir bin bin/$PLATFORM >/dev/null 2>&1
 
--- lpsolve55/cccLUSOL.osx.orig	2016-12-10 03:04:57.000000000 -0600
+++ lpsolve55/cccLUSOL.osx	2021-01-08 02:54:23.000000000 -0600
@@ -1,29 +1,33 @@
 src='../lp_MDO.c ../shared/commonlib.c ../shared/mmio.c ../shared/myblas.c ../ini.c ../fortify.c ../colamd/colamd.c ../lp_rlp.c ../lp_crash.c ../bfp/bfp_LUSOL/lp_LUSOL.c ../bfp/bfp_LUSOL/LUSOL/lusol.c ../lp_Hash.c ../lp_lib.c ../lp_wlp.c ../lp_matrix.c ../lp_mipbb.c ../lp_MPS.c ../lp_params.c ../lp_presolve.c ../lp_price.c ../lp_pricePSE.c ../lp_report.c ../lp_scale.c ../lp_simplex.c ../lp_SOS.c ../lp_utils.c ../yacc_read.c ../bfp/bfp_LUSOL/lusol.c'
 c=cc
 
+MYTMP=`mktemp -d "${TMPDIR:-/tmp}"/lp_solve_XXXXXX`
+
 #determine platform (32/64 bit)
->/tmp/platform.c
-echo '#include <stdlib.h>'>>/tmp/platform.c
-echo '#include <stdio.h>'>>/tmp/platform.c
-echo 'main(){printf("ux%d", (int) (sizeof(void *)*8));}'>>/tmp/platform.c
-$c /tmp/platform.c -o /tmp/platform
-PLATFORM=`/tmp/platform`
-rm /tmp/platform /tmp/platform.c >/dev/null 2>&1
+>"$MYTMP"/platform.c
+echo '#include <stdlib.h>'>>"$MYTMP"/platform.c
+echo '#include <stdio.h>'>>"$MYTMP"/platform.c
+echo 'main(){printf("ux%d", (int) (sizeof(void *)*8));}'>>"$MYTMP"/platform.c
+$c "$MYTMP"/platform.c -o "$MYTMP"/platform
+PLATFORM=`"$MYTMP"/platform`
+rm "$MYTMP"/platform "$MYTMP"/platform.c >/dev/null 2>&1
 
 mkdir bin bin/$PLATFORM >/dev/null 2>&1
 
 #check if this system has the isnan function
->/tmp/isnan.c
-echo '#include <stdio.h>'>>/tmp/isnan.c
-echo '#include <stdlib.h>'>>/tmp/isnan.c
-echo '#include <math.h>'>>/tmp/isnan.c
-echo 'main(){isnan(0.0);return 0;}'>>/tmp/isnan.c
-$c /tmp/isnan.c -o /tmp/isnan $math >/dev/null 2>&1
+>"$MYTMP"/isnan.c
+echo '#include <stdio.h>'>>"$MYTMP"/isnan.c
+echo '#include <stdlib.h>'>>"$MYTMP"/isnan.c
+echo '#include <math.h>'>>"$MYTMP"/isnan.c
+echo 'main(){isnan(0.0);return 0;}'>>"$MYTMP"/isnan.c
+$c "$MYTMP"/isnan.c -o "$MYTMP"/isnan $math >/dev/null 2>&1
 if [ $? = 0 ]
 then NOISNAN=
 else NOISNAN=-DNOISNAN
 fi
-rm /tmp/isnan.c /tmp/isnan >/dev/null 2>&1
+rm "$MYTMP"/isnan.c "$MYTMP"/isnan >/dev/null 2>&1
+
+rmdir "$MYTMP"
 
 def=
 so=
