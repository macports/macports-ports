# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cargo   1.0
PortGroup           github  1.0

github.setup        helix-editor helix 23.05
revision            0

homepage            https://helix-editor.com

description         A post-modern text editor.

long_description    \
    {*}${description}. ${name} is a kakoune / neovim inspired editor, written \
    in Rust.

categories          editors
installs_libs       no
license             MPL-2
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

variant devel description {Include grammar source and debugging symbols} {}

# Helix's build process requires git
fetch.type          git

# Helix does not build well using frozen deps
build.pre_args-delete \
                    --frozen

set hx_bin_path     ${prefix}/bin/hx-bin
set hx_share_path   ${prefix}/share/${name}
set hx_runtime_path ${hx_share_path}/runtime
set hx_grammar_path ${hx_runtime_path}/grammars

post-extract {
    system -W ${worksrcpath} "git submodule update --init"
    copy ${filespath}/wrapper.sh ${workpath}/
}

pre-build {
    reinplace -E "s|@RUNTIME_PATH@|${hx_runtime_path}|" ${workpath}/wrapper.sh
    reinplace -E "s|@HELIX_BIN@|${hx_bin_path}|"        ${workpath}/wrapper.sh
}

destroot {
    xinstall -m 0755 ${worksrcpath}/target/[cargo.rust_platform]/release/hx \
        ${destroot}${hx_bin_path}

    xinstall -m 0755 ${workpath}/wrapper.sh ${destroot}${prefix}/bin/hx

    xinstall -d ${destroot}${hx_share_path}
    copy ${worksrcpath}/runtime ${destroot}${hx_share_path}/

    if {![variant_isset devel]} {
        file delete -force ${destroot}${hx_grammar_path}/sources
    }
}
