# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                                      1.0
PortGroup           cmake                       1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github                      1.0
PortGroup           cxx11                       1.1
PortGroup           legacysupport               1.0

github.setup        cern-fts davix 0_7_3 R_
version             [string map {_ .} ${github.version}]
revision            0
github.tarball_from releases
distname            ${github.project}-${version}

checksums           rmd160  e6c0c3c7735843261a483c3bd36155b7fa2ca963 \
                    sha256  cd46276e72c6a0da1e2ad30eb66ec509a4c023687767c62a66713fa8c23d328a \
                    size    4341865

categories          net
maintainers         {jonesc @cjones051073} openmaintainer

description         High-performance file management over WebDAV / HTTP

long_description    Davix aims to make the task of managing files over \
                    HTTP-based protocols simple. It is being developed \
                    by IT-ST at CERN, and while the project's purpose  \
                    is its use on the CERN grid, the functionality     \
                    offered is generic.

license             LGPL-2.1
platforms           darwin

set py_ver          3.7
set py_ver_no_dot   [join [split ${py_ver} "."] ""]

depends_build-append port:pkgconfig \
                     port:python${py_ver_no_dot}

depends_lib          port:libxml2 \
                     path:lib/libssl.dylib:openssl

configure.args-append -DPYTHON_EXECUTABLE=${prefix}/bin/python${py_ver}

pre-configure {
    # Force use of macports python in build scripts
    # Find command finds text files containing the string to be replaced.
    set pystringtoreplace "/usr/bin/env python2"
    foreach f [ exec find ${worksrcpath} -type f -and -name "*.py" ] {
        reinplace -q "s|${pystringtoreplace}|${prefix}/bin/python${py_ver}|g" $f
    }
}
