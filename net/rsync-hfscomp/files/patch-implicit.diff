--- a/configure.sh.original	2022-08-13 10:32:54.000000000 -0400
+++ b/configure.sh	2022-08-13 10:33:01.000000000 -0400
@@ -4482,6 +4482,9 @@
 #include <fcntl.h>
 #include <sys/types.h>
 #include <sys/wait.h>
+#include <string.h>
+#include <unistd.h>
+#include <stdlib.h>
 
 int main(void)
 {
@@ -5685,6 +5688,7 @@
 #elif defined MAJOR_IN_SYSMACROS
 #include <sys/sysmacros.h>
 #endif
+#include <stdlib.h>
 
 int main(void)
 {
@@ -7759,6 +7764,7 @@
 /* end confdefs.h.  */
 #include <sys/syscall.h>
 #include <sys/types.h>
+#include <unistd.h>
 int
 main ()
 {
@@ -7988,6 +7994,7 @@
 #if HAVE_UNISTD_H
 # include <unistd.h>
 #endif
+#include <sys/stat.h>
 #include <stdlib.h>
 #include <errno.h>
 #define FILENAME "conftest.fifi"
@@ -8031,6 +8038,7 @@
 
 #include <sys/types.h>
 #include <sys/socket.h>
+#include <stdlib.h>
 
 main() {
        int fd[2];
@@ -8264,6 +8272,7 @@
 /* end confdefs.h.  */
 #include <sys/types.h>
 #include <dirent.h>
+#include <stdlib.h>
 main() { struct dirent *di; DIR *d = opendir("."); di = readdir(d);
 if (di && di->d_name[-2] == '.' && di->d_name[-1] == 0 &&
 di->d_name[0] == 0) exit(0); exit(1);}
@@ -8296,6 +8305,7 @@
 /* end confdefs.h.  */
 #include <sys/types.h>
 #include <utime.h>
+#include <stdlib.h>
 int
 main ()
 {
@@ -8329,6 +8339,7 @@
 /* end confdefs.h.  */
 #include <sys/time.h>
 #include <unistd.h>
+#include <stdlib.h>
 int
 main ()
 {
@@ -8365,7 +8376,10 @@
 /* end confdefs.h.  */
 
 #include <sys/types.h>
+#include <stdio.h>
 #include <stdarg.h>
+#include <string.h>
+#include <stdlib.h>
 void foo(const char *format, ...) {
        va_list ap;
        int len;
@@ -8470,6 +8484,7 @@
 #include <stdio.h>
 #include <sys/stat.h>
 #include <errno.h>
+#include <unistd.h>
 main() { int rc, ec; char *fn = "fifo-test";
 unlink(fn); rc = mknod(fn,S_IFIFO,0600); ec = errno; unlink(fn);
 if (rc) {printf("(%d %d) ",rc,ec); return ec;}
@@ -8508,6 +8523,7 @@
 #include <stdio.h>
 #include <sys/stat.h>
 #include <errno.h>
+#include <unistd.h>
 main() { int rc, ec; char *fn = "sock-test";
 unlink(fn); rc = mknod(fn,S_IFSOCK,0600); ec = errno; unlink(fn);
 if (rc) {printf("(%d %d) ",rc,ec); return ec;}
