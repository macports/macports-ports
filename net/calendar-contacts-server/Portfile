# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           conflicts_build 1.0
PortGroup           github 1.0

github.setup        apple ccs-calendarserver 13c706b985fb728b9aab42dc0fef85aae21921c3

name                calendar-contacts-server
# version from https://github.com/apple/ccs-calendarserver/blob/master/setup.py
# with date of git commit appended
version             9.3.20200212
revision            4
categories          net mail
platforms           {darwin any}
supported_archs     noarch
maintainers         {ieee.org:s.t.smith @essandess} openmaintainer
license             Apache-2

description         Apple Calendar and Contacts Server configuration

long_description    ccs-calendarserver is a standards-compliant server \
                    implementing the CalDAV and CardDAV protocols, \
                    including iMIP. It provides a shared \
                    location on the network allowing multiple users to \
                    store and edit calendaring and contact \
                    information. This port provides a basic, working, \
                    easily modifiable configuration, previously used \
                    in macOS Server.app, and an nginx reverse proxy to \
                    handle modern crypto and isolate the backend server.

homepage            https://www.calendarserver.org

checksums           rmd160  5fd33bb11370e40d3fb8e6550963ec3587156d24 \
                    sha256  e08d8d1a911d408dfd2f9716a1a02d77801b0d28401186d868d7ca3af198f4c6 \
                    size    3713620

# diff -NaurdwB ./calendar-contacts-server-orig ./calendar-contacts-server-new | sed -E -e 's/\.\/calendar-contacts-server-(orig|new)/\./g' | sed -E -e 's|/opt/local|@PREFIX@|g' > ~/Downloads/patch-build_python_venv.diff
patchfiles-append   patch-build_python_venv.diff

post-patch {
    reinplace -q "s|@PREFIX@|${prefix}|g" ${worksrcpath}/bin/_build.sh
}

# use these to specify python versions, python2 required
# use ${prefix}/var/macports/sources/rsync.macports.org/macports/release/tarballs/ports/_resources/port1.0/group/python-1.0.tcl
set python2_version 27
set python2_branch [string index ${python2_version} 0].[string range ${python2_version} 1 end]

# use these to specify PostgreSQL versions, >=postgresql17 required
set postgresql_previous_version 96
set postgresql_version 17

depends_build-append \
                    port:py${python2_version}-setuptools

depends_lib-append  port:curl-ca-bundle \
                    port:cyrus-sasl2 \
                    port:libffi \
                    port:mail-server \
                    port:memcached \
                    port:nginx \
                    port:openssl \
                    port:postgresql${postgresql_version}-server \
                    port:python${python2_version} \
                    port:py${python2_version}-asn1 \
                    port:py${python2_version}-asn1-modules \
                    port:py${python2_version}-cffi \
                    port:py${python2_version}-constantly \
                    port:py${python2_version}-cryptography \
                    port:py${python2_version}-dateutil \
                    port:py${python2_version}-docutils \
                    port:py${python2_version}-enum34 \
                    port:py${python2_version}-incremental \
                    port:py${python2_version}-ldap \
                    port:py${python2_version}-mock \
                    port:py${python2_version}-openssl \
                    port:py${python2_version}-pip \
                    port:py${python2_version}-psutil \
                    port:py${python2_version}-pycparser \
                    port:py${python2_version}-pyobjc-cocoa \
                    port:py${python2_version}-service_identity \
                    port:py${python2_version}-six \
                    port:py${python2_version}-virtualenv \
                    port:py${python2_version}-zopeinterface \

depends_run-append  port:curl \
                    port:pip_select \
                    port:postgresql_select

# this conflicts with the requirement sqlparse==0.2.0
conflicts_build-append \
                    py${python2_version}-sqlparse

set calendarserverUser  calendarserver
set calendarserverGroup _calendar
add_users           ${calendarserverUser} \
                    group=${calendarserverGroup} \
                    home=${prefix}/var/${calendarserverUser}

set ccsname         ${github.project}
set calendarserverdir   ${prefix}/var/${calendarserverUser}
set calendarserverpackage \
                    ${calendarserverdir}/Library/CalendarServer/${ccsname}

# random 4-word-based passphrase
proc correct_horse_battery_staple {} {
    # ignore errors from sf-pwgen if the password is shorter than requested
    return \
        [join [exec sh -c "sf-pwgen \
            --algorithm memorable --count 2 --length 16 \
            2>/dev/null || true"] -]
}

# destroot approach without destroot capability in ccs-calendarserver:
# * There does not appear to be a straighforward way to DESTDIR ccs-calendarserver
# * Neither does creating symlinks in ${prefix} work with ./bin/package
# * Reason: virtualenv uses actual destroot path, not symlinks, in *.pyc *.so
# * Therefore, package in post-activate, and delete necessary directories
#   for each install or upgrade
# * Keep personal data **outside** of ${prefix}, but provide symlinks

post-extract {
    # ccs-calendarserver's postgres code points to `PSQL = "../postgresql/_root/bin/psql"`
    # https://github.com/apple/ccs-calendarserver/blob/master/calendarserver/tools/checkdatabaseschema.py
    reinplace "s|\"../postgresql/_root/bin/psql\"|\"${prefix}/lib/postgresql${postgresql_version}/bin/psql\"|g" \
        ${worksrcpath}/calendarserver/tools/checkdatabaseschema.py
}

use_configure       no

pre-build {
    # pre-build source copy
    xinstall -d \
        ${destroot}${prefix}/src/${ccsname} \
        ${workpath}/bin
    copy ${worksrcpath} \
        ${destroot}${prefix}/src/${ccsname}
    # MacPorts python2 pip
    ln -s ${prefix}/bin/pip-${python2_branch} \
        ${workpath}/bin/pip
}

# package/install calendarserver binaries
# see https://github.com/apple/ccs-calendarserver/issues/540#issuecomment-519596004
build.cmd           bin/develop
build.target
build.env           "USE_OPENSSL=1" \
    "PATH=${workpath}/bin:$env(PATH)" \
    "CPPFLAGS=${configure.cppflags}" \
    "LDFLAGS=${configure.ldflags}"

destroot {
    # configuration design: MacPorts file and/or directory templates installed
    # to *.macports, then edited with local network settings, then in
    # post-activate copied to actual configuration files if such don't exist

    xinstall -o ${calendarserverUser} -d \
        ${destroot}${calendarserverpackage}
    destroot.keepdirs-append \
        ${destroot}${calendarserverdir} \
        ${destroot}${calendarserverdir}/Library/CalendarServer \
        ${destroot}${calendarserverpackage}
    foreach d {
        Library/CalendarServer/auth
        Library/CalendarServer/Config
        Library/CalendarServer/Config/Certificates
        Library/CalendarServer/etc
        Library/CalendarServer/etc/nginx_root
        Library/CalendarServer/logs
        Library/CalendarServer/memcached
        Library/CalendarServer/postgresql
        Library/CalendarServer/run
        } {
        xinstall -m 0750 -o ${calendarserverUser} -g ${calendarserverGroup} -d \
            ${destroot}${calendarserverdir}/${d}
        destroot.keepdirs-append \
            ${destroot}${calendarserverdir}/${d}
    }
    file attributes \
        ${destroot}${calendarserverdir}/Library/CalendarServer/auth \
        -permissions 0770
    file attributes \
        ${destroot}${calendarserverdir}/Library/CalendarServer/etc/nginx_root \
        -permissions 0755
    # calendarserver runtime sockets
    foreach d {
        caldavd
        caldavd_requests
        } {
        xinstall -m 0770 -o ${calendarserverUser} -g ${calendarserverGroup} -d \
            ${destroot}${calendarserverdir}/Library/CalendarServer/run/${d}
        destroot.keepdirs-append \
            ${destroot}${calendarserverdir}/Library/CalendarServer/run/${d}
    }

    # symlink to personal data outside of ${prefix}
    ln -s /private/var/${calendarserverUser}/Library/CalendarServer/Data \
        ${destroot}${calendarserverdir}/Library/CalendarServer/Data

    set dot_profile_fd \
        [open ${destroot}${calendarserverdir}/.profile w 0644]
    puts ${dot_profile_fd} \
        "source \"${calendarserverpackage}/environment.sh\""
    close ${dot_profile_fd}

    # calenderserver configuration
    xinstall -m 0600 -o ${calendarserverUser} -g ${calendarserverGroup} \
        ${filespath}/calendarserver.plist \
        ${destroot}${calendarserverdir}/Library/CalendarServer/Config/calendarserver.plist.macports

    # Directory Service
    xinstall -m 0660 -o ${calendarserverUser} -g ${calendarserverGroup} \
        ${worksrcpath}/conf/test/accounts.xml \
        ${destroot}${calendarserverdir}/Library/CalendarServer/auth/accounts.xml.macports

    # nginx reverse proxy
    xinstall -m 0640 -o ${calendarserverUser} -g ${calendarserverGroup} \
        ${filespath}/nginx.conf \
        ${destroot}${calendarserverdir}/Library/CalendarServer/etc/nginx.conf.macports
    xinstall -m 0644 -o ${calendarserverUser} -g ${calendarserverGroup} \
        ${filespath}/default.html \
        ${destroot}${calendarserverdir}/Library/CalendarServer/etc/nginx_root

    # ccs-calendarserver's postgres code points to `PSQL = "../postgresql/_root/bin/psql"`
    # https://github.com/apple/ccs-calendarserver/blob/master/calendarserver/tools/checkdatabaseschema.py
    ln -s ${prefix} \
        ${destroot}${calendarserverdir}/Library/CalendarServer/postgresql/_root
    # https://github.com/apple/ccs-calendarserver/blob/master/conf/caldavd-test-s2s.plist
    ln -s ${prefix} \
        ${destroot}${calendarserverdir}/Library/CalendarServer/memcached/_root
}

# Network configuration
# hard-coded examples
set host            host
set domain          example
set tld             com
set fullhost        ${host}.${domain}.${tld}
set domaintld       ${domain}.${tld}
set tls_certificate_name \
                    ${fullhost}

startupitem.create  yes

startupitems \
    name            calendarserver \
    executable      ${calendarserverpackage}/bin/caldavd

# use defaults, edit launch daemon plists in post-activate below
# executable ${prefix}/sbin/nginx -g "daemon off;" -p ${calendarserverdir}/Library/CalendarServer/logs -c ${calendarserverdir}/Library/CalendarServer/etc/nginx.conf
# pidfile auto ${calendarserverdir}/Library/CalendarServer/logs/nginx.pid
startupitems-append \
    name            calendarserver_proxy \
    executable      ${prefix}/sbin/nginx \
    pidfile         auto

variant initialize_always \
    description {Always initialize all configuration files. Intended \
        for development and troubleshooting only. Working deployments \
        must disable this variant to prevent configuration files \
        being overwritten at the next upgrade. Existing configuration \
        files are not overwritten by default.} {
    ui_warn \
        "
\tAll configuration files will be initialized because
\tthe variant +initialize_always is set. Please disable
\tthis variant for working deployments.
"
}

post-activate {
    # personal data outside of ${prefix}
    if { ![file exists \
        /private/var/calendarserver/Library/CalendarServer] } {
        xinstall -o ${calendarserverUser} -g ${calendarserverGroup} -d \
            /private/var/calendarserver/Library/CalendarServer
    }
    if { ![file exists \
        /private/var/calendarserver/Library/CalendarServer/Data] } {
        xinstall -m 0700 -o ${calendarserverUser} -g ${calendarserverGroup} -d \
            /private/var/calendarserver/Library/CalendarServer/Data
    }

    # package/install calendarserver binaries
    system -W ${worksrcpath} \
        "sh <<PACKAGE${CALENDARSERVERGROUP}SERVER
            # Don't use SecureTransport, prefer MacPorts Python binaries and libraries
            export USE_OPENSSL=1
            export CPPFLAGS='${configure.cppflags}'
            export C_INCLUDE_PATH='${prefix}/include'
            export LDFLAGS='${configure.ldflags}'
            export PATH='${workpath}/bin:${prefix}/bin:/usr/bin:/bin:/usr/sbin:/sbin:$env(PATH)'
            ./bin/package \
                ${calendarserverpackage}
PACKAGE${CALENDARSERVERGROUP}SERVER
"

    # use network settings for installed example configuration
    set fullhost [exec /bin/hostname -f]
    set domaintld [join [lrange [split ${fullhost} .] 1 end] .]

    # TLS certificate name from postfix
    set tls_certificate_name_postfix \
        [exec sh -c "egrep -m 1 \
            -e \"^\[\[:space:\]\]*smtp_tls_CAfile\[\[:space:\]\]*=\[\[:space:\]\]*\" \
            ${prefix}/etc/postfix/main.cf || true"]
    if { ${tls_certificate_name_postfix} ne "" } {
        set tls_certificate_name_postfix \
            [strsed ${tls_certificate_name_postfix} \
                "s|^\[\[:space:\]\]*smtp_tls_CAfile\[\[:space:\]\]*=\[\[:space:\]\]*${prefix}/etc/certificates/||"]
        set tls_certificate_name_postfix \
            [strsed ${tls_certificate_name_postfix} \
                {s|\.chain\.pem[[:space:]]*$||}]
    }
    if { ${tls_certificate_name_postfix} ne "" } {
        set tls_certificate_name ${tls_certificate_name_postfix}
    }

    ui_msg "Configuring Calendar and Contacts Server with:

        fullhost :                     ${fullhost}
        domain.tld :                   ${domaintld}
        tls_certificate_name :         ${tls_certificate_name}
"

    # Add the necessary keychain item for Calendarserver
    proc calendarserver_keychain_item {fullhost} {
        return [string trim [exec /bin/sh -c \
            "RV=\"\" ; \
            /usr/bin/security find-generic-password \
                -a calendarserver@${fullhost} \
                -s org.calendarserver \
                /Library/Keychains/System.keychain \
                1>/dev/null 2>&1 \
            && RV=org.calendarserver || /usr/bin/true ; \
            echo \"\${RV}\""]]
    }
    if { [calendarserver_keychain_item ${fullhost}] eq "" } {
        set calendarserver_password \
            [correct_horse_battery_staple]
        system "/usr/bin/security add-generic-password \
            -a calendarserver@${fullhost} \
            -s org.calendarserver \
            -T /usr/bin/security \
            -w \"${calendarserver_password}\" \
            -A /Library/Keychains/System.keychain"
        # delete command:
        # sudo /usr/bin/security delete-generic-password -a calendarserver@${fullhost} -s org.calendarserver /Library/Keychains/System.keychain
        if { [calendarserver_keychain_item ${fullhost}] eq "" } {
            ui_warn \
                "Keychain item org.calendarserver for ${ccsname} failed to be created."
        }
    }

    proc install_initial_configuration {f_or_d} {
        if { [variant_isset "initialize_always"]
             && [file exists ${f_or_d}]
            } {
            delete ${f_or_d}.previous
            move \
                ${f_or_d} \
                ${f_or_d}.previous
        }
        if { [variant_isset "initialize_always"]
             || ![file exists ${f_or_d}]
            } {
            if { [file isfile ${f_or_d}.macports] } {
                xinstall -m 0644 \
                    ${f_or_d}.macports \
                    ${f_or_d}
            } elseif { [file isdirectory ${f_or_d}.macports] } {
                xinstall -d ${f_or_d}
                foreach f [glob -nocomplain ${f_or_d}.macports/*] {
                    xinstall -m 0644 ${f} \
                        ${f_or_d}/[file tail ${f}]
                }
            }
        }
    }

    # calenderserver configuration and nginx reverse proxy
    foreach f_or_d {
        auth/accounts.xml
        Config/calendarserver.plist
        etc/nginx.conf
    } {
        install_initial_configuration \
            ${calendarserverdir}/Library/CalendarServer/${f_or_d}
    }

    # configure all template files with local settings
    foreach d_or_f {
        auth
        Config
        etc
        } {
        fs-traverse f ${calendarserverdir}/Library/CalendarServer/${d_or_f} {
            if { [file isfile ${f}]
                 && ![string match "*.macports" ${f}]
                 && [string match "text/*" \
                         [lindex [exec /usr/bin/file --mime-type ${f}] end]]
             } then {
                foreach cmd [list \
                     "s|@PREFIX@|${prefix}|g" \
                     "s|@host@.@domain@.@tld@|${fullhost}|g" \
                     "s|@domain@.@tld@|${domaintld}|g" \
                     "s|@CALENDARSERVERUSER@|${calendarserverUser}|g" \
                     "s|@CALENDARSERVERDIR@|${calendarserverdir}|g" \
                     "s|@TLS_CERTIFICATE_NAME@|${tls_certificate_name}|g" \
                     "s|@POSTGRESQL_VERSION@|${postgresql_version}|g" \
                    ] {
                    reinplace -q ${cmd} ${f}
                }
            }
        }
    }

    # Add launchd.plist keys to MacPorts launchdaemons

    # org.macports.calendarserver
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert EnvironmentVariables -xml \
            \"<dict> \
                <key>PYTHON</key> \
                <string>${calendarserverpackage}/bin/python</string> \
                <key>PATH</key> \
                <string>${calendarserverpackage}/bin:${calendarserverpackage}/virtualenv/bin:${prefix}/bin:${prefix}/sbin:/usr/bin:/usr/sbin:/bin:/sbin</string> \
            </dict>\" \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert UserName -string ${calendarserverUser} \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert GroupName -string ${calendarserverGroup} \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert InitGroups -bool YES \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert AbandonProcessGroup -bool YES \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert ThrottleInterval -integer 60 \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert HardResourceLimits -xml \
            \"<dict> \
                <key>NumberOfFiles</key> \
                <integer>12000</integer> \
            </dict>\" \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert SoftResourceLimits -xml \
            \"<dict> \
                <key>NumberOfFiles</key> \
                <integer>12000</integer> \
            </dict>\" \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert PreventsSleep -bool YES \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert StandardOutPath -string \
            ${calendarserverdir}/Library/CalendarServer/logs/launchd.log \
            org.macports.calendarserver.plist"
    system -W \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver \
        "/usr/bin/plutil -insert StandardErrorPath -string \
            ${calendarserverdir}/Library/CalendarServer/logs/launchd.log \
            org.macports.calendarserver.plist"
    reinplace \
        "s|<string>${calendarserverpackage}/bin/caldavd</string>$|&\\
\t\t<!--\\
\t\t<string>-u</string> <string>calendarserver</string>\\
\t\t<string>-g</string> <string>${calendarserverGroup}</string>\\
\t\t  -->\\
\t\t<string>-X</string>\\
\t\t<string>-R</string>\\
\t\t<string>kqueue</string>\\
\t\t<!-- DEFAULT_CONFIG_FILE is hard-coded in ccs-calendarserver/twistedcaldav/stdconfig.py -->\\
\t\t<string>-f</string>\\
\t\t<string>${calendarserverdir}/Library/CalendarServer/Config/calendarserver.plist</string>|" \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver/org.macports.calendarserver.plist

    # org.macports.calendarserver_proxy
    reinplace \
        "s|<string>${prefix}/sbin/nginx</string>$|&\\
\t<string>-g</string>\\
\t<string>daemon off;</string>\\
\t<string>-p</string>\\
\t<string>${calendarserverdir}/Library/CalendarServer/logs</string>\\
\t<string>-c</string>\\
\t<string>${calendarserverdir}/Library/CalendarServer/etc/nginx.conf</string>|" \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver_proxy/org.macports.calendarserver_proxy.plist
    reinplace \
        "s|<string>${prefix}/var/run/calendarserver_proxy.pid</string>$|<string>${calendarserverdir}/Library/CalendarServer/run/nginx.pid</string>|" \
        ${prefix}/etc/${startupitem.location}/org.macports.calendarserver_proxy/org.macports.calendarserver_proxy.plist

    # TLS PFS
    if { ![file exists \
        ${calendarserverdir}/Library/CalendarServer/etc/dhparam.pem] } {
        # create a shorter, faster DH parameter file for the default installation
        system -W ${calendarserverdir}/Library/CalendarServer/etc \
            "openssl dhparam -out dhparam.pem 2048"
    }

    fs-traverse f_or_d \
        ${calendarserverdir} {
        if { [file type ${f_or_d}] ne "link" } {
            file attributes ${f_or_d} \
                 -owner ${calendarserverUser} -group ${calendarserverGroup}
        }
    }
}

# ${calendarserverpackage} is not managed by destroot because the upstream
# does not provide this capability; therefore, delete after deactivation
# saving the previous install in .previous
post-deactivate {
    if { [file exists ${calendarserverpackage}] } {
        delete ${calendarserverpackage}.previous
        move ${calendarserverpackage} ${calendarserverpackage}.previous
    }
    delete ${calendarserverpackage}
}

notes "Apple Calendar and Contacts Server is a standards-compliant\
server implementing the CalDAV and CardDAV protocols. Full\
deployment requires a working mail server, DNS configuration on both the\
LAN and the internet, including SPF and DKIM records, trusted TLS\
certificates, port forwarding, possibly a mail relay, and more.

Users must reconfigure this installation for their own system, network,\
and security model specifics by editing all necessary files and checking\
file permissions. A subset of these settings are visible in the files:

        port contents calendar-contacts-server
        port file calendar-contacts-server

These are the locations and network settings for the default configuration:

    Calender and Contacts Server:
        ${prefix}/var/calendarserver/Library/CalendarServer/Config/calendarserver.plist

    nginx Reverse Proxy:
        ${prefix}/var/calendarserver/Library/CalendarServer/etc/nginx.conf
        ports: 8008, 8443, 8800, 8843

    Personal data (note, outside ${prefix}):
        /var/calendarserver/Library/CalendarServer/Data

Account and principal information is configurable in the file:
        ${prefix}/var/calendarserver/Library/CalendarServer/auth/accounts.xml

with baseline account records of the form:

  <record>
    <uid>7E1DE44E-F1E5-4656-93EF-1714B37877A5</uid>
    <short-name>username</short-name>
    <full-name>User Name</full-name>
    <password>strong-password</password>
    <email>username@example.com</email>
  </record>

uid's can must be unique; on macOS two ways of generating uid's are\
the command `uuidgen`, or for local accounts and especially when migrating\
from an OpenDirectory-based server:

        dscl . -read /Users/username GeneratedUID

A working Calendar and Contacts Server will allow local account\
authentication at these web pages (ports 8008 and 8800 are\
unencrypted):

        http://${fullhost}:8008
        https://${fullhost}:8443
        http://${fullhost}:8800
        https://${fullhost}:8843

TLS certificate updates must be included in calendar-contacts-server's\
proxy nginx.conf and, if installed, mail-server dovecot's conf.d/10-ssl.conf,\
and postfix's master.cf. Instructions are included as comments in:

    sudo vi ${prefix}/var/calendarserver/Library/CalendarServer/etc/nginx.conf
    sudo vi ${prefix}/etc/dovecot/conf.d/10-ssl.conf
    sudo vi ${prefix}/etc/postfix/main.cf

Calendars and Contacts backup:

    TS=\$(date ''+%F'')
    mkdir -p -m 0700 /tmp/caldav_\$TS/calendars
    mkdir -p -m 0700 /tmp/caldav_\$TS/contacts
    ${prefix}/var/calendarserver/Library/CalendarServer/ccs-calendarserver/bin/calendarserver_export --config ${prefix}/var/calendarserver/Library/CalendarServer/Config/calendarserver.plist --all --calendars --directory=/tmp/caldav_\$TS/calendars
    ${prefix}/var/calendarserver/Library/CalendarServer/ccs-calendarserver/bin/calendarserver_export --config ${prefix}/var/calendarserver/Library/CalendarServer/Config/calendarserver.plist --all --contacts --directory=/tmp/caldav_\$TS/contacts

Known issues:
    * All local accounts have access to calendarserver's password using

          security find-generic-password -a calendarserver@${fullhost} -g

      If this Keychain item is missing, it must be added with a\
      corresponding password for the calendarserver user:

          sudo /usr/bin/security add-generic-password \\
            -a calendarserver@${fullhost} \\
            -s org.calendarserver -T /usr/bin/security \\
            -w 'a-strong-passphrase' \\
            -A /Library/Keychains/System.keychain
      sudo dscl . passwd /Users/calendarserver 'a-strong-passphrase'

      This is a hack to provide twistedcaldav authentication access. See:\
      https://github.com/apple/ccs-calendarserver/blob/master/twistedcaldav/util.py \
      An alternate approach must be used if non-trusted local accounts\
      exist on the Calendar and Contacts Server.

    * The CalendarServer service does not reliably start after reboot,
      presumably due to an issue with launchd. A workaround
      after rebooting is to issue the commands:

      sudo port unload calendar-contacts-server ; sleep 5 ;\\
      sudo port load calendar-contacts-server

    * The package ccs-calendarserver is written in Python 2.7, which will\
      reach the end of its life on January 1st, 2020. A future version of\
      pip will drop support for Python 2.7."

if { [variant_isset "initialize_always"] } {
    if {[exists notes]} {
        # leave a blank line after the existing notes
        notes-append ""
    }
    notes-append \
        "The variant +initialize_always is set, which initializes\
        all configuration files. Please disable this variant for\
        working deployments."
}

# remove after 2026-01-01
variant apns \
    description "Use Apple Push Notification Service (APNS) \[deprecated]" {
    notes-append \
        "Apple no longer supports APNS certificates for Calendar and Contacts.\
        This variant will be removed in a future update. See:\
        https://discussions.apple.com/thread/255898876"
}

if {${postgresql_previous_version} ne ${postgresql_version}} {
    notes-append \
        "Migration of the caldav PostgreSQL database from\
    postgresql${postgresql_previous_version} to postgresql${postgresql_version} may be required.

    Issue the following commands, possibly modified for your own specific\
    database location and previous version:

# shutdown calendar-contacts-server and associated database
sudo port unload calendar-contacts-server

# move original db cluster.pg directory
sudo ls -l \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database
sudo mv \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster.pg \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster_postgresql${postgresql_previous_version}.pg

# create socket to original db and dump the db
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    install -o ${calendarserverUser} -g ${calendarserverGroup} -m 0700 \\
    -d /tmp/ccs-migration
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    install -o ${calendarserverUser} -g ${calendarserverGroup} -m 0700 \\
    -d /tmp/ccs-migration/PostgresSocket-${postgresql_previous_version}
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ${prefix}/lib/postgresql${postgresql_previous_version}/bin/pg_ctl \\
    -U caldav -D \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster_postgresql${postgresql_previous_version}.pg \\
    -o \"-k /tmp/ccs-migration/PostgresSocket-${postgresql_previous_version}\" \\
    -l /tmp/ccs-migration/postgresql${postgresql_previous_version}_logfile.txt start
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ${prefix}/lib/postgresql${postgresql_previous_version}/bin/pg_dumpall \\
    --username=caldav --host=/tmp/ccs-migration/PostgresSocket-${postgresql_previous_version} \\
    --file=/tmp/ccs-migration/caldav${postgresql_previous_version}.dump
sudo chmod 0600 /tmp/ccs-migration/caldav${postgresql_previous_version}.dump
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ${prefix}/lib/postgresql${postgresql_previous_version}/bin/pg_ctl \\
    -U caldav -D \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster_postgresql${postgresql_previous_version}.pg \\
    -o \"-k /tmp/ccs-migration/PostgresSocket-${postgresql_previous_version}\" \\
    -l /tmp/ccs-migration/postgresql${postgresql_previous_version}_logfile.txt stop

# import the data into a new database
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    install -o ${calendarserverUser} -g ${calendarserverGroup} -m 0700 -d \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster_postgresql${postgresql_version}.pg
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    install -o ${calendarserverUser} -g ${calendarserverGroup} -m 0700 -d \\
    /tmp/ccs-migration/PostgresSocket-${postgresql_version}
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ${prefix}/lib/postgresql${postgresql_version}/bin/initdb -E UTF8 -U caldav \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster_postgresql${postgresql_version}.pg
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ${prefix}/lib/postgresql${postgresql_version}/bin/pg_ctl -U caldav -D \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster_postgresql${postgresql_version}.pg \\
    -o \"-k /tmp/ccs-migration/PostgresSocket-${postgresql_version}\" \\
    -l /tmp/ccs-migration/postgresql${postgresql_version}_logfile.txt start
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ${prefix}/lib/postgresql${postgresql_version}/bin/createdb -U caldav \\
    -h /tmp/ccs-migration/PostgresSocket-${postgresql_version} caldav
sudo -u ${calendarserverUser} -g ${calendarserverGroup} bash -c \\
    '${prefix}/lib/postgresql${postgresql_version}/bin/psql -U caldav \\
    -h /tmp/ccs-migration/PostgresSocket-${postgresql_version} \\
    < /tmp/ccs-migration/caldav${postgresql_previous_version}.dump'
# dump the new db to compare
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ${prefix}/lib/postgresql${postgresql_version}/bin/pg_dumpall --username=caldav \\
    -h /tmp/ccs-migration/PostgresSocket-${postgresql_version} \\
    --file=/tmp/ccs-migration/caldav${postgresql_version}.dump
sudo chmod 0600 /tmp/ccs-migration/caldav${postgresql_version}.dump
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ${prefix}/lib/postgresql${postgresql_version}/bin/pg_ctl -U caldav -D \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster_postgresql${postgresql_version}.pg \\
    -o \"-k /tmp/ccs-migration/PostgresSocket-${postgresql_version}\" \\
    -l /tmp/ccs-migration/postgresql${postgresql_version}_logfile.txt stop
sudo -u ${calendarserverUser} -g ${calendarserverGroup} \\
    ls -l /tmp/ccs-migration

# symlink `cluster.pg` to new db data
sudo -u ${calendarserverUser} -g ${calendarserverGroup} ln -s \\
    ./cluster_postgresql${postgresql_version}.pg \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Data/Database/cluster.pg

# port select the new PostgreSQL version
sudo port select --set postgresql postgresql${postgresql_version}
# edit by hand previously installed configuration file
sudo -u ${calendarserverUser} -g ${calendarserverGroup} sed -i \"\" \\
    's|postgresql${postgresql_previous_version}|postgresql${postgresql_version}|g' \\
    ${prefix}/var/${calendarserverUser}/Library/${calendarserverUser}/Config/calendarserver.plist

# clean up
sudo -u ${calendarserverUser} -g ${calendarserverGroup} rm -fr \\
    /tmp/ccs-migration

sudo port load calendar-contacts-server
"
}

livecheck.type      none
