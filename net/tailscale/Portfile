# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/tailscale/tailscale 1.8.7 v
go.package          tailscale.com
revision            1

homepage            https://tailscale.com

description         The easiest, most secure way to use WireGuard and 2FA.

long_description    {*}${description}. A secure network that just works. \
                    Zero config VPN. Installs on any device in minutes, \
                    manages firewall rules for you, and works from anywhere.

categories          net
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer
license             BSD
installs_libs       no

checksums           rmd160  e5c962b49da5fc733e8608444bce894edd13d157 \
                    sha256  afb4b4f6f53e6fc00e43546e9b4e82b9c1ac7bdef688247d7fb64a028b8db487 \
                    size    658120

github.tarball_from archive

set ts_build_sh     ${worksrcpath}/_build.sh
set ts_log_dir      ${prefix}/var/log/tailscale

startupitem.create  yes
startupitem.logfile ${ts_log_dir}/tailscaled.log
startupitem.executable \
                    ${prefix}/bin/tailscaled

# Allow Go to fetch deps at build time
build.env-delete    GO111MODULE=off GOPROXY=off

build.env-append    VERSION_LONG=${version} \
                    VERSION_SHORT=${version} \
                    VERSION_GIT_HASH=non-git

build.cmd           ${ts_build_sh}

destroot.keepdirs-append \
                    ${destroot}${ts_log_dir}

post-extract {
    set build_script [open "${ts_build_sh}" w+]
    puts ${build_script} "#!/bin/sh"
    puts ${build_script} "./build_dist.sh ./cmd/${name}"
    puts ${build_script} "./build_dist.sh ./cmd/${name}d"
    close ${build_script}

    file attributes ${ts_build_sh} -permissions ug+rx
}

patch {
    # Disable running the version detection script, which tries to use git.
    reinplace -E "s/^eval/# eval/g" ${worksrcpath}/build_dist.sh
}

destroot {
    xinstall -d ${destroot}${ts_log_dir}
    xinstall -m 0755 ${worksrcpath}/tailscale  ${destroot}${prefix}/bin/
    xinstall -m 0755 ${worksrcpath}/tailscaled ${destroot}${prefix}/bin/
}

notes "
After launching the Tailscale service for the first time using the steps below (port load), run:

    tailscale up
"
