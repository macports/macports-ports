# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/tailscale/tailscale 1.8.1 v
go.package          tailscale.com
revision            0

homepage            https://tailscale.com

description         The easiest, most secure way to use WireGuard and 2FA.

long_description    {*}${description}. A secure network that just works. \
                    Zero config VPN. Installs on any device in minutes, \
                    manages firewall rules for you, and works from anywhere.

categories          net
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer
license             BSD
installs_libs       no

checksums           rmd160  739d6a4a037d63504c85f7ac96601549b3e9c909 \
                    sha256  5d08e9c4cbb51da94951281003f3911933962dad0a85003e4b1852ac7b023bcd \
                    size    657015

github.tarball_from archive

set ts_build_dir    ${worksrcpath}/_build
set ts_log_dir      ${prefix}/var/log/tailscale

startupitem.create  yes
startupitem.logfile ${ts_log_dir}/tailscaled.log
startupitem.executable \
                    ${prefix}/bin/tailscaled

# Allow Go to fetch deps at build time
build.env-delete    GO111MODULE=off GOPROXY=off

build.pre_args      -ldflags \
                        '-X tailscale.com/version.Long=${version}   \
                         -X tailscale.com/version.Short=${version}  \
                         -X tailscale.com/version.GitCommit=""'     \
                    -o ${ts_build_dir}
build.args          ./cmd/tailscale{,d}

post-extract {
    file mkdir ${ts_build_dir}
}

destroot.keepdirs-append \
                    ${destroot}${ts_log_dir}

destroot {
    xinstall -d ${destroot}${ts_log_dir}
    xinstall -m 0755 ${ts_build_dir}/tailscale  ${destroot}${prefix}/bin/
    xinstall -m 0755 ${ts_build_dir}/tailscaled ${destroot}${prefix}/bin/
}
