# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           perl5 1.0

name                ipv6calc
version             1.0.0
revision            1
categories          net
license             GPL-2
maintainers         nomaintainer

description         A small utility to manipulate (not only) IPv6 addresses.
long_description    ipv6calc is a small utility written in programming languate C \
                    to manipulate (not only) IPv6 addresses. Intentions were \
                    convering a given IPv6 address into compressed format, \
                    convering a given IPv6 address into the same format like shown \
                    in /proc/net/if_inet6 and (because it was not difficulty) \
                    migrating the Perl program ip6_int into. Now only one utiltity \
                    is needed to do a lot.

platforms           darwin
homepage            http://www.deepspace6.net/projects/ipv6calc.html
master_sites        ftp://ftp.bieringer.de/pub/linux/IPv6/ipv6calc/

checksums           rmd160  44071e7718b1608ff1404f4597468f3f0029b226 \
                    sha256  74b0455e61834843bf8a5e7e0e0f39dd2b148114ff896d590eb2d826714594bd \
                    size    1342987

patchfiles          patch-man__Makefile.in-add-prefix-variable.diff \
                    patch-md5-Makefile.diff

post-patch {
    fs-traverse f ${worksrcpath}/tools {
        if {[string match "*.pl" $f]} {
            reinplace "s|/usr/bin/perl|${perl5.bin}|g" $f
        } elseif {[string match "*.sh" $f] || [string match "*.sh.in" $f]} {
            reinplace -q "s|perl|${perl5.bin}|g" $f
            reinplace -q "s|/usr|${prefix}|g" $f
        }
    }
}

perl5.branches      5.26
depends_run         port:perl${perl5.major}

configure.args      --disable-compiler-warning-to-error \
                    --enable-bundled-md5

livecheck.regex     {Latest version since last update of this page is ([0-9.]+)}
livecheck.type      regex
