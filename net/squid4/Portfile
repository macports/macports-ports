# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0
PortGroup cxx11 1.1

name            squid4
version         4.2
categories      net
platforms       darwin
license         GPL-2+
maintainers     {jmr @jmroot} openmaintainer
description     advanced proxy caching server for http, https, ftp, gopher
long_description    Squid is a high-performance proxy caching server for \
                web clients, supporting FTP, gopher, and HTTP data \
                objects. Unlike traditional caching software, Squid \
                handles all requests in a single, non-blocking, \
                I/O-driven process. Squid keeps meta data and \
                especially hot objects cached in RAM, caches DNS \
                lookups, supports non-blocking DNS lookups, and \
                implements negative caching of failed requests. \
                Squid 4.x is the latest release series, and needs a \
                C++11 compiler to build.

homepage        http://www.squid-cache.org/
master_sites    https://mirror.aarnet.edu.au/pub/squid/squid/ \
                https://www.mirrorservice.org/sites/ftp.squid-cache.org/pub/squid/ \
                http://ftp.ring.gr.jp/archives/net/www/squid/ \
                ftp://ftp.is.co.za/pub/squid/ \
                ftp://ftp1.cl.squid-cache.org/pub/squid/ \
                http://www.squid-cache.org/Versions/v4/ \
                ftp://ftp.squid-cache.org/pub/squid/

distname        squid-${version}
use_xz          yes
checksums       md5 2cf3f5f183d04322d798f98ea5ead43f \
                sha1 77fd6f06e6028780faf85ba7e7e9aef0922e9dc0 \
                rmd160 74764965cb2e403b390ace00f7b86721ee04033f

patchfiles      patch-cf.data.pre.diff \
                patch-compat_types.h.diff \
                patch-basic_pam_auth.cc.diff

platform darwin 10 {
    # ticket #37102, /usr/include/rpcsvc/yp_prot.h tries to redefine bool
    patchfiles-append snowleopard-bool.diff
}

depends_build   port:pkgconfig
depends_lib     port:expat port:zlib

conflicts       squid2 squid3

configure.args  --mandir=${prefix}/share/man \
                --sysconfdir=${prefix}/etc/squid \
                --datadir=${prefix}/share/squid \
                --localstatedir=${prefix}/var/squid \
                --libexecdir=${prefix}/libexec/squid \
                --with-swapdir=${prefix}/var/squid/cache \
                --with-pidfile=${prefix}/var/run/squid/squid.pid \
                --disable-strict-error-checking \
                --disable-loadable-modules \
                --disable-arch-native \
                --without-cppunit \
                --without-gnugss \
                --without-gnutls \
                --without-libxml2 \
                --without-mit-krb5 \
                --without-heimdal-krb5 \
                --without-nettle \
                --without-openssl \
                --enable-delay-pools \
                --enable-zph-qos \
                --enable-removal-policies \
                --enable-storeio=ufs,aufs,diskd,rock \
                --enable-log-daemon-helpers \
                --with-default-user=squid \
                --enable-auth \
                --enable-auth-basic \
                --enable-auth-digest \
                --enable-auth-negotiate="wrapper" \
                --enable-auth-ntlm
post-configure {
    if {[variant_isset universal]} {
        system -W ${worksrcpath} "ed - include/autoconf.h < ${filespath}/include_autoconf.h.ed && touch include/stamp-h1"
    }
}

startupitem.create      yes
startupitem.name        Squid
startupitem.netchange   yes
startupitem.executable  ${prefix}/sbin/squid -s --foreground

add_users       squid group=squid home=${prefix}/var/squid

notes "Before starting $name for the first time, create the cache directories\
with:
    ${prefix}/sbin/squid -s -z --foreground"

post-destroot   {
    xinstall -o squid -g squid -m 755 -d \
        ${destroot}${prefix}/var/run/squid ${destroot}${prefix}/var/squid \
        ${destroot}${prefix}/var/squid/cache ${destroot}${prefix}/var/squid/logs
    file delete -force ${destroot}${prefix}/etc/squid/squid.conf \
                       ${destroot}${prefix}/etc/squid/mime.conf \
                       ${destroot}${prefix}/etc/squid/cachemgr.conf \
                       ${destroot}${prefix}/etc/squid/errorpage.css
}
destroot.keepdirs   ${destroot}${prefix}/var/run/squid \
                ${destroot}${prefix}/var/squid/cache \
                ${destroot}${prefix}/var/squid/logs

post-activate {
    # Make sure initial conf files are present and setup correctly
    foreach f { squid.conf mime.conf cachemgr.conf errorpage.css } {
        if {![file exists ${prefix}/etc/squid/${f}]} {
            file copy ${prefix}/etc/squid/${f}.default \
                ${prefix}/etc/squid/${f}
        }
    }
}

variant openssl conflicts gnutls description "Enable SSL/TLS support using OpenSSL" {
    # This release does not work with LibreSSL.
    #depends_lib-append      path:lib/libssl.dylib:openssl
    depends_lib-append      port:openssl
    configure.args-delete   --without-openssl
    configure.args-append   --with-openssl=${prefix}
}

if {![variant_isset gnutls]} {
    default_variants    +openssl
}

variant gnutls conflicts openssl description "Enable SSL/TLS support using GnuTLS (experimental)" {
    depends_lib-append      port:gnutls
    configure.args-delete   --without-gnutls
}

variant ipfw_transparent description "Enable transparent proxy support using IPFW" {
    configure.args-append   --enable-ipfw-transparent
}

variant kerberos description "Enable MIT kerberos support" {
    depends_lib-append port:kerberos5
    configure.args-delete --enable-auth-negotiate="wrapper" \
                          --without-mit-krb5
    configure.args-append --enable-auth-negotiate
}

livecheck.type  regex
livecheck.url   http://www.squid-cache.org/Versions/v4/
livecheck.regex "squid-(\[0-9.\]+)-RELEASENOTES\\.html"
