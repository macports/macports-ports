--- rust/libnewsboat/src/utils.rs	2022-09-27 15:24:48.000000000 -0400
+++ rust/libnewsboat/src/utils.rs	2022-09-27 15:29:38.000000000 -0400
@@ -824,12 +824,15 @@
 // On FreeBSD, link with GNU libiconv; the iconv implementation in libc doesn't support //TRANSLIT
 // and WCHAR_T. This is also why we change the symbol names from "iconv" to "libiconv" below.
 #[cfg_attr(target_os = "freebsd", link(name = "iconv"))]
+#[cfg_attr(target_os = "macos", link(name = "iconv"))]
 #[cfg_attr(target_os = "openbsd", link(name = "iconv"))]
 extern "C" {
     #[cfg_attr(target_os = "freebsd", link_name = "libiconv_open")]
+    #[cfg_attr(target_os = "macos", link_name = "libiconv_open")]
     #[cfg_attr(target_os = "openbsd", link_name = "libiconv_open")]
     pub fn iconv_open(tocode: *const c_char, fromcode: *const c_char) -> iconv_t;
     #[cfg_attr(target_os = "freebsd", link_name = "libiconv")]
+    #[cfg_attr(target_os = "macos", link_name = "libiconv")]
     #[cfg_attr(target_os = "openbsd", link_name = "libiconv")]
     pub fn iconv(
         cd: iconv_t,
@@ -839,6 +842,7 @@
         outbytesleft: *mut size_t,
     ) -> size_t;
     #[cfg_attr(target_os = "freebsd", link_name = "libiconv_close")]
+    #[cfg_attr(target_os = "macos", link_name = "libiconv_close")]
     #[cfg_attr(target_os = "openbsd", link_name = "libiconv_close")]
     pub fn iconv_close(cd: iconv_t) -> c_int;
 }
