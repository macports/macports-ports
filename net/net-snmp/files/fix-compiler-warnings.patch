From a7c8c26c48c954a19bca5fdc6ba285396610d7aa Mon Sep 17 00:00:00 2001
From: Mitchell Blank Jr <mitch@bodyfour.com>
Date: Sun, 13 Dec 2020 03:23:02 +0000
Subject: [PATCH] Fix compiler warnings generated by configure scripts

Specifically, this is meant to reduce risk of issues with Xcode 12
which has made -Werror,-Wimplicit-function-declaration a default.

Normally this doesn't bite "real" code since such a warning would be
visible for a long time with most compilers.  However, inside of
configure scripts these sorts of warnings just end up in config.log
and usually get ignored.  Now that they produce errors it means that
configure tests that *should* pass suddenly fail, causing very
strange failures later on.

This can be as simple as calling "exit(0);" inside of a test C
program without doing "#include <stdlib.h>" first!

I also fixed an implicit-int-return warning since that is another
C behavior that was deprecated long ago and future compilers might
consider that an error.

[ bvanassche: reran autoconf ]
---
 configure                       | 6 ++++--
 configure.d/config_os_functions | 4 ++--
 configure.d/config_os_misc4     | 2 ++
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/configure b/configure
index f6595e794c1f86a4898ccc33c59af5d3066478ec..a48b059a6ab380c6758420679a78071b492d792c 100755
--- configure.orig
+++ configure
@@ -28235,12 +28235,12 @@ else
 #ifdef HAVE_SYS_FS_TYPES_H
 #include <sys/fs_types.h>
 #endif
-main ()
+int main ()
 {
 struct fs_data fsd;
 /* Ultrix's statfs returns 1 for success,
    0 for not mounted, -1 for failure.  */
-exit (statfs (".", &fsd) != 1);
+return statfs (".", &fsd) != 1;
 }
 _ACEOF
 if ac_fn_c_try_run "$LINENO"; then :
@@ -31885,6 +31885,7 @@ else
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
+#include <arpa/inet.h> /* inet_ntoa() */
 
 int
 main ()
@@ -31957,6 +31958,7 @@ else
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
+#include <arpa/inet.h> /* inet_ntoa() */
 
 int
 main ()
diff --git a/configure.d/config_os_functions b/configure.d/config_os_functions
index 3af9fa10b40c42b4a2e499e85f86ef4017644c2e..86ea64311dfc0c448026b900dbbb0a7e50477865 100644
--- configure.d/config_os_functions.orig
+++ configure.d/config_os_functions
@@ -212,12 +212,12 @@ AC_CACHE_VAL(
 #ifdef HAVE_SYS_FS_TYPES_H
 #include <sys/fs_types.h>
 #endif
-main ()
+int main ()
 {
 struct fs_data fsd;
 /* Ultrix's statfs returns 1 for success,
    0 for not mounted, -1 for failure.  */
-exit (statfs (".", &fsd) != 1);
+return statfs (".", &fsd) != 1;
 }]])],
     [fu_cv_sys_stat_fs_data=yes],
     [fu_cv_sys_stat_fs_data=no],
diff --git a/configure.d/config_os_misc4 b/configure.d/config_os_misc4
index 6f23c8e9bc76f81ddecff7440341fefabbf18977..b6864d97b8ad692a4e44b98a5a6fece0b5e656e7 100644
--- configure.d/config_os_misc4.orig
+++ configure.d/config_os_misc4
@@ -334,6 +334,7 @@ AC_CACHE_CHECK([for IP_PKTINFO ],
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
+#include <arpa/inet.h> /* inet_ntoa() */
 ], [
     void *buf;
     int len;
@@ -383,6 +384,7 @@ AC_CACHE_CHECK([for IP_RECVDSTADDR ],
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <netinet/in.h>
+#include <arpa/inet.h> /* inet_ntoa() */
 ], [
     void *buf;
     int len;
