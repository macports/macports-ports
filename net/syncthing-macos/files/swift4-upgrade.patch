diff --git syncthing.xcodeproj/project.pbxproj syncthing.xcodeproj/project.pbxproj
index 426d594..ee7c276 100644
--- syncthing.xcodeproj/project.pbxproj
+++ syncthing.xcodeproj/project.pbxproj
@@ -640,7 +640,7 @@
 				SEPARATE_STRIP = NO;
 				SWIFT_OBJC_BRIDGING_HEADER = "syncthing/syncthing-Bridging-Header.h";
 				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
-				SWIFT_VERSION = 3.0;
+				SWIFT_VERSION = 4.0;
 				VALID_ARCHS = x86_64;
 			};
 			name = Debug;
@@ -669,7 +669,7 @@
 				PROVISIONING_PROFILE_SPECIFIER = "";
 				SEPARATE_STRIP = YES;
 				SWIFT_OBJC_BRIDGING_HEADER = "syncthing/syncthing-Bridging-Header.h";
-				SWIFT_VERSION = 3.0;
+				SWIFT_VERSION = 4.0;
 				VALID_ARCHS = x86_64;
 			};
 			name = Release;
diff --git syncthing/DaemonProcess.swift syncthing/DaemonProcess.swift
index da88642..da29cb6 100644
--- syncthing/DaemonProcess.swift
+++ syncthing/DaemonProcess.swift
@@ -23,25 +23,25 @@ let MaxKeepLogLines = 200
     private var queue = DispatchQueue(label: "DaemonProcess")
     private var shouldTerminate = false
 
-    init(path: String, delegate: DaemonProcessDelegate) {
+    @objc init(path: String, delegate: DaemonProcessDelegate) {
         self.path = path
         self.delegate = delegate
     }
 
-    func launch() {
+    @objc func launch() {
         queue.async {
             self.launchSync()
         }
     }
 
-    func terminate() {
+    @objc func terminate() {
         queue.async {
             self.shouldTerminate = true
             self.process?.terminate()
         }
     }
 
-    func restart() {
+    @objc func restart() {
         queue.async {
             // Syncthing should exit cleanly when sent the interrupt signal. It will then be restarted.
             self.process?.interrupt()
