--- src/iperf_util.c	2017-06-20 17:04:30.000000000 -0500
+++ src/iperf_util.c	2017-06-26 13:30:16.000000000 -0500
@@ -338,6 +338,75 @@
     return features;
 }
 
+#ifdef __APPLE__
+#include <Availability.h>
+#if __MAC_OS_X_VERSION_MIN_REQUIRED <= 1060
+
+static const int line_size = 128;
+
+static ssize_t
+getdelim (char **lineptr, size_t *n, int delim, FILE *stream);
+
+static ssize_t
+getline (char **lineptr, size_t *n, FILE *stream);
+
+static ssize_t
+getdelim (char **lineptr, size_t *n, int delim, FILE *stream)
+{
+    int indx = 0;
+    int c;
+
+    /* Sanity checks.  */
+    if (lineptr == NULL || n == NULL || stream == NULL)
+        return -1;
+
+    /* Allocate the line the first time.  */
+    if (*lineptr == NULL)
+    {
+        *lineptr = malloc (line_size);
+        if (*lineptr == NULL)
+            return -1;
+        *n = line_size;
+    }
+
+    /* Clear the line.  */
+    memset (*lineptr, '\0', *n);
+
+    while ((c = getc (stream)) != EOF)
+    {
+        /* Check if more memory is needed.  */
+        if (indx >= *n)
+        {
+            *lineptr = realloc (*lineptr, *n + line_size);
+            if (*lineptr == NULL)
+            {
+              return -1;
+            }
+            /* Clear the rest of the line.  */
+            memset(*lineptr + *n, '\0', line_size);
+            *n += line_size;
+        }
+
+        /* Push the result in the line.  */
+        (*lineptr)[indx++] = c;
+
+        /* Bail out.  */
+        if (c == delim)
+        {
+            break;
+        }
+    }
+    return (c == EOF) ? -1 : indx;
+}
+
+static ssize_t
+getline (char **lineptr, size_t *n, FILE *stream)
+{
+    return getdelim (lineptr, n, '\n', stream);
+}
+#endif
+#endif
+
 /* Helper routine for building cJSON objects in a printf-like manner.
 **
 ** Sample call:
