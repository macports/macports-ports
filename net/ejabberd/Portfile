PortSystem          1.0

name                ejabberd
version             18.12.1
categories          net
platforms           darwin
license             GPL-2
maintainers         {ciserlohn @ci42}
description         ejabberd is an XMPP application server.
long_description    ${description} ejabberd stands for "Erlang Jabber Daemon"

homepage            http://www.process-one.net/en/ejabberd/
master_sites        http://www.process-one.net/downloads/ejabberd/${version}/

checksums           rmd160  e5a0b2fe95f41944ecf3e76b2e8fe23713b4edf3 \
                    sha256  fd35af176811a7285c3fc436921872c34a15fc0fb45fa3db975801c7be5c1f57 \
                    size    1821207

extract.suffix      .tgz

build.env-append    CC=${configure.cc} \
                    CXX=${configure.cxx} \
                    CPP=${configure.cpp} \
                    CFLAGS=${configure.cflags} \
                    CXXFLAGS=${configure.cxxflags} \
                    LDFLAGS=${configure.ldflags}

depends_build       port:git

depends_lib         port:erlang \
                    port:expat \
                    port:libyaml \
                    path:lib/libssl.dylib:openssl \
                    port:libiconv \
                    port:zlib

# erlang is not universal
universal_variant   no

configure.args      --with-expat=${prefix} \
                    --with-zlib=${prefix} \
                    --with-openssl=${prefix}

# All ejabberd configuration files.
set conf_files      {ejabberd.yml ejabberdctl.cfg inetrc}

destroot.keepdirs   ${destroot}${prefix}/var/log/ejabberd/

set etc ${prefix}/etc/ejabberd
post-destroot {
    # Create sample configuration files so they don't get overwritten by an
    # update.
    foreach file ${conf_files} {
        file rename ${destroot}${etc}/${file} ${destroot}${etc}/${file}.sample
    }

}

notes "
Before running ${name} for the first time, you must copy the sample\
configuration files:

cd ${etc}/
"
foreach file ${conf_files} {
    notes-append "cp ${file}.sample ${file}"
}

livecheck.type      regex
livecheck.url       ${homepage}release_notes
livecheck.regex     "${name}.* (\\d+(?:\\.\\d+)*)"
