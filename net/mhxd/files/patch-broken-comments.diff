--- src/hx/files.c.orig	2004-07-26 18:21:28.000000000 +0800
+++ src/hx/files.c	2022-10-25 04:34:57.000000000 +0800
@@ -984,8 +984,8 @@
 					if (xfers[i]->ref == ref) {
 						xfers[i]->queue_pos = pos;
 						hx_printf_prefix(htlc, 0, INFOPREFIX, "queue position for '%s': %d\n", xfers[i]->path, pos);
-						//if (pos == 0 && !xfers[i]->gone)
-						//	xfer_ready_write(xfers[i]);
+						/* if (pos == 0 && !xfers[i]->gone) */
+						/* xfer_ready_write(xfers[i]); */
 					}
 				}
 				break;

--- src/hxd/htxf.c.orig	2004-07-26 18:21:28.000000000 +0800
+++ src/hxd/htxf.c	2022-10-25 04:37:19.000000000 +0800
@@ -797,7 +797,7 @@
 			return 1;
 		}
 		if (fd_lock_write(f) == -1) {
-#if !defined(__OpenBSD__)//OpenBSD has different errno references... phew.
+#if !defined(__OpenBSD__) /* OpenBSD has different errno references... phew. */
 			if (errno != ENOTSUP) {
 #else
 			if (errno != EOPNOTSUPP) {
@@ -859,13 +859,13 @@
 	if (rsrc_size > rsrc_pos) {
 		if (htxf->gone)
 			return 1;
-		f = resource_open(path, /*O_WRONLY*/O_RDWR|O_CREAT, hxd_cfg.permissions.files);
+		f = resource_open(path, /*O_WRONLY*/ O_RDWR|O_CREAT, hxd_cfg.permissions.files);
 		if (f < 0) {
 			hxd_log("%s:%d: %s (%d)", __FILE__, __LINE__, strerror(errno), errno);
 			return -1;
 		}
 		if (fd_lock_write(f) == -1) {
-#if !defined(__OpenBSD__)//OpenBSD has different errno references... phew.
+#if !defined(__OpenBSD__) /* OpenBSD has different errno references... phew. */
 			if (errno != ENOTSUP) {
 #else
 			if (errno != EOPNOTSUPP) {

--- src/hxd/rcv.c.orig	2004-07-26 18:21:28.000000000 +0800
+++ src/hxd/rcv.c	2022-10-25 04:48:29.000000000 +0800
@@ -410,7 +410,7 @@
 				htlc->rcv = rcv_file_put;
 			break;
 		case HTLC_HDR_KILLDOWNLOAD:
-			//htlc->rcv = rcv_killdownload;
+			/* htlc->rcv = rcv_killdownload; */
 			break;
 		case HTLC_HDR_FILE_GETINFO:
 			if (htlc->access_extra.file_getinfo)

--- src/common/hotline.h.orig	2006-09-20 22:48:49.000000000 +0800
+++ src/common/hotline.h	2023-04-21 04:30:39.000000000 +0800
@@ -7,11 +7,11 @@
 #include <sys/types.h>
 
 #ifndef PACKED
-//#ifdef __GNUC__
-//#define PACKED __attribute__((__packed__))
-//#else
+/* #ifdef __GNUC__ */
+/* #define PACKED __attribute__((__packed__)) */
+/* #else */
 #define PACKED
-//#endif
+/* #endif */
 #endif
 
 #if defined(__GNUC__) && !defined(__STRICT_ANSI__)

