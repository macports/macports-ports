# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/traefik/traefik 2.5.7 v
github.tarball_from archive
revision            0

categories          net security devel
maintainers         {judaew @judaew} openmaintainer
license             MIT

description         The Cloud Native Application Proxy
long_description    \
    Traefik (pronounced traffic) is a modern HTTP reverse proxy and load \
    balancer that makes deploying microservices easy. Traefik integrates with \
    your existing infrastructure components (Docker, Swarm mode, Kubernetes, \
    Marathon, Consul, Etcd, Rancher, Amazon ECS, ...) and configures itself \
    automatically and dynamically. Pointing Traefik at your orchestrator \
    should be the only configuration step you need.

checksums           rmd160  448dd9b5051497cadb0a8391cab13525931522bb \
                    sha256  8d817c7f77722bcfdee74eb1e8f4a1f5a421c6d9885930d8cd63f2e0a588f317 \
                    size    8554897

depends_build-append \
                    port:go-bindata

set build_sh        ${worksrcpath}/build.sh

post-extract {
    set bfile [open ${build_sh} w]
    puts ${bfile} "#!/bin/sh"
    puts ${bfile} "${go.bin} generate && ${go.bin} build -ldflags '-X ${go.package}/v2/pkg/version.Version=${version}' ./cmd/${name}"
    close ${bfile}

    file attributes ${build_sh} -permissions 0755
}

# FIXME: This port currently can't be built without allowing go mod to fetch
build.env-delete    GOPROXY=off GO111MODULE=off

build.cmd           ${build_sh}

destroot {
    xinstall -m 0755 ${worksrcpath}/${name} ${destroot}${prefix}/bin/

    xinstall -d ${destroot}${prefix}/share/examples/${name}
    xinstall -m 0644 -W ${worksrcpath} \
        traefik.sample.toml traefik.sample.yml \
        ${destroot}${prefix}/share/examples/${name}

    xinstall -d ${destroot}${prefix}/etc/${name}
    destroot.keepdirs ${destroot}${prefix}/etc/${name}
}

startupitem.create  yes
startupitem.start   \
    "${prefix}/bin/${name} --configfile=${prefix}/etc/${name}/traefik.toml"
startupitem.stop    "kill \$(cat ${prefix}/var/run/${name}.pid) "
startupitem.pidfile auto ${prefix}/var/run/${name}.pid

github.livecheck.regex  {([^"r-]+)}

notes "
A config must be created in
    ${prefix}/etc/traefik/traefik.toml

An example config is
    ${prefix}/share/examples/traefik/traefik.toml

Launch ${name} as daemon with
    sudo port load ${name}
or
    sudo launchctl load -w \\
        /Library/LaunchDaemons/org.macports.traefik.plist
"
