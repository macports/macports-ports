# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                ldns
subport             ldns-tools {}
subport             drill {}

version             1.7.1
revision            0
categories          net devel
platforms           darwin
license             BSD
maintainers         nomaintainer

if {${subport} eq ${name}} {
    description         DNS library in C
    long_description    ldns is a library with the aim of simplifying DNS \
                        programming in C. It is heavily based upon the Net::DNS module from \
                        Perl.
} else {
    PortGroup           obsolete 1.0
    replaced_by         ldns
    # Remove after 2020-09-09
}

homepage            https://www.nlnetlabs.nl/projects/ldns/about/
master_sites        https://www.nlnetlabs.nl/downloads/ldns/

checksums           rmd160  40e7eed3f76076f581b388563cbecb440c1a7753 \
                    sha256  8ac84c16bdca60e710eea75782356f3ac3b55680d40e1530d7cea474ac208229 \
                    size    1244394

depends_build       bin:glibtool:libtool
depends_lib         path:lib/libssl.dylib:openssl port:libpcap

configure.args      --mandir=${prefix}/share/man --with-ssl=${prefix} --with-examples --with-drill
# We pass in our own SDK flags if necessary, and allowing configure
# to try to autodetect can break things.
# https://trac.macports.org/ticket/58998
configure.args-append	--with-xcode-sdk=no
configure.cppflags  -I${worksrcpath}/include
build.type          gnu

pre-destroot {
    reinplace "s,defined(@\$also),@\$also," ${worksrcpath}/doc/doxyparse.pl
}

post-destroot {
    # Install pkg-config files not installed by the Makefile
    reinplace "s/-arch \[^ \]*//g" ${worksrcpath}/packaging/libldns.pc
    file mkdir ${destroot}${prefix}/lib/pkgconfig/
    file copy ${worksrcpath}/packaging/libldns.pc \
        ${destroot}${prefix}/lib/pkgconfig/libldns.pc
}

livecheck.type      regex
livecheck.url       ${homepage}
livecheck.regex     ">LDNS (\\d+(?:\\.\\d+)*)</a>"
