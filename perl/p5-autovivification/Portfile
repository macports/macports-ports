# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           perl5 1.0

perl5.branches      5.24
perl5.setup         autovivification 0.16 ../by-authors/id/V/VP/VPIT

platforms           darwin
maintainers         nomaintainer
license             {Artistic-1 GPL}

description         Lexically disable autovivification

long_description    When an undefined variable is dereferenced, it gets silently upgraded to \
                    an array or hash reference (depending of the type of the dereferencing). \
                    This behaviour is called *autovivification* and usually does what you    \
                    mean (e.g. when you store a value) but it may be unnatural or surprising \
                    because your variables gets populated behind your back. This is          \
                    especially true when several levels of dereferencing are involved, in    \
                    which case all levels are vivified up to the last, or when it happens in \
                    intuitively read-only constructs like 'exists'.                          \
                                                                                             \
                    This pragma lets you disable autovivification for some constructs and    \
                    optionally throws a warning or an error when it would have happened.

checksums           rmd160  1990d65f065ddc93619b48dc6b2946a4e6fe4982 \
                    sha256  814d0ef1fc6f01dbd0b85ffbec474b66d581c3a3ceb537e5ca67dbe9129f4290
