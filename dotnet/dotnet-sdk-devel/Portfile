# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                dotnet-sdk-devel
set main_version    10.0.100
# See patch version in https://dotnet.microsoft.com/download/dotnet/10.0
set patch_version   rc.1.25451.107
version             ${main_version}-${patch_version}
revision            0
categories          dotnet devel
license             MIT
maintainers         {@tsabirgaliev gmail.com:tair.sabirgaliev} \
                    {@judaew judaew} openmaintainer

description         Core functionality needed to create .NET Core projects, that is \
                    shared between Visual Studio and CLI

long_description    .NET is a free, cross-platform, open source developer platform \
                    for building many different types of applications. \
                    \
                    With .NET, you can use multiple languages, editors, and libraries \
                    to build for web, mobile, desktop, games, and IoT.

homepage            https://dotnet.microsoft.com/
platforms           {darwin any} {darwin >= 21}
supported_archs     x86_64 arm64

switch ${build_arch} {
    x86_64 {
        set dotnet_rid osx-x64
        distname            dotnet-sdk-${version}-osx-x64
        checksums           rmd160  ba0447f35dd2a62eb3df95f3baccadcd6a105fe2 \
                            sha256  472c3ce9b552eff8b0e4a88fd8bc2d10e292256ca73eb73fcdeb6e5c3fb80fa2 \
                            size    246473847
    }
    arm64 {
        set dotnet_rid osx-arm64
        distname            dotnet-sdk-${version}-osx-arm64
        checksums           rmd160  aacfb3592ab17c91f9bd7ca8ff582b050614bd65 \
                            sha256  36b4dd7d167b001db8f1850c212298df6acc7619317d6211a2e594c6ca556b91 \
                            size    238525442
    }
    default {
        known_fail yes
        pre-fetch {
            ui_error "${subport} @ ${version} only supported for architectures ${supported_archs}"
            return -code error "Unsupported architecture: ${build_arch}"
        }
    }
}

master_sites        https://builds.dotnet.microsoft.com/dotnet/Sdk/${version}/

worksrcdir          ${name}-${version}
extract.mkdir       yes

use_configure       no

depends_run         port:dotnet-cli \
                    port:dotnet-runtime-devel \
                    port:aspnetcore-runtime-devel

build {}

destroot {
    set dotnet_home ${prefix}/share/dotnet
    set dotnet_runtime_version 10.0.0-${patch_version}

    # ASP.NET Core Targeting Pack
    set aspnet_target_dir /packs/Microsoft.AspNetCore.App.Ref
    set aspnet_target_version 10.0.0-${patch_version}
    xinstall -d ${destroot}${dotnet_home}${aspnet_target_dir}
    move ${worksrcpath}${aspnet_target_dir}/${aspnet_target_version} ${destroot}${dotnet_home}${aspnet_target_dir}

    # .NET AppHost Pack
    set dotnet_apphost_dir /packs/Microsoft.NETCore.App.Host.${dotnet_rid}
    set dotnet_apphost_version ${dotnet_runtime_version}
    xinstall -d ${destroot}${dotnet_home}${dotnet_apphost_dir}
    move ${worksrcpath}${dotnet_apphost_dir}/${dotnet_apphost_version} ${destroot}${dotnet_home}${dotnet_apphost_dir}

    # .NET Targeting Pack
    set dotnet_target_dir /packs/Microsoft.NETCore.App.Ref
    set dotnet_target_version ${dotnet_runtime_version}
    xinstall -d ${destroot}${dotnet_home}${dotnet_target_dir}
    move ${worksrcpath}${dotnet_target_dir}/${dotnet_target_version} ${destroot}${dotnet_home}${dotnet_target_dir}

    # SDK
    xinstall -d ${destroot}${dotnet_home}/sdk
    move ${worksrcpath}/sdk/${version} ${destroot}${dotnet_home}/sdk

    # SDK-Manifests
    set dotnet_manifest_version 10.0.100
    xinstall -d ${destroot}${dotnet_home}/sdk-manifests
    move ${worksrcpath}/sdk-manifests/${dotnet_manifest_version} ${destroot}${dotnet_home}/sdk-manifests

    # Templates
    set dotnet_templates_version 10.0.0-${patch_version}
    xinstall -d ${destroot}${dotnet_home}/templates
    move ${worksrcpath}/templates/${dotnet_templates_version} ${destroot}${dotnet_home}/templates
}

livecheck.version   [join [lrange [split ${patch_version} .] 0 0] .]
livecheck.type      regex
livecheck.url       https://dotnet.microsoft.com/download/dotnet/10.0
livecheck.regex     "SDK ${main_version}-(\\d)"
