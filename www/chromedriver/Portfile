# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                chromedriver
version             100.0.4896.60
categories          www
platforms           darwin
maintainers         {@catap korins.ky:kirill} openmaintainer
license             Apache-2
supported_archs     arm64 x86_64

description         ChromeDriver - WebDriver for Chrome

long_description    WebDriver is an open source tool for automated testing of \
                    webapps across many browsers. It provides capabilities for \
                    navigating to web pages, user input, JavaScript execution, \
                    and more.

homepage            https://sites.google.com/chromium.org/driver/
master_sites        https://chromedriver.storage.googleapis.com/${version}/

dist_subdir         ${subport}/${version}

platform arm {
    distname        ${name}_mac64_m1
}
platform i386 {
    distname        ${name}_mac64
}

use_zip             yes

distfiles           ${name}_mac64${extract.suffix} \
                    ${name}_mac64_m1${extract.suffix}

# most recent versions via
# https://sites.google.com/chromium.org/driver/downloads

checksums           chromedriver_mac64.zip \
                    rmd160  8f5012f160031d2ccf285ea4b2f322e55e9e84ce \
                    sha256  492bce3b556419b3fea9adbc2699b363445cdd5a74ba902cc579cd5b1c9c1160 \
                    size    8401239 \
                    chromedriver_mac64_m1.zip \
                    rmd160  351062c93f9db8fbe19ce0b400d70271a757f920 \
                    sha256  1e0deca673043bca97b88f70b1c2b6cd29c180ec26df82b6c63107831fd0c3ed \
                    size    7662503

set major_version   [lindex [split ${version} .] 0]

extract.mkdir       yes
extract.only        ${distname}

use_configure       no

build {}

destroot {
    copy \
        ${worksrcpath}/${name} \
        ${destroot}${prefix}/bin/${subport}
}

# use these to specify python versions, python3 required
# use ${prefix}/var/macports/sources/rsync.macports.org/macports/release/tarballs/ports/_resources/port1.0/group/python-1.0.tcl
set python_version  39
set python_branch   [string index ${python_version} 0].[string range ${python_version} 1 end]
set python_prefix   ${frameworks_dir}/Python.framework/Versions/${python_branch}
set python_bin      ${python_prefix}/bin/python${python_branch}

variant undetected \
    description {Undetected chromedriver.} {
    PortGroup       active_variants 1.1

    depends_lib-append \
                    port:python${python_version} \
                    port:py${python_version}-undetected-chromedriver

    require_active_variants \
                    py${python_version}-undetected-chromedriver \
                    port_chromedriver_binary

    post-patch {
        copy \
            ${worksrcpath}/${name} \
            ${worksrcpath}/${subport}-${major_version}

        # patch the chromedriver binary through undetected_chromedriver.Patcher
        system -W ${worksrcpath} \
            "${python_bin} <<PATCH_CHROMEDRIVER_PY
from undetected_chromedriver import Patcher

patcher = Patcher(executable_path='${worksrcpath}/${name}')
assert patcher.patch(), \\
    \"Binary '${worksrcpath}/${name}' is not patched.\"
PATCH_CHROMEDRIVER_PY
"
        move \
            ${worksrcpath}/${name} \
            ${worksrcpath}/${subport}-undetected
        ln -s \
            ${prefix}/bin/${subport}-undetected \
            ${worksrcpath}/${name}
    }

    post-destroot {
        copy \
            ${worksrcpath}/${subport}-${major_version} \
            ${destroot}${prefix}/bin
        ln -s \
            ${prefix}/bin/${subport}-${major_version} \
            ${destroot}${prefix}/bin/${subport}-original
        copy \
            ${worksrcpath}/${subport}-undetected \
            ${destroot}${prefix}/bin
    }

    if {${name} eq ${subport}} {
        set executable_path ""
    } else {
        set executable_path "executable_path='${prefix}/bin/${subport}'"
    }
    notes-append \
        "The ${subport} binary has been patched to mitigate detection.\
The original ${name} binary has been moved to ${subport}-original.\
Use ${subport} with the port

    py${python_version}-undetected-chromedriver +port_chromedriver_binary

(with your preferred Python version) and the Python code:

    import undetected_chromedriver as uc
    driver = uc.Chrome(${executable_path})

To use separate chromedriver binaries with distinct signatures, use:

    driver = uc.Chrome(executable_path='${prefix}/bin/${subport}-original', executable_path_mkdtemp=True)
    driver.delete_executable_path_mkdtemp()
"
}

subport ${name}-97 {
    PortGroup       obsolete 1.0

    version         97.0.4692.71
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

subport ${name}-96 {
    PortGroup       obsolete 1.0

    version         96.0.4664.45
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

subport ${name}-86 {
    PortGroup       obsolete 1.0

    version         86.0.4240.22
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

subport ${name}-85 {
    PortGroup       obsolete 1.0

    version         85.0.4183.87
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

subport ${name}-84 {
    PortGroup       obsolete 1.0

    version         84.0.4147.30
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

subport ${name}-83 {
    PortGroup       obsolete 1.0

    version         83.0.4103.39
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

subport ${name}-81 {
    PortGroup       obsolete 1.0

    version         81.0.4044.20
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

subport ${name}-80 {
    PortGroup       obsolete 1.0

    version         80.0.3987.106
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

subport ${name}-79 {
    PortGroup       obsolete 1.0

    version         79.0.3945.36
    # Obsolete Date: 2023-01-01
    replaced_by     chromedriver
}

if {$subport eq $name} {
    livecheck.type  regex
    livecheck.url   http://chromedriver.storage.googleapis.com/LATEST_RELEASE
    livecheck.regex {^(.*)$}
}
