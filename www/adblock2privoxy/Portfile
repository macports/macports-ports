# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           haskell_stack 1.0

name                adblock2privoxy
version             2.0.1
revision            1
categories          www haskell
maintainers         @essandess
license             GPL-3
platforms           macosx
homepage            https://github.com/essandess/adblock2privoxy

description         Convert adblock config files to privoxy format
long_description    ${description}. \
            AdBlock Plus browser plugin has great block list files\
            provided by big community, but it is client software and\
            cannot work on a server as proxy.  Privoxy proxy has good\
            potential to block ads at server side, but it experiences\
            acute shortage of updated block lists.  This software\
            converts adblock lists to privoxy config files format.\
            Almost all adblock features are supported including\
            block/unblock requests (on privoxy) all syntax features\
            are supported except for regex templates matching host\
            name hide/unhide page elements (via CSS) all syntax\
            features are supported all block request options except\
            for outdated ones: Supported: script, image, stylesheet,\
            object, xmlhttprequest, object-subrequest, subdocument,\
            document, elemhide, other, popup, third-party, domain=...,\
            match-case, donottrack.

master_sites        https://hackage.haskell.org/package/${name}-${version}

checksums           rmd160  301ba12cb3c624eaca766400972818b79b52adce \
                    sha256  064f501995eef83146ed49ccf83856faee8ab7e6e1fd70013d8bb1e12a3a1411 \
                    size    42119

depends_run-append \
                    port:nginx \
                    port:privoxy

variant initialize_always \
    description {Always initialize all configuration files. Intended\
        for development and troubleshooting only. Working deployments\
        must disable this variant to prevent configuration files\
        being overwritten at the next upgrade. Existing configuration\
        files are not overwritten by default.} {
    ui_warn \
        "
\tAll configuration files will be initialized because
\tthe variant +initialize_always is set. Please disable
\tthis variant for working deployments.
"
}

# relative paths to ${prefix}
set ab2p_datadir    share/${name}

# Fix for cabal data-files hardcoded path in binary
# See:
# https://github.com/commercialhaskell/stack/issues/848
# https://github.com/commercialhaskell/stack/issues/4857
# https://github.com/haskell/cabal/issues/462
# https://github.com/haskell/cabal/issues/3586
post-extract {
    xinstall -m 0644 -W ${worksrcpath} \
        ${filespath}/Paths_${name}.hs ./src

    reinplace "s|@PREFIX@|${prefix}|g" \
        ${worksrcpath}/src/Paths_${name}.hs
}

post-destroot {
    xinstall -m 0755 -d \
        ${destroot}${prefix}/share/${name}/templates \
        ${destroot}${prefix}/etc/${name} \
        ${destroot}${prefix}/etc/${name}/privoxy \
        ${destroot}${prefix}/etc/${name}/css

    # cabal's data-files datadir: ${name}_datadir from Paths_${name}.hs
    fs-traverse f ${worksrcpath}/.stack-work {
        if { [string match "ab2p.system.*" [file tail ${f}]] } {
            xinstall -m 0644 ${f} \
                ${destroot}${prefix}/share/${name}/templates
        }
    }

    xinstall -m 0644 -W ${filespath} \
        nginx.conf \
        ${destroot}${prefix}/etc/${name}/nginx.conf.macports
    xinstall -m 0644 -W ${filespath} \
        default.html \
        ${destroot}${prefix}/etc/${name}/css/default.html.macports
    reinplace "s|@PREFIX@|${prefix}|g" \
        ${destroot}${prefix}/etc/${name}/nginx.conf.macports
}

startupitem.create  yes
startupitems \
    name            ${name} \
    start           "( /bin/test -f \"\${prefix}/etc/adblock2privoxy/privoxy/ab2p.task\" \\
\t&& \"\${prefix}/bin/adblock2privoxy\" -t \"\${prefix}/etc/adblock2privoxy/privoxy/ab2p.task\" \\
\t|| \"\${prefix}/bin/adblock2privoxy\" -p \"\${prefix}/etc/adblock2privoxy/privoxy\" \\
\t\t-w \"\${prefix}/etc/adblock2privoxy/css\" \\
\t\t-d 127.0.0.1:8119 \\
\t\thttps://easylist.to/easylist/easyprivacy.txt \\
\t\thttps://easylist.to/easylist/easylist.txt \\
\t\thttps://easylist.to/easylist/fanboy-annoyance.txt \\
\t\thttps://easylist.to/easylist/fanboy-social.txt \\
\t\thttps://easylist-downloads.adblockplus.org/antiadblockfilters.txt \\
\t\thttps://easylist-downloads.adblockplus.org/malwaredomains_full.txt \\
\t\thttps://raw.githubusercontent.com/ryanbr/fanboy-adblock/master/fanboy-antifacebook.txt \\
\t\thttps://raw.githubusercontent.com/Dawsey21/Lists/master/adblock-list.txt \\
\t) && \"\${prefix}/bin/port\" reload privoxy" \
    stop            "/usr/bin/kill -SIGUSR1 `/usr/bin/pgrep -u root ${name}` 2>/dev/null" \
    pidfile         none

startupitems-append \
    name            ${name}-nginx \
    init            "pidfile=\"\${prefix}/var/run/nginx/nginx-adblock2privoxy.pid\"" \
    start           "\"\${prefix}/sbin/nginx\" \\
\t\t-c \\
\t\t\"\${prefix}/etc/${name}/nginx.conf\" \\
\t\t-g \\
\t\t\"daemon off;\"" \
    stop            "if \[ -f \${pidfile} \]; then
\t\t/usr/bin/kill `cat \${pidfile}` \\
\t\t\t&& /bin/rm -f \${pidfile} ;
\telse
\t\t/usr/bin/kill -SIGUSR1 `/usr/bin/pgrep -u root nginx` 2>/dev/null ;
\tfi"

post-activate {
    # org.macports.adblock2privoxy
    reinplace \
        "s|^<key>ProgramArguments</key>|<key>StartCalendarInterval</key>\\
	<array>\\
		<dict>\\
			<key>Weekday</key>\\
			<integer>7</integer>\\
			<key>Hour</key>\\
			<integer>1</integer>\\
			<key>Minute</key>\\
			<integer>30</integer>\\
		</dict>\\
	</array>\\
&|" \
        ${prefix}/etc/${startupitem.location}/org.macports.${name}/org.macports.${name}.plist

    foreach f [list \
        ${prefix}/etc/${name}/nginx.conf \
        ${prefix}/etc/${name}/css/default.html \
        ] {
        if { [variant_isset "initialize_always"]
             && [file exists ${f}]
            } {
            delete ${f}.previous
            move \
                ${f} \
                ${f}.previous
        }
        if { [variant_isset "initialize_always"]
             || ![file exists ${f}]
            } {
            if { [file isfile ${f}.macports] } {
                xinstall -m 0644 \
                    ${f}.macports \
                    ${f}
            }
        }
    }
}

notes "
Example production run:

adblock2privoxy -p ${prefix}/etc/adblock2privoxy/privoxy -w ${prefix}/etc/adblock2privoxy/css -d 10.0.1.3:8119 \\
  https://easylist.to/easylist/easyprivacy.txt  \\
  https://easylist.to/easylist/easylist.txt  \\
  https://easylist.to/easylist/fanboy-annoyance.txt  \\
  https://easylist.to/easylist/fanboy-social.txt  \\
  https://easylist-downloads.adblockplus.org/antiadblockfilters.txt  \\
  https://easylist-downloads.adblockplus.org/malwaredomains_full.txt  \\
  https://raw.githubusercontent.com/ryanbr/fanboy-adblock/master/fanboy-antifacebook.txt \\
  https://raw.githubusercontent.com/Dawsey21/Lists/master/adblock-list.txt

Update run:

adblock2privoxy -t ${prefix}/etc/adblock2privoxy/privoxy/ab2p.task"

if { [variant_isset "initialize_always"] } {
    if {[exists notes]} {
        # leave a blank line after the existing notes
        notes-append ""
    }
    notes-append \
        "The variant +initialize_always is set, which initializes\
        all configuration files. Please disable this variant for\
        working deployments."
}
