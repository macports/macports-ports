# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0

name            serf1
version         1.3.9
categories      www
maintainers     {blair @blair}
license         Apache-2
description     C-based HTTP client library

long_description \
    The serf library is a C-based HTTP client library built upon the \
    Apache Portable Runtime (APR) library.  It multiplexes \
    connections, running the read/write communication asynchronously. \
    Memory copies and transformations are kept to a minimum to provide \
    high performance operation.

homepage        https://serf.apache.org
master_sites    https://archive.apache.org/dist/serf/
distname        serf-${version}
use_bzip2       yes

checksums       rmd160  4bbc773841eb2bd83a7c12170937b403201dd83b \
                sha256  549c2d21c577a8a9c0450facb5cca809f26591f048e466552240947bdf7a87cc \
                size    145132

patchfiles      patch-SConstruct.diff \
                patch-ssl_buckets.c.diff

platforms       darwin

depends_build   port:scons
depends_lib     port:apr port:apr-util path:lib/libssl.dylib:openssl port:zlib

use_configure   no

variant universal {}

build.cmd       ${prefix}/bin/scons

build.args      CC=${configure.cc} \
                CPPFLAGS="${configure.cppflags}" \
                CFLAGS="${configure.cflags} [get_canonical_archflags cc]" \
                LINKFLAGS="${configure.ldflags} [get_canonical_archflags ld]"

platform darwin {
    # Workaround scons buggy lack of MACOSX_DEPLOYMENT_TARGET propagation:
    build.args-append   CC="MACOSX_DEPLOYMENT_TARGET=${macosx_deployment_target} ${configure.cc}"
}

build.target    APR=${prefix} \
                APU=${prefix} \
                OPENSSL=${prefix} \
                PREFIX=${prefix}

destroot.cmd        ${build.cmd}
destroot.args       --install-sandbox=${destroot}
destroot.destdir    

post-destroot {
    set sharedir ${destroot}${prefix}/share
    set docdir ${sharedir}/doc/${name}

    xinstall -m 755 -d ${docdir}

    foreach f {CHANGES LICENSE NOTICE README} {
        file copy ${worksrcpath}/${f} ${docdir}
    }
}

livecheck.url   [lindex ${master_sites} 0]
livecheck.type  regex
livecheck.regex serf-(\\d+(?:\\.\\d+)*)
