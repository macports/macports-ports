Backport a change from 2.8.9dev.3 to fix a crash when renaming files:

* amend change made in 2.8.8dev.10 to LYLocal.c get_filename(), ensuring that
  the bstring parameter can be (re)allocated within that function's call to
  LYgetBString() (report by Raoul Megelas) -TG
--- src/LYLocal.c.orig	2014-12-21 19:39:40.000000000 -0600
+++ src/LYLocal.c	2015-01-05 18:40:38.000000000 -0600
@@ -80,7 +80,7 @@
 #endif /* OK_INSTALL */
 
 static int get_filename(const char *prompt,
-			bstring *buf);
+			bstring **buf);
 
 #ifdef OK_PERMIT
 static int permit_location(char *destpath,
@@ -911,7 +911,7 @@
 	}
 
 	BStrCopy0(tmpbuf, LYPathLeaf(testpath));
-	if (get_filename(cp, tmpbuf)) {
+	if (get_filename(cp, &tmpbuf)) {
 
 	    /*
 	     * Do not allow the user to also change the location at this time.
@@ -976,7 +976,7 @@
 
     BStrCopy0(tmpbuf, testpath);
     *LYPathLeaf(tmpbuf->str) = '\0';
-    if (get_filename(cp, tmpbuf)) {
+    if (get_filename(cp, &tmpbuf)) {
 	if (strlen(tmpbuf->str)) {
 	    StrAllocCopy(savepath, testpath);
 	    StrAllocCopy(newpath, testpath);
@@ -1110,7 +1110,7 @@
     char *testpath = NULL;
 
     BStrCopy0(tmpbuf, "");
-    if (get_filename(gettext("Enter name of file to create: "), tmpbuf)) {
+    if (get_filename(gettext("Enter name of file to create: "), &tmpbuf)) {
 
 	if (strstr(tmpbuf->str, "//") != NULL) {
 	    HTAlert(gettext("Illegal redirection \"//\" found! Request ignored."));
@@ -1147,7 +1147,7 @@
     char *testpath = NULL;
 
     BStrCopy0(tmpbuf, "");
-    if (get_filename(gettext("Enter name for new directory: "), tmpbuf)) {
+    if (get_filename(gettext("Enter name for new directory: "), &tmpbuf)) {
 
 	if (strstr(tmpbuf->str, "//") != NULL) {
 	    HTAlert(gettext("Illegal redirection \"//\" found! Request ignored."));
@@ -2205,28 +2205,28 @@
  * Check DIRED filename, return true on success
  */
 static int get_filename(const char *prompt,
-			bstring *buf)
+			bstring **bufp)
 {
     char *cp;
 
     _statusline(prompt);
 
-    (void) LYgetBString(&buf, FALSE, 0, NORECALL);
-    if (strstr(buf->str, "../") != NULL) {
+    (void) LYgetBString(bufp, FALSE, 0, NORECALL);
+    if (strstr((*bufp)->str, "../") != NULL) {
 	HTAlert(gettext("Illegal filename; request ignored."));
 	return FALSE;
     } else if (no_dotfiles || !show_dotfiles) {
-	cp = LYLastPathSep(buf->str);	/* find last slash */
+	cp = LYLastPathSep((*bufp)->str);	/* find last slash */
 	if (cp)
 	    cp += 1;
 	else
-	    cp = buf->str;
+	    cp = (*bufp)->str;
 	if (*cp == '.') {
 	    HTAlert(gettext("Illegal filename; request ignored."));
 	    return FALSE;
 	}
     }
-    return !isBEmpty(buf);
+    return !isBEmpty((*bufp));
 }
 
 #ifdef OK_INSTALL
