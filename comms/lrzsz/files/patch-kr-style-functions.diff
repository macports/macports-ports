--- ./lib/error.c.orig	2024-11-03 17:49:33
+++ ./lib/error.c	2024-11-03 17:50:19
@@ -74,7 +74,7 @@
 
 # if HAVE_STRERROR
 #  ifndef strerror		/* On some systems, strerror is a macro */
-char *strerror ();
+char *strerror (int errnum);
 #  endif
 # else
 static char *
--- ./lib/xstrtol.c.orig	2024-11-03 17:49:06
+++ ./lib/xstrtol.c	2024-11-03 17:50:19
@@ -65,17 +65,12 @@
 	}								\
       while (0)
 
-__unsigned long int __strtol ();
+//__unsigned long int __strtol ();
 
 /* FIXME: comment.  */
 
 strtol_error
-__xstrtol (s, ptr, base, val, valid_suffixes)
-     const char *s;
-     char **ptr;
-     int base;
-     __unsigned long int *val;
-     const char *valid_suffixes;
+__xstrtol (const char *s, char **ptr, int base, __unsigned long int *val, const char *valid_suffixes)
 {
   char *t_ptr;
   char **p;
--- ./lib/long-options.c.orig	2024-11-03 17:49:13
+++ ./lib/long-options.c	2024-11-03 17:50:19
@@ -36,11 +36,7 @@
 /* Process long options --help and --version, but only if argc == 2.
    Be careful not to gobble up `--'.  */
 void
-parse_long_options (argc, argv,version, usage)
-     int argc;
-     char **argv;
-     void (*version)();
-     void (*usage)();
+parse_long_options (int argc, char **argv, void(*version)(void), void (*usage)(int))
 {
   int c;
   int saved_opterr;
@@ -61,7 +57,7 @@
 	  (*usage) (0);
 
 	case 'v':
-	  (*version) (0);
+	  (*version) ();
 	  /* printf ("%s (%s) %s\n", command_name, package, version_string); */
 	  exit (0);
 
