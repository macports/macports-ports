# -*- mode: tcl; coding: utf-8; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- # vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0

name            sbcl

# Please revbump maxima and maxima-devel when this port changes
version         1.4.9

categories      lang
license         BSD
maintainers     {easieste @easye} openmaintainer
platforms       darwin
description     The Steel Bank Common Lisp system

long_description \
    Steel Bank Common Lisp (SBCL) is a Open Source implementation of ANSI \
    Common Lisp. It provides an interactive environment including an \
    integrated native compiler, interpreter, and debugger. SBCL is quite \
    suitable for the creation of long running system services, as the compiler \
    trades the time for a long initial compilation for blazingly fast loading \
    of its binary runtime fasl representation.


homepage        http://www.sbcl.org
master_sites    sourceforge:project/sbcl/sbcl/${version}:sbcl

use_bzip2       yes

patchfiles \
    patch-contrib-sb-posix-posix-tests.lisp.diff \
    patch-use-right-gcc.diff

distfiles       ${name}-${version}-source${extract.suffix}:sbcl
worksrcdir      ${name}-${version}

checksums       ${name}-${version}-source${extract.suffix} \
    rmd160  4acdb6714ed11a0ac785766120fbf7e4d95ea375 \
    sha256  8f679eba0a5a8d86feced6776e389cc791a26998e4b43185a5e02bebb76620c5 \
    size    6051607

# N.b. The version of i386 bootstrap port had to be updated to compile
# sbcl-1.4.9.  there is no corresponding binary for macOS/PPC, so the
# powerpc platform probably won't build.  easieste does not have
# access to a macOS/PPC to test or maintain, so suggestions and/or
# patches are solicited from anyone with the desire to provde such a
# service.
platform powerpc {
    set bootversion 1.0.47
    master_sites-append sourceforge:project/sbcl/sbcl/${bootversion}:sbcl_powerpc
    distfiles-append    ${name}-${bootversion}-powerpc-darwin-binary${extract.suffix}:sbcl_powerpc
    checksums-append    ${name}-${bootversion}-powerpc-darwin-binary${extract.suffix} \
                        md5     02747afc7631a7ccdeede4b52b78072d \
                        sha1    93df00b3120810a086d37666c1ccdeabc8daeb49 \
                        rmd160  85c76296a1c62db5affdff7e72e61e558bb5c819
    global host_lisp
    set host_lisp "\"${workpath}/${name}-${bootversion}-powerpc-darwin/src/runtime/sbcl --core ${workpath}/${name}-${bootversion}-powerpc-darwin/output/sbcl.core --disable-debugger --sysinit /dev/null --userinit /dev/null\" "
}

platform i386 {
    set bootversion 1.1.6
    master_sites-append sourceforge:project/sbcl/sbcl/${bootversion}:sbcl_i386
    distfiles-append    ${name}-${bootversion}-x86-darwin-binary${extract.suffix}:sbcl_i386
    checksums-append    ${name}-${bootversion}-x86-darwin-binary${extract.suffix} \
        md5     cbf75b368e7770e3da2a23c835fe2b78 \
        sha1    35a76b93f8714bc34ba127df4aaf69aacfc08164 \
        rmd160  fb1ab24f3605b29af5716f0ba425ee178c6cfc06 \
        sha256  5801c60e2a875d263fccde446308b613c0253a84a61ab63569be62eb086718b3 \
        size    9091955
    global host_lisp
    set host_lisp "\"${workpath}/${name}-${bootversion}-x86-darwin/src/runtime/sbcl --core ${workpath}/${name}-${bootversion}-x86-darwin/output/sbcl.core --disable-debugger --sysinit /dev/null --userinit /dev/null\" "
}

post-patch {
    reinplace "s|/usr/local/lib/${name}|${prefix}/lib/${name}|g" \
        ${worksrcpath}/doc/sbcl.1
    # <https://trac.macports.org/attachment/ticket/51733/>
    # This change is required as the Xcode 8 linker now defaults to
    # PIE binaries regardless of the deployment target so an explicit
    # '-Wl,-no_pie' is now required. The sbcl program is incompatible
    # with ASLR and the previous upstream hack of setting the
    # deployment target to less than 10.7 doesn't prevent the PIE
    # executables from being created against the Xcode 8
    # linker. Tested on 10.11 with Xcode 8 beta.
    if {[vercmp "8.0" ${xcodeversion}] >= 0} {
        reinplace "s|0x100000|0x100000 -Wl,-no_pie|g" ${worksrcpath}/src/runtime/Config.x86-64-darwin
    }
}

use_configure   no

build {
    system "ulimit -s 8192 && export SBCL_MACOSX_VERSION_MIN=10.5 && cd ${worksrcpath} && export CC && CC=${configure.cc} && export CXX && CXX=${configure.cxx} && export CPP && CPP==${configure.cpp} && sh ./make.sh ${make_sh_options} --prefix=${prefix} --xc-host=${host_lisp}"
}

post-build {
    if {[variant_isset html] || [variant_isset pdf]} {
        system -W ${worksrcpath}/doc "INSTALL_ROOT=${destroot}${prefix} sh ${worksrcpath}/doc/make-doc.sh"
    }
}

if {![variant_isset threads]} {
    default_variants +fancy
}

variant html conflicts pdf description {Installs documentation in HTML and Info formats.} {
    patchfiles-append patch-make-doc.diff
    depends_build-append bin:texi2dvi:texinfo
    depends_build-append bin:makeinfo:texinfo
}

variant pdf conflicts html description {Installs documentation in PDF, HTML and Info formats.  Involves the installation of a TexLive dependency chain, which can dramatically slow down the installation of the SBCL port.} {
    depends_build-append bin:dvips:texlive
    depends_build-append bin:texi2dvi:texinfo
    depends_build-append bin:makeinfo:texinfo
}

global make_sh_options
set make_sh_options ""

variant threads description {Enable multi-threaded runtime using the Mach pthreads interface.} {
    set make_sh_options --with-sb-thread
}

variant fancy conflicts threads description {Configure SBCL compilation with all available compatible options (including threading).} {
    set make_sh_options --fancy
}

test.run        yes
test.dir        ${worksrcpath}/tests
test.cmd        CC=${configure.cc} CXX=${configure.cxx} CPP=${configure.cpp} sh
test.target     run-tests.sh

destroot {
    system -W ${worksrcpath} "INSTALL_ROOT=${destroot}${prefix} sh ${worksrcpath}/install.sh"
}

livecheck.url   http://sourceforge.net/api/file/index/project-id/1373/rss?path=%2F${name}
livecheck.regex guid.*${name}-(\\d+(\\.\\d+)+)-source
