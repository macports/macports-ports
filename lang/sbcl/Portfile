# -*- mode: tcl; coding: utf-8; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- # vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0

PortGroup       legacysupport 1.1

name            sbcl

# Note to maintainers:
#
# Please bump the revision of math/maxima (and when it exists
# math/maxima-devel) and fricas when this port changes.
version         2.3.5
revision        0

categories      lang
license         BSD
maintainers     {easieste @easye} {@catap korins.ky:kirill} openmaintainer

description     The Steel Bank Common Lisp system

long_description \
    Steel Bank Common Lisp (SBCL) is a Open Source implementation of ANSI \
    Common Lisp. It provides an interactive environment including an \
    integrated native compiler, interpreter, and debugger. SBCL is quite \
    suitable for the creation of long running system services, as the compiler \
    trades the time for a long initial compilation for blazingly fast loading \
    of its binary runtime fasl representation.


homepage        http://www.sbcl.org
master_sites    sourceforge

use_bzip2       yes

patchfiles      patch-contrib-sb-posix-posix-tests.lisp.diff \
                patch-macports-xdg-data-dir.diff \
                patch-missed-CLOCK_PROCESS_CPUTIME_ID.diff

checksums       rmd160  95a02d7a489137602ebba333b83bfc1d9eb794be \
                sha256  89c90720cf9d05dbcd90d690e381a2514c0f1807159e0d7222220c5a8c2d5186 \
                size    7474392

platform darwin {

    if {${os.major} < 10} {
        # 1.3.9 is the last version of SBCL which can be build before 10.6
        version     1.3.9
        revision    0
        epoch       1

        checksums   rmd160  d0da4fd941890372f3558bafb18433497c67c0ee \
                    sha256  af0f09d4379113dfd5aa255279cb3df9cb9cac0bcd65369cc43dd857ca51de6e \
                    size    5758174

    } elseif {${configure.build_arch} eq "ppc"} {
        # 2.2.2 is the last version of SBCL with ppc-Darwin
        version     2.2.2
        revision    0
        epoch       1

        checksums   rmd160  4960ccd562302f3223e2db7d32b9ecc50cf76536 \
                    sha256  8790dbbe97711dce14bb823125ce5b185b0073cf2f3cbf37bdd1ad380e7950f6 \
                    size    6716272

        universal_variant  no

    } elseif {${configure.build_arch} eq "i386"} {
        # 2.2.5 is the last version of SBCL support of with i386-Darwin
        version     2.2.5
        revision    0
        epoch       1

        checksums   rmd160  55225af6c20d39db1b158b7c07685ff6e3a8d5bf \
                    sha256  8584b541370fd6ad6e58d3f97982077dfcab240f30d4e9b18f15da91c2f13ed1 \
                    size    7029912

        patchfiles-append \
                    patch-i386-mask-out-O_LARGEFILE-in-fcntl-1-test.diff \
                    patch-i386-revert-OS_THREAD_STACK.diff \
                    patch-i386-old-preprocessor.diff \
                    patch-i386-contrib-sb-posix-posix-tests.lisp.diff \
                    patch-i386-missed-context.diff

        universal_variant  no
    }
}

platform darwin powerpc {
    patchfiles-append \
                patch-use-right-gcc.diff
}

distfiles       ${name}-${version}-source${extract.suffix}
worksrcdir      ${name}-${version}

depends_build-append \
                port:sbcl-bootstrap

# clock_gettime
legacysupport.newest_darwin_requires_legacy 15

post-patch {
    reinplace "s|@@PREFIX@@|${prefix}|g" \
                ${worksrcpath}/contrib/asdf/uiop.lisp

    reinplace "s|/usr/local/lib/${name}|${prefix}/lib/${name}|g" \
                ${worksrcpath}/doc/sbcl.1

    # Enable legacy support when it required
    set legacy_support_cpp_flags [legacysupport::get_cpp_flags]
    set legacy_support_link_flags [legacysupport::get_library_link_flags]
    if {${legacy_support_cpp_flags} ne "" || ${legacy_support_link_flags} ne ""} {
        set config_path ${worksrcpath}/src/runtime
        foreach f [glob -tails -directory ${config_path} Config.*-darwin] {
            ui_debug "Adding LegacySupport into ${f}"
            set config [open ${config_path}/$f a]
            puts ${config} "CFLAGS += ${legacy_support_cpp_flags}"
            puts ${config} "DEPEND_FLAGS += ${legacy_support_cpp_flags}"
            puts ${config} "OS_LIBS += ${legacy_support_link_flags}"
            close ${config}
        }
    }
}

use_configure   no

pre-build {
    # disable all warning
    set sbclrc [open $env(HOME)/.sbclrc w+]
    puts ${sbclrc} "(declaim (sb-ext:muffle-conditions cl:warning))"
    close ${sbclrc}
}

build.env-append \
                CC=${configure.cc} \
                CXX=${configure.cxx} \
                CPP=${configure.cpp} \
                SBCL_MACOSX_VERSION_MIN=${macosx_deployment_target}

use_parallel_build  no

build.cmd       sh
build.target    make.sh
build.args-append \
                --prefix=${prefix} \
                --xc-host=${prefix}/libexec/sbcl-bootstrap/bin/sbcl

if {${build_arch} eq "i386"} {
    build.args-append \
                --arch=x86
} elseif {${build_arch} eq "x86_64"} {
    build.args-append \
                --arch=x86-64
} else {
    build.args-append \
                --arch=${build_arch}
}

post-build {
    if {[variant_isset html] || [variant_isset pdf]} {
        system -W ${worksrcpath}/doc "INSTALL_ROOT=${destroot}${prefix} sh ${worksrcpath}/doc/make-doc.sh"
    }
}

if {![variant_isset threads] && ${build_arch} ne "ppc"} {
    default_variants +fancy
}

variant html conflicts pdf description {Installs documentation in HTML and Info formats.} {
    patchfiles-append patch-make-doc.diff
    depends_build-append bin:texi2dvi:texinfo
    depends_build-append bin:makeinfo:texinfo
}

variant pdf conflicts html description {Installs documentation in PDF, HTML and Info formats.  Involves the installation of a TexLive dependency chain, which can dramatically slow down the installation of the SBCL port.} {
    depends_build-append bin:dvips:texlive
    depends_build-append bin:texi2dvi:texinfo
    depends_build-append bin:makeinfo:texinfo
}

variant threads description {Enable multi-threaded runtime using the Mach pthreads interface.} {
    build.args-append   --with-sb-thread
}

variant fancy conflicts threads description {Configure SBCL compilation with all available compatible options (including threading).} {
    build.args-append   --fancy
    # Before 2.2.6 it ueses lz to compress core
    depends_lib-append  port:zlib
    # As of version 2.2.6, zstd is used for core compression.
    if {[vercmp ${version} 2.2.6] >= 0} {
        depends_lib-delete  port:zlib
        depends_lib-append  port:zstd
        patchfiles-append   patch-config-darwin-${build_arch}.diff

        post-patch {
            reinplace -W ${worksrcpath} "s|@@PREFIX@@|${prefix}|g" \
                {*}[glob ${worksrcpath}/src/runtime/Config.*-darwin]
        }
    }
}

test.run        yes
test.dir        ${worksrcpath}/tests
test.env        CC=${configure.cc} \
                CXX=${configure.cxx} \
                CPP=${configure.cpp}
test.target     run-tests.sh

destroot.env    INSTALL_ROOT=${destroot}${prefix}
destroot.target install.sh
destroot.destdir

livecheck.url   http://sourceforge.net/api/file/index/project-id/1373/rss?path=%2F${name}
livecheck.regex guid.*${name}-(\\d+(\\.\\d+)+)-source
