# HG changeset patch
# User Douglas Katzman <dougk@google.com>
# Date 1562783129 14400
#      Wed Jul 10 14:25:29 2019 -0400
# Node ID d27694577f5c30582b06081910220c56472a3ffe
# Parent  9761835a375cdafeee4f888854fd322aa76356bc
Restore building 64-bit target on 32-bit host

Quite likely broken since rev 99d9560c4511

From <https://sourceforge.net/p/sbcl/sbcl/ci/e183e0c5b963b6d761eec565eb505b1ce6672df0/>.

diff -r 9761835a375c -r d27694577f5c src/cold/set-up-cold-packages.lisp
--- src/cold/set-up-cold-packages.lisp	Tue Jul 09 22:14:15 2019 -0400
+++ src/cold/set-up-cold-packages.lisp	Wed Jul 10 14:25:29 2019 -0400
@@ -212,7 +212,14 @@
 ;;;   (* 50 (hash-table-rehash-threshold (make-hash-table)))
 ;;; because we are not intercepting '*.
 (defparameter *dual-personality-math-symbols*
-  '("+" "-" "*" "/" "=" "/=" "<" "<=" ">" ">=" "MIN" "MAX"))
+  '("+" "-" "*" "/" "=" "/=" "<" "<=" ">" ">=" "MIN" "MAX"
+    ;; We've gotten along quite well without an alter-ego for FIXNUM,
+    ;; but now some s-expressions mentioning the type FIXNUM are fed
+    ;; to the host for evaluation, and a type-checking host (such as we are)
+    ;; croaks if an argument exceeds the host's notion of fixnum.
+    ;; Get around it by changing those uses of fixnum to SB-XC:FIXNUM.
+    "FIXNUM"
+    ))
 
 ;;; When playing such tricky package games, it's best to have the symbols that
 ;;; are visible by default, i.e. XC-STRICT-CL:NAME, have no definition,
diff -r 9761835a375c -r d27694577f5c src/compiler/generic/early-vm.lisp
--- src/compiler/generic/early-vm.lisp	Tue Jul 09 22:14:15 2019 -0400
+++ src/compiler/generic/early-vm.lisp	Wed Jul 10 14:25:29 2019 -0400
@@ -166,3 +166,5 @@
 ;;; The offset from the fault address reported to the runtime to the
 ;;; END of the global safepoint page.
 (defconstant gc-safepoint-trap-offset n-word-bytes)
+
+#+sb-xc-host (deftype sb-xc:fixnum () `(signed-byte ,n-fixnum-bits))
diff -r 9761835a375c -r d27694577f5c src/compiler/sxhash.lisp
--- src/compiler/sxhash.lisp	Tue Jul 09 22:14:15 2019 -0400
+++ src/compiler/sxhash.lisp	Wed Jul 10 14:25:29 2019 -0400
@@ -100,10 +100,9 @@
 (defglobal +sxhash-single-float-expr+
   `(let ((bits (logand (single-float-bits x) ,(1- (ash 1 32)))))
      (logxor 66194023
-             (sxhash (the fixnum
+             (sxhash (the sb-xc:fixnum
                           (logand sb-xc:most-positive-fixnum
-                                  (logxor bits
-                                          (ash bits -7))))))))
+                                  (logxor bits (ash bits -7))))))))
 (deftransform sxhash ((x) (single-float)) '#.+sxhash-single-float-expr+)
 
 #-64-bit
@@ -216,7 +215,7 @@
   (defun sxhash (x)
     (let ((answer (etypecase x ; croak on anything but these
                     (null         (ash sb-vm:nil-value (- sb-vm:n-fixnum-tag-bits)))
-                    (fixnum       #.+sxhash-fixnum-expr+)
+                    (sb-xc:fixnum #.+sxhash-fixnum-expr+)
                     (single-float #.+sxhash-single-float-expr+)
                     (double-float #.+sxhash-double-float-expr+))))
       (push (cons x answer) *sxhash-crosscheck*)
