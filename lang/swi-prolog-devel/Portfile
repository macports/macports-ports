PortSystem	1.0

name		swi-prolog-devel
conflicts	swi-prolog swi-prolog-lite
epoch		20051223
version		7.7.9

categories	lang
license		LGPL-2.1
maintainers	uva.nl:J.Wielemaker logtalk.org:pmoura
platforms	darwin
description	SWI-Prolog compiler plus extra packages (development version)

long_description	\
	ISO/Edinburgh-style Prolog compiler including modules,		\
	autoload, libraries, Garbage-collector, stack-expandor,		\
	C/C++-interface, Multiple threads, GNU-readline interface,	\
	coroutining, constraint programming, global variables,		\
	very fast compiler. Including packages clib (Unix process	\
	control, sockets, MIME), cpp (C++ interface), sgml (reading	\
	XML/SGML), sgml/RDF (reading RDF into triples), ODBC		\
	interface and XPCE (Graphics UI toolkit, integrated editor	\
	(Emacs-clone) and graphical debugger).

homepage	http://www.swi-prolog.org/
master_sites	http://www.swi-prolog.org/download/devel/src/

dist_subdir	swi-prolog

checksums       \
    rmd160  06c4bb6431a89194193b663c29362ba9473ed10b \
    sha256  2d4b9c9b346c2d6df42e1cf399dee5cf1396ec381391292c65880e64a376ef97


depends_build   \
	port:gawk	\
	port:pkgconfig

depends_lib		\
	port:readline		\
	port:ncurses		\
	port:jpeg		\
	port:libmcrypt		\
	port:gmp		\
	port:zlib		\
	port:Xft2		\
	port:xorg-libXinerama	\
	port:xpm		\
	port:xorg-libXt \
	port:ossp-uuid	\
	port:libarchive \
	port:pcre \
	port:db53

use_parallel_build	no

distname	swipl-${version}

configure.env	\
	LIBRARY_PATH=/usr/lib:${prefix}/lib 	\
	CPATH=/usr/include:${prefix}/include	\
	PKG_CONFIG_PATH=${prefix}/lib/pkgconfig \
	JUNIT=${prefix}/share/java/junit.jar

configure.ldflags

configure.args	\
	--mandir=${prefix}/share/man	\
	--x-includes=${prefix}/include	\
	--x-libraries=${prefix}/lib	\
	--with-world

build.env	\
	LIBRARY_PATH=/usr/lib:${prefix}/lib	\
	CPATH=/usr/include:${prefix}/include	\
	PKG_CONFIG_PATH=${prefix}/lib/pkgconfig \
	JUNIT=${prefix}/share/java/junit.jar	\
	CC=${configure.cc}

post-build {
	file mkdir ${workpath}/macosx
	file copy -force -- ${workpath}/swipl-${version}/man/macosx/License.html ${workpath}/macosx/
	file copy -force -- ${workpath}/swipl-${version}/man/macosx/macosx.html ${workpath}/macosx/
	file copy -force -- ${workpath}/swipl-${version}/man/macosx/Welcome.html ${workpath}/macosx/
}

post-pkg {
	set resources ${workpath}/${name}-${version}.pkg/Contents/Resources/
	file copy -force -- ${workpath}/macosx/License.html ${resources}
	file copy -force -- ${workpath}/macosx/macosx.html ${resources}
	file copy -force -- ${workpath}/macosx/Welcome.html ${resources}
	file rename ${resources}/macosx.html ${resources}/ReadMe.html
	file delete -force -- ${resources}/Welcome.rtf
}

post-mpkg {
	set resources ${workpath}/${name}-${version}.mpkg/Contents/Resources/
	file copy -force -- ${workpath}/macosx/License.html ${resources}
	file copy -force -- ${workpath}/macosx/macosx.html ${resources}
	file copy -force -- ${workpath}/macosx/Welcome.html ${resources}
	file rename ${resources}/macosx.html ${resources}/ReadMe.html
	file delete -force -- ${resources}/Welcome.rtf
}

if {![variant_isset st]} {
	default_variants +mt
}

variant st conflicts mt description {Single-threaded} {
	configure.args-append --disable-mt
}

variant mt conflicts st description {Multi-threaded} {
	configure.args-append --enable-mt
}

universal_variant   no

test.run            yes
test.target         check

livecheck.type      regex
livecheck.url       ${homepage}download/devel/src
livecheck.regex     "swipl-(\\d+\\.\\d+\\.\\d+).tar.gz"
