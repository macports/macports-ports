<kencu@macports.org> Ken Cunningham

Patches to enable emulated-tls for older darwin systems in clang.
1) tell clang that TLS is supported on all systems
2) tell clang to pass -femulated-tls by default on systems older than 10.7
3) tell llvm to use cxa_thread_atexit instead of tlv_atexit on systems older than 10.7

requires linking against a std c++ lib that supports TLS and contains cxa_thread_atexit
(libgcc newer than 4.8, or libc++abi with cxa_thread_atexit added).

requires emutls.c objects available at link time to supply supporting routines for emulated-tls.
emutls is available in libgcc, and should be available in libc++abi for supporting emulated-tls

ideally : llvm should call cxa_thread_atexit rather than tlv_atexit based on 
          the -femulated-tls flag rather than based on the system version

these patches were originally formatted against clang-7.0.1
they can be applied to all clang builds, and will only affect systems 10.4 to 10.6 at present


diff --git llvm-7.0.1.src/include/llvm/ADT/Triple.h llvm-7.0.1.src/include/llvm/ADT/Triple.h
index c95b16d..c289256 100644
--- llvm-7.0.1.src/include/llvm/ADT/Triple.h
+++ llvm-7.0.1.src/include/llvm/ADT/Triple.h
@@ -682,7 +682,7 @@ public:
 
   /// Tests whether the target uses emulated TLS as default.
   bool hasDefaultEmulatedTLS() const {
-    return isAndroid() || isOSOpenBSD() || isWindowsCygwinEnvironment();
+    return isAndroid() || isOSOpenBSD() || isWindowsCygwinEnvironment() || isMacOSXVersionLT(10, 7);
   }
 
   /// @}
diff --git llvm-7.0.1.src/tools/clang/lib/Basic/Targets/OSTargets.h llvm-7.0.1.src/tools/clang/lib/Basic/Targets/OSTargets.h
index d035478..102605f 100644
--- llvm-7.0.1.src/tools/clang/lib/Basic/Targets/OSTargets.h
+++ llvm-7.0.1.src/tools/clang/lib/Basic/Targets/OSTargets.h
@@ -93,7 +93,7 @@ public:
     this->TLSSupported = false;
 
     if (Triple.isMacOSX())
-      this->TLSSupported = !Triple.isMacOSXVersionLT(10, 7);
+      this->TLSSupported = !Triple.isMacOSXVersionLT(10, 4);
     else if (Triple.isiOS()) {
       // 64-bit iOS supported it from 8 onwards, 32-bit device from 9 onwards,
       // 32-bit simulator from 10 onwards.
diff --git llvm-7.0.1.src/tools/clang/lib/CodeGen/ItaniumCXXABI.cpp llvm-7.0.1.src/tools/clang/lib/CodeGen/ItaniumCXXABI.cpp
index 00fff14..1c6df2d 100644
--- llvm-7.0.1.src/tools/clang/lib/CodeGen/ItaniumCXXABI.cpp
+++ llvm-7.0.1.src/tools/clang/lib/CodeGen/ItaniumCXXABI.cpp
@@ -2255,8 +2255,8 @@ static void emitGlobalDtorWithCXAAtExit(CodeGenFunction &CGF,
   const char *Name = "__cxa_atexit";
   if (TLS) {
     const llvm::Triple &T = CGF.getTarget().getTriple();
-    Name = T.isOSDarwin() ?  "_tlv_atexit" : "__cxa_thread_atexit";
-  }
+    // Darwin 10.7+ has _tlv_atexit
+    Name = (T.isOSDarwin() && !T.isMacOSXVersionLT(10, 7)) ?  "_tlv_atexit" : "__cxa_thread_atexit";  }
 
   // We're assuming that the destructor function is something we can
   // reasonably call with the default CC.  Go ahead and cast it to the
