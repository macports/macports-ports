# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       xcodeversion 1.0
PortGroup       compiler_blacklist_versions 1.0

name            ccl
version         1.11.8
revision        0

set shortversion    ${version}

categories      lang
license         Apache-2
maintainers     {easieste @easye} openmaintainer
platforms       darwin
supported_archs x86_64 i386
description     The Clozure Common Lisp Implementation
long_description \
    Clozure CL is an open source Common Lisp implementation.    \
    Clozure CL used to be called OpenMCL. It is also sometimes  \
    called CCL. You will see the three names being used interchangeably.

homepage        https://ccl.clozure.com

set base_ver    1.11.5

master_sites    https://github.com/Clozure/ccl/archive/:ccl \
                https://github.com/Clozure/ccl/releases/download/v${base_ver}/:ccl_old

distfiles       v${version}${extract.suffix}:ccl \
                ${name}-${base_ver}-darwinx86${extract.suffix}:ccl_old

checksums       v${version}${extract.suffix} \
                rmd160  22fb9194bfaf400dccf14683bbf13d01a25ce82a \
                sha256  f810d7b272ee36d5885e74d0aec5d1613c239b81c2caf97c1505eba9b12296ad \
                size    6040137 \
                ${name}-${base_ver}-darwinx86${extract.suffix} \
                rmd160  066e8c08bcbbb6dcff55cfbf1a452a3780d31978 \
                sha256  5adbea3d8b4a2e29af30d141f781c6613844f468c0ccfa11bae908c3e9641939 \
                size    100515656

worksrcdir      ${name}-${version}

livecheck.url   https://ccl.clozure.com/download.html
livecheck.regex v(\[a-z0-9.\]+)

depends_build   port:docbook-xsl-nons
use_configure   no

platform darwin i386 {
    global bootimg
    global ccl_script
    global cpu64
    global cpu32

    if { ${configure.build_arch} eq "x86_64" } {
        set cpu64 "64"
        set cpu32 ""
    } elseif { ${configure.build_arch} eq "i386" } {
        set cpu64 ""
        set cpu32 "32"
    } else {
        pre-fetch {
            return -code error "architecture ${configure.build_arch} is not supported by ${name}"
        }
    }
    set bootimg dx86cl${cpu64}
    set ccl_script ccl${cpu64}
    
    variant ide description {Build the Clozure CL IDE} {}
    default_variants +ide

    if {${os.major} >= 18 && [vercmp $xcodeversion 10.2] > 0} {
        compiler.whitelist macports-clang-9.0
        depends_build-append port:cctools
        patchfiles-append  patch-level-1_l1-sysio.lisp.diff \
                           patch-level-1_l1-files.lisp.diff
    }

#    patchfiles-append   xcode7.patch
}

build {
    #  'ccl' is the directory name of extracted ccl-${base_ver}
    system -W ${worksrcpath} "cp -p ../ccl/dx86cl${cpu64}.image ./"
    system -W ${worksrcpath} "cp -Rp ../ccl/darwin-x86-headers${cpu64} ./"
    system -W ${worksrcpath}/lisp-kernel/darwinx86${cpu64}${cpu32} "make clean && make"

    system "cd ${worksrcpath} && echo '(ccl:rebuild-ccl :clean t)' | ./${bootimg} --no-init --batch"
    system -W ${worksrcpath}/lisp-kernel/darwinx86${cpu64}${cpu32} "make clean && make"
    system "cd ${worksrcpath} && echo '(ccl:rebuild-ccl :reload t)' | ./${bootimg} --no-init --batch"

    if {${os.platform} eq "darwin" && [variant_isset ide]} {
        system "cd ${worksrcpath} && echo '(require :cocoa-application)' | ./${bootimg} --no-init --batch"
    }
    #  FIXME:  doc target no longer exists with ccl-1.11
    #  Building documentation now requires CCL+Quicklisp <http://trac.clozure.com/ccldoc>
    #    system -W ${worksrcpath}/doc/src "make -f Makefile.macports"
}

destroot {
    file mkdir ${destroot}${prefix}/share/${name}/${shortversion}
    system "cd ${worksrcpath} && tar cf - . | ( cd ${destroot}${prefix}/share/${name}/${shortversion} && tar xf -)"
    reinplace "s|/usr/local/src/ccl|${prefix}/share/${name}/${shortversion}|" \
        ${workpath}/ccl/scripts/${ccl_script}
    system "chmod +x ${workpath}/ccl/scripts/${ccl_script}"
    file copy ${workpath}/ccl/scripts/${ccl_script} ${destroot}${prefix}/bin
    system "chown -R root:admin ${destroot}${prefix}/share/${name}/${shortversion}"

    xinstall -d ${destroot}${prefix}/share/doc/${name}
    xinstall -d ${destroot}${prefix}/share/examples
    xinstall -m 644 -W ${worksrcpath}/doc \
             release-notes-1.1.txt release-notes-1.2.txt release-notes.txt \
             ${destroot}${prefix}/share/doc/${name}
    file copy ${worksrcpath}/examples ${destroot}${prefix}/share/examples/${name}

    if {${os.platform} eq "darwin" && [variant_isset ide]} {
        xinstall -m 755 -d ${destroot}${applications_dir}
        file copy "${worksrcpath}/Clozure CL${cpu64}.app" ${destroot}${applications_dir}
    }
}

post-activate {
    # DEPRECATED: ASDF-INSTALL has been superseded by Quicklisp In any
    #             event, all this target does is make some unused
    #             directories.
    #
    # Prepare asdf install folders and so forth.
    file mkdir ${prefix}/share/asdf-install
    system "chgrp admin ${prefix}/share/asdf-install"
    system "chmod g+w ${prefix}/share/asdf-install"
}
