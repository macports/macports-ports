From 1fdec59bffc11ae37eb51a1b9869f0696bfd5312 Mon Sep 17 00:00:00 2001
From: Andi-Bogdan Postelnicu <abpostelnicu@me.com>
Date: Wed, 3 Feb 2021 17:38:49 +0000
Subject: [PATCH] [lldb] Fix fallout caused by D89156 on 11.0.1 for MacOS

Fix fallout caused by D89156 on 11.0.1 for MacOS

Differential Revision: https://reviews.llvm.org/D95683
---
 .../Platform/MacOSX/PlatformAppleTVSimulator.cpp       |  8 ++++----
 .../Plugins/Platform/MacOSX/PlatformAppleTVSimulator.h |  2 +-
 .../Platform/MacOSX/PlatformAppleWatchSimulator.cpp    |  8 ++++----
 .../Platform/MacOSX/PlatformAppleWatchSimulator.h      |  2 +-
 .../Plugins/Platform/MacOSX/PlatformDarwinKernel.cpp   |  2 +-
 .../Plugins/Platform/MacOSX/PlatformiOSSimulator.cpp   | 10 +++++-----
 .../Plugins/Platform/MacOSX/PlatformiOSSimulator.h     |  2 +-
 7 files changed, 17 insertions(+), 17 deletions(-)

diff --git llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleTVSimulator.cpp llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleTVSimulator.cpp
index 461624a2adaa..cecffacf69fd 100644
--- llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleTVSimulator.cpp
+++ llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleTVSimulator.cpp
@@ -282,7 +282,7 @@ Status PlatformAppleTVSimulator::GetSymbolFile(const FileSpec &platform_file,
 Status PlatformAppleTVSimulator::GetSharedModule(
     const ModuleSpec &module_spec, lldb_private::Process *process,
     ModuleSP &module_sp, const FileSpecList *module_search_paths_ptr,
-    ModuleSP *old_module_sp_ptr, bool *did_create_ptr) {
+    llvm::SmallVectorImpl<lldb::ModuleSP> *old_modules, bool *did_create_ptr) {
   // For AppleTV, the SDK files are all cached locally on the host system. So
   // first we ask for the file in the cached SDK, then we attempt to get a
   // shared module for the right architecture with the right UUID.
@@ -296,9 +296,9 @@ Status PlatformAppleTVSimulator::GetSharedModule(
                               module_search_paths_ptr);
   } else {
     const bool always_create = false;
-    error = ModuleList::GetSharedModule(
-        module_spec, module_sp, module_search_paths_ptr, old_module_sp_ptr,
-        did_create_ptr, always_create);
+    error = ModuleList::GetSharedModule(module_spec, module_sp,
+                                        module_search_paths_ptr, old_modules,
+                                        did_create_ptr, always_create);
   }
   if (module_sp)
     module_sp->SetPlatformFileSpec(platform_file);
diff --git llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleTVSimulator.h llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleTVSimulator.h
index 5a7b0ee0d7dc..247cac06a320 100644
--- llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleTVSimulator.h
+++ llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleTVSimulator.h
@@ -55,7 +55,7 @@ class PlatformAppleTVSimulator : public PlatformAppleSimulator {
   GetSharedModule(const lldb_private::ModuleSpec &module_spec,
                   lldb_private::Process *process, lldb::ModuleSP &module_sp,
                   const lldb_private::FileSpecList *module_search_paths_ptr,
-                  lldb::ModuleSP *old_module_sp_ptr,
+                  llvm::SmallVectorImpl<lldb::ModuleSP> *old_modules,
                   bool *did_create_ptr) override;
 
   uint32_t
diff --git llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleWatchSimulator.cpp llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleWatchSimulator.cpp
index 03a8fcd31360..372dd9de9757 100644
--- llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleWatchSimulator.cpp
+++ llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleWatchSimulator.cpp
@@ -283,7 +283,7 @@ Status PlatformAppleWatchSimulator::GetSymbolFile(const FileSpec &platform_file,
 Status PlatformAppleWatchSimulator::GetSharedModule(
     const ModuleSpec &module_spec, lldb_private::Process *process,
     ModuleSP &module_sp, const FileSpecList *module_search_paths_ptr,
-    ModuleSP *old_module_sp_ptr, bool *did_create_ptr) {
+    llvm::SmallVectorImpl<lldb::ModuleSP> *old_modules, bool *did_create_ptr) {
   // For AppleWatch, the SDK files are all cached locally on the host system.
   // So first we ask for the file in the cached SDK, then we attempt to get a
   // shared module for the right architecture with the right UUID.
@@ -297,9 +297,9 @@ Status PlatformAppleWatchSimulator::GetSharedModule(
                               module_search_paths_ptr);
   } else {
     const bool always_create = false;
-    error = ModuleList::GetSharedModule(
-        module_spec, module_sp, module_search_paths_ptr, old_module_sp_ptr,
-        did_create_ptr, always_create);
+    error = ModuleList::GetSharedModule(module_spec, module_sp,
+                                        module_search_paths_ptr, old_modules,
+                                        did_create_ptr, always_create);
   }
   if (module_sp)
     module_sp->SetPlatformFileSpec(platform_file);
diff --git llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleWatchSimulator.h llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleWatchSimulator.h
index 96dcd16ffa99..5becb8c0bf20 100644
--- llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleWatchSimulator.h
+++ llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformAppleWatchSimulator.h
@@ -55,7 +55,7 @@ class PlatformAppleWatchSimulator : public PlatformAppleSimulator {
   GetSharedModule(const lldb_private::ModuleSpec &module_spec,
                   lldb_private::Process *process, lldb::ModuleSP &module_sp,
                   const lldb_private::FileSpecList *module_search_paths_ptr,
-                  lldb::ModuleSP *old_module_sp_ptr,
+                  llvm::SmallVectorImpl<lldb::ModuleSP> *old_modules,
                   bool *did_create_ptr) override;
 
   uint32_t
diff --git llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformDarwinKernel.cpp llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformDarwinKernel.cpp
index 79cbc940feb5..6d1cf804a0ae 100644
--- llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformDarwinKernel.cpp
+++ llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformDarwinKernel.cpp
@@ -730,7 +730,7 @@ Status PlatformDarwinKernel::GetSharedModule(
     // framework on macOS systems, a chance.
     error = PlatformDarwin::GetSharedModule(module_spec, process, module_sp,
                                             module_search_paths_ptr,
-                                            old_module_sp_ptr, did_create_ptr);
+                                            old_modules, did_create_ptr);
     if (error.Success() && module_sp.get()) {
       return error;
     }
diff --git llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformiOSSimulator.cpp llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformiOSSimulator.cpp
index a890d0afdf1e..e293bd5b644c 100644
--- llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformiOSSimulator.cpp
+++ llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformiOSSimulator.cpp
@@ -286,8 +286,8 @@ Status PlatformiOSSimulator::GetSymbolFile(const FileSpec &platform_file,
 
 Status PlatformiOSSimulator::GetSharedModule(
     const ModuleSpec &module_spec, Process *process, ModuleSP &module_sp,
-    const FileSpecList *module_search_paths_ptr, ModuleSP *old_module_sp_ptr,
-    bool *did_create_ptr) {
+    const FileSpecList *module_search_paths_ptr,
+    llvm::SmallVectorImpl<lldb::ModuleSP> *old_modules, bool *did_create_ptr) {
   // For iOS, the SDK files are all cached locally on the host system. So first
   // we ask for the file in the cached SDK, then we attempt to get a shared
   // module for the right architecture with the right UUID.
@@ -301,9 +301,9 @@ Status PlatformiOSSimulator::GetSharedModule(
                               module_search_paths_ptr);
   } else {
     const bool always_create = false;
-    error = ModuleList::GetSharedModule(
-        module_spec, module_sp, module_search_paths_ptr, old_module_sp_ptr,
-        did_create_ptr, always_create);
+    error = ModuleList::GetSharedModule(module_spec, module_sp,
+                                        module_search_paths_ptr, old_modules,
+                                        did_create_ptr, always_create);
   }
   if (module_sp)
     module_sp->SetPlatformFileSpec(platform_file);
diff --git llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformiOSSimulator.h llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformiOSSimulator.h
index 4d416d759bd2..cc8e45a2be29 100644
--- llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformiOSSimulator.h
+++ llvm_master/tools/lldb/source/Plugins/Platform/MacOSX/PlatformiOSSimulator.h
@@ -57,7 +57,7 @@ class PlatformiOSSimulator : public PlatformAppleSimulator {
   GetSharedModule(const lldb_private::ModuleSpec &module_spec,
                   lldb_private::Process *process, lldb::ModuleSP &module_sp,
                   const lldb_private::FileSpecList *module_search_paths_ptr,
-                  lldb::ModuleSP *old_module_sp_ptr,
+                  llvm::SmallVectorImpl<lldb::ModuleSP> *old_modules,
                   bool *did_create_ptr) override;
 
   uint32_t
