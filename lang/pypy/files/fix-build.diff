diff --git lib_pypy/_curses_build.py lib_pypy/_curses_build.py
--- lib_pypy/_curses_build.py
+++ lib_pypy/_curses_build.py
@@ -62,6 +62,8 @@ ffi.set_source("_curses_cffi", """
 #define NCURSES_OPAQUE 0
 #endif
 
+/* explicitly opt into this, rather than relying on _XOPEN_SOURCE */
+#define NCURSES_WIDECHAR 1
 
 /* ncurses 6 change behaviour  and makes all pointers opaque, 
   lets define backward compatibility. It doesn't harm 
diff --git rpython/memory/gc/env.py rpython/memory/gc/env.py
--- rpython/memory/gc/env.py
+++ rpython/memory/gc/env.py
@@ -7,6 +7,7 @@ from rpython.rlib.debug import debug_pri
 from rpython.rlib.rstring import assert_str0
 from rpython.rtyper.lltypesystem import lltype, rffi
 from rpython.rtyper.lltypesystem.lloperation import llop
+from rpython.translator.tool.cbuild import ExternalCompilationInfo
 
 # ____________________________________________________________
 # Reading env vars.  Supports returning ints, uints or floats,
@@ -375,11 +376,13 @@ def _skipspace(data, pos):
 
 # ---------- Darwin ----------
 
+sysctlbyname_eci = ExternalCompilationInfo(includes=["sys/sysctl.h"])
 sysctlbyname = rffi.llexternal('sysctlbyname',
                                [rffi.CCHARP, rffi.VOIDP, rffi.SIZE_TP,
                                 rffi.VOIDP, rffi.SIZE_T],
                                rffi.INT,
-                               sandboxsafe=True)
+                               sandboxsafe=True,
+                               compilation_info=sysctlbyname_eci)
 
 def get_darwin_sysctl_signed(sysctl_name):
     rval_p = lltype.malloc(rffi.LONGLONGP.TO, 1, flavor='raw')
diff --git rpython/rlib/rvmprof/src/rvmprof.h rpython/rlib/rvmprof/src/rvmprof.h
--- rpython/rlib/rvmprof/src/rvmprof.h
+++ rpython/rlib/rvmprof/src/rvmprof.h
@@ -41,6 +41,7 @@ RPY_EXTERN long vmprof_get_profile_path(
 RPY_EXTERN int vmprof_stop_sampling(void);
 RPY_EXTERN void vmprof_start_sampling(void);
 
+void *pypy_find_codemap_at_addr(long addr, long *start_addr);
 long vmprof_write_header_for_jit_addr(intptr_t *result, long n,
                                       intptr_t addr, int max_depth);
 
diff --git rpython/rlib/rvmprof/src/shared/machine.c rpython/rlib/rvmprof/src/shared/machine.c
--- rpython/rlib/rvmprof/src/shared/machine.c
+++ rpython/rlib/rvmprof/src/shared/machine.c
@@ -6,6 +6,7 @@
 #ifdef VMPROF_UNIX
 #include <unistd.h>
 #include <fcntl.h>
+#include <string.h>
 #endif
 
 int vmp_machine_bits(void)
diff --git rpython/rlib/rvmprof/src/shared/vmprof_common.h rpython/rlib/rvmprof/src/shared/vmprof_common.h
--- rpython/rlib/rvmprof/src/shared/vmprof_common.h
+++ rpython/rlib/rvmprof/src/shared/vmprof_common.h
@@ -84,9 +84,7 @@ char *vmprof_init(int fd, double interva
 int opened_profile(const char *interp_name, int memory, int proflines, int native, int real_time);
 
 #ifdef RPYTHON_VMPROF
-#ifndef RPYTHON_LL2CTYPES
 PY_STACK_FRAME_T *get_vmprof_stack(void);
-#endif
 RPY_EXTERN
 intptr_t vmprof_get_traceback(void *stack, void *ucontext,
                               void **result_p, intptr_t result_length);
diff --git rpython/rlib/rvmprof/src/shared/vmprof_get_custom_offset.h rpython/rlib/rvmprof/src/shared/vmprof_get_custom_offset.h
--- rpython/rlib/rvmprof/src/shared/vmprof_get_custom_offset.h
+++ rpython/rlib/rvmprof/src/shared/vmprof_get_custom_offset.h
@@ -8,7 +8,6 @@
 #include <stdint.h>
 #endif
 
-void *pypy_find_codemap_at_addr(long addr, long *start_addr);
 long pypy_yield_codemap_at_addr(void *codemap_raw, long addr,
                                 long *current_pos_addr);
 
diff --git rpython/translator/c/src/precommondefs.h rpython/translator/c/src/precommondefs.h
--- rpython/translator/c/src/precommondefs.h
+++ rpython/translator/c/src/precommondefs.h
@@ -18,9 +18,12 @@
 #define _LARGEFILE_SOURCE 1
 /* Define on NetBSD to activate all library features */
 #define _NETBSD_SOURCE 1
-/* Define to activate features from IEEE Stds 1003.1-2008 */
-#ifndef _POSIX_C_SOURCE
-#  define _POSIX_C_SOURCE 200809L
+/* Define to activate features from IEEE Stds 1003.1-2008, except on
+   macOS where it hides a lot symbols */
+#ifndef __APPLE__
+#  ifndef _POSIX_C_SOURCE
+#    define _POSIX_C_SOURCE 200809L
+#  endif
 #endif
 /* Define on FreeBSD to activate all library features */
 #define __BSD_VISIBLE 1
