# HG changeset patch
# User Dan Villiom Podlaski Christiansen <danchr@gmail.com>
# Date 1633441137 -7200
#      Tue Oct 05 15:38:57 2021 +0200
# Branch release-pypy3.8-v7.x
# Node ID 7b60c4aeb4296a536e293e01e0489a90806bed9f
# Parent  7e233b73b92740ab7a20680a404ac100be1eb508
build_cffi_imports: fix determining CFLAGS

The previous logic implicitly assumed that CFLAGS was either unset or
started with a space, breaking the MacPorts build. In addition, it
also extracted the version info from the _running_ interpreter rather
than the _built_ one.

diff --git lib_pypy/pypy_tools/build_cffi_imports.py lib_pypy/pypy_tools/build_cffi_imports.py
--- lib_pypy/pypy_tools/build_cffi_imports.py
+++ lib_pypy/pypy_tools/build_cffi_imports.py
@@ -198,8 +198,16 @@ def create_cffi_import_libraries(pypy_c,
     else:
         # normally, this would be correctly added by setuptools/distutils, but
         # we moved this, and the ensurepip setuptools has not caught up yet
-        include_path = os.path.join(basedir, 'include', 'pypy%d.%d' % sys.version_info[:2])
-        env['CFLAGS'] = '-fPIC -I%s' % include_path + env.get('CFLAGS', '')
+        status, stdout, stderr = run_subprocess(str(pypy_c), ['-c', 'from _sysconfigdata import build_time_vars as v; print(v["INCLUDEPY"])'])
+        if status != 0:
+            failures.append((key, module))
+            print("stdout:")
+            print(stdout.decode('utf-8'))
+            print("stderr:")
+            print(stderr.decode('utf-8'))
+            continue
+        include_path = stdout
+        env['CFLAGS'] = ' '.join(('-fPIC', '-I' + include_path, env.get('CFLAGS', ''))
     status, stdout, stderr = run_subprocess(str(pypy_c), ['-c', 'import setuptools'])
     if status  != 0:
         status, stdout, stderr = run_subprocess(str(pypy_c), ['-m', 'ensurepip'])
