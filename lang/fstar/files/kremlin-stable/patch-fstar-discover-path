--- src/Driver.ml	2019-10-28 15:51:04.000000000 -0600
+++ src/Driver.ml	2019-10-28 15:52:24.000000000 -0600
@@ -49,6 +49,7 @@
 let fstar_options = ref []
 
 (** By [detect_kremlin] *)
+let bin_dir = ref ""
 let kremlib_dir = ref ""
 let runtime_dir = ref ""
 let include_dir = ref ""
@@ -121,6 +122,16 @@
 let detect_kremlin () =
   detect_base_tools_if ();
 
+  let real_krml =
+    let me = Sys.argv.(0) in
+    if Sys.os_type = "Win32" && not (Filename.is_relative me) then
+      me
+    else
+      try read_one_line !readlink [| "-f"; read_one_line "which" [| me |] |]
+      with _ -> fatal_error "Could not compute full krml path"
+  in
+  bin_dir := Filename.dirname (real_krml);
+
   if AutoConfig.kremlib_dir <> "" then begin
     kremlib_dir := AutoConfig.kremlib_dir;
     runtime_dir := AutoConfig.runtime_dir;
@@ -130,19 +141,11 @@
 
     KPrint.bprintf "%sKreMLin called via:%s %s\n" Ansi.underline Ansi.reset Sys.argv.(0);
 
-    let real_krml =
-      let me = Sys.argv.(0) in
-      if Sys.os_type = "Win32" && not (Filename.is_relative me) then
-        me
-      else
-        try read_one_line !readlink [| "-f"; read_one_line "which" [| me |] |]
-        with _ -> fatal_error "Could not compute full krml path"
-    in
     (* ../_build/src/Kremlin.native *)
     KPrint.bprintf "%sthe Kremlin executable is:%s %s\n" Ansi.underline Ansi.reset real_krml;
 
     let krml_home =
-      try read_one_line !readlink [| "-f"; d real_krml ^^ ".." ^^ ".." |]
+      try read_one_line !readlink [| "-f"; d real_krml ^^ ".." |]
       with _ -> fatal_error "Could not compute krml_home"
     in
     KPrint.bprintf "%sKreMLin home is:%s %s\n" Ansi.underline Ansi.reset krml_home;
@@ -154,10 +157,18 @@
       Sys.chdir cwd
     end;
 
-    kremlib_dir := krml_home ^^ "kremlib";
-    runtime_dir := krml_home ^^ "runtime";
-    include_dir := krml_home ^^ "include";
-    misc_dir := krml_home ^^ "misc"
+    if try Sys.is_directory (krml_home ^^ "kremlib") with Sys_error _ -> false; then begin
+      KPrint.bprintf "Detected source layout in KreMLin home\n";
+      kremlib_dir := krml_home ^^ "kremlib";
+      runtime_dir := krml_home ^^ "runtime";
+      include_dir := krml_home ^^ "include";
+      misc_dir := krml_home ^^ "misc"
+    end else begin
+      kremlib_dir := krml_home ^^ "lib" ^^ "kremlin";
+      runtime_dir := !kremlib_dir ^^ "runtime";
+      include_dir := krml_home ^^ "include";
+      misc_dir := krml_home ^^ "share" ^^ "kremlin" ^^ "misc"
+    end;
 
   end;
 
@@ -188,11 +199,15 @@
     fstar_home := r;
     fstar := r ^^ "bin" ^^ "fstar.exe"
   with Not_found -> try
-    fstar := read_one_line "which" [| "fstar.exe" |];
+    let real_fstar =
+      try read_one_line !readlink [| "-f"; !bin_dir ^^ "fstar" |]
+      with _ -> fatal_error "Could not compute full fstar path"
+    in
+    fstar := real_fstar;
     fstar_home := d (d !fstar);
-    KPrint.bprintf "FSTAR_HOME is %s (via fstar.exe in PATH)\n" !fstar_home
+    KPrint.bprintf "FSTAR_HOME is %s\n" !fstar_home
   with _ ->
-    fatal_error "Did not find fstar.exe in PATH and FSTAR_HOME is not set"
+    fatal_error "Did not find fstar in %s and FSTAR_HOME is not set" !bin_dir
   end;
 
   if KString.exists !fstar_home "opam"; then begin
