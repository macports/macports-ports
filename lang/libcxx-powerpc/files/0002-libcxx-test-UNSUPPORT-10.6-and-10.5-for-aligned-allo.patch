From 6049bd4d117eb24799871d61bc22cafbcf5fb5e5 Mon Sep 17 00:00:00 2001
From: Iain Sandoe <iain@sandoe.co.uk>
Date: Tue, 2 Apr 2019 10:58:14 +0100
Subject: [PATCH] [libcxx, test] UNSUPPORT 10.6 and 10.5 for aligned
 allocations.

---
 libcxx/test/libcxx/memory/aligned_allocation_macro.pass.cpp    | 2 ++
 .../new.delete.array/delete_align_val_t_replace.pass.cpp       | 2 ++
 .../new.delete/new.delete.array/new_align_val_t.pass.cpp       | 2 ++
 .../new.delete.array/new_align_val_t_nothrow.pass.cpp          | 2 ++
 .../new.delete.array/new_align_val_t_nothrow_replace.pass.cpp  | 2 ++
 .../new.delete.array/new_align_val_t_replace.pass.cpp          | 2 ++
 .../sized_delete_array_fsizeddeallocation.sh.cpp               | 3 ++-
 .../new.delete.single/delete_align_val_t_replace.pass.cpp      | 2 ++
 .../new.delete/new.delete.single/new_align_val_t.pass.cpp      | 2 ++
 .../new.delete.single/new_align_val_t_nothrow.pass.cpp         | 2 ++
 .../new.delete.single/new_align_val_t_nothrow_replace.pass.cpp | 2 ++
 .../new.delete.single/new_align_val_t_replace.pass.cpp         | 2 ++
 .../new.delete.single/sized_delete_fsizeddeallocation.sh.cpp   | 2 ++
 13 files changed, 26 insertions(+), 1 deletion(-)

diff --git a/libcxx/test/libcxx/memory/aligned_allocation_macro.pass.cpp b/libcxx/test/libcxx/memory/aligned_allocation_macro.pass.cpp
index c1a4252aa61..4ae50fc9a78 100644
--- a/libcxx/test/libcxx/memory/aligned_allocation_macro.pass.cpp
+++ b/libcxx/test/libcxx/memory/aligned_allocation_macro.pass.cpp
@@ -16,6 +16,8 @@
 // XFAIL: macosx10.9
 // XFAIL: macosx10.8
 // XFAIL: macosx10.7
+// XFAIL: macosx10.6
+// XFAIL: macosx10.5
 
 #include <new>
 
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/delete_align_val_t_replace.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/delete_align_val_t_replace.pass.cpp
index 52aeea314dd..7b5c8c4dc20 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/delete_align_val_t_replace.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/delete_align_val_t_replace.pass.cpp
@@ -33,6 +33,8 @@
 // UNSUPPORTED: macosx10.9
 // UNSUPPORTED: macosx10.8
 // UNSUPPORTED: macosx10.7
+// UNSUPPORTED: macosx10.6
+// UNSUPPORTED: macosx10.5
 
 // On Windows libc++ doesn't provide its own definitions for new/delete
 // but instead depends on the ones in VCRuntime. However VCRuntime does not
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t.pass.cpp
index 1d20b33a0df..b99c7a402e9 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t.pass.cpp
@@ -31,6 +31,8 @@
 // UNSUPPORTED: macosx10.9
 // UNSUPPORTED: macosx10.8
 // UNSUPPORTED: macosx10.7
+// UNSUPPORTED: macosx10.6
+// UNSUPPORTED: macosx10.5
 
 // On Windows libc++ doesn't provide its own definitions for new/delete
 // but instead depends on the ones in VCRuntime. However VCRuntime does not
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_nothrow.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_nothrow.pass.cpp
index 60ebdd8e945..4fb12328ef8 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_nothrow.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_nothrow.pass.cpp
@@ -31,6 +31,8 @@
 // UNSUPPORTED: macosx10.9
 // UNSUPPORTED: macosx10.8
 // UNSUPPORTED: macosx10.7
+// UNSUPPORTED: macosx10.6
+// UNSUPPORTED: macosx10.5
 
 // On Windows libc++ doesn't provide its own definitions for new/delete
 // but instead depends on the ones in VCRuntime. However VCRuntime does not
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_nothrow_replace.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_nothrow_replace.pass.cpp
index b09316487f9..58977e88c0f 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_nothrow_replace.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_nothrow_replace.pass.cpp
@@ -28,6 +28,8 @@
 // UNSUPPORTED: macosx10.9
 // UNSUPPORTED: macosx10.8
 // UNSUPPORTED: macosx10.7
+// UNSUPPORTED: macosx10.6
+// UNSUPPORTED: macosx10.5
 
 // XFAIL: no-aligned-allocation && !gcc
 
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_replace.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_replace.pass.cpp
index d8e08a3a0bd..fd09d17a2b7 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_replace.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/new_align_val_t_replace.pass.cpp
@@ -10,6 +10,8 @@
 // UNSUPPORTED: c++98, c++03, c++11, c++14
 // UNSUPPORTED: sanitizer-new-delete
 
+// UNSUPPORTED: macosx10.5
+
 // NOTE: GCC doesn't provide the -faligned-allocation flag to test for
 // XFAIL: no-aligned-allocation && !gcc
 
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/sized_delete_array_fsizeddeallocation.sh.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/sized_delete_array_fsizeddeallocation.sh.cpp
index f71cf19cc80..db1dde81e0a 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/sized_delete_array_fsizeddeallocation.sh.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.array/sized_delete_array_fsizeddeallocation.sh.cpp
@@ -18,7 +18,8 @@
 // XFAIL: availability_markup=macosx10.9
 // XFAIL: availability_markup=macosx10.8
 // XFAIL: availability_markup=macosx10.7
-
+// XFAIL: availability_markup=macosx10.6
+// XFAIL: availability_markup=macosx10.5
 
 // NOTE: Only clang-3.7 and GCC 5.1 and greater support -fsized-deallocation.
 // REQUIRES: fsized-deallocation
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/delete_align_val_t_replace.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/delete_align_val_t_replace.pass.cpp
index 5885218c466..45250ae8008 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/delete_align_val_t_replace.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/delete_align_val_t_replace.pass.cpp
@@ -32,6 +32,8 @@
 // UNSUPPORTED: macosx10.9
 // UNSUPPORTED: macosx10.8
 // UNSUPPORTED: macosx10.7
+// UNSUPPORTED: macosx10.6
+// UNSUPPORTED: macosx10.5
 
 // On Windows libc++ doesn't provide its own definitions for new/delete
 // but instead depends on the ones in VCRuntime. However VCRuntime does not
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t.pass.cpp
index 52db4c56ced..8203348a61c 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t.pass.cpp
@@ -25,6 +25,8 @@
 // UNSUPPORTED: macosx10.9
 // UNSUPPORTED: macosx10.8
 // UNSUPPORTED: macosx10.7
+// UNSUPPORTED: macosx10.6
+// UNSUPPORTED: macosx10.5
 
 // asan and msan will not call the new handler.
 // UNSUPPORTED: sanitizer-new-delete
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_nothrow.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_nothrow.pass.cpp
index a5e40a0d28c..096873fbc1a 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_nothrow.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_nothrow.pass.cpp
@@ -25,6 +25,8 @@
 // UNSUPPORTED: macosx10.9
 // UNSUPPORTED: macosx10.8
 // UNSUPPORTED: macosx10.7
+// UNSUPPORTED: macosx10.6
+// UNSUPPORTED: macosx10.5
 
 // asan and msan will not call the new handler.
 // UNSUPPORTED: sanitizer-new-delete
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_nothrow_replace.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_nothrow_replace.pass.cpp
index de1bd8d8205..944ec95f4d7 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_nothrow_replace.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_nothrow_replace.pass.cpp
@@ -28,6 +28,8 @@
 // UNSUPPORTED: macosx10.9
 // UNSUPPORTED: macosx10.8
 // UNSUPPORTED: macosx10.7
+// UNSUPPORTED: macosx10.6
+// UNSUPPORTED: macosx10.5
 
 // NOTE: gcc doesn't provide -faligned-allocation flag to test for
 // XFAIL: no-aligned-allocation && !gcc
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_replace.pass.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_replace.pass.cpp
index 2dd4631e7f6..c0ec16538c9 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_replace.pass.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/new_align_val_t_replace.pass.cpp
@@ -10,6 +10,8 @@
 // UNSUPPORTED: c++98, c++03, c++11, c++14
 // UNSUPPORTED: sanitizer-new-delete
 
+// UNSUPPORTED: macosx10.5
+
 // NOTE: GCC doesn't provide a -faligned-allocation flag
 // XFAIL: no-aligned-allocation && !gcc
 
diff --git a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/sized_delete_fsizeddeallocation.sh.cpp b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/sized_delete_fsizeddeallocation.sh.cpp
index d5b610f7180..4165bd11bec 100644
--- a/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/sized_delete_fsizeddeallocation.sh.cpp
+++ b/libcxx/test/std/language.support/support.dynamic/new.delete/new.delete.single/sized_delete_fsizeddeallocation.sh.cpp
@@ -18,6 +18,8 @@
 // XFAIL: availability_markup=macosx10.9
 // XFAIL: availability_markup=macosx10.8
 // XFAIL: availability_markup=macosx10.7
+// XFAIL: availability_markup=macosx10.6
+// XFAIL: availability_markup=macosx10.5
 
 // NOTE: Only clang-3.7 and GCC 5.1 and greater support -fsized-deallocation.
 // REQUIRES: fsized-deallocation
