# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=portfile:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                rust
version             1.23.0
categories          lang devel
platforms           darwin
supported_archs     i386 x86_64
license             {MIT Apache-2} BSD zlib NCSA Permissive
maintainers         g5pw

description         A safe, concurrent, practical language

long_description    Rust is a curly-brace, block-structured expression \
                    language. It visually resembles the C language \
                    family, but differs significantly in syntactic and \
                    semantic details. Its design is oriented toward \
                    concerns of \"programming in the large\", that is, of \
                    creating and maintaining boundaries -- both abstract \
                    and operational -- that preserve large-system \
                    integrity, availability and concurrency.

homepage            https://www.rust-lang.org/

depends_build       bin:python2.7:python27 \
                    port:cmake

depends_lib         port:llvm-4.0

master_sites        https://static.rust-lang.org/dist

distname            ${name}c-${version}-src

patchfiles          patch-src-librustc-llvm-lib.diff

set rust_platform   ${build_arch}-apple-darwin

if {${build_arch} eq "i386"} {
    set rust_platform i686-apple-darwin
}

set stage0(ruststd) rust-std-1.22.0-${rust_platform}
set stage0(rustc)   rustc-1.22.0-${rust_platform}
set stage0(cargo)   cargo-0.23.0-${rust_platform}

distfiles-append    ${stage0(ruststd)}${extract.suffix} \
                    ${stage0(rustc)}${extract.suffix} \
                    ${stage0(cargo)}${extract.suffix}

checksums           ${distname}${extract.suffix} \
                    rmd160  f8dc31e9fbe1e2071d2307be5a38c73da8a637ee \
                    sha256  7464953871dcfdfa8afcc536916a686dd156a83339d8ec4d5cb4eb2fe146cb91

if {${build_arch} eq "i386"} {
    checksums-append \
                    ${stage0(ruststd)}${extract.suffix} \
                    rmd160  8dc4f0eb39c34082021206de9556a6027a6a833c \
                    sha256  4bdbe34a34fc99c231f59201253e0844ab8378eed0835c95ce80336c8626f799 \
                    ${stage0(rustc)}${extract.suffix} \
                    rmd160  4647f5eb4dde380c7d9cad982540df90598b48de \
                    sha256  84b436ff4543ca9d734971dbd46cabdca4eaf9ba060a6314e48789eaba50101f \
                    ${stage0(cargo)}${extract.suffix} \
                    rmd160  bfbe0a2040fbb5d5f378111dfb0cc7dbf1330e12 \
                    sha256  25670bdc08a8134c0100bb4fa1b48d7c45cb1045098d6388fb668d1cdcbc940c
} else {
    checksums-append \
                    ${stage0(ruststd)}${extract.suffix} \
                    rmd160  cc0b60760e1d8262834511c7676005167d072db0 \
                    sha256  773c091f678fd63af07a90fac406c1b9850b7a72b58a4aab39bc0489315ef33a \
                    ${stage0(rustc)}${extract.suffix} \
                    rmd160  9cd4f59ae654315a74c368b85e29a48ab7bc654f \
                    sha256  1383736371b4192de9f7feb14b6615f39c772b83b0771e1f9fe7c10036e3c9d1 \
                    ${stage0(cargo)}${extract.suffix} \
                    rmd160  1a08713350109f9bcf321af40f35fb06d0505bef \
                    sha256  aee12927e3a670584119e795a1ade6f4579e565f4145c9e0b6d8410019dc5ba7
}

set stage0(dir)     ${worksrcpath}/build/stage0

pre-fetch {
    if {${os.platform} eq "darwin" && ${os.major} < 11} {
        ui_error "${name} is only supported on OS X 10.7 Lion or later."
        return -code error "unsupported platform version"
    }
}

post-extract {
    file mkdir ${stage0(dir)}
    system "cp -r ${workpath}/${stage0(ruststd)}/rust-std-${rust_platform}/* ${stage0(dir)}"
    system "cp -r ${workpath}/${stage0(rustc)}/rustc/* ${stage0(dir)}"
    system "cp -r ${workpath}/${stage0(cargo)}/cargo/* ${stage0(dir)}"
}

configure.args      --build=${rust_platform} \
                    --enable-vendor \
                    --default-linker=${configure.cc} \
                    --disable-codegen-tests \
                    --disable-docs \
                    --llvm-root=${prefix}/libexec/llvm-4.0 \
                    --local-rust-root=${stage0(dir)} \
                    --release-channel=stable \
                    --set=target.${rust_platform}.cc=${configure.cc} \
                    --set=target.${rust_platform}.cxx=${configure.cxx} \
                    --set=target.${rust_platform}.linker=${configure.cc}

build.args          VERBOSE=1 BOOTSTRAP_ARGS="-v -j${build.jobs}"

test.run            yes
test.target         check
test.args           VERBOSE=1

destroot.args       VERBOSE=1

livecheck.type      regex
livecheck.url       https://github.com/rust-lang/rust/tags
livecheck.regex     archive/(\[\\d\\.\]+).zip

subport rust-src {
    # remove dependencies
    depends_build
    depends_lib

    description     Source code for the rust programming language
    long_description ${description}

    use_configure no

    build {}

    destroot {
        xinstall -d ${destroot}${prefix}/share/rust
        move ${worksrcpath}/src ${destroot}${prefix}/share/rust/src

        # correct the permissions
        system -W ${destroot}${prefix}/share/rust "find . -type d -exec chmod 755 {} \\;"
        system -W ${destroot}${prefix}/share/rust "find . -type f -exec chmod 644 {} \\;"

        # delete the test directories (which for some god awful reason contains binaries)
        system -W ${destroot}${prefix}/share/rust "find . -type d -name test -print0 | xargs -0 rm -rf"
    }
}
