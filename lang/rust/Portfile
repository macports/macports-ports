# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=portfile:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                rust
version             1.47.0
revision            0
categories          lang devel
platforms           darwin
supported_archs     x86_64
license             {MIT Apache-2} BSD zlib NCSA Permissive
maintainers         {g5pw @g5pw} \
                    {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

description         A safe, concurrent, practical language

long_description    Rust is a curly-brace, block-structured expression \
                    language. It visually resembles the C language \
                    family, but differs significantly in syntactic and \
                    semantic details. Its design is oriented toward \
                    concerns of \"programming in the large\", that is, of \
                    creating and maintaining boundaries -- both abstract \
                    and operational -- that preserve large-system \
                    integrity, availability and concurrency.

homepage            https://www.rust-lang.org/

# Get from src/stage0.txt
set ruststd_version 1.46.0
set rustc_version   1.46.0
set cargo_version   0.47.0
set llvm_version    9.0

# can use cmake or cmake-devel; default to cmake.
depends_build       path:bin/cmake:cmake \
                    bin:python2.7:python27

depends_lib         port:llvm-${llvm_version} \
                    port:libffi

master_sites        https://static.rust-lang.org/dist

distname            ${name}c-${version}-src

patchfiles          patch-src-librustc-llvm-lib.diff

distfiles-append    rust-std-${ruststd_version}-${build_arch}-apple-${os.platform}${extract.suffix} \
                    rustc-${rustc_version}-${build_arch}-apple-${os.platform}${extract.suffix} \
                    cargo-${cargo_version}-${build_arch}-apple-${os.platform}${extract.suffix}

checksums           ${distname}${extract.suffix} \
                    rmd160  2fee85c5e52046982a51eff62f64e123f798ed56 \
                    sha256  3185df064c4747f2c8b9bb8c4468edd58ff4ad6d07880c879ac1b173b768d81d \
                    size    151861620 \

checksums-append \
                    rust-std-${ruststd_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  bd8d58fca200428b03603d770beeee8bf94e5de6 \
                    sha256  8c897982bc38c9528b448fe551f089fee7716e692dece98052f4459ccc6e591c \
                    size    22888748 \
                    rustc-${rustc_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  1503424f7cfeee88d6b7133ed5db689fb786bd34 \
                    sha256  f690b375df7b1399e5baa69b64932e3e4a3f2b651e5ef2ebc85509bee777a9d9 \
                    size    73665558 \
                    cargo-${cargo_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  123269f99aba6a0def22e77603ada120947023a9 \
                    sha256  6e8f3319069dd14e1ef756906fa0ef3799816f1aba439bdeea9d18681c353ad6 \
                    size    5685128

if {${os.platform} eq "darwin" && ${os.major} < 11} {
    known_fail yes
    pre-fetch {
        ui_error "${name} is only supported on OS X 10.7 Lion or later."
        return -code error "unsupported platform version"
    }
}

post-extract {
    set rust_root     ${worksrcpath}/build/stage0-${build_arch}
    set rust_platform ${build_arch}-apple-${os.platform}
    file mkdir ${rust_root}
    system "cp -r ${workpath}/rust-std-${ruststd_version}-${rust_platform}/rust-std-${rust_platform}/* ${rust_root}"
    system "cp -r ${workpath}/rustc-${rustc_version}-${rust_platform}/rustc/* ${rust_root}"
    system "cp -r ${workpath}/cargo-${cargo_version}-${rust_platform}/cargo/* ${rust_root}"
}

set rust_platform       ${build_arch}-apple-${os.platform}
set rust_root           ${worksrcpath}/build/stage0-${build_arch}

configure.args          --enable-vendor \
                        --default-linker=${configure.cc} \
                        --disable-codegen-tests \
                        --disable-docs \
                        --release-channel=stable \
                        --llvm-root=${prefix}/libexec/llvm-${llvm_version} \
                        --build=${rust_platform} \
                        --local-rust-root=${rust_root} \
                        --set=target.${rust_platform}.cc=${configure.cc} \
                        --set=target.${rust_platform}.cxx=${configure.cxx} \
                        --set=target.${rust_platform}.linker=${configure.cc}

post-configure {
    # the bootstrap call to rustc uses cc for the linker
    # place config file in the HOME directory
    # see https://trac.macports.org/wiki/UsingTheRightCompiler
    xinstall -d -m 0755 ${workpath}/.home/.cargo
    set config [open ${workpath}/.home/.cargo/config w]

    set rust_platform ${build_arch}-apple-${os.platform}
    puts ${config} "\[target.${rust_platform}\]"
    puts ${config} "linker = \"${configure.cc}\""

    close ${config}
}

build.args          VERBOSE=1 BOOTSTRAP_ARGS="-v -j${build.jobs}"

test.run            yes
test.target         check
test.args           VERBOSE=1

destroot.args       VERBOSE=1

if {${subport} eq ${name}} {

    post-destroot {
        xinstall -d ${destroot}${prefix}/share/${name}
        xinstall -m 644 ${worksrcpath}/src/etc/ctags.rust \
            ${destroot}${prefix}/share/${name}
    }

}

livecheck.type      regex
livecheck.url       https://github.com/rust-lang/rust/tags
livecheck.regex     archive/(\[\\d\\.\]+).zip

subport rust-src {
    # remove dependencies
    depends_build
    depends_lib

    set rust_source_dir ${destroot}${prefix}/lib/rustlib/src/rust

    description     Source code for the rust programming language
    long_description ${description}

    use_configure no

    build {}

    destroot {
        xinstall -d ${rust_source_dir}
        move ${worksrcpath}/src ${rust_source_dir}/src

        # correct the permissions
        system -W ${rust_source_dir} "find . -type d -exec chmod 755 {} \\;"
        system -W ${rust_source_dir} "find . -type f -exec chmod 644 {} \\;"

        # delete the test directories (which for some god awful reason contains binaries)
        system -W ${rust_source_dir} "find . -type d -name test -print0 | xargs -0 rm -rf"
    }
}
