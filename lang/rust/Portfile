# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=portfile:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                rust
version             1.24.0
categories          lang devel
platforms           darwin
supported_archs     i386 x86_64
license             {MIT Apache-2} BSD zlib NCSA Permissive
maintainers         g5pw

description         A safe, concurrent, practical language

long_description    Rust is a curly-brace, block-structured expression \
                    language. It visually resembles the C language \
                    family, but differs significantly in syntactic and \
                    semantic details. Its design is oriented toward \
                    concerns of \"programming in the large\", that is, of \
                    creating and maintaining boundaries -- both abstract \
                    and operational -- that preserve large-system \
                    integrity, availability and concurrency.

homepage            https://www.rust-lang.org/

# can use cmake or cmake-devel; default to cmake.
depends_build       bin:python2.7:python27 \
                    bin:cmake:cmake

depends_lib         port:llvm-5.0

master_sites        https://static.rust-lang.org/dist

distname            ${name}c-${version}-src

patchfiles          patch-src-librustc-llvm-lib.diff

set rust_platform   ${build_arch}-apple-darwin

if {${build_arch} eq "i386"} {
    set rust_platform i686-apple-darwin
}

set stage0(ruststd) rust-std-1.23.0-${rust_platform}
set stage0(rustc)   rustc-1.23.0-${rust_platform}
set stage0(cargo)   cargo-0.24.0-${rust_platform}

distfiles-append    ${stage0(ruststd)}${extract.suffix} \
                    ${stage0(rustc)}${extract.suffix} \
                    ${stage0(cargo)}${extract.suffix}

checksums           ${distname}${extract.suffix} \
                    rmd160  5ba759d3620e5b37ca4d638b6511c8e4e6c3b009 \
                    sha256  bb8276f6044e877e447f29f566e4bbf820fa51fea2f912d59b73233ffd95639f

if {${build_arch} eq "i386"} {
    checksums-append \
                    ${stage0(ruststd)}${extract.suffix} \
                    rmd160  2873bd63f74c1d225a0a3392bb8cfa5534679dc1 \
                    sha256  e454d4f5fd1e66f48d6ea8f102a96a15325cf969079f4485aab8e4486b96e2d8 \
                    ${stage0(rustc)}${extract.suffix} \
                    rmd160  e4622e6082c4666e06bc173ee669f8198661d04a \
                    sha256  618b0dea1e1563d22cb58c1d54344c096e7a4e2d138a17413a349a3edc753745 \
                    ${stage0(cargo)}${extract.suffix} \
                    rmd160  17458dce93eb7e644385bd82ecb511311765e5e6 \
                    sha256  6b7a0a97e0d87cca7b7a5e090d168be6cdbb03298381bece33df493447e17e76
} else {
    checksums-append \
                    ${stage0(ruststd)}${extract.suffix} \
                    rmd160  5b2d5f9e7ed73112fc970d5d74eef392b5c490a8 \
                    sha256  c2859aeb763edc07ec289a929c66f269373de67908d3a9be069868a8c103c833 \
                    ${stage0(rustc)}${extract.suffix} \
                    rmd160  f15d358053c4979a027299c68ba0dd8ca50df444 \
                    sha256  61d8774c6e348addc1e82fe598b5d007f30d3d8992d95f0530048236dedf4e0d \
                    ${stage0(cargo)}${extract.suffix} \
                    rmd160  ac5eff8ae2489845f9761c275b03677a50309c1a \
                    sha256  b6f7c662ea75a94f5a5e41c2fee95f09a5ba168429ac8cdd41f6ba2c78d1b07f
}

set stage0(dir)     ${worksrcpath}/build/stage0

pre-fetch {
    if {${os.platform} eq "darwin" && ${os.major} < 11} {
        ui_error "${name} is only supported on OS X 10.7 Lion or later."
        return -code error "unsupported platform version"
    }
}

post-extract {
    file mkdir ${stage0(dir)}
    system "cp -r ${workpath}/${stage0(ruststd)}/rust-std-${rust_platform}/* ${stage0(dir)}"
    system "cp -r ${workpath}/${stage0(rustc)}/rustc/* ${stage0(dir)}"
    system "cp -r ${workpath}/${stage0(cargo)}/cargo/* ${stage0(dir)}"
}

configure.args      --build=${rust_platform} \
                    --enable-vendor \
                    --default-linker=${configure.cc} \
                    --disable-codegen-tests \
                    --disable-docs \
                    --llvm-root=${prefix}/libexec/llvm-5.0 \
                    --local-rust-root=${stage0(dir)} \
                    --release-channel=stable \
                    --set=target.${rust_platform}.cc=${configure.cc} \
                    --set=target.${rust_platform}.cxx=${configure.cxx} \
                    --set=target.${rust_platform}.linker=${configure.cc}

build.env           RUSTC_SAVE_ANALYSIS=api
build.args          VERBOSE=1 BOOTSTRAP_ARGS="-v -j${build.jobs}"

test.run            yes
test.target         check
test.args           VERBOSE=1

destroot.args       VERBOSE=1
post-destroot {
    if {${subport} eq ${name}} {
        file copy \
            ${worksrcpath}/build/${rust_platform}/stage1-std/${rust_platform}/release/deps/save-analysis \
            ${destroot}${prefix}/lib/rustlib/${rust_platform}/analysis

        xinstall -d ${destroot}${prefix}/share/${name}
        xinstall -m 644 ${worksrcpath}/src/etc/ctags.rust \
            ${destroot}${prefix}/share/${name}
    }
}

livecheck.type      regex
livecheck.url       https://github.com/rust-lang/rust/tags
livecheck.regex     archive/(\[\\d\\.\]+).zip

subport rust-src {
    # remove dependencies
    depends_build
    depends_lib

    description     Source code for the rust programming language
    long_description ${description}

    use_configure no

    build {}

    destroot {
        xinstall -d ${destroot}${prefix}/share/rust
        move ${worksrcpath}/src ${destroot}${prefix}/share/rust/src

        # correct the permissions
        system -W ${destroot}${prefix}/share/rust "find . -type d -exec chmod 755 {} \\;"
        system -W ${destroot}${prefix}/share/rust "find . -type f -exec chmod 644 {} \\;"

        # delete the test directories (which for some god awful reason contains binaries)
        system -W ${destroot}${prefix}/share/rust "find . -type d -name test -print0 | xargs -0 rm -rf"
    }
}
