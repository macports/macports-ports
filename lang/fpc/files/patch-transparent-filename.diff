diff -Naur compiler/globtype.pas compiler/globtype.pas
--- compiler/globtype.pas	2017-02-18 11:41:40.000000000 +0100
+++ compiler/globtype.pas	2017-02-18 11:49:27.000000000 +0100
@@ -179,6 +179,7 @@
          { parameter switches }
          cs_check_unit_name,cs_constructor_name,cs_support_exceptions,
          cs_support_c_objectivepas,
+         cs_transparent_file_names,
          { units }
          cs_load_objpas_unit,
          cs_load_gpc_unit,
diff -Naur compiler/ngenutil.pas compiler/ngenutil.pas
--- compiler/ngenutil.pas	2017-02-18 11:41:57.000000000 +0100
+++ compiler/ngenutil.pas	2017-02-18 11:48:51.000000000 +0100
@@ -274,12 +274,22 @@
        (tfiledef(tstaticvarsym(p).vardef).filetyp=ft_text) and
        (tstaticvarsym(p).isoindex<>0) then
        begin
-         addstatement(stat^,ccallnode.createintern('fpc_textinit_iso',
-           ccallparanode.create(
-             cordconstnode.create(tstaticvarsym(p).isoindex,uinttype,false),
-           ccallparanode.create(
-             cloadnode.create(tstaticvarsym(p),tstaticvarsym(p).Owner),
-           nil))));
+         if cs_transparent_file_names in current_settings.globalswitches then
+           addstatement(stat^,ccallnode.createintern('fpc_textinit_filename_iso',
+             ccallparanode.create(
+               cstringconstnode.createstr(tstaticvarsym(p).Name),
+             ccallparanode.create(
+               cordconstnode.create(tstaticvarsym(p).isoindex,uinttype,false),
+             ccallparanode.create(
+               cloadnode.create(tstaticvarsym(p),tstaticvarsym(p).Owner),
+             nil)))))
+         else
+           addstatement(stat^,ccallnode.createintern('fpc_textinit_iso',
+             ccallparanode.create(
+               cordconstnode.create(tstaticvarsym(p).isoindex,uinttype,false),
+             ccallparanode.create(
+               cloadnode.create(tstaticvarsym(p),tstaticvarsym(p).Owner),
+             nil))));
        end;
     end;
 
diff -Naur compiler/options.pas compiler/options.pas
--- compiler/options.pas	2017-02-18 11:42:12.000000000 +0100
+++ compiler/options.pas	2017-02-18 11:47:51.000000000 +0100
@@ -1933,6 +1933,11 @@
                            include(init_settings.moduleswitches,cs_support_macro);
                        'o' : //an alternative to -Mtp
                          SetCompileMode('TP',true);
+                       'r' :
+                         If UnsetBool(More, j, opt, false) then
+                           exclude(init_settings.globalswitches,cs_transparent_file_names)
+                         else
+                           include(init_settings.globalswitches,cs_transparent_file_names);
 {$ifdef gpc_mode}
                        'p' : //an alternative to -Mgpc
                          SetCompileMode('GPC',true);
diff -Naur rtl/inc/compproc.inc rtl/inc/compproc.inc
--- rtl/inc/compproc.inc	2017-02-18 11:44:14.000000000 +0100
+++ rtl/inc/compproc.inc	2017-02-18 11:47:10.000000000 +0100
@@ -411,6 +411,7 @@
 Function fpc_get_input:PText;compilerproc;
 Function fpc_get_output:PText;compilerproc;
 Procedure fpc_textinit_iso(var t : Text;nr : DWord);compilerproc;
+Procedure fpc_textinit_filename_iso(var t : Text;nr : DWord;const filename : string);compilerproc;
 Procedure fpc_textclose_iso(var t : Text);compilerproc;
 Procedure fpc_Write_End(var f:Text); compilerproc;
 Procedure fpc_Writeln_End(var f:Text); compilerproc;
diff -Naur rtl/inc/text.inc rtl/inc/text.inc
--- rtl/inc/text.inc	2017-02-18 11:44:36.000000000 +0100
+++ rtl/inc/text.inc	2017-02-18 11:46:23.000000000 +0100
@@ -652,6 +652,20 @@
 {$endif FPC_HAS_FEATURE_COMMANDARGS}
 end;
 
+Procedure fpc_textinit_filename_iso(var t : Text;nr : DWord;const filename : string);compilerproc;
+begin
+{$ifdef FPC_HAS_FEATURE_COMMANDARGS}
+  if paramstr(nr)='' then
+    assign(t,filename+'.txt')
+  else
+    assign(t,paramstr(nr));
+{$else FPC_HAS_FEATURE_COMMANDARGS}
+  { primitive workaround for targets supporting no command line arguments,
+    invent some file name, try to avoid complex procedures like concating strings which might
+    pull-in bigger parts of the rtl }
+  assign(t,chr((nr mod 16)+65));
+{$endif FPC_HAS_FEATURE_COMMANDARGS}
+end;
 
 Procedure fpc_textclose_iso(var t : Text);compilerproc;
 begin
