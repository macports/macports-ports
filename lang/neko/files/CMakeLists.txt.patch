Don't require the build to be for x86_64.

Simplified from:
https://github.com/HaxeFoundation/neko/pull/224
--- CMakeLists.txt.orig	2019-10-24 12:51:25.000000000 -0500
+++ CMakeLists.txt	2023-01-13 00:20:00.000000000 -0600
@@ -6,7 +6,6 @@
 include(TestBigEndian)
 project(Neko C)
 
-set(CMAKE_OSX_ARCHITECTURES x86_64)
 set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
 
 if (${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD")
@@ -55,15 +54,7 @@
 # TODO libraries should not be built from this file, but rather by traversing the tree using add_subdirectory
 #add_subdirectory(libs)
 
-if (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
-	if (${CMAKE_OSX_ARCHITECTURES} STREQUAL "i386")
-		set(arch_64 "")
-	elseif (${CMAKE_OSX_ARCHITECTURES} STREQUAL "x86_64")
-		set(arch_64 "64")
-	else()
-		message( FATAL_ERROR "CMAKE_OSX_ARCHITECTURES should be i386 or x86_64." )
-	endif()
-else()
+if (NOT ${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
 	if(CMAKE_SIZEOF_VOID_P EQUAL 8)
 		set(arch_64 "64")
 	else()
@@ -735,22 +726,6 @@
 	set(bin_archive_format tar.gz)
 endif()
 
-if (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
-	if (${CMAKE_OSX_ARCHITECTURES} STREQUAL "i386")
-		set(arch_64 "")
-	elseif (${CMAKE_OSX_ARCHITECTURES} STREQUAL "x86_64")
-		set(arch_64 "64")
-	else()
-		message( FATAL_ERROR "CMAKE_OSX_ARCHITECTURES should be i386 or x86_64." )
-	endif()
-else()
-	if(CMAKE_SIZEOF_VOID_P EQUAL 8)
-		set(arch_64 "64")
-	else()
-		set(arch_64 "")
-	endif()
-endif()
-
 if (${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
 	set(OS_NAME "win")
 elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
