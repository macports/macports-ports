--- configure.ac	2023-06-17 13:40:28.000000000 +0800
+++ configure.ac	2023-10-23 05:40:56.000000000 +0800
@@ -220,7 +220,7 @@
 #
 # Mac OS X.
 #
-*86-*-*darwin* | *86_64-*-*darwin*) 
+*-*-darwin*) 
   AC_DEFINE(BUILD_BSD, 1, [Define this if DARWIN was detected]) 
   AC_DEFINE(HAVE_IEEE_754, 1, [Define this if IEEE_754 compliant]) 
   AC_MSG_RESULT([mac os x])
@@ -296,7 +296,7 @@
 AC_ARG_ENABLE(standard-types, [AS_HELP_STRING([--enable-standard-types], [enable int*4 and real*8 modes (default is "yes")])], , enable_standard_types=yes) 
 AC_ARG_ENABLE(long-types, [AS_HELP_STRING([--enable-long-types], [if available, enable int*8 and real*10, real*16 modes (default is "yes")])], , enable_long_types=yes) 
 AC_ARG_ENABLE(pic, [AS_HELP_STRING([--enable-pic=option], [if using gcc, enable option to generate PIC (default is "-fPIC")])], , enable_pic="-fPIC") 
-AC_ARG_ENABLE(arch, [AS_HELP_STRING([--enable-arch=cpu], [if using gcc, enable emitting architecture-tuned assembly code (default is "no")])], , enable_arch=no) 
+AC_ARG_ENABLE(arch, [AS_HELP_STRING([--enable-arch], [if using gcc, enable emitting architecture-tuned assembly code (default is "no")])], , enable_arch=no) 
 
 AC_CHECK_PROG(a68g_exists, a68g, "yes", "no")
 AC_CHECK_PROG(sed_exists, sed, "yes", "no")
@@ -318,7 +318,7 @@
 
 AC_MSG_NOTICE([initialising...])
 AM_INIT_AUTOMAKE([subdir-objects serial-tests])
-AC_PREFIX_DEFAULT(/usr/local)
+AC_PREFIX_DEFAULT(@PREFIX@)
 AC_CONFIG_SRCDIR([src/include/a68g.h])
 AC_CONFIG_HEADERS([a68g-config.h])
 AC_PROG_INSTALL
@@ -342,8 +342,8 @@
 else
 # On rhel8 "rpmbuild" sneaks in -pie and -fPIE, so a68g also needs to pass through.
 # On Suse15 the header files for pgsql and R have their own directories.
-  COPTFLAGS="-g -O2 -Wall -I /usr/include/pgsql -I /usr/lib64/R/include"
-  LDOPTFLAG="-L /usr/lib64/R/lib"
+#  COPTFLAGS="-g -O2 -Wall -I @POSTGRE_INC@ -I @R_RES@/include"
+#  LDOPTFLAG="-L @R_RES@/lib/libR.dylib"
 # from /usr/lib/rpm/redhat/macros
   CFLAGS="${CFLAGS:-$COPTFLAGS}" ; export CFLAGS
   LDFLAGS="${LDFLAGS:-$LDOPTFLAGS}" ; export LDFLAGS
@@ -402,16 +402,16 @@
 # Optionally, tune for a specific processor.
 #
   if test "x$enable_arch" != "xno"; then
-    AC_MSG_CHECKING([whether $CC accepts -march=$enable_arch])
+    AC_MSG_CHECKING([whether $CC accepts -@NAT_OPT@=native])
     a68g_ac_save_CFLAGS=$CFLAGS
-    a68g_ac_march="-march=$enable_arch"
+    a68g_ac_march="-@NAT_OPT@=native"
     CFLAGS="$a68g_ac_save_CFLAGS $a68g_ac_march"
     _AC_COMPILE_IFELSE([AC_LANG_PROGRAM()], 
       [AC_MSG_RESULT(yes)
        AC_DEFINE_UNQUOTED(HAVE_TUNING, "$a68g_ac_march", [Define this if user wants to tune for a specific CPU]) 
       ], 
       [AC_MSG_RESULT(no)
-       AC_MSG_WARN([your CPU name is not accepted; resetting to default])
+       AC_MSG_WARN([your compiler does not support native optimization; resetting to default])
        CFLAGS="$a68g_ac_save_CFLAGS"
       ]
     )
@@ -531,33 +531,33 @@
 
 AC_MSG_NOTICE([extra include directories...])
 
-# GSL on OpenBSD
+# GSL
 
-if test -d /usr/local/include/gsl; then
-  CFLAGS="$CFLAGS -I/usr/local/include"
-  CPPFLAGS="$CPPFLAGS -I/usr/local/include"
-  CXXFLAGS="$CXXFLAGS -I/usr/local/include"
-  LDFLAGS="$LDFLAGS -L/usr/local/lib"
-fi
-
-# R on Debian
-# 
-# if test -d /usr/share/R/include; then
-#   AC_DEFINE(HAVE_USR_SHARE_R_INCLUDE, 1, [Define this if /usr/share/R/include was detected]) 
-#   CFLAGS="$CFLAGS -I/usr/share/R/include"
-#   CPPFLAGS="$CPPFLAGS -I/usr/share/R/include"
-#   CXXFLAGS="$CXXFLAGS -I/usr/share/R/include"
-#   LDFLAGS="$LDFLAGS -L/usr/share/R/lib"
-# fi
+if test -d @PREFIX@/include/gsl; then
+  CFLAGS="$CFLAGS -I@PREFIX@/include"
+  CPPFLAGS="$CPPFLAGS -I@PREFIX@/include"
+  CXXFLAGS="$CXXFLAGS -I@PREFIX@/include"
+  LDFLAGS="$LDFLAGS -L@PREFIX@/lib"
+fi
+
+# R
+
+if test -d @R_RES@/include; then
+  AC_DEFINE(HAVE_USR_SHARE_R_INCLUDE, 1, [Define this if @R_RES@/include was detected]) 
+  CFLAGS="$CFLAGS -I@R_RES@/include"
+  CPPFLAGS="$CPPFLAGS -I@R_RES@/include"
+  CXXFLAGS="$CXXFLAGS -I@R_RES@/include"
+  LDFLAGS="$LDFLAGS -L@R_RES@/lib"
+fi
 
 # Postgresql
 
-if test -d /usr/local/pgsql/include; then
-  AC_DEFINE(HAVE_USR_LOCAL_PGSQL_INCLUDE, 1, [Define this if /usr/local/pgsql/include was detected]) 
-  CFLAGS="$CFLAGS -I/usr/local/pgsql/include"
-  CPPFLAGS="$CPPFLAGS -I/usr/local/pgsql/include"
-  CXXFLAGS="$CXXFLAGS -I/usr/local/pgsql/include"
-  LDFLAGS="$LDFLAGS -L/usr/local/pgsql/lib"
+if test -d @POSTGRE_INC@; then
+  AC_DEFINE(HAVE_USR_LOCAL_PGSQL_INCLUDE, 1, [Define this if @POSTGRE_INC@ was detected]) 
+  CFLAGS="$CFLAGS -I@POSTGRE_INC@"
+  CPPFLAGS="$CPPFLAGS -I@POSTGRE_INC@"
+  CXXFLAGS="$CXXFLAGS -I@POSTGRE_INC@"
+  LDFLAGS="$LDFLAGS -L@POSTGRE_LIB@"
 fi
 
 if test -d /usr/pkg/pgsql/include; then
@@ -821,7 +821,7 @@
     [#define MATHLIB_STANDALONE
      #include <Rmath.h>
     ])
-  AC_CHECK_LIB([Rmath], [ptukey], [], [enable_mathlib=no])
+  AC_CHECK_LIB([R], [ptukey], [], [enable_mathlib=no])
   if test "x$enable_mathlib" = "xyes"; then
     AC_DEFINE(HAVE_MATHLIB, 1, [Define this if a good mathlib installation was detected]) 
   fi
