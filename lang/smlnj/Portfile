# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.94
categories          lang ml
license             BSD
maintainers         {toby @tobypeterson} openmaintainer
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

supported_archs     x86_64 i386 ppc
universal_variant   no

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    doc.tgz                 e52ba725ffbe131e2d97c234753cfcfb7765b9f13f7cc6a476a6c12f8583acf5 fd28b61fe1d921086fc280b38179892af528c3d0 2088161 \
    boot.amd64-unix.tgz     032c08034070cdc6132081538be6a32cd459055689d30005401c9a6f02498119 03e3179def5271235418ed5670265224c83ff737 6037153 \
    boot.ppc-unix.tgz       e28e007289cc77108ec6cea610d04ace4f696ad42ea105cf88e9acee40a82fcc e36c75d8f4aa07d6d3e112e3c85307cebeb70015 5949077 \
    boot.x86-unix.tgz       71c7bc2f7763d52211a7f0188619dbd175b12bb18f97b30cf392ccfdea1fe762 0def8d29dc22c391562829b4cc96cb53fe2f99ca 6024880 \
    config.tgz              6a29d26f4a4aa11e5fe7c50399fa940d27a01ae2caa412d1ad65b33555e6d69b 60c23e2018f133b3779cce2a9569027aaad0788a 516610  \
    cm.tgz                  77765f396304c0081022637afc2c6038cf5f86b6be1d6642ffb9db1766b6e0f4 759b82433827d483bdc2b903049ad639c84a9526 220262  \
    compiler.tgz            430d725645fe9dec0a41c0a5b90060994170b5ea6ceb4b320c6f257d0290bdba b186ca0cbdf805f2b9373ae571f1fa302f192259 848653  \
    runtime.tgz             e9938960302d4f628fa889ddb4d85fb4f9237506aa5acd73883832725b4bb823 2ff3a3690f8fc0290f2e6cc4d481fb4eb2e1443f 353325  \
    system.tgz              b052852206fe418cdca119a4eafcb5d06822c3dbb9e2afa06e79b9d4eb00b152 b8b0ca41d5e9d78fd1fa7033b98922849fb3da4d 274077  \
    MLRISC.tgz              3b2e5f8f674b9670ad5b3f702ec8f994fc0fb296b50592d400d6e1fb9d0b6e78 1f1afb31ee722d4f49a81c549a668f18969c2245 1460022 \
    smlnj-lib.tgz           e78571bc578668850daa653a15f10d3dc6d50bde53390e87d9a3ac79347f74ef 2209dcb295aafee961d953c0975fac4997dd09c1 457926  \
    old-basis.tgz           6221cae7356d115a622328836f9b5da87a261c424ed6542399d52b06bee54fce 197eda24bc914d8409f400e96d01a3fea04462ac 1212    \
    ckit.tgz                e25b55ea2b05e8b15c705f342d56bd87766452aacef37f9d71f392c6f9380995 1bee58b377718314791018e73cb77a52bac7a2b2 201007  \
    nlffi.tgz               1482e387ea24d2949f034cdb5178b335eea36c2aa351e4bdefb72fb18229638d ab94d423d4c0787f2ce46e817cac83ea8a1bbbdb 75090   \
    cml.tgz                 74e0e50e8e13214d07a0aef66e9f11f40c928fd7afa6efa76f7b0c8c75b50060 db3a2aeea3f671f5756f26fadda3f80f08618e1e 105355  \
    eXene.tgz               008bae665cb15291cab4dbd8a96e21f55c3e2f5ac1600ac63f264a7dc9801d5e d321997faabeb74a180680eb7431a52de940e6a6 720698  \
    ml-lpt.tgz              d27f80d2be7c87cc389ed7f40850b16d778f213b9dfc0750fbf714b728416714 987b8f46c4eea0dfd9e1be83d07c2cadda1d6cbc 267247  \
    ml-lex.tgz              31ccbc5598063a6ea11073f78737c764a63e272462824a287e326c8026335c14 4fd424ea1bffcce33c4f4d2892bdcd8609b5c189 27869   \
    ml-yacc.tgz             d5c09318c754e13695df916ef83f2c83bb4a3f668970f82d5bfbf4ef9c2143ee 54bec4b274f8c6333920da86357aba9690f535bb 101726  \
    ml-burg.tgz             fdd38446833c9ddf720bd02daaa1a5065e32c97bd01785e4b30612d866271c0b 41a9a572b61453f2c67ec3f1761ad274f37af5be 40550   \
    pgraph.tgz              04990ce4039cf6c62af98241223bbba31601528c43425334e971ee66487d9830 c5f2a494106b56de157402b4f7d78ea80d02f6b4 5432    \
    trace-debug-profile.tgz 91c425663df0cfacee5b4d6bd8341e9169bb1c4cf25fc6fd1946da0701ba11fd 4763ee5e6d8917c2bc3df13baad95e6dbd09fcbf 3936    \
    heap2asm.tgz            e6f0b066ced939be72567c82bd0d32495e8e98a66604a6f28b2705c9896b163c fa23eed40397a908c0460f2474495731ec3da59f 1395    \
    smlnj-c.tgz             01ba46f2e2ab6cb6a112fa83e88d89f91e57393d656108ea88dd17bb26cbdef0 2fa8cc073be5dc60d2e20de4bff3929c6079ee59 10622   \
    asdl.tgz                85f3ec58e8f6ec7da9eb9e2204cd65824798c742828d4a4fcac7c0d29c3703e4 941d85292cef5cbb8e1e0f21210e3f5b7b0e982f 205535  \
]

foreach {tarball sha256 rmd160 size} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha256 $sha256 rmd160 $rmd160 size $size
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    #reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request heap2asm|request heap2asm|" \
        ${worksrcpath}/config/targets
}

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target
if {${build_arch} eq "x86_64"} {
    build.args-append   -default 64
}

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 755 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/([0-9.]+)/}
