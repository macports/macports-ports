# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.80
categories          lang ml
license             BSD
maintainers         bfulgham toby
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    ckit.tgz ad6ee5f6f2c9dd6719cc43840f8d4b49b1bb964f \
    cml.tgz 2777c3dc0ed84dfae6ea40f7bbe3670fcd65bdcf \
    cm.tgz 289c39d1c149dca43aa8d8096e826f2c86b141a4 \
    compiler.tgz 4dbc2d75abd2f9d6ae36993a570372e8075d3dae \
    config.tgz 918df9e648bf19619e89c54114818e1d18a44bda \
    doc.tgz 9b3a070506c3810213293837c8ef531c3a20400f \
    eXene.tgz e7306683fa706a84a4fc5c05cbe1df12bb0984e1 \
    heap2asm.tgz 72cacbaa4d335e0742bb9dc872e37db21a0e29f4 \
    ml-burg.tgz b3978428c9d2147a3e4527cf1a8fdbb54da24d2f \
    ml-lex.tgz b762e312b8c2a11d92f60269a3e65f99f2728061 \
    ml-lpt.tgz 82c2a13c6e4c833c17335ebb48e4e89b15bdf580 \
    MLRISC.tgz ca958d7f14ca7a103921e0c1bdde1a7097e74bed \
    ml-yacc.tgz 9b90c774c951eb747b249a610467f86af7b9e64b \
    nlffi.tgz 80e9854839232036b71786943170c58067a6a04d \
    old-basis.tgz d05adf45d75d954763ce178b448f5d2d5aa9685c \
    pgraph.tgz 90da4ce310f3c2d89d6d411110f53027fb985616 \
    runtime.tgz 7a7cc05dcba481b47f50c7d87c4abcc85e51cce4 \
    smlnj-c.tgz a69ff7cbe6821bb8d50f2d729992be80ab69e12f \
    smlnj-lib.tgz b3fa8ac6531f737c6b96b2250a3f827ffa17408d \
    system.tgz f4bd70f6cc5369def248f5632075290e881a9aac \
    trace-debug-profile.tgz f0fdd25f38a311e67a29628f7a8bc5dad2256e87 \
]

foreach {tarball checksum} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha1 $checksum
}


# Platform-specific boot code (omitted: sparc-unix, x86-win32)
platform powerpc {
    distfiles-append boot.ppc-unix.tgz
    checksums-append boot.ppc-unix.tgz sha1 ee32acfd97f7bcb4ec337565805f3d358ab299ba
}
platform i386 {
    distfiles-append boot.x86-unix.tgz
    checksums-append boot.x86-unix.tgz sha1 df24a467d68dd9259a7a3d00c5d37c51dbc7ed2a
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request heap2asm |request heap2asm|" \
        ${worksrcpath}/config/targets
}

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 555 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/([0-9.]+)/}
