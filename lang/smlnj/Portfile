# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.98.1
categories          lang ml
license             BSD
maintainers         {toby @tobypeterson} openmaintainer
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

supported_archs     x86_64 i386 ppc
universal_variant   no

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    doc.tgz                 fc968efbbdcaf7f2b2e52ac0b13e931b09365e2a944e5127240a39c3370d5a2f 18ff7a59d49beabe8197dd74ff1eeb7a0b41e5d0 2430674 \
    boot.amd64-unix.tgz     d28a5c607e8160824b6c638223b9cad627c5387995813f88e5f1343b6e9c8030 86e5e2bb2e2bf45596c93c9eeade7541a5636c33 5927904 \
    boot.ppc-unix.tgz       07c5146fe4c9d0d91a7e15f465dce2a6d422c084e18143584b2e466e9244f38a 8c03e45a7c31c40f9f5e653e5ebc95cc517b160d 5831958 \
    boot.x86-unix.tgz       2231023a9c234da67d5145d0f18f9e84109f96bac29c69a78b68bc86796f16d3 f58d0deaac2099b75201cd7ec2378b8ca9e17e71 5911988 \
    config.tgz              6a71b825d1a84cd2b0ebe05618763882e35c95ec5ee37a6ec960a83649b082c3 ebfc91d46b9e4a359390466df2ff3234699711ae 517536  \
    cm.tgz                  ae415fc4d506fc505f86b3cd91504e6c3f81db66c214eef81631d9523097a1a8 ca53c004c5a270ac799b6dfc14075f6ed9cc3777 220249  \
    compiler.tgz            d5138fea2298d6161d281ce7b2db2970f9acb38f2dbb7bf36f5925e6fe75d97f 0c000cf5fa6ad26e769ef84e4bb794b5a44355a6 1112301 \
    runtime.tgz             9d91ce533bf6ad62dd124de373f3a39ce7f3becb75381fe4ea8c9cc3ac557f18 abb95c4767c433fe8852e721b341d7bfaef4e270 336393  \
    system.tgz              ab84a0d2368a2a643af4dedac7949edef8a0c93887460c250bd04669505d6d8a c4a4b5b3b87c2006d715c42f2276850bb89b6685 278085  \
    MLRISC.tgz              d4c0ce803eb4ff92ee53a4d803ce9cf32b7bd1bf05c9d5d058a3e5e4bc09c9e0 0ac93e412eb1d9acca71181268348d80ef8dd61a 1460244 \
    smlnj-lib.tgz           b71845bce1df5fc27f9313537ed8ad0b2b62ba12499b2ac9c5618750aa2815fe bf2b3cad78318f220901f724617af3e9991f06a6 631206  \
    old-basis.tgz           cb6184f8851e9797f1347f8b0e58a46e60382161e9cbbe49a796006d9ee464e8 bda4588764d0f570dc041748c82dd20f02fc415a 1206    \
    ckit.tgz                8662416a5b77af9a7e342e6ea4a259cee246620748d9d0c8f1fbefe9851c03a8 66c71c02055432116971bb12ad46664bec79af43 201002  \
    nlffi.tgz               916a2fef49607084c9bc46931d0e96998b4ff4d81750aa4fbc3e114a0e32c2b6 a94fd5f435b91bbee8ff51ce30652befdcd2c14f 75095   \
    cml.tgz                 742aa253bb2907b90f44d8c86506859d66417da37caaeb5bd5462f6c141d895a fe55117fc6d4d853448f281d00dd33b17869299b 104477  \
    eXene.tgz               3ca64f3ff84f64b70bd53073beb903ff2111d2badd8196ea204feb6fd887a01d 47b4b9bec80d3c18b1556713719b5373c1eb34d4 721086  \
    ml-lpt.tgz              871115ad58e2212c128156289896c75b6112f48867a79de0f0af448ed83b6440 4c4e71f4d0b37886980e85183244abbd3d38edf2 267611  \
    ml-lex.tgz              4e87db5d66d2550eff551e318b503c3fb43c62cb734d36aadb71025437f302b3 d149d0cd31eef4eaa04ab67768fb6a2500f1dfa7 28151   \
    ml-yacc.tgz             821ac606ef971b4aa28800b9b96dc0fce97a04aca67b23377a46ded07b08f71a 05adb90f47ad831ec46b92661d773f649009b143 101694  \
    ml-burg.tgz             1a49a740193fff6f40169757b8238ec87eed8cb9b4be6620e040a2ac26b25627 4ad3403789d85a6e29faa9f2ab54209274349932 40492   \
    pgraph.tgz              01b76a7fa8979fc4500f80e17af3c3cf961b4c9340a088c7ddee4bb4487a649a eaad2fd69843611b1ae091d5df3ab59b4dbd4ac4 5409    \
    trace-debug-profile.tgz 18952f6d7c9c1f5ae35d2346f11a2b201fc85cf0157856da78dbcd8677cb7889 444c95b7e9bc7140dd7213840cbd5229f59acd9a 3920    \
    heap2asm.tgz            6823a20b1931246832631ffb6c9bc99c311fac80a7568a6eb3524611c0560287 9a944bd0d88f8866e4e5b92ba8b6d2547fcf49a2 1779    \
    smlnj-c.tgz             2e6e9dca3141afc852153bf8fa3c82d1d8e84f20fc35225a2799bbcfa85513d1 81c83b12b52514e6b3da749275e7041834500bdc 10609   \
    asdl.tgz                2c9689eb47b5f5ff05bce6136e0c1d1719b747d1b40fd1ee2550f466880d3257 823192c51ce05b19e1ab3dd513b89e552270e7cb 219263  \
]

foreach {tarball sha256 rmd160 size} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha256 $sha256 rmd160 $rmd160 size $size
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff \
                    patch-config-_arch-n-opsys.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request pgraph-util|request pgraph-util|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request nowhere|request nowhere|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request heap2asm|request heap2asm|" \
        ${worksrcpath}/config/targets
}

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target
if {${build_arch} eq "x86_64"} {
    build.args-append   -default 64
}

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 755 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/([0-9.]+)/}
