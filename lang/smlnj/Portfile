# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.84
categories          lang ml
license             BSD
maintainers         {toby @tobypeterson} openmaintainer
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    doc.tgz                 0ed69456e4c2b851f475057a94da406c80f46cdd02a5d9077670be33122c7020 632689f359211a54e5bbdf4e93c896630f08891a 2029114 \
    boot.ppc-unix.tgz       f2f1ab475b42643643989406e3a50e13086e0b629098e35c25c940cdf8f57ca4 deaa9c7bdb83e3e5b4c627dd67a1724febd9484e 5701169 \
    boot.x86-unix.tgz       a29e3b0ca623da197e9c18ea64db4c2a08fe5e6add85c0d053c4ecfa653ace82 9ceec9ade048de61c6f7a7be343aa41dffb3a4ae 5762714 \
    config.tgz              1810d3ca768222e120c7a3f2f93aafd652705371fc73929423c671dce3cef832 49871a9447c8567ed6588e73073c71dab7117bf6 514275  \
    cm.tgz                  7055c60481a887f27a5135ac1f33233565b99a7c99c4aa73e023e28e629b0663 c06690b11b2ded9be3c0a655c20864896832a456 220278  \
    compiler.tgz            6d23aff2e75727bf6969b05a070128f187e06f60408aabf6a71e0475326fee87 fe5bd56c5b96c011c59f8313ac79817f08bdc436 862298  \
    runtime.tgz             5fcf4bbdeaddb247f69a333d2295f5f5c0be55b1f86ff4fbffb63f0021d84d6c 814e64047f9fa59deefba0c998b08d5032855745 355339  \
    system.tgz              f46b1de790000a98f4aa9830325d39cb1e4867338d4db6b8a102084db1512218 452e940bc7b880b920685fbab44e9c79d13036ad 261237  \
    MLRISC.tgz              da3c5236018fa7608863c2fe1f3c57b60013df98b5a249fb3d4edc738cdfd072 ec22dba892603565f97bc2a2e6e27b81c5b50e63 1458550 \
    smlnj-lib.tgz           3356924655277416d8a491c1d601a0f567ab3d15cb17e243620e85cb28f0e9dd 37041f048382ef15252a693fb0b48ea99522dc75 456254  \
    old-basis.tgz           cf15fe5c242f19f0605cd38a7bef3c1ebc89d5204c4cf68fac479198dd9fed93 3b3a9b9a6753e69353da873e87d9007e0681e8a8 1080    \
    ckit.tgz                7e2534e393d2372cad8ff9ddd306881db91bbbcc2b0e0538e76868c86c658c36 30a418369fe24a8a0d1520efefdd1aea0fc6eb87 198419  \
    nlffi.tgz               8b96a82a3d63b000b70a1b982aab9750ce9caa77f316f6a923969e86b0133f31 f969a41948bf453d72336fff8f9ae33d9ddcc25c 75036   \
    cml.tgz                 556110c746db863211ac8a97e1bf097b0e5d45dfea4b3e8194b6c389ac2b569a 2814650c03d9532e8910a928a78fcb08c45beb7b 105655  \
    eXene.tgz               3fe1c6a1a334e7d7359fbcfd053066c88cb7705a90975b60fff946554aa0019c 0a8df3633743d95618afa02cf890a957c5c6413a 720713  \
    ml-lpt.tgz              2f60e1467a69fd4fb5501354244337926bc2a65225dde328f6aa3883b14fb3a5 960ff0e66f2b8a583a187c6f8a1e0ff92214cec0 267076  \
    ml-lex.tgz              cc7e045aa9667f1eed055db1defca0e830eed34c08f3dfdf37f698964fe04070 1443ab47d4288a9996467678e9b4ebd59a7b4030 27833   \
    ml-yacc.tgz             cfebaeb5f08810fcc93c49bf171834b7bf14b5f7e76d206e0afa35e18887bdb9 e9abdb381be0e0b2364e8161fbe689ca5bc60fb0 101692  \
    ml-burg.tgz             62ea37b13788078e3ea77d3b870da42788153c348009f827f2c0b05cfc07d918 ecddaec0cc73e867f13ea3a429ca0c9beb64af13 40510   \
    pgraph.tgz              aa2f14de13a540dbc370b45757156c0b03516a5b8f97b5759292841d7b7ac1cb 416b6a1f449eae80cb56798cb0acf2bb1f1edfae 5432    \
    trace-debug-profile.tgz ecc54281b8654c75f8b9d4ebdf1ff67de71ef31297cf1b14115cd75645e46a5a 04b21e07d09e1aaf0dfb632e863fa57b0bad7b23 3939    \
    heap2asm.tgz            3d33c52b650536762d47534f07709e749cc821ce515aef2fb9a746db11433e95 e614ca9624f9a7fbee1e1112afed3eb6dbde92db 1343    \
    smlnj-c.tgz             145a513becb4c98991af7eae81ae19b8fff336458f1f011eafdc283cb76deee9 f72b17c375137f3aefceb7f07dabbac086eff92e 10623   \
    asdl.tgz                8be712200dc186b8bbe79b3ae111f2c490bf74f4709882d3459ac061f66b5b8e 27fa1fef19efb299e2a23f72c0a627fac7953921 193047  \
]

foreach {tarball sha256 rmd160 size} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha256 $sha256 rmd160 $rmd160 size $size
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff patch-config-_arch-n-opsys.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request heap2asm|request heap2asm|" \
        ${worksrcpath}/config/targets
}

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 755 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/([0-9.]+)/}
