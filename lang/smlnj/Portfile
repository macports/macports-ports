# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.96
categories          lang ml
license             BSD
maintainers         {toby @tobypeterson} openmaintainer
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

supported_archs     x86_64 i386 ppc
universal_variant   no

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    doc.tgz                 24243d3a58b50973d151304f878bd2e80a6ce71cefced114cb694b89e039641a a2ad560c54115ed2df2642ef81a578ce5cb7f710 2134988 \
    boot.amd64-unix.tgz     605a118476d251bd77e312f303df3039adea6ace521d9ac140e2187b904ec807 cc1bd606258e1e9c43e25c2982d2d849b22350f0 6031590 \
    boot.ppc-unix.tgz       c415a90285470cc06c7e5439f05af4293f591111b7e1c9bdf5a1963fa9ebbd51 98d7b11174eeeded1a277c048736da5c6ba16eec 5957038 \
    boot.x86-unix.tgz       ab08f260137fb68492d747b96d5be8ce49e8eda55a358094fd9018efd32341bd 2376a27cac5adf069bedeca8a4d343a55108ddd7 6034356 \
    config.tgz              b2bda33c1fb1472b4ca69827463b1b1b7b8a86bed72db959a558d9e4fe65de18 7b886eb2366067bf28e64ec8d934e86112de30d6 517305  \
    cm.tgz                  19e4f8096f5c8af64f20e57c5b48dacf9054c90ec14db4908a9e8c5bc505c568 e313a415850a8ad408a5433160d54b5d0664b9df 220256  \
    compiler.tgz            1382181001e0cf8d751c3d1707331f305e1ab3e41ca07af1349a73ef16df4a4c a04d757c1de523982fbe77e56c492aebc9e96558 848920  \
    runtime.tgz             46ab1f6f4282ab46f117f8b8673e70180b8b4cbc6d9afdfa305aa8510258bf69 9e84375e38580d5c9dab605487a15fbd816f34e7 336178  \
    system.tgz              8f33d350c4027e326f4b910cba2c50ae215a0b6ce93fed380b02f48c19ce3161 e52ed6cec280472885916659effa580809579dc7 274076  \
    MLRISC.tgz              193c29217e592d3e5a67cd0bde14ebfed2a2c3e4bcfae1e151e8fbe148fbe69e dc18bef8414e7d036d7de2fa6d054f5451e70af2 1460365 \
    smlnj-lib.tgz           7ff7e8008bc08f32f2080e83afa7c609171d9856ec46fcccaec7f44c309057fb 6657833a7ee6a3fa3e54810a5e17956efbd2b1d5 457923  \
    old-basis.tgz           c3fea6a6b14d3c4cfad92944bd259f6b104a76f4b7ee8dd999275dcab8336199 1b564cb6005e532cd39895227e329a35a33e128f 1215    \
    ckit.tgz                8b9301e3a2975be6877ce22edc27445630d57f51afbb77a950f386c9b3193bbf e883a3d88e65b7062ab32597af5d6a0bc5243be7 201009  \
    nlffi.tgz               fb08f68da401382396fe0cb676b0f81eda27e9360c69fbeb3d473dec3452e8ee 61927290db48e1f566a42279e1d666b8c1877d85 75084   \
    cml.tgz                 ec2b2d08343a32d911f30f34fb506fd0fed21b21378592e568107a68abc6ed8a 2fa507fb966447337b37a129949f16a2e0dd0b4d 105379  \
    eXene.tgz               0c5d642c57380b0a427d4ce9f6af84c2bb76859089b36a4f5da3a2149d7fb2bf f1e0fb4813e7ae698d2b251c713d91e23bf517e1 721127  \
    ml-lpt.tgz              3736cd60daad7510467ee2f31462cffbb43890bc4499b3efc7d671829f68e141 d3068a2b672a81b8a2d2140b92b351e02b3d6ede 267441  \
    ml-lex.tgz              02971b9026d2c6df8b425b8ac78c4065439a62e09b36fc974a98b5062874b8f0 fb1877974256822e93f857d60d1be32b367245e6 27879   \
    ml-yacc.tgz             3a8d4d345ec3832b30bde1a7b0c0f97f209f40afd80e6ff6e1c78f365a77b0e9 103dce789a2fc5613b503acad8c3b81d2d4d60a9 101727  \
    ml-burg.tgz             4286a4aa01f2063bdbea10ab1c7299b7a41a4a822a96d4a040ce404b1b3276b1 5958f621885811ad2ea0a92c28dbccf227dd7284 40552   \
    pgraph.tgz              73f0a34fc2ac5ec9ba1aa10bb732300b0aea0a63d32154c108ce42b28d1d72a6 eae7b73de76189af24e1a239dfd638c50e4dac9e 5430    \
    trace-debug-profile.tgz 5f24d0ae00fb8dde2cec660ca66395fcfcc417ee56faec7f5f420af18cabb80d 9d7597e3a79cf7942271ca82b84111db5eb285e3 3935    \
    heap2asm.tgz            1cb94d9ba56c58cb122f7f9d548824e6a7fed155acd17ac4d10fb028ca7a4a50 896365cd420452dacc433d24f0662754c5cee1e8 1395    \
    smlnj-c.tgz             3c1064ba53990abf278ebe80f68b62dad14d9f6a044ac72c6f2cf602c6aaa28c 29e31c1542c5ff63802b5d1013407650b1326fd4 10620   \
    asdl.tgz                2a521d8ba66ba1f2fc1c4b315bd43567ece21969026ce45b6f50d9132726724e 6a218701f64f5192d27e3084ef9b0f21047a9cc8 205907  \
]

foreach {tarball sha256 rmd160 size} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha256 $sha256 rmd160 $rmd160 size $size
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request pgraph-util|request pgraph-util|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request nowhere|request nowhere|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request heap2asm|request heap2asm|" \
        ${worksrcpath}/config/targets
}

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target
if {${build_arch} eq "x86_64"} {
    build.args-append   -default 64
}

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 755 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/([0-9.]+)/}
