# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.98
categories          lang ml
license             BSD
maintainers         {toby @tobypeterson} openmaintainer
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

supported_archs     x86_64 i386 ppc
universal_variant   no

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    doc.tgz                 74b7461bc7d1043f3ca1ba55bb64cbd6508b2b3e51c06e5b4eb9db819ec5aa34 dbecd643023bd2612b44fe2f97afeca901d606c1 2424911 \
    boot.amd64-unix.tgz     39e460e94063b3c85b944c86d29c91ce3995e6fab242a2f77c71d7b04c8e7a7a ddf77a49b517678eee9b4030f3ba9bd89edf3da2 5921092 \
    boot.ppc-unix.tgz       f1f3198d8a441fc554fdf8becdc9251d2d21c343e7e7e18bf43b770a2c680285 2a380c69748f05a7325317fdad15702437f24650 5830115 \
    boot.x86-unix.tgz       1451adf5b9230aaf74d1d28438e4f8126dc56f333bb00b0fc52ff1b596a35281 88a7a9b6925b85d6d1a944fa8c3373841fac6be0 5912407 \
    config.tgz              2ab4a5dff211d84359a50c5d48d607bd4c4f221fee65ac0bcf982f4508692e11 bc5c18bf07d01f4d30b663cde8d82064c072b4e3 517538  \
    cm.tgz                  f02776bbe417d48a469abd8d3496ce87e6cd7fd8440101cb23ce3b28b8b0fba3 f03a4849f791addabdd637d73bd5bdf1ab17519a 220284  \
    compiler.tgz            d7a7e6f9e32af242b3a600fd75830b923698db8f4d2318a7cc67512b01663344 92c366b4f5e3acac24df356e334825259b20b2f7 1109928 \
    runtime.tgz             36e9fff81baecf8f770efa20b5e56e6f67e71705d8692142d53a590c133183ba 1d018c493160cc2eb448e16e18fc34bff56c05d3 336383  \
    system.tgz              555950477c86c0c43b3b6bb7ef907d7690cd214fb19c09a1a735ec9be1dbfa1e af5db8e7174f4df107a7469f6dfce51c21a3ca94 278110  \
    MLRISC.tgz              208fb9c8cbcfc1c90ab14267e28038a390200002e2bcf3ee5670dcb643ceda11 b346d8eadc1623eabbf3ec0bc3cb8790d0ecfd1b 1460273 \
    smlnj-lib.tgz           63d25c1c38791ae6d8f34cfcff600bc4c4ad6a166adb8af6402105bd98e444ba ccddaabd858c925eb36c94ccae54d0485cf1ae20 631261  \
    old-basis.tgz           2952d96a3f6fc9b63e7fdab998916588490ffb65214adf227cf8c3b737ddb17f 10d01fcec84a617f8a675fb049ad954d5a2e409e 1215    \
    ckit.tgz                17c4254b7c1e696591932bc46f1b390c05174b26927fdbab0fa6b0fd9b7baa1a 66cf757b51fd000fb4d99ea7be044e6fc216e814 201005  \
    nlffi.tgz               fb6c671d071c31e50e6792fb015492d8aec6f12b0cea2cd00e0b303c8ce1d98f 5b5d78c8c5d14f38014b478aaab531f0d68a00b8 75095   \
    cml.tgz                 7ba1063146e419e1ecebfd420b45eeb641bb8f79802cfc45a0c7e3958ad59e4f 1a7b700a0d4a4f2d9f993297970616ddc26a1121 104490  \
    eXene.tgz               b48613fe9de6941899d26517cd9c1d4a5779d8a1816ce39d1441481bee8db7e7 daf35f631f893a89fe47910a767fa22307c1499e 721110  \
    ml-lpt.tgz              4055ea0bb388893a58453ff8588e1de72a15be94257715bcd66e7a870c08c3d8 d3e4d04965060927fd3f7f3ffc6e30bf1d381728 267606  \
    ml-lex.tgz              e47e0144547a04aaa2d4ee63bafb6a40a294e7acc8e072cc9569b9a08942ca86 fbed19018e18e5033087d3cb66eeed882d0c2a86 28167   \
    ml-yacc.tgz             cf2c6cdbfae352585a59214d2e6a377191504334bf4dfc092e3a0e64667124a1 5f332893290bab337bdd6629faeedba847dfffe6 101728  \
    ml-burg.tgz             bd84ce5671fd1b1156f6779f81dfaabf0801e0c3f476f36e2f2fdb4311d496aa 78214e61628cc5af5ba480018455392d10a286a9 40552   \
    pgraph.tgz              44f65f685627186e0bd334b1ce6d6bf85262673dfa2b8310e213a570c2216ebd 8f3aa3fb37da25bd500e831c991d8da688458b83 5432    \
    trace-debug-profile.tgz e494dc37e39bcdc1e506d5b3b31422488dfd0400184ca5fb7005438253d7fa17 5eb38dbfe23f4ee2f3cbf9c5cd4bd42df576519d 3936    \
    heap2asm.tgz            6a6b4b33e765c0e5dad52232a544c16f1b632d532e2413c6838160beb610061a 137764e91836a87740adb074c80b432a4f9edd1d 1799    \
    smlnj-c.tgz             caca7a72cc96f5ef00feaadc1ca1329a9e264c070363d88c22b58f0fd4f46b67 509e000720743e9dbe4d5c9d67d94217558a08be 10622   \
    asdl.tgz                c368bb213caa9b6c198b3cebabad577f3d01a64642046eaf9625ff403c49e59a ffbf0c4c40a1d71a715cef6412dc4746e86bc141 212714  \
]

foreach {tarball sha256 rmd160 size} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha256 $sha256 rmd160 $rmd160 size $size
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff \
                    patch-config-_arch-n-opsys.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request pgraph-util|request pgraph-util|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request nowhere|request nowhere|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request heap2asm|request heap2asm|" \
        ${worksrcpath}/config/targets
}

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target
if {${build_arch} eq "x86_64"} {
    build.args-append   -default 64
}

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 755 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/([0-9.]+)/}
