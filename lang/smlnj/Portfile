# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.85
revision            1
categories          lang ml
license             BSD
maintainers         {toby @tobypeterson} openmaintainer
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

supported_archs     i386 ppc
universal_variant   no

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    doc.tgz                 fdcba3261c654b6aede711be13aca430db09d046b2fe7ac912ec4a68c34bf3e6 0f9ba842dfb865461e2746f6e946e546467754ce 2032071 \
    boot.ppc-unix.tgz       a12b30c6a48d1de0fd3cd71f800446ca4f086ec53bb496fbf45c9aaebf4be306 1fe93b2a98d5c69a2eddc1750451709e560d2a59 5984857 \
    boot.x86-unix.tgz       8a9269818dc6f9d9587c8447e13fd07a71fe169ff6ac6a92fee66e498e0f3017 3addaa0af52e5f469ed317404bbe3e1be56de520 6047349 \
    config.tgz              a1bec62058678157f4142228fd6c074d9c3f3c8eca4bf13d0feec40df0c891e2 226976b199becaa3a65f838ec822c96eb79c778a 515855  \
    cm.tgz                  05043d490e613ed85d2542cf0c8ad1f50922ea8c58aaa76141c0bfaeea94600c 2f3754911651633dc3295543aaf831d18177769f 220275  \
    compiler.tgz            358974715cdce99dd12fff7f732dfde31940750a3f0098291b4f8c91e2c638ff 92beb676f3ee038fdb1965e75386cfb72fde1301 841968  \
    runtime.tgz             c435f73728bbba585719a746f46384075a16e84bc5920ea3270345a1536a30d9 544f650aafd359c49735026ebbc0e37b06a5d7e7 355706  \
    system.tgz              a8ba7b15d07c9ddc922da3677546d2535c75f50263c471661d9f7d4a54ac4a9f eadb11ed33c21cceab7efc3cc65b71d113143bea 261177  \
    MLRISC.tgz              28e86de090e3bf150a7aba322a913e10948091e53b851ff89ecb24df79332f0d 8ccb0fe24952a47684acbb95d9f0267bb7f852c5 1459573 \
    smlnj-lib.tgz           cd48d7fd190bfafc2d209e4466368f955725dbca5de8c81fc6a6de786de064f2 51b445846dd441891e098907c3ec9f7172c3ad8e 457036  \
    old-basis.tgz           1e9ca625fa9cad7025d67b79e89e03a2b7125bf081c1915898f47cfae65c7052 416a501d63a6b0672a36556439c9993481593c8c 1080    \
    ckit.tgz                d185a6bc577bc0ea5cc7f5248e1b08ba9c2b376c4fd05f76748d60b8057f1d93 e3eaa08ee766df85020d90e80ed981baf64afffc 198405  \
    nlffi.tgz               fcf8ab0f2438768530a3b4bfaaa40f86af7d23f35dd3bb1a6e64403fbf8e889a fc4594a58f81810f1d94d282d7f306e890279a13 75030   \
    cml.tgz                 43d1d06a8e62bcf21efb48f0d9c67c469eeeb40ba953f9f0cd43e191c9c7b415 3b6cdd6a393e31561bdcb7835c0b54444b00dfbc 105645  \
    eXene.tgz               c2323b9a380d4e8cd621d5721e4691df69a4096688bdd4959bd0086dfb87aa1e 19cd145e7bdbc9ae0b4b62df0b6b13e4abc052a9 720711  \
    ml-lpt.tgz              602e6c553d4ea82bdea2d7a6cf70d23b91e54a41896308b5cfc15094ac83e300 4331f73e3b949533a7b63a9f7e9505044b7eea40 267076  \
    ml-lex.tgz              984edf37721f94851505a5902128521e46729fc08e09d3e787db73e24ea8d380 831a660525c27a8e9c5214d64b167dce266cdc48 27831   \
    ml-yacc.tgz             09e7ac57f9defd6902bae1d539cbd04bfba69e227a4d7fc31139da8e3e3d13e4 3485d6f9591eb17b12dcbb80ecf94c1a1b47ac96 101689  \
    ml-burg.tgz             096aefd291ceff19722d3236984522147de5edfa4a91837d06e5f645af565882 e15f269b879c26555c8da476f54596ab1bccf0ef 40512   \
    pgraph.tgz              c0a89e954c8974c3d07aa71ce39d549cf02add461bfd97d09dc99f95576bb8df 52f0f33b70552a3d8287991f2ea3bcf3a1806450 5430    \
    trace-debug-profile.tgz e78daf92821e33992ad9ca91ca63ba2269c41b996c0ceb547da1e6f6dba56a3a 1702e3c3239360ba439429959b668970283d9eab 3935    \
    heap2asm.tgz            ecc6057d18193960a55dc14e3906108655d4bf39fdb29101062e7bea739dcf14 a0c878298a41d4c35b7c213cd0b8df9cb61b1687 1341    \
    smlnj-c.tgz             7cfa26a11f80b7418a67a4194c639eedbcb429b6fc732f3569b61549bd958411 bbdafae116f6023ae1db0df67d40d481d6f94803 10620   \
    asdl.tgz                0b6fa30e8c51a0df50aa3dcbe93774dadbada3c1ab81414cb422f9c7ec2a86b4 34d38d7be732cf89855d110aec8aac38ff2ada92 193505  \
]

foreach {tarball sha256 rmd160 size} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha256 $sha256 rmd160 $rmd160 size $size
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff patch-config-_arch-n-opsys.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request heap2asm|request heap2asm|" \
        ${worksrcpath}/config/targets
}

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 755 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/([0-9.]+)/}
