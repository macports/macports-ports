# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                smlnj
version             110.97
categories          lang ml
license             BSD
maintainers         {toby @tobypeterson} openmaintainer
description         Standard ML of New Jersey
long_description \
    Standard ML of New Jersey (abbreviated SML/NJ) is a \
    compiler for the Standard ML '97 programming language \
    with associated libraries, tools, and documentation. \
    SML/NJ is free, open source software.
homepage            http://www.smlnj.org/
platforms           darwin

master_sites        http://smlnj.cs.uchicago.edu/dist/working/${version}/
dist_subdir         ${name}/${version}_${revision}

supported_archs     x86_64 i386 ppc
universal_variant   no

distfiles
checksums

# Files needed for basic distribution.
set srcs [list \
    doc.tgz                 69bb0508028bb019f20bc9ef6506332038fd58d8cfa96833aaec98c6d058ab38 3965bfe7c955a8eb6c83f71c850ebbe326bb8ff1 2191276 \
    boot.amd64-unix.tgz     7ddc99b51ab54c7b6fe5094939f64dbfa11dcb551a907c4723e8f7d39b3c0314 fd585403d0ce19ade390c9148b6ea77d54afb92d 6049581 \
    boot.ppc-unix.tgz       a732044af089d7dcf8e0062d82150da88acd0179a36d012f54aa0ecaac2a0c7d 50ec4a11615684238639e9ea4b2bc022612f14d2 5959790 \
    boot.x86-unix.tgz       3f97df4dc592cf21df3f2b65a51b66ebb56277d051a05589ecdbf86b884b18df a20a74c1a1b5538722b2f73ec8eba4dcc6dd0541 6035477 \
    config.tgz              919482e661cb53afd193830a3395d42d786ff4f48baf69f951b75546073ba6b2 f2fa21fd5b055689438345d8dd0af8219415e725 517575  \
    cm.tgz                  b9f9b02d4f6af7fb0665d8444f685c7cf3074a446eef1dcd1a53e9e472467a9b 4ced89d09f51fca804d2c5c36e9ade19f2943b85 220323  \
    compiler.tgz            f30a04a427d0ce2dfd902fe06cb178df45d3a0d8b5eb432a6bb8b7691f96f3cd 6b4d2f5de9694e25d29576566d0622bf06cfa583 848176  \
    runtime.tgz             e457c3f2a62935ba1af074360e3e457aaea539c17d88aef730aac0254e4da4f0 ad93c80efbdc397a5be8a3d6058df48c4b850989 336281  \
    system.tgz              d7f964083ab6d4a477654a15a1305147f83d754ff66076d34bffc834b8c79b3d 93f5c8d3935f32ef3722b24fa2defcfe93ca8963 274438  \
    MLRISC.tgz              09ffa9d07758c603afe1fc88dd78ee3eabd9090a0c6233683ba83730747d5219 506fa006012ec2c2212c6f79de494d1a06830205 1460338 \
    smlnj-lib.tgz           7213b67bba1b1a28fff56f38931f0365202f9722fa4864a065c4228562ddc10f 1033aa794813b961899345da51816bf382108c91 561005  \
    old-basis.tgz           45f6d50ae025c939f9299516a6a6b40717c68a6f18a92230a3ed5a948405e990 669b6abb26235ad739426919b94efb8a73793a84 1216    \
    ckit.tgz                049b9a48101bca898fad91768605a487add248408c765cb6f1c1cfa56b50bc10 7c982bb10a315427752c16ba306338d094ed66c8 201011  \
    nlffi.tgz               29ee0e891a2e0cd2fe39b32ea327ba57741bb581853215ff96196dfd5c00ba14 f5b34639e553aa02216bf33075b455feed915f3d 75105   \
    cml.tgz                 d925d60976afc6e50040276f229f1156523721753f5d05683af50ad89a157af0 d087d131d47e420b9d5680688f813cf773a68d2c 104469  \
    eXene.tgz               43c211e506c68bf0d8c806941d9468d0745f33174b826ab423a3deadc924aacd bb08173a16b1f908d0ea9faa88331c965b0a9358 721112  \
    ml-lpt.tgz              e67b21f1c60e3eeeac9f4a1c8eee2afbbf27374d7aaf66f2d23f6dbef99da41f 07a885120922ed4c3f2982293dc250be24e1e3e4 267448  \
    ml-lex.tgz              14375b117ab393eb7abc6421a298a0418fbd9cc1ee7b859924bf0b10a2f38f80 716949e7ecb539c9ecfe1e5a3ecb659e7274d10d 28161   \
    ml-yacc.tgz             47b0dc7e01d250ca8ab24a74915fb6480148236a2ac45710291adf1155ca7c8d 4cd90ae12f95ac030ad8137845b7f84472c7d027 101723  \
    ml-burg.tgz             6aaec72c95b4d54ccbb3f9a8dc1f020687e281d1614c71cb74b8aae2c1712327 55054f2a65ac281102870b67dc5b02501a891c51 40553   \
    pgraph.tgz              3bfe19ebf54e642f6f0f2859acb92d8e2f9e9c336b3f3ccbf2d9e545e6a1955d c983974163718b3d842f32186d375090efd6da6e 5433    \
    trace-debug-profile.tgz 6cf597545c72e330040d9031ece199b8cda99fe8a78f68b337f80f8087a9f6f7 f3f3365499871a0227e6e11babada2d8c1176f5d 3935    \
    heap2asm.tgz            ff9ff5fa725a11ed67a79418fcc6a0a9769090cd441f64fcaac58027c900853f a32d06488f5ad02965a7dd69a0e515a645101460 1800    \
    smlnj-c.tgz             61b9b6d05b867b36c60198e2e20221b67fbab68f6fc0a9b5811fc05ac81c3d57 196e35bf9f0a1d660ee3aa7f086d4a6a8e244519 10619   \
    asdl.tgz                6a6a54a3034250534fa30642091b7ca5ac92267ceb5128e71251459cb4a0cf2f 5618491210ed0cfdd3ed183f9972f26410f73598 205218  \
]

foreach {tarball sha256 rmd160 size} $srcs {
    distfiles-append $tarball
    checksums-append $tarball sha256 $sha256 rmd160 $rmd160 size $size
}

### extract ###
extract.mkdir       yes
extract.only        config.tgz

### patch ###
patchfiles          patch-config__install.sh-correct-compiler.diff \
                    patch-config-_arch-n-opsys.diff

post-patch {
    reinplace "s|@CC@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CPP@|${configure.cc}|" ${worksrcpath}/config/install.sh
    reinplace "s|@CFLAGS@|${configure.cflags}|" ${worksrcpath}/config/install.sh
    reinplace "s|@LDFLAGS@|${configure.ldflags}|" ${worksrcpath}/config/install.sh
}

### configure ###
configure {
    reinplace "s|SRCARCHIVEURL=.*|SRCARCHIVEURL=file://${distpath}|" \
        ${worksrcpath}/config/srcarchiveurl
    reinplace "s|#request src-smlnj|request src-smlnj|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request pgraph-util|request pgraph-util|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request eXene|request eXene|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request mlrisc-tools|request mlrisc-tools|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request nowhere|request nowhere|" \
        ${worksrcpath}/config/targets
    reinplace "s|#request heap2asm|request heap2asm|" \
        ${worksrcpath}/config/targets
}

### build ###
build.env           URLGETTER=curl
build.cmd           ${worksrcpath}/config/install.sh
build.target
if {${build_arch} eq "x86_64"} {
    build.args-append   -default 64
}

### destroot ###
destroot {
    set smlnj_home ${prefix}/share/smlnj

    file mkdir ${destroot}${smlnj_home}
    file copy ${worksrcpath}/bin ${destroot}${smlnj_home}
    file copy ${worksrcpath}/lib ${destroot}${smlnj_home}

    xinstall -m 755 ${filespath}/sml.sh ${destroot}${prefix}/bin/sml
    reinplace "s|__SMLNJ_HOME__|${smlnj_home}|g" \
        ${destroot}${prefix}/bin/sml

    foreach prog [glob -directory ${worksrcpath}/bin *] {
        set progname [file tail $prog]
        if {![string equal $progname sml]} {
            ln -s sml ${destroot}${prefix}/bin/${progname}
        }
    }
}

livecheck.type      regex
livecheck.regex     {/working/([0-9.]+)/}
