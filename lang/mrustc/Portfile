# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       github 1.0

github.setup    thepowersgang mrustc 4bee8893e8f471d315c1d2d9535216b116cdfe23

version         20220111
revision        0
categories      lang devel
license         MIT
maintainers     nomaintainer
description     Alternative implementation of Rust
supported_archs x86_64

long_description \
                In-progress alternative rust compiler. Capable of building a \
                fully-working copy of rustc, but not suitable for everyday use \
                (due to inadequate error messages).

master_sites-append   https://static.rust-lang.org/dist/

set rust_version 1.39.0
set rust_version_major [join [lrange [split ${rust_version} .-] 0 1] .]
set rust_version_major_underscore [join [lrange [split ${rust_version} .-] 0 1] _]
distfiles-append rustc-${rust_version}-src.tar.gz

checksums       mrustc-${github.version}.tar.gz \
                rmd160  c16b5b1ceb5f79f61712c22488662a0c68464ea9 \
                sha256  28f53fca94ef4edec4f1e37d0d9d3c12bca5b4b867dbb2a62e80692afaee141e \
                size    1173691 \
                rustc-${rust_version}-src.tar.gz \
                rmd160  d5b04b87fc336e3be7d592f70de0363aa66622aa \
                sha256  b4a1f6b6a93931f270691aba4fc85eee032fecda973e6b9c774cd06857609357 \
                size    152803201

use_configure   no

compiler.cxx_standard 2014
compiler.c_standard 2011

# Thread-local storage is not needed to compile mrustc, but is required
# for compiling Rust files (e.g. the standard library)
compiler.thread_local_storage yes

# A C compiler is needed at run-time; it doesn't have to be the same version as
# the C++ compiler used to compile mrustc, but we'll use that one as the
# default, and declare the dependency here
if { [string match macports-clang-* ${configure.compiler}] } {
    depends_run-append port:[string map {"macports-" ""} ${configure.compiler}]
}

# GCC can't be used as a run-time compiler, see
# https://github.com/thepowersgang/mrustc/issues/214
compiler.blacklist *gcc*

# Uncomment the lines below and delete the line above when GCC support is fixed
#if { [string match macports-gcc-* ${configure.compiler}] } {
#   depends_run-append port:[string map {"macports-gcc-" "gcc"} ${configure.compiler}]
#}

# https://github.com/thepowersgang/mrustc/pull/192
patchfiles-append patch-mrustc-macos-bootstrap.diff

# Set the default MRUSTC_LIBDIR
patchfiles-append patch-mrustc-macports-libdir.diff
post-patch {
    reinplace "s|@MACPORTS_MRUSTC_LIBDIR@|${prefix}/lib/mrustc-${rust_version_major}|" ${worksrcpath}/src/main.cpp
}

# Set the default CC
patchfiles-append patch-mrustc-macports-compiler.diff
post-patch {
    reinplace "s|@MACPORTS_MRUSTC_CC@|${configure.cc}|" ${worksrcpath}/src/trans/codegen_c.cpp
}

# Set the default gTargetVersion
patchfiles-append patch-mrustc-macports-version.diff
post-patch {
    reinplace "s|@MACPORTS_MRUSTC_TARGET_VER@|${rust_version_major_underscore}|" ${worksrcpath}/src/main.cpp
}

# Patch the Rust source code with the patch included with mrustc
post-patch {
    system -W ${workpath}/rustc-${rust_version}-src "patch -p0 < ${worksrcpath}/rustc-${rust_version}-src.patch"
    file rename ${workpath}/rustc-${rust_version}-src ${worksrcpath}
}

build {
    system -W ${worksrcpath} "/usr/bin/env CXX=${configure.cxx} CC=${configure.cc} CXXFLAGS_EXTRA='${configure.cxxflags}' ${build.cmd} all"
    system -W ${worksrcpath}/tools/minicargo "/usr/bin/env CXX=${configure.cxx} CC=${configure.cc} ${build.cmd} all"
    system -W ${worksrcpath} "/usr/bin/env CXX=${configure.cxx} CC=${configure.cc} RUSTC_VERSION=${rust_version} RUSTC_TARGET=${build_arch}-apple-darwin MRUSTC_LIBDIR=output-${rust_version} MRUSTC_TARGET_VER=${rust_version_major} ${build.cmd} -f minicargo.mk LIBS"
}

destroot {
    xinstall -m 0755 -W ${worksrcpath} ./bin/${name} ${destroot}${prefix}/bin
    xinstall -m 0755 -W ${worksrcpath} ./bin/minicargo ${destroot}${prefix}/bin
    file copy ${worksrcpath}/output-${rust_version} ${destroot}${prefix}/lib/mrustc-${rust_version_major}
}

# Run a Hello, world! test
test.env            RUSTC_VERSION=${rust_version} MRUSTC_LIBDIR=output-${rust_version}
test.run            yes
test.target         test
