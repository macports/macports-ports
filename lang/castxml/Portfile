# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

github.setup        CastXML CastXML 0.4.6 v

name                castxml
epoch               20190718
revision            0
categories          lang
platforms           darwin
license             Apache-2

maintainers         {stromnov @stromnov} openmaintainer

description         CastXML is a C-family abstract syntax tree XML output tool.
long_description    ${description}

checksums           rmd160  b4364613c95163dc662ec11985fb11ec1b150266 \
                    sha256  633cd44f92a7d3d85d0abd23d7c80e930986d3283f050e287d637cd8fc0d4867 \
                    size    104500

compiler.cxx_standard \
                    2014

depends_lib-append  port:zlib \
                    port:libffi \
                    port:libedit \
                    port:ncurses

configure.args-append \
                    -DCastXML_INSTALL_DOC_DIR=share/doc/castxml

# List of clang versions to offer variants for
set clang_vers { 6.0 7.0 8.0 9.0 10 11 12 13 }

proc variant_name {ver} {
    return clang[string map {. {}} ${ver}]
}

# build list of all clang variant names
set clang_variants {}
foreach ver ${clang_vers} { lappend clang_variants [variant_name $ver] }

proc build_conflicts {v} {
    global clang_variants
    set i [lsearch -exact ${clang_variants} ${v}]
    return [lreplace ${clang_variants} ${i} ${i}]
}

set has_variant no
foreach ver ${clang_vers} {
    set v_name [variant_name ${ver}]
    set c [build_conflicts ${v_name}]
    variant ${v_name} conflicts {*}${c} description "Use clang ${ver} toolchain" { }
    if {[variant_isset ${v_name}]} {
        set has_variant yes
    }
}
if {!$has_variant} { default_variants +clang13 }

foreach ver ${clang_vers} {
    set v_name [variant_name ${ver}]
    if {[variant_isset ${v_name}]} {
        depends_lib-append          port:llvm-${ver}
        depends_build-append        port:clang-${ver}
        configure.args-append       -DLLVM_DIR=${prefix}/libexec/llvm-${ver}/lib/cmake/llvm
        cmake.install_rpath-append  ${prefix}/libexec/llvm-${ver}/lib
    }
}
