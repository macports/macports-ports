# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0

name                python39

# Remember to keep py39-tkinter and py39-gdbm's versions sync'd with this
version             3.9.19

set branch          [join [lrange [split ${version} .] 0 1] .]
categories          lang
license             PSF
maintainers         {jmr @jmroot}

description         An interpreted, object-oriented programming language
long_description    Python is an interpreted, interactive, object-oriented \
                    programming language.

homepage            https://www.python.org/
master_sites        ${homepage}ftp/python/${version}/

distname            Python-${version}
use_xz              yes
checksums           md5 87d0f8281237b972ff8b23e0e2c8d325 \
                    rmd160 b46fbe50a0cace4a6ecdb70d026a32932427f566 \
                    sha256 d4892cd1618f6458cb851208c030df1482779609d0f3939991bd38184f8c679e

patchfiles          patch-setup.py.diff \
                    patch-Lib-cgi.py.diff \
                    patch-configure.diff \
                    patch-Lib-ctypes-macholib-dyld.py.diff \
                    patch-libedit.diff \
                    patch-configure-xcode4bug.diff \
                    sysconfig.py.diff \
                    libedit-types.patch

if {${os.platform} eq "darwin" && ${os.major} <= 10} {
    # work around no copyfile and/or pthread_threadid_np on older systems
    patchfiles-append  patch-no-copyfile-on-Tiger.diff \
                       patch-threadid-older-systems.diff
}

depends_build       port:pkgconfig
depends_lib         port:bzip2 \
                    port:expat \
                    port:gettext-runtime \
                    port:libedit \
                    port:libffi \
                    port:ncurses \
                    path:lib/libssl.dylib:openssl \
                    port:sqlite3 \
                    port:xz \
                    port:zlib

set pythonVerNoDot  [string map {. {}} $branch]
depends_run         port:python_select-${pythonVerNoDot} \
                    port:python3_select-${pythonVerNoDot}

# blacklist llvm-gcc-4.2 compiler known to produce bad code
compiler.blacklist  *llvm-gcc-4.2

# ensurepip arg may be removed later, now conflicts with pip and setuptools
# packages
configure.args      --enable-framework=${frameworks_dir} \
                    --enable-ipv6 \
                    --enable-loadable-sqlite-extensions \
                    --with-computed-gotos \
                    --with-ensurepip=no \
                    --with-system-expat \
                    --with-system-ffi

configure.ccache    no
# pkg-config removes -I flags for paths in CPATH, which confuses python.
configure.env       PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 \
                    SETUPTOOLS_USE_DISTUTILS=stdlib
build.env           SETUPTOOLS_USE_DISTUTILS=stdlib
destroot.env        SETUPTOOLS_USE_DISTUTILS=stdlib

post-patch {
    reinplace "s|@@PREFIX@@|${prefix}|g" \
      ${worksrcpath}/Lib/cgi.py \
      ${worksrcpath}/Lib/ctypes/macholib/dyld.py

    reinplace "s|/setup.py|/setup.py --no-user-cfg|" ${worksrcpath}/Makefile.pre.in

    # replace /Applications with ${applications_dir}
    reinplace "s|@@APPLICATIONS_DIR@@|${applications_dir}|" \
      ${worksrcpath}/configure
}

build.target        all

test.run            yes
test.target         test

destroot.target     frameworkinstall maninstall

platform darwin {
    set framewpath  ${frameworks_dir}/Python.framework
    set framewdir   ${framewpath}/Versions/${branch}
    set confdir     config-${branch}-darwin

    post-configure {
        # poll() misbehaves on 10.8 and older
        # See https://trac.macports.org/ticket/18376
        if {${os.major} <= 12} {
            set oldmtime [file mtime ${worksrcpath}/pyconfig.h]
            system -W ${worksrcpath} "ed - pyconfig.h < ${filespath}/pyconfig.ed"
            file mtime ${worksrcpath}/pyconfig.h $oldmtime
        }
    }

    post-destroot {
        foreach dir { Headers Resources Python Versions/Current } {
            file delete ${destroot}${framewpath}/${dir}
        }

        ln -s ${framewdir}/share/man/man1/python${branch}.1 ${destroot}${prefix}/share/man/man1/
        ln -s ${framewdir}/lib/pkgconfig/python-${branch}.pc ${destroot}${prefix}/lib/pkgconfig/
        ln -s ${framewdir}/lib/pkgconfig/python-${branch}-embed.pc ${destroot}${prefix}/lib/pkgconfig/

        set libdir ${destroot}${framewdir}/lib/python${branch}
        # Without this, LINKFORSHARED is set to
        # ... $(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)
        # (this becomes Python.framework/Versions/3.9/Python) which doesn't
        # work for dependents that incorrectly use this variable to find out
        # how to link against python (see ticket #15099); instead we mirror
        # the behavior of `python-config --ldflags` here.
        set lfs_pattern {^([[:space:]]*'LINKFORSHARED':).*}
        set lfs_replacement "\\1 '-L${framewdir}/lib/python${branch}/${confdir} -lpython${branch} -ldl -framework CoreFoundation',"
        reinplace -E s|${lfs_pattern}|${lfs_replacement}| \
            ${libdir}/_sysconfigdata__darwin_darwin.py

        # remove -arch flags from the config
        reinplace -E {s|-arch [a-z0-9_]+||g} \
            ${libdir}/_sysconfigdata__darwin_darwin.py

        # also remove gettext overlinking
        reinplace "s|-lintl||" \
            ${libdir}/_sysconfigdata__darwin_darwin.py

        # recompile the modified file
        set python_for_build python.exe
        # executable differs depending on filesystem case sensitivity
        if {![file exists ${worksrcpath}/${python_for_build}]} {
            set python_for_build python
        }
        system -W ${worksrcpath} "env DYLD_FRAMEWORK_PATH=. ./${python_for_build} -E -m compileall -d [shellescape ${framewdir}/lib/python${branch}] -o 0 -o 1 -o 2 [shellescape ${libdir}/_sysconfigdata__darwin_darwin.py]"

        # Also make the sysconfig changes in the Makefile
        reinplace {s|^\(LINKFORSHARED=\).*$|\1 -L$(LIBPL) -lpython$(VERSION)$(ABIFLAGS) $(LIBS) $(SYSLIBS)|} \
            ${libdir}/${confdir}/Makefile

        reinplace -E {s|-arch [a-z0-9_]+||g} \
           ${libdir}/${confdir}/Makefile

        reinplace "s|-lintl||" \
           ${libdir}/${confdir}/Makefile
    }
}

post-destroot {
    foreach unversioned {2to3 idle3 pydoc3 python3 python3-config} {
        delete ${destroot}${prefix}/bin/${unversioned}
    }
}

notes "
To make this the default Python or Python 3 (i.e., the version run by\
the 'python' or 'python3' commands), run one or both of:

    sudo port select --set python python$pythonVerNoDot
    sudo port select --set python3 python$pythonVerNoDot
"

variant universal {
    post-patch {
        set universal_arch_flags {}
        set arch_run_32bit {}
        set lipo_32bit_flags {}
        set lipo_intel64_flags {}
        set any64 no
        foreach arch ${configure.universal_archs} {
            lappend universal_arch_flags -arch ${arch}
            if {${arch} in {i386 ppc}} {
                lappend arch_run_32bit -${arch}
                lappend lipo_32bit_flags -extract ${arch}
            } else {
                set any64 yes
            }
        }
        if {$any64} {
            if {$arch_run_32bit eq ""} {
                set arch_run_32bit true
                set lipo_32bit_flags ""
            } else {
                set arch_run_32bit "/usr/bin/arch $arch_run_32bit"
                #lipo_32bit_flags already correct
            }
            if {"arm64" in ${configure.universal_archs} && "x86_64" in ${configure.universal_archs}} {
                set lipo_intel64_flags "-extract x86_64"
            }
        } else {
            set arch_run_32bit ""
            set lipo_32bit_flags ""
        }
        reinplace \
            "s|@@UNIVERSAL_ARCH_FLAGS@@|${universal_arch_flags}|" \
            ${worksrcpath}/configure
        reinplace \
            "s|@@LIPO_32BIT_FLAGS@@|${lipo_32bit_flags}|" \
            ${worksrcpath}/configure
        reinplace \
            "s|@@LIPO_INTEL64_FLAGS@@|${lipo_intel64_flags}|" \
            ${worksrcpath}/configure
        reinplace \
            "s|@@ARCH_RUN_32BIT@@|${arch_run_32bit}|" \
            ${worksrcpath}/configure
    }
    configure.args-append   --enable-universalsdk=${configure.sysroot}
    post-configure {
        set oldmtime [file mtime ${worksrcpath}/pyconfig.h]
        system -W ${worksrcpath} "ed - pyconfig.h < ${filespath}/pyconfig.h-universal.ed"
        file mtime ${worksrcpath}/pyconfig.h $oldmtime
    }

    post-destroot {
        foreach unversioned {python3-32 python3-intel64} {
            delete ${destroot}${prefix}/bin/${unversioned}
        }
    }
}

variant optimizations description {enable expensive, stable optimizations (including PGO)} {
    configure.args-append   --enable-optimizations
}

variant lto description {enable Link-Time Optimization} {
    configure.args-append   --with-lto
}

platform darwin {
    # Build failures on 10.9 and older
    if {${os.major} > 11} {
        if {${os.major} > 14 || !($universal_possible && [variant_isset universal])} {
            default_variants +lto
        }
        if {${os.major} > 13} {
            default_variants-append +optimizations
        }
    }
}

variant dtrace description {enable DTrace support} {
    configure.args-append   --with-dtrace
}

livecheck.type      regex
livecheck.url       ${homepage}downloads/source/
livecheck.regex     Python (${branch}\[.0-9\]+) -
