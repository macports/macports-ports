# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           java 1.0

name                jython
version             2.7.1
categories          lang python java
platforms           darwin
supported_archs     noarch
maintainers         {amake @amake} openmaintainer
license             PSF

description         Python implementation in pure Java
long_description    \
    Jython is an implementation of the high-level, dynamic, object-oriented \
    language Python written in 100% Pure Java, and seamlessly integrated with \
    the Java platform. It thus allows you to run Python on any Java platform.

homepage            http://www.jython.org/

# Jython 2.7.1 is only compatible with Java 7/8, and is known to be
# incompatible with Java 9+ (this will likely be resolved by Jython 2.7.2).
# Since the Java portgroup doesn't support specifying a maximum Java version
# but supports specifying an exact version, only use Java 8 for now.
java.version        1.8
java.fallback       openjdk8

use_configure       no

variant installer description {Use installer, rather than building from source} {
    master_sites    http://search.maven.org/remotecontent?filepath=org/python/jython-installer/${version}

    distfiles       ${name}-installer-${version}.jar

    checksums       rmd160  10741971d109bb7c941c98e2b099f366cb8b34b6 \
                    sha256  6e58dad0b8565b95c6fb14b4bfbf570523d1c5290244cfb33822789fa53b1d25 \
                    size    103824756

    extract.only

    pre-build {
        xinstall -m 0755 -d ${destroot}${prefix}/share/java/${name}
    }

    build.cmd       java
    build.target    -jar ${distpath}/${distfiles}
    build.args      -s -d ${destroot}${prefix}/share/java/${name}

    global jython_bin_name
    set jython_bin_name jython

    destroot {}
}

default_variants +installer

# Install from source.
# This block must come after the installer variant definition.
if {![variant_isset installer]} {
    PortGroup       github 1.0
    github.setup    jythontools jython ${version} v

    checksums       rmd160  62fea5972f1c93847753b43dcfb5c6004a49ba90 \
                    sha256  bca5de8d48437f8b6244883f4c781037cfd85a8bf195e41c06cfcda282e240c4 \
                    size    43404763

    # Use Ant 1.10.x for Java 8 compatibility
    depends_build-append \
                    port:apache-ant

    build.cmd       ant
    build.target    developer-build

    global jython_bin_name
    set jython_bin_name jython.py

    destroot {
        xinstall -m 0755 -d ${destroot}${prefix}/share/java/
        copy ${worksrcpath}/dist \
            ${destroot}${prefix}/share/java/${name}
    }
}

post-destroot {
    # Jython caches information in the installation dir by default, but for
    # permissions reasons this cache needs to be maintained at the user
    # level. Wrap the executable with a launch script that places the cache in
    # the user's home.
    set fp [open ${destroot}${prefix}/bin/${name} w]
    puts ${fp} "#!/bin/sh"
    puts ${fp} "exec ${prefix}/share/java/${name}/bin/${jython_bin_name} \\"
    puts ${fp} "  -Dpython.cachedir=\"\$HOME/.jython_cachedir\" \"\$@\""
    close ${fp}
    system "chmod +x ${destroot}${prefix}/bin/${name}"
}

pre-activate {
    # Old versions of this port did not put the Jython cache in the user's home
    # (see the post-destroot block above). We clean up the old cache here.
    file delete -force -- ${prefix}/share/java/${name}/cachedir
}

# Homepage is rarely updated, so check tags on GitHub mirror
livecheck.type      regex
livecheck.url       https://github.com/jythontools/jython/tags
livecheck.regex     {archive/v([0-9.-]+)\.tar\.gz}
