Declare cupl_reset_write function parameter to fix:
monitor.c:157:22: warning: this old-style function definition is not preceded by a prototype [-Wstrict-prototypes]

Remove first parameter of curl_min and curl_max to fix:
monitor.c:463:22: warning: unused parameter 'left' [-Wunused-parameter]
monitor.c:477:22: warning: unused parameter 'left' [-Wunused-parameter]

Remove unused variable equal to fix:
monitor.c:547:7: warning: unused variable 'equal' [-Wunused-variable]
--- monitor.c.orig	2015-11-21 17:42:11.000000000 -0600
+++ monitor.c	2023-01-12 21:38:33.000000000 -0600
@@ -12,8 +12,8 @@
     value allocate_value(int rank, int i, int j)
     void deallocate_value(value *v)
 
-    void cupl_reset_write()
-    void cupl_eol_write()
+    void cupl_reset_write(void)
+    void cupl_eol_write(void)
     void cupl_scalar_write(char *name, scalar quant)
     void cupl_string_write(char *s)
 
@@ -31,8 +31,8 @@
     value cupl_ln(value)
     value cupl_log(value)
     value cupl_sqrt(value)
-    value cupl_max(value, value)
-    value cupl_min(value, value)
+    value cupl_max(value)
+    value cupl_min(value)
     value cupl_rand(value)
 
     bool cupl_eq(value, value)
@@ -154,7 +154,7 @@
 
 static int used;
 
-void cupl_reset_write()
+void cupl_reset_write(void)
 {
     used = 0;
 }
@@ -460,7 +460,7 @@
  *
  ****************************************************************************/
 
-value cupl_max(value left, value right)
+value cupl_max(value right)
 /* apply max function */
 {
     value	result;
@@ -474,8 +474,8 @@
     return(result);
 }
 
-value cupl_min(value left, value right)
-/* apply min functionnot yet supported for vectors and matrices */
+value cupl_min(value right)
+/* apply min function -- not yet supported for vectors and matrices */
 {
     value	result;
     int	n;
@@ -544,7 +544,6 @@
 	die("LE failed, operands of different sizes or ranks\n");
     else
     {
-	bool equal = TRUE;
 	int	n;
 
 
