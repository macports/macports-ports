--- src/cmd/dist/build.go.old	2019-03-19 14:24:21.000000000 +0100
+++ src/cmd/dist/build.go	2019-03-19 14:30:14.000000000 +0100
@@ -38,6 +38,7 @@ var (
 	goextlinkenabled string
 	gogcflags        string // For running built compiler
 	goldflags        string
+	goextldflags     string // Flags passed to external linker, if enabled
 	workdir          string
 	tooldir          string
 	oldgoos          string
@@ -191,6 +192,7 @@ func xinit() {
 
 	gogcflags = os.Getenv("BOOT_GO_GCFLAGS")
 	goldflags = os.Getenv("BOOT_GO_LDFLAGS")
+	goextldflags = os.Getenv("BOOT_GO_EXT_LDFLAGS")
 
 	cc, cxx := "gcc", "g++"
 	if defaultclang {
@@ -651,6 +653,9 @@ func runInstall(dir string, ch chan stru
 		if goldflags != "" {
 			link = append(link, goldflags)
 		}
+		if goextldflags != "" {
+			link = append(link, "-extldflags=" + goextldflags)
+		}
 		link = append (link, "-o", pathf("%s/%s%s", tooldir, elem, exe))
 		targ = len(link) - 1
 	}
@@ -1243,6 +1248,7 @@ func cmdbootstrap() {
 
 	gogcflags = os.Getenv("GO_GCFLAGS") // we were using $BOOT_GO_GCFLAGS until now
 	goldflags = os.Getenv("GO_LDFLAGS") // we were using $BOOT_GO_LDFLAGS until now
+	goextldflags = os.Getenv("GO_EXT_LDFLAGS") // we were using $BOOT_GO_EXT_LDFLAGS until now
 	goBootstrap := pathf("%s/go_bootstrap", tooldir)
 	cmdGo := pathf("%s/go", gobin)
 	if debug {
@@ -1378,7 +1384,12 @@ func cmdbootstrap() {
 }
 
 func goInstall(goBinary string, args ...string) {
-	installCmd := []string{goBinary, "install", "-gcflags=all=" + gogcflags, "-ldflags=all=" + goldflags}
+	installCmd := []string{goBinary, "install", "-gcflags=all=" + gogcflags}
+	if goextldflags != "" {
+		installCmd = append(installCmd, "-ldflags=all=" + goldflags + " \"-extldflags=" + goextldflags + "\"")
+	} else {
+		installCmd = append(installCmd, "-ldflags=all=" + goldflags)
+	}
 	if vflag > 0 {
 		installCmd = append(installCmd, "-v")
 	}
@@ -1392,12 +1403,15 @@ func goInstall(goBinary string, args ...
 }
 
 func checkNotStale(goBinary string, targets ...string) {
+	checkCmd := []string{goBinary, "list", "-gcflags=all=" + gogcflags}
+	if goextldflags != "" {
+		checkCmd = append(checkCmd, "-ldflags=all=" + goldflags + " \"-extldflags=" + goextldflags + "\"")
+	} else {
+		checkCmd = append(checkCmd, "-ldflags=all=" + goldflags)
+	}
+	checkCmd = append(checkCmd, "-f={{if .Stale}}\tSTALE {{.ImportPath}}: {{.StaleReason}}{{end}}")
 	out := run(goroot, CheckExit,
-		append([]string{
-			goBinary,
-			"list", "-gcflags=all=" + gogcflags, "-ldflags=all=" + goldflags,
-			"-f={{if .Stale}}\tSTALE {{.ImportPath}}: {{.StaleReason}}{{end}}",
-		}, targets...)...)
+		append(checkCmd, targets...)...)
 	if strings.Contains(out, "\tSTALE ") {
 		os.Setenv("GODEBUG", "gocachehash=1")
 		for _, target := range []string{"runtime/internal/sys", "cmd/dist", "cmd/link"} {
