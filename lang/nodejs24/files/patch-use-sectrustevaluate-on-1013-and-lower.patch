--- ./src/crypto/crypto_context.cc	2025-07-13 08:40:56.000000000 -0700
+++ ./src/crypto/crypto_context.cc	2025-07-13 08:41:15.000000000 -0700
@@ -20,6 +20,9 @@
 #endif  // !OPENSSL_NO_ENGINE
 #ifdef __APPLE__
 #include <Security/Security.h>
+#ifndef ON_LION_OR_LATER
+#include "SecItem.h"
+#endif
 #endif

 #ifdef _WIN32
@@ -309,6 +312,7 @@
     if (!policy_ref) {
            return TrustStatus::UNSPECIFIED;
     }
+#ifdef ON_LION_OR_LATER

     CFDictionaryRef policy_dict(SecPolicyCopyProperties(policy_ref));

@@ -319,6 +323,7 @@
     if (!CFEqual(policy_oid, kSecPolicyAppleSSL)) {
       return TrustStatus::UNSPECIFIED;
     }
+#endif
   }
 
   int trust_settings_result = kSecTrustSettingsResultTrustRoot;
@@ -401,7 +406,11 @@
   if (ortn) {
     /* should never happen */
   } else {
+#if ON_MOJAVE_OR_LATER 
     result = SecTrustEvaluateWithError(sec_trust, nullptr);
+#else
+    result = SecTrustEvaluate(sec_trust, nullptr);
+#endif
   }

   if (policy) {
@@ -467,7 +476,10 @@
     std::vector<X509*>* system_root_certificates_X509) {
   CFTypeRef search_keys[] = {kSecClass, kSecMatchLimit, kSecReturnRef};
   CFTypeRef search_values[] = {
-      kSecClassCertificate, kSecMatchLimitAll, kCFBooleanTrue};
+#ifdef ON_LION_OR_LATER
+      kSecClassCertificate, 
+#endif
+      kSecMatchLimitAll, kCFBooleanTrue};
   CFDictionaryRef search = CFDictionaryCreate(kCFAllocatorDefault,
                                               search_keys,
                                               search_values,
