# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem 1.0
PortGroup select 1.0
PortGroup clang_dependency 1.0

name                python37

# Remember to keep py37-tkinter and py37-gdbm's versions sync'd with this
version             3.7.6

set major           [lindex [split $version .] 0]
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          lang
license             PSF
platforms           darwin
maintainers         {jmr @jmroot} openmaintainer

description         An interpreted, object-oriented programming language
long_description    Python is an interpreted, interactive, object-oriented \
                    programming language.

homepage            https://www.python.org/
master_sites        ${homepage}ftp/python/${version}/

distname            Python-${version}
use_xz              yes
checksums           md5 c08fbee72ad5c2c95b0f4e44bf6fd72c \
                    rmd160 3b3f651d53f55c00c9fea579d901a9eff3d26905 \
                    sha256 55a2cce72049f0794e9a11a84862e9039af9183603b78bc60d89539f82cf533f

patchfiles          patch-setup.py.diff \
                    patch-Lib-cgi.py.diff \
                    patch-configure.diff \
                    patch-Lib-ctypes-macholib-dyld.py.diff \
                    patch-libedit.diff \
                    patch-configure-xcode4bug.diff \
                    patch-_osx_support.py.diff

depends_build       port:pkgconfig
depends_lib         port:bzip2 \
                    port:expat \
                    port:gettext \
                    port:libedit \
                    port:libffi \
                    port:ncurses \
                    path:lib/libssl.dylib:openssl \
                    port:sqlite3 \
                    port:xz \
                    port:zlib
depends_run         port:python_select \
                    port:python3_select

# blacklist llvm-gcc-4.2 compiler known to produce bad code
compiler.blacklist-append *llvm-gcc-4.2

# ensurepip arg may be removed later, now conflicts with pip and setuptools
# packages
configure.args      --enable-framework=${frameworks_dir} \
                    --enable-ipv6 \
                    --enable-loadable-sqlite-extensions \
                    --with-computed-gotos \
                    --with-ensurepip=no \
                    --with-system-expat \
                    --with-system-ffi

configure.ccache    no

post-patch {
    reinplace "s|@@PREFIX@@|${prefix}|g" \
      ${worksrcpath}/Lib/cgi.py \
      ${worksrcpath}/Lib/ctypes/macholib/dyld.py

    reinplace "s|/setup.py|/setup.py --no-user-cfg|" ${worksrcpath}/Makefile.pre.in

    # replace /Applications with ${applications_dir}
    reinplace "s|@@APPLICATIONS_DIR@@|${applications_dir}|" \
      ${worksrcpath}/configure
}

build.target        all

test.run            yes
test.target         test

destroot.target     frameworkinstall maninstall

set pythonNoDot python[string map {. {}} $branch]
select.entries      [list python python-$pythonNoDot $pythonNoDot] \
                    [list python3 python3-$pythonNoDot $pythonNoDot]

platform darwin {
    set framewpath  ${frameworks_dir}/Python.framework
    set framewdir   ${framewpath}/Versions/${branch}
    set confdir     config-${branch}m-darwin

    post-configure {
        # poll() misbehaves on 10.8 and older
        # See https://trac.macports.org/ticket/18376
        if {${os.major} <= 12} {
            system -W ${worksrcpath} "ed - pyconfig.h < ${filespath}/pyconfig.ed"
        }
    }

    post-build {
        set buildlibdir [lindex [glob -directory ${worksrcpath}/build lib.*-*-*-${branch}] 0]
        # Without this, LINKFORSHARED is set to
        # ... $(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)
        # (this becomes Python.framework/Versions/3.7/Python) which doesn't
        # work for dependents that incorrectly use this variable to find out
        # how to link against python (see ticket #15099); instead we mirror
        # the behavior of `python-config --ldflags` here.
        system -W ${buildlibdir} "awk -F : \
            \"/'LINKFORSHARED'/ {printf \\\"%s: '-L${framewdir}/lib/python${branch}/${confdir}\
            -lpython${branch}m -ldl -framework CoreFoundation',\\n\\\", \\\$1; getline; next} {print}\"\
            _sysconfigdata_m_darwin_darwin.py > _sysconfigdata_m_darwin_darwin.py.new"
        file rename -force ${buildlibdir}/_sysconfigdata_m_darwin_darwin.py.new \
            ${buildlibdir}/_sysconfigdata_m_darwin_darwin.py

        # remove -arch flags from the config
        reinplace -E {s|-arch [a-z0-9_]+||g} \
            ${buildlibdir}/_sysconfigdata_m_darwin_darwin.py

        # also remove gettext overlinking
        reinplace "s|-lintl||" \
            ${buildlibdir}/_sysconfigdata_m_darwin_darwin.py
    }

    post-destroot {
        foreach dir { Headers Resources Python Versions/Current } {
            file delete ${destroot}${framewpath}/${dir}
        }

        ln -s ${framewdir}/share/man/man1/python${branch}.1 ${destroot}${prefix}/share/man/man1/
        ln -s ${framewdir}/lib/pkgconfig/python-${branch}.pc ${destroot}${prefix}/lib/pkgconfig/
        ln -s ${framewdir}/lib/pkgconfig/python-${branch}.pc ${destroot}${prefix}/lib/pkgconfig/python-${branch}m.pc

        # Also make the sysconfig changes in the Makefile
        reinplace {s|^\(LINKFORSHARED=\).*$|\1 -L$(LIBPL) -lpython$(VERSION)$(ABIFLAGS) $(LIBS) $(SYSLIBS)|} \
            ${destroot}${framewdir}/lib/python${branch}/${confdir}/Makefile

        reinplace -E {s|-arch [a-z0-9_]+||g} \
           ${destroot}${framewdir}/lib/python${branch}/${confdir}/Makefile

        reinplace "s|-lintl||" \
           ${destroot}${framewdir}/lib/python${branch}/${confdir}/Makefile
    }
}

post-destroot {
    foreach unversioned {2to3 idle3 pydoc3 python3 python3-config pyvenv} {
        delete ${destroot}${prefix}/bin/${unversioned}
    }
}

notes "
To make this the default Python or Python 3 (i.e., the version run by\
the 'python' or 'python3' commands), run one or both of:

    sudo port select --set python $pythonNoDot
    sudo port select --set python3 $pythonNoDot
"

variant universal {
    post-patch {
        set universal_arch_flags {}
        set arch_run_32bit {}
        foreach arch ${universal_archs} {
            lappend universal_arch_flags -arch ${arch}
            if {${arch} eq "i386" || ${arch} eq "ppc"} {
                lappend arch_run_32bit -${arch}
            }
        }
        reinplace \
          "s|UNIVERSAL_ARCH_FLAGS=\".*\"|UNIVERSAL_ARCH_FLAGS=\"${universal_arch_flags}\"|" \
          ${worksrcpath}/configure
        if {${arch_run_32bit} ne ""} {
            reinplace \
              "s|ARCH_RUN_32BIT=\".*\"|ARCH_RUN_32BIT=\"arch ${arch_run_32bit}\"|" \
              ${worksrcpath}/configure
        }
    }
    if {${configure.sdkroot} ne ""} {
        configure.args-append   --enable-universalsdk=${configure.sdkroot}
    } else {
        configure.args-append   --enable-universalsdk=/
    }
    post-configure {
        system -W ${worksrcpath} "ed - pyconfig.h < ${filespath}/pyconfig.h-universal.ed"
    }

    post-destroot {
        foreach unversioned {python3-32} {
            delete ${destroot}${prefix}/bin/${unversioned}
        }
    }
}

variant optimizations description {Compile with LTO and PGO. Build time greatly increased} {
    configure.args-append   --enable-optimizations
}

variant dtrace description {enable DTrace support} {
    configure.args-append   --with-dtrace
}

livecheck.type      regex
livecheck.url       ${homepage}downloads/source/
livecheck.regex     Python (${branch}\[.0-9\]+) -
