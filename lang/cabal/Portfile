# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           haskell_cabal 1.0

name                cabal
version             3.8.1.0
revision            0
categories          lang haskell devel
platforms           darwin
license             BSD
maintainers         {ieee.org:s.t.smith @essandess} openmaintainer

description         Haskell Cabal: Common Architecture for \
                    Building Applications and Libraries

long_description    Cabal is a system for building and packaging \
                    Haskell libraries and programs. It defines a \
                    common interface for package authors and \
                    distributors to easily build their applications in \
                    a portable way. Cabal is part of a larger \
                    infrastructure for distributing, organizing, and \
                    cataloging Haskell libraries and programs.

homepage            https://www.haskell.org/cabal

# Bootstrapped cabal is the default build
variant prebuilt \
    description {Do not bootstrap cabal; install the pre-built binary.} {}

supported_archs     arm64 x86_64

master_sites        https://downloads.haskell.org/~${name}/${name}-install-${version}/:haskell

# set build_arch by hand on arm64/x86_64 systems to get x86_64/arm64 checksums
# sudo port -d checksum cabal os.arch=arm build_arch=arm64
# run `port clean --all cabal` afterwards
if {${build_arch} eq {arm64}} {
    set distfile_haskell \
                    ${name}-install-${version}-aarch64-darwin.tar.xz
    distfiles       ${distfile_haskell}:haskell

    checksums       ${distfile_haskell} \
                    rmd160  1be8b14e19a93fd904d563133122ed8eee872ccc \
                    sha256  f75b129c19cf3aa88cf9885cbf5da6d16f9972c7f770c528ca765b9f0563ada3 \
                    size    11519120
} elseif {${build_arch} eq {x86_64}} {
    set distfile_haskell \
                    ${name}-install-${version}-x86_64-darwin.tar.xz
    distfiles       ${distfile_haskell}:haskell

    checksums       ${distfile_haskell} \
                    rmd160  1f752977ba663e78d9a8398c9df02fa31002b025 \
                    sha256  f5ff69127b0e596b0d7895a2b0b383543aa92ae46d9b1b28f2868d2a97ed0de9 \
                    size    5494908
}

# use these to specify python versions, python3 required
# use ${prefix}/var/macports/sources/rsync.macports.org/macports/release/tarballs/ports/_resources/port1.0/group/python-1.0.tcl
set python3_version 310
set python3_branch  [string index ${python3_version} 0].[string range ${python3_version} 1 end]
set python3_prefix  ${frameworks_dir}/Python.framework/Versions/${python3_branch}
set python3_bin     ${python3_prefix}/bin/python${python3_branch}

extract.only        ${distfile_haskell}

haskell_cabal.bin   ${workpath}/${name}

# cabal must bootstrap itself
post-extract {
    # binary extract to ${workpath}/${name}
    xinstall -W ${workpath} -d ./bin
    xinstall -m 0755 -W ${workpath} ./${name} ./bin
    haskell_cabal.bin   ${workpath}/bin/${name}
}

if {${os.platform} eq "darwin" && ${os.major} < 16} {
    known_fail  yes
    pre-fetch {
        ui_error "${name} @${version} requires macOS 10.12 or later."
        return -code error "incompatible macOS version"
    }
}

# https://github.com/haskell/cabal/issues/8360#issuecomment-1220918581
build.target        build \
                    ${name}-install \
                    --project-file=cabal.project.release \
                    --allow-newer \
                    --prefix=${prefix}

if { [variant_isset "prebuilt"] } {
    use_configure   no
    build {}
} else {
    set distfile_github \
                    [string totitle ${name}]-v${version}.tar.gz
    master_sites-append \
                    https://github.com/haskell/${name}/archive/refs/tags:github
    distfiles-append \
                    ${distfile_github}:github
    checksums-append \
                    ${distfile_github} \
                    rmd160  dbd7aa2683cb7a9bd4e393c784aac8e1d1051aa4 \
                    sha256  d4eff9c1fcc5212360afac8d97da83b3aff79365490a449e9c47d3988c14b6bc \
                    size    2181318

    depends_build-append \
                    path:bin/ghc:ghc \
                    port:python${python3_version} \
                    port:py${python3_version}-importlib-metadata \
                    port:py${python3_version}-parsing \
                    port:py${python3_version}-sphinx \
                    port:py${python3_version}-sphinx-jsonschema \
                    port:py${python3_version}-sphinx-rtd-theme \
                    port:py${python3_version}-sphinxnotes-strike \
                    port:py${python3_version}-tz \
                    port:py${python3_version}-yaml \
                    port:py${python3_version}-zipp

    set ghc_version [exec sh -c "ghc --version | sed -E 's|^.+version (\[\[:digit:]])|\\1|'"]
    set cabal_build_dir {}

    worksrcdir      ${name}-install-${version}

    extract.only-append \
                    ${distfile_github}

    post-build {
        set cabal_build_dir \
                    [glob ${worksrcpath}/dist-newstyle/build/*/ghc-${ghc_version}/${name}-install-${version}]

        delete      ${haskell_cabal.bin}
        xinstall -m 0755 \
                    ${cabal_build_dir}/x/${name}/build/${name}/${name} \
                    ${haskell_cabal.bin}

        # https://github.com/haskell/cabal/blob/c1f490a50782cc89030889fae8edd9f95db7c1e4/Makefile#L207
        system -W ${worksrcpath} \
            "sphinx-build-${python3_branch} -n --keep-going -E\
                    doc dist-newstyle/doc/users-guide"

        post-destroot {
            xinstall -d \
                    ${destroot}${prefix}/share/doc/${distname}
            copy    ${worksrcpath}/dist-newstyle/doc/users-guide \
                    ${destroot}${prefix}/share/doc/${distname}
        }
    }
}

destroot {
    xinstall -m 0755 ${haskell_cabal.bin} ${destroot}${prefix}/bin

    xinstall -d ${destroot}${prefix}/share/man/man1
    system -W ${destroot}${prefix}/share/man/man1 \
                    "${haskell_cabal.bin} man --raw > ${name}.1"
}

if { ![variant_isset "prebuilt"] } {
    notes \
        "The Cabal User Guide is available at:

    file://${prefix}/share/doc/${distname}/users-guide/index.html
"
}
