# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0
PortGroup           select 1.0

name                py-astroML
version             0.4.1
revision            0

categories-append   science
license             BSD
platforms           darwin
supported_archs     noarch
maintainers         {aronnax @lpsinger} openmaintainer

python.versions     27 35 36

description         tools for machine learning and data mining in astronomy

long_description    AstroML is a Python module for machine learning and data \
                    mining built on numpy, scipy, scikit-learn, and \
                    matplotlib, and distributed under the 3-Clause BSD \
                    license. It contains a growing library of statistical and \
                    machine learning routines for analyzing astronomical data \
                    in python, loaders for several open astronomical datasets, \
                    and a large suite of examples of analyzing and visualizing \
                    astronomical datasets.

homepage            https://www.astroml.org
master_sites        pypi:[string index ${python.rootname} 0]/${python.rootname}
distname            ${python.rootname}-${version}

checksums           rmd160  3953350b06d20c22ea7a4d27b90b7db94968ffe4 \
                    sha256  a4efa8acee889c92088ff2433d24793d24cfe7aba15d523e2e0cc12d81e4b899 \
                    size    105183

if {${name} ne ${subport}} {
    # fix permissions
    post-extract {
        fs-traverse item ${worksrcpath} {
            if {[file isdirectory ${item}]} {
                file attributes ${item} -permissions a+rx
            } elseif {[file isfile ${item}]} {
                file attributes ${item} -permissions a+r
            }
        }
    }

    depends_build-append \
                    port:py${python.version}-setuptools

    depends_lib-append \
                    port:py${python.version}-numpy \
                    port:py${python.version}-scipy \
                    port:py${python.version}-matplotlib \
                    port:py${python.version}-scikit-learn \
                    port:py${python.version}-astropy

    variant addons description "Install optional package py${python.version}-${python.rootname}_addons for faster C implementations of some algorithms" {
        depends_run-append \
                    port:py${python.version}-${python.rootname}_addons
    }
    default_variants +addons

    depends_test-append \
                    port:py${python.version}-pytest
    test.run        yes
    test.cmd        py.test-${python.branch}
    test.args       -o addopts=''
    test.target
    test.env        PYTHONPATH=${worksrcpath}/build/lib

    livecheck.type  none
}
