# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0
PortGroup           bitbucket 1.0

bitbucket.setup     fenics-project ffc 2016.1.0 ffc-
revision            2
name                py-ffc

categories-append   math science
license             LGPL-3+
platforms           darwin
supported_archs     noarch
maintainers         sean openmaintainer

description         FEniCS Form Compiler
long_description    FFC works as a compiler for multilinear forms by generating \
                    code (C or C++) for the evaluation of a multilinear form given \
                    in mathematical notation. This new approach to form evaluation \
                    makes it possible to combine generality with efficiency, the \
                    form can be given in mathematical notation and the generated \
                    code is as efficient as hand-optimized code.

checksums           rmd160  187cff1cbc258686d8509edf5c152296dca7bbc5 \
                    sha256  f1023bd18b41fa6184770bdf379b205c6357ef23b18c7a3e50773fd706abbd62

python.versions     27
python.link_binaries_suffix

configure.cxxflags-append -std=c++11

if {${subport} ne ${name}} {
   depends_lib      port:py${python.version}-fiat \
                    port:py${python.version}-ufl \
                    port:py${python.version}-instant \
                    port:swig-python \
                    port:boost

    pre-build {
        build.env-append CXXFLAGS="${configure.cxxflags}"
    }

    pre-destroot {
        destroot.env-append CXXFLAGS="${configure.cxxflags}"
    }

    post-fetch {
        if {![file exists ${python.pkgd}/boost/mpi.so]} {
            return -code error "${name} needs boost installed with a mpi variant "
        }
    }

    post-destroot {
        move {*}[glob ${destroot}${destroot}/include/*.h] ${destroot}${prefix}/include
        move {*}[glob ${destroot}${destroot}/lib/pkgconfig/*.pc] ${destroot}${prefix}/lib/pkgconfig
        move ${destroot}${destroot}/share/ufc/ ${destroot}${prefix}/share/ufc
        reinplace -W ${destroot}${prefix}/lib/pkgconfig "s,${destroot},${prefix},g" ufc-1.pc
        reinplace -W ${destroot}${prefix}/share/ufc "s,${destroot},${prefix},g" UFCConfig.cmake
        reinplace -W ${destroot}${python.pkgd}/ffc "s,${destroot},${prefix},g" ufc_include.py
        delete ${destroot}${python.pkgd}/ffc/ufc_include.pyc
        system -W ${destroot}${python.pkgd}/ffc "${python.bin} -m compileall ufc_include.py"
    }

    livecheck.type  none
}
