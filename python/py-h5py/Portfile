# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               github 1.0
PortGroup               python 1.0
PortGroup               mpi 1.0

github.setup            h5py h5py 2.8.0
name                    py-h5py
# h5py needs to be re-built after hdf5 upgrades
revision                0

platforms               darwin
license                 BSD
maintainers             {eborisch @eborisch} openmaintainer

description             Read and write HDF5 files from Python

long_description  \
    The h5py package provides both a high- and low-level interface to the \
    HDF5 library from Python. The low-level interface is intended to be a \
    complete wrapping of the HDF5 API, while the high-level component \
    supports  access to HDF5 files, datasets and groups using established \
    Python and NumPy concepts. \
    \n\nA strong emphasis on automatic conversion between Python (Numpy) \
    datatypes and data structures and their HDF5 equivalents vastly \
    simplifies the process of reading and writing data from Python.

homepage                http://www.h5py.org

# Dropping -devel versions; mature & stable
# Can be removed after 6/13/2019
# Support for -devel
set DEV_VERSION     0

subport                 py27-h5py-devel {set DEV_VERSION 27}
subport                 py34-h5py-devel {set DEV_VERSION 34}
subport                 py35-h5py-devel {set DEV_VERSION 35}
subport                 py36-h5py-devel {set DEV_VERSION 36}

python.versions         27 35 36 37
python.default_version  27

checksums \
    rmd160  d2989e082842e6c14d9a34bb4e92ec862bd7585b \
    sha256  4d494a2b03e190029f265c60a84baf48cbe3e1d161bf75c84d16de1e06f52be9

if {${DEV_VERSION}} {
    # Dropping -devel versions; mature & stable
    # Can be removed after 6/13/2019
    PortGroup   obsolete 1.0
    replaced_by py${python.version}-h5py
} elseif {${name} ne ${subport}} {
    conflicts               py${python.version}-h5py-devel
}

# Only check against releases.
livecheck.regex             "archive/(\[0-9.\]+)\.tar\.gz"


if {${name} ne ${subport}} {
    depends_build-append    port:py${python.version}-cython

    depends_lib-append      port:py${python.version}-numpy \
                            port:py${python.version}-six \
                            port:py${python.version}-pkgconfig \
                            port:hdf5

    post-destroot {
        system -W ${destroot}${prefix} "mkdir -p share/doc/${subport}"
        copy ${worksrcpath}/lzf/LICENSE.txt \
            ${destroot}${prefix}/share/doc/${subport}
    }

    # Add MPI support
    mpi.setup
    if {[mpi_variant_isset]} {
        build.env-append        DISTUTILS_DEBUG=1
        depends_lib-append      port:py${python.version}-mpi4py
        mpi.enforce_variant     hdf5 \
                                py${python.version}-mpi4py

        use_configure           yes
        configure.cmd           ${build.cmd} configure
        configure.args          --mpi
        configure.pre_args
    }

    livecheck.type          none
}
