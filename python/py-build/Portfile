# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-build

version             0.8.0
revision            0
categories-append   devel
license             MIT
supported_archs     noarch

python.versions     36 37 38 39 310

maintainers         {danchr @danchr} openmaintainer

description         A simple, correct PEP517 package builder

long_description    ${description} which will invoke the PEP 517 \
                    hooks to build a distribution package. It is a \
                    simple build tool and does not perform any \
                    dependency management.

homepage            https://pypa-build.readthedocs.io/

checksums           md5 307632355e32c3769c99da66f92fe020 \
                    rmd160 3086fae7785c632e7345494979051c68db61748d \
                    sha256 887a6d471c901b1a6e6574ebaeeebb45e5269a79d095fe9a8f88d6614ed2e5f0 \
                    size   17067

python.pep517       yes

if {${name} ne ${subport}} {
    # don't depend on ourself
    python.add_dependencies no
    depends_build-append \
                        port:py${python.version}-setuptools \
                        port:py${python.version}-wheel
    depends_lib-append  port:py${python.version}-packaging \
                        port:py${python.version}-pep517 \
                        port:py${python.version}-tomli \
                        port:python${python.version}

    if {${python.version} >= 37} {
        depends_build-append \
                        port:py${python.version}-installer
    } else {
        depends_build-append \
                        port:py${python.version}-python-install
    }
    if {${python.version} < 38} {
        depends_lib-append \
                        port:py${python.version}-importlib-metadata
    }

    build.env-append    PYTHONPATH=${worksrcpath}/src

    # just verify dependencies
    test.run            yes
    test.env-append     PYTHONPATH=${worksrcpath}/src
    test.cmd            ${python.bin} -m build
    test.target         --help

    livecheck.type      none
}
