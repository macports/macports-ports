# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                pipenv
version             2022.11.5
revision            0
categories-append   devel
platforms           {darwin any}
license             MIT
supported_archs     noarch

maintainers         {danchr @danchr} openmaintainer

description         The officially recommended Python packaging tool.

long_description    {*}${description} \
                    Pipenv -- Python Dev Workflow for Humans -- is a \
                    tool that aims to bring the best of \
                    all packaging worlds (bundler, composer, npm, \
                    cargo, yarn, etc.) to the Python world. Windows is \
                    a first-class citizen, in our world. \
                    \
                    \n\nIt automatically creates and manages a virtualenv \
                    for your projects, as well as adds/removes \
                    packages from your Pipfile as you \
                    install/uninstall packages. It also generates the \
                    ever-important Pipfile.lock, which is used to \
                    produce deterministic builds.

homepage            https://pipenv.pypa.io/en/latest/
master_sites        pypi:[string index ${python.rootname} 0]/${python.rootname}

distname            ${python.rootname}-${version}

checksums           rmd160  b50f874bec35cd315c841a730729eb8d76bc5f72 \
                    sha256  af8595e38f1d87af3b00d209390bce41c97b10fca1c956e9ba1208438af55c6a \
                    size    4786517

python.default_version 310

depends_lib-append \
    port:py${python.version}-certifi \
    port:py${python.version}-setuptools \
    port:py${python.version}-virtualenv \
    port:py${python.version}-virtualenv-clone

post-destroot {
    xinstall -m 644 \
        ${destroot}${python.pkgd}/${name}/${name}.1 \
        ${destroot}${prefix}/share/man/man1
}

test.run            yes
test.cmd            pipenv
test.target         install
test.args           pip
