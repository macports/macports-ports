# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-jwt
python.rootname     PyJWT
version             2.3.0
revision            0

categories-append   security
platforms           darwin
supported_archs     noarch
license             MIT
maintainers         {petr @petrrr} openmaintainer

description         JSON Web Token implementation in Python
long_description    {*}${description}

homepage            https://github.com/jpadilla/pyjwt

checksums           rmd160  c862a165978caaa8a28ec56658fec189bae2d043 \
                    sha256  b888b4d56f06f6dcd777210c334e69c737be74755d3e5e9ee3fe67dc18a0ee41 \
                    size    62279

python.versions     27 36 37 38 39 310

if {${name} ne ${subport}} {
    depends_build-append \
                    port:py${python.version}-setuptools

    depends_test-append \
                    port:py${python.version}-pytest

    # legacy support
    if {${python.version} eq 27} {
        version     1.7.1
        revision    0

        checksums   rmd160  bfe7a0ea07327593b728ba82766d809ae4c1be75 \
                    sha256  8d59a976fb773f3e6a39c85636357c4f0e242707394cadadd9814f5cbaa20e96 \
                    size    41979

        depends_build-append \
                    port:py${python.version}-pytest-runner

        notes-append \
            "This is a legacy version of ${python.rootname} for Python ${python.version}."
    }

    test.run        yes
    test.cmd        py.test-${python.branch}
    test.target     tests
    test.env        PYTHONPATH=${worksrcpath}/build/lib

    livecheck.type  none
}
