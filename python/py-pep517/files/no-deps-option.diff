--- pep517/build.py.orig	2020-10-19 07:41:27.000000000 +1100
+++ pep517/build.py	2020-12-01 12:49:53.000000000 +1100
@@ -55,14 +55,15 @@
     return system
 
 
-def _do_build(hooks, env, dist, dest):
+def _do_build(hooks, env, dist, dest, no_deps=False):
     get_requires_name = 'get_requires_for_build_{dist}'.format(**locals())
     get_requires = getattr(hooks, get_requires_name)
     reqs = get_requires({})
     log.info('Got build requires: %s', reqs)
 
-    env.pip_install(reqs)
-    log.info('Installed dynamic build dependencies')
+    if not no_deps:
+        env.pip_install(reqs)
+        log.info('Installed dynamic build dependencies')
 
     with tempdir() as td:
         log.info('Trying to build %s in %s', dist, td)
@@ -73,7 +74,7 @@
         shutil.move(source, os.path.join(dest, os.path.basename(filename)))
 
 
-def build(source_dir, dist, dest=None, system=None):
+def build(source_dir, dist, dest=None, system=None, no_deps=False):
     system = system or load_system(source_dir)
     dest = os.path.join(source_dir, dest or 'dist')
     mkdir_p(dest)
@@ -84,8 +85,9 @@
     )
 
     with BuildEnvironment() as env:
-        env.pip_install(system['requires'])
-        _do_build(hooks, env, dist, dest)
+        if not no_deps:
+            env.pip_install(system['requires'])
+        _do_build(hooks, env, dist, dest, no_deps=no_deps)
 
 
 parser = argparse.ArgumentParser()
@@ -104,6 +106,11 @@
     default=False,
 )
 parser.add_argument(
+    '--no-deps', '-n',
+    action='store_true',
+    default=False,
+)
+parser.add_argument(
     '--out-dir', '-o',
     help="Destination in which to save the builds relative to source dir",
 )
@@ -117,7 +124,7 @@
     )))
 
     for dist in dists:
-        build(args.source_dir, dist, args.out_dir)
+        build(args.source_dir, dist, args.out_dir, no_deps=args.no_deps)
 
 
 if __name__ == '__main__':
