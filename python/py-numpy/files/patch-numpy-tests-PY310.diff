--- numpy/tests/test_configtool.py.orig	2024-11-26 07:23:20
+++ numpy/tests/test_configtool.py	2024-11-26 07:23:58
@@ -18,7 +18,7 @@


 def check_numpyconfig(arg):
-    p = subprocess.run(['numpy-config', arg], capture_output=True, text=True)
+    p = subprocess.run(['numpy-config-@@PYVER@@', arg], capture_output=True, text=True)
     p.check_returncode()
     return p.stdout.strip()

--- numpy/_core/tests/test_cython.py.orig	2024-11-26 07:25:47
+++ numpy/_core/tests/test_cython.py	2024-11-26 07:26:30
@@ -51,23 +51,23 @@
         f.write(f"python = '{sys.executable}'")

     try:
-        subprocess.check_call(["meson", "--version"])
+        subprocess.check_call(["meson-@@PYVER@@", "--version"])
     except FileNotFoundError:
         pytest.skip("No usable 'meson' found")
     if sys.platform == "win32":
-        subprocess.check_call(["meson", "setup",
+        subprocess.check_call(["meson-@@PYVER@@", "setup",
                                "--buildtype=release",
                                "--vsenv", "--native-file", native_file,
                                str(srcdir)],
                               cwd=build_dir,
                               )
     else:
-        subprocess.check_call(["meson", "setup",
+        subprocess.check_call(["meson-@@PYVER@@", "setup",
                                "--native-file", native_file, str(srcdir)],
                               cwd=build_dir
                               )
     try:
-        subprocess.check_call(["meson", "compile", "-vv"], cwd=build_dir)
+        subprocess.check_call(["meson-@@PYVER@@", "compile", "-vv"], cwd=build_dir)
     except subprocess.CalledProcessError:
         print("----------------")
         print("meson build failed when doing")
--- numpy/_core/tests/test_limited_api.py.orig	2025-02-12 15:45:32
+++ numpy/_core/tests/test_limited_api.py	2025-02-17 22:15:54
@@ -49,11 +49,11 @@
         f.write(f"python3 = '{sys.executable}'")

     try:
-        subprocess.check_call(["meson", "--version"])
+        subprocess.check_call(["meson-@@PYVER@@", "--version"])
     except FileNotFoundError:
         pytest.skip("No usable 'meson' found")
     if sys.platform == "win32":
-        subprocess.check_call(["meson", "setup",
+        subprocess.check_call(["meson-@@PYVER@@", "setup",
                                "--werror",
                                "--buildtype=release",
                                "--vsenv", "--native-file", native_file,
@@ -61,13 +61,13 @@
                               cwd=build_dir,
                               )
     else:
-        subprocess.check_call(["meson", "setup", "--werror",
+        subprocess.check_call(["meson-@@PYVER@@", "setup", "--werror",
                                "--native-file", native_file, str(srcdir)],
                               cwd=build_dir
                               )
     try:
         subprocess.check_call(
-            ["meson", "compile", "-vv"], cwd=build_dir)
+            ["meson-@@PYVER@@", "compile", "-vv"], cwd=build_dir)
     except subprocess.CalledProcessError as p:
         print(f"{p.stdout=}")
         print(f"{p.stderr=}")
