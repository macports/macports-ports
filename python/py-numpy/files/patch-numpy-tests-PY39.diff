--- numpy/tests/test_configtool.py.orig	2025-06-19 10:57:14
+++ numpy/tests/test_configtool.py	2025-06-19 10:58:05
@@ -18,7 +18,7 @@
 
 
 def check_numpyconfig(arg):
-    p = subprocess.run(['numpy-config', arg], capture_output=True, text=True)
+    p = subprocess.run(['numpy-config-@@PYVER@@', arg], capture_output=True, text=True)
     p.check_returncode()
     return p.stdout.strip()
 
--- numpy/_core/tests/test_cython.py	2025-06-19 10:58:05
+++ numpy/_core/tests/test_cython.py.orig	2024-08-26 13:15:26
@@ -44,23 +44,23 @@
         f.write(f"python = '{sys.executable}'")
 
     try:
-        subprocess.check_call(["meson-@@PYVER@@", "--version"])
+        subprocess.check_call(["meson", "--version"])
     except FileNotFoundError:
         pytest.skip("No usable 'meson' found")
     if sys.platform == "win32":
-        subprocess.check_call(["meson-@@PYVER@@", "setup",
+        subprocess.check_call(["meson", "setup",
                                "--buildtype=release",
                                "--vsenv", "--native-file", native_file,
                                str(srcdir)],
                               cwd=build_dir,
                               )
     else:
-        subprocess.check_call(["meson-@@PYVER@@", "setup",
+        subprocess.check_call(["meson", "setup",
                                "--native-file", native_file, str(srcdir)],
                               cwd=build_dir
                               )
     try:
-        subprocess.check_call(["meson-@@PYVER@@", "compile", "-vv"], cwd=build_dir)
+        subprocess.check_call(["meson", "compile", "-vv"], cwd=build_dir)
     except subprocess.CalledProcessError:
         print("----------------")
         print("meson build failed when doing")
--- numpy/_core/tests/test_limited_api.py	2025-06-19 10:58:44
+++ numpy/_core/tests/test_limited_api.py.orig	2024-08-26 13:15:26
@@ -35,23 +35,23 @@
     build_dir = tmpdir_factory.mktemp("limited_api") / "build"
     os.makedirs(build_dir, exist_ok=True)
     try:
-        subprocess.check_call(["meson-@@PYVER@@", "--version"])
+        subprocess.check_call(["meson", "--version"])
     except FileNotFoundError:
         pytest.skip("No usable 'meson' found")
     if sys.platform == "win32":
-        subprocess.check_call(["meson-@@PYVER@@", "setup",
+        subprocess.check_call(["meson", "setup",
                                "--werror",
                                "--buildtype=release",
                                "--vsenv", str(srcdir)],
                               cwd=build_dir,
                               )
     else:
-        subprocess.check_call(["meson-@@PYVER@@", "setup", "--werror", str(srcdir)],
+        subprocess.check_call(["meson", "setup", "--werror", str(srcdir)],
                               cwd=build_dir
                               )
     try:
         subprocess.check_call(
-            ["meson-@@PYVER@@", "compile", "-vv"], cwd=build_dir)
+            ["meson", "compile", "-vv"], cwd=build_dir)
     except subprocess.CalledProcessError as p:
         print(f"{p.stdout=}")
         print(f"{p.stderr=}")
