--- numpy/tests/test_configtool.py.orig	2025-06-19 11:05:27
+++ numpy/tests/test_configtool.py	2025-06-19 11:05:47
@@ -19,7 +19,7 @@
 @pytest.mark.skipif(IS_WASM, reason="wasm interpreter cannot start subprocess")
 class TestNumpyConfig:
     def check_numpyconfig(self, arg):
-        p = subprocess.run(['numpy-config', arg], capture_output=True, text=True)
+        p = subprocess.run(['numpy-config-@@PYVER@@', arg], capture_output=True, text=True)
         p.check_returncode()
         return p.stdout.strip()
 
--- numpy/_core/tests/test_cython.py.orig	2025-06-19 11:06:11
+++ numpy/_core/tests/test_cython.py	2025-06-19 11:06:55
@@ -52,25 +52,25 @@
         f.write(f"python3 = '{sys.executable}'")
 
     try:
-        subprocess.check_call(["meson", "--version"])
+        subprocess.check_call(["meson-@@PYVER@@", "--version"])
     except FileNotFoundError:
         pytest.skip("No usable 'meson' found")
     if sysconfig.get_platform() == "win-arm64":
         pytest.skip("Meson unable to find MSVC linker on win-arm64")
     if sys.platform == "win32":
-        subprocess.check_call(["meson", "setup",
+        subprocess.check_call(["meson-@@PYVER@@", "setup",
                                "--buildtype=release",
                                "--vsenv", "--native-file", native_file,
                                str(srcdir)],
                               cwd=build_dir,
                               )
     else:
-        subprocess.check_call(["meson", "setup",
+        subprocess.check_call(["meson-@@PYVER@@", "setup",
                                "--native-file", native_file, str(srcdir)],
                               cwd=build_dir
                               )
     try:
-        subprocess.check_call(["meson", "compile", "-vv"], cwd=build_dir)
+        subprocess.check_call(["meson-@@PYVER@@", "compile", "-vv"], cwd=build_dir)
     except subprocess.CalledProcessError:
         print("----------------")
         print("meson build failed when doing")
--- numpy/_core/tests/test_limited_api.py.orig	2025-06-07 07:57:13
+++ numpy/_core/tests/test_limited_api.py	2025-06-19 11:08:10
@@ -50,13 +50,13 @@
         f.write(f"python3 = '{sys.executable}'")
 
     try:
-        subprocess.check_call(["meson", "--version"])
+        subprocess.check_call(["meson-@@PYVER@@", "--version"])
     except FileNotFoundError:
         pytest.skip("No usable 'meson' found")
     if sysconfig.get_platform() == "win-arm64":
         pytest.skip("Meson unable to find MSVC linker on win-arm64")
     if sys.platform == "win32":
-        subprocess.check_call(["meson", "setup",
+        subprocess.check_call(["meson-@@PYVER@@", "setup",
                                "--werror",
                                "--buildtype=release",
                                "--vsenv", "--native-file", native_file,
@@ -64,13 +64,13 @@
                               cwd=build_dir,
                               )
     else:
-        subprocess.check_call(["meson", "setup", "--werror",
+        subprocess.check_call(["meson-@@PYVER@@", "setup", "--werror",
                                "--native-file", native_file, str(srcdir)],
                               cwd=build_dir
                               )
     try:
         subprocess.check_call(
-            ["meson", "compile", "-vv"], cwd=build_dir)
+            ["meson-@@PYVER@@", "compile", "-vv"], cwd=build_dir)
     except subprocess.CalledProcessError as p:
         print(f"{p.stdout=}")
         print(f"{p.stderr=}")
