# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-pyobjc-quartz
python.rootname     pyobjc-framework-Quartz

categories-append   devel
platforms           darwin
license             MIT
maintainers         nomaintainer

description         Quartz wrappers for PyObjC
long_description    This port provides the CoreGraphics, ImageIO, \
                    QuartzComposer, QuartzCore, QuartzFilters, ImageKit, \
                    PDFKit and CoreVideo framework wrappers \
                    for use with PyObjC.
homepage            https://pyobjc.readthedocs.io/

version             6.1
master_sites        pypi:p/${python.rootname}/

python.versions     27 34 35 36 37 38

if {${name} ne ${subport}} {
    if {${python.version} == 27 ||
        ${python.version} == 34 ||
        ${python.version} == 35} {
        # peg at the final version for these Python versions
        version   5.3
        revision  0
        distname  ${python.rootname}-${version}
        checksums rmd160 a06bc0f1da8559473be5b420a462693483487351 \
                  sha256 fb89be73ca9dff503375e7a73be5a957bf97c8308259ab733ddfdcc2f70a3fa4 \
                  size   3372445

        patchfiles pyobjc_setup.py.patch
    } else {
        revision  0
        distname  ${python.rootname}-${version}
        checksums rmd160 cfbd8898c47bb869565b8496a9ec08dbaa75f976 \
                  sha256 dc96a7c8b22264579f5438e2f9fc6c7f905412c5b297a750acce00f50aa87ca5 \
                  size   3433848
    }

    depends_build-append \
                        port:py${python.version}-setuptools
    depends_lib-append  port:py${python.version}-pyobjc \
                        port:py${python.version}-pyobjc-cocoa

    if {${configure.sdkroot} eq ""} {
        set sdkroot "/"
    } else {
        set sdkroot ${configure.sdkroot}
    }

    build.env-append    SDKROOT=${sdkroot}
    destroot.env-append SDKROOT=${sdkroot}

    platform darwin 8 {
        depends_build
        depends_lib
        pre-fetch {
            ui_error "${subport} @${version} requires Mac OS X 10.5 or later"
            return -code error "incompatible Mac OS X version"
        }
    }

    post-destroot {
        xinstall -m 0644 -W ${worksrcpath} \
            LICENSE.txt README.txt \
            ${destroot}${prefix}/share/doc/${subport}
        copy ${worksrcpath}/Examples \
            ${destroot}${prefix}/share/doc/${subport}/examples
    }

    livecheck.type  none
}
