# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-xarray
version             2022.3.0
revision            0

categories-append   science math
supported_archs     noarch
license             Apache-2
maintainers         {petr @petrrr} openmaintainer

description         Provides N-D labeled arrays and datasets in Python
long_description    \
    xarray (formerly xray) is an open source project and Python package that \
    aims to bring the labeled data power of pandas to the physical sciences, \
    by providing N-dimensional variants of the core pandas data structures.

homepage            https://github.com/pydata/xarray

checksums           rmd160  b03541b7e6b0ad1d05a190e18377cef5361e1925 \
                    sha256  398344bf7d170477aaceff70210e11ebd69af6b156fe13978054d25c48729440 \
                    size    2943007

python.versions     37 38 39 310
python.pep517       yes

if {${name} ne ${subport}} {
    depends_build-append \
                    port:py${python.version}-setuptools_scm \
                    port:py${python.version}-setuptools_scm_git_archive

    depends_lib-append \
                    port:py${python.version}-numpy \
                    port:py${python.version}-packaging \
                    port:py${python.version}-pandas

    if {${python.version} == 37} {
        version     0.20.2
        revision    0
        checksums   rmd160  4b642a722560b4b592f9fe7c8886c1534ba68eee \
                    sha256  c2ebe80ca81b10a0241f6876dcc34ac9696e5c5cdcdf4758da7cf4bd732c41f7 \
                    size    2906021

        depends_lib-delete \
                    port:py${python.version}-packaging

        depends_lib-append \
                    port:py${python.version}-importlib-metadata \
                    port:py${python.version}-typing_extensions
    }

    depends_test-append \
                    port:py${python.version}-pytest

    test.run        yes
    test.cmd        py.test-${python.branch}
    test.target
    test.env        PYTHONPATH=${worksrcpath}/build/lib
}
