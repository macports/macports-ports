# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0
PortGroup           github 1.0

github.setup        matplotlib matplotlib 3.0.0 v

name                py-matplotlib
categories-append   graphics math
platforms           darwin
license             {PSF BSD}

python.versions     27 34 35 36 37

maintainers         {sean @seanfarley} openmaintainer

description         Matplotlib is a python plotting library

long_description    Matplotlib strives to produce publication quality 2D \
                    graphics for interactive graphing, scientific publishing, \
                    user interface development and web application servers \
                    targeting multiple user interfaces and hardcopy output \
                    formats. There is a 'pylab' mode which emulates matlab \
                    graphics. The library uses numpy for handling large data \
                    sets and supports a variety of output backends. This port \
                    provides variants for the different GUIs (gtk2, tkinter, \
                    qt4, cairo, latex).

homepage            https://matplotlib.org/

checksums           rmd160  ab5e432648bb636bcdfde96bc01d9b24c0017d82 \
                    sha256  5305528f1b62bd778f67b20870a5f9db70ccf9d002e08b19f4508e03b2e41c33 \
                    size    36431763

if {${name} ne ${subport}} {
    depends_build-append \
                        port:pkgconfig \
                        port:py${python.version}-setuptools

    depends_lib-append  port:freetype \
                        port:libpng \
                        port:qhull \
                        port:py${python.version}-cycler \
                        port:py${python.version}-dateutil \
                        port:py${python.version}-kiwisolver \
                        port:py${python.version}-numpy \
                        port:py${python.version}-parsing \
                        port:py${python.version}-pyobjc-cocoa

    patchfiles          patch-v3-setup.cfg.diff \
                        patch-src-macosx.m.diff \
                        patch-v3-qhull.diff \
                        patch-v3-setupext.py.diff \

    if {${python.version} in "27 34"} {
        github.setup    matplotlib matplotlib 2.2.3 v
        checksums       rmd160  ef28a29f84a5f85c46d2bdad75e368bc9d1a6e9d \
                        sha256  a6fe66c99796a9dea672dcb8e20ec89192e32a6ab38685088dbfd14018644911 \
                        size    36667567

        depends_lib-append  port:py${python.version}-six \
                            port:py${python.version}-tz

        patchfiles          patch-v2-setup.cfg.diff \
                            patch-src-macosx.m.diff \
                            patch-v2-qhull.diff \
                            patch-v2-setupext.py.diff \
    }

    if {${python.version} eq 27} {
        depends_lib-append  port:py27-backports-functools_lru_cache \
                            port:py27-subprocess32
    }

    build.env           PKG_CONFIG_PATH="${python.prefix}/lib/pkgconfig"

    post-patch {
        reinplace "s|@@PREFIX@@|${prefix}|" ${worksrcpath}/setup.cfg
    }

    # build fails with gcc-4.0 on Leopard, use gcc-4.2 (#37069)
    compiler.blacklist gcc-4.0

    post-destroot {
        xinstall -m 755 -d ${destroot}${prefix}/share/doc/${subport} \
            ${destroot}${prefix}/share/${subport}
        xinstall -m 644 -W ${worksrcpath} README.rst matplotlibrc.template \
            ${destroot}${prefix}/share/doc/${subport}
        file copy ${worksrcpath}/examples \
            ${destroot}${prefix}/share/${subport}
    }

    variant webagg description "Enable WebAgg backend" {
        depends_lib-append  port:py${python.version}-tornado
    }

    variant tkinter description "Enable TkAgg backend" {
        depends_lib-append  port:py${python.version}-tkinter
        post-patch {
            reinplace "s|^tkagg=False|tkagg=True|" ${worksrcpath}/setup.cfg
        }
    }

    if {${python.version} eq 27} {
        variant gtk2 description "Enable GTKAgg backend" {
            depends_lib-append  port:py${python.version}-pygtk
            post-patch {
                reinplace "s|^gtk=False|gtk=True|" ${worksrcpath}/setup.cfg
                reinplace "s|^gtkagg=False|gtkagg=True|" ${worksrcpath}/setup.cfg
            }
        }
    }

    variant gtk3 description "Enable GTK3Agg backend" {
        depends_lib-append  port:py${python.version}-gobject3 port:gtk3
        post-patch {
            reinplace "s|^gtk3agg=False|gtk3agg=True|" ${worksrcpath}/setup.cfg
        }
    }

    variant qt4 description "Enable Qt4Agg backend" {
        depends_lib-append  port:py${python.version}-pyqt4
        post-patch {
            reinplace "s|^qt4agg=False|qt4agg=True|" ${worksrcpath}/setup.cfg
        }
    }

    variant qt5 description "Enable Qt5Agg backend" {
        depends_lib-append  port:py${python.version}-pyqt5
        post-patch {
            reinplace "s|^qt5agg=False|qt5agg=True|" ${worksrcpath}/setup.cfg
        }
    }

    variant pyside description "Enable PySide backend" {
        depends_lib-append  port:py${python.version}-pyside
        post-patch {
            reinplace "s|^pyside=False|pyside=True|" ${worksrcpath}/setup.cfg
        }
    }

    variant cairo description "Enable Cairo backends" {
        depends_lib-append  port:py${python.version}-cairo
        post-patch {
            reinplace "s|^cairo=False|cairo=True|" ${worksrcpath}/setup.cfg
        }
    }

    variant dvipng description "Enable dvipng support" {
        depends_run-append  port:dvipng
    }

    variant ghostscript description "Enable GhostScript support" {
        depends_run-append  port:ghostscript
    }

    variant latex description "Enable LaTeX support" {
        depends_run-append  bin:latex:texlive
    }

    variant pdftops description "Enable pdftops support" {
        depends_run-append  bin:pdftops:poppler
    }

    default_variants +webagg

    if {![variant_isset gtk2] && ![variant_isset tkinter] && ![variant_isset qt5] &&
        ![variant_isset qt4] && ![variant_isset pyside]} {
            default_variants-append +cairo
    }

    if {[variant_isset gtk3] && [variant_isset cairo]} {
        post-patch {
            reinplace "s|^gtk3cairo=False|gtk3cairo=True|" ${worksrcpath}/setup.cfg
        }
    }

    livecheck.type      none

    notes "
The default backend is the interactive Mac OS X backend. Different\
backends can be specified using the ~/.matplotlib/matplotlibrc file.\
More details regarding backends can be found in the matplotlib FAQ:

https://matplotlib.org/tutorials/introductory/usage.html#backends
"
} else {
    github.livecheck.regex  {([\d+(?:.\d+)*"]+)}
}
