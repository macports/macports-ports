# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0
PortGroup           github 1.0
github.setup        pydicom pynetdicom3 7ebc172
name                py-pynetdicom3
version             0.9.1-pre-1.0
# Bump this whenever grabbing a new snapshot up to release of 1.0.0
revision            0
python.versions     27 36 37
platforms           darwin
license             MIT BSD
maintainers         {eborisch @eborisch} openmaintainer
supported_archs     noarch

description         A Python implementation of the DICOM networking protocol

long_description    pynetdicom3 is a pure Python (2.7/3.4+) package that \
                    implements the DICOM networking protocol. Working with \
                    pydicom, it allows the easy creation of DICOM Service \
                    Class Users (SCUs) and Service Class Providers (SCPs).

checksums \
    rmd160  74ef9722059f375a3de3cb65140bbe302cb81f44 \
    sha256  2cdce4567f4f5e054b61e9941e7c88c34575d4d5057c7517dfcde565207fc768 \
    size    1531655

if {${name} ne ${subport}} {
    depends_lib-append      port:py${python.version}-pydicom

    variant doc description "Build offline documentation" {
        depends_build-append \
            port:py${python.version}-matplotlib\
            port:py${python.version}-sphinx \
            port:py${python.version}-sphinx-gallery \
            port:py${python.version}-sphinx-bootstrap-theme \
            port:py${python.version}-sphinx_rtd_theme

        notes "
            Documentation installed at:
            ${prefix}/share/doc/${subport}/html/index.html
            ${subport} is pre-release software!
        "
    }

    if {[variant_isset doc]} {
        notes "
            Documentation installed at:
            ${prefix}/share/doc/${subport}/html/index.html
            ${subport} is pre-release software!
        "
    } else {
        notes "${subport} is pre-release software!"
    }

    post-extract {
        reinplace s/sphinx-build/sphinx-build-${python.branch}/ \
            docs/Makefile
    }

    post-build {
        if {[variant_isset doc]} {
            system -W ${worksrcpath}/docs/ \
                "env PYTHONPATH='${worksrcpath}/build/lib' make html"
        }
    }
    
    post-destroot {
        set DOCDIR ${destroot}${prefix}/share/doc/${subport}
        xinstall -d ${DOCDIR}
        xinstall -W ${worksrcpath} -m 0644 \
            LICENCE.txt \
            README.rst \
            ${DOCDIR}

        if {[variant_isset doc]} {
            xinstall -m 0644 ${worksrcpath}/docs/release_notes.rst ${DOCDIR}
            file copy ${worksrcpath}/docs/_build/html ${DOCDIR}
        }
    }
}
