--- setup.py.orig	2020-10-14 19:02:31.000000000 +0300
+++ setup.py	2020-10-15 21:00:31.000000000 +0300
@@ -433,60 +433,10 @@
             )
 
         elif sys.platform == "darwin":
-            # attempt to make sure we pick freetype2 over other versions
-            _add_directory(include_dirs, "/sw/include/freetype2")
-            _add_directory(include_dirs, "/sw/lib/freetype2/include")
-            # fink installation directories
-            _add_directory(library_dirs, "/sw/lib")
-            _add_directory(include_dirs, "/sw/include")
             # darwin ports installation directories
-            _add_directory(library_dirs, "/opt/local/lib")
-            _add_directory(include_dirs, "/opt/local/include")
-
-            # if Homebrew is installed, use its lib and include directories
-            try:
-                prefix = (
-                    subprocess.check_output(["brew", "--prefix"])
-                    .strip()
-                    .decode("latin1")
-                )
-            except Exception:
-                # Homebrew not installed
-                prefix = None
-
-            ft_prefix = None
-
-            if prefix:
-                # add Homebrew's include and lib directories
-                _add_directory(library_dirs, os.path.join(prefix, "lib"))
-                _add_directory(include_dirs, os.path.join(prefix, "include"))
-                _add_directory(
-                    include_dirs, os.path.join(prefix, "opt", "zlib", "include")
-                )
-                ft_prefix = os.path.join(prefix, "opt", "freetype")
-
-            if ft_prefix and os.path.isdir(ft_prefix):
-                # freetype might not be linked into Homebrew's prefix
-                _add_directory(library_dirs, os.path.join(ft_prefix, "lib"))
-                _add_directory(include_dirs, os.path.join(ft_prefix, "include"))
-            else:
-                # fall back to freetype from XQuartz if
-                # Homebrew's freetype is missing
-                _add_directory(library_dirs, "/usr/X11/lib")
-                _add_directory(include_dirs, "/usr/X11/include")
+            _add_directory(library_dirs, "@prefix@/lib")
+            _add_directory(include_dirs, "@prefix@/include")
 
-            # SDK install path
-            try:
-                sdk_path = (
-                    subprocess.check_output(["xcrun", "--show-sdk-path"])
-                    .strip()
-                    .decode("latin1")
-                )
-            except Exception:
-                sdk_path = None
-            if sdk_path:
-                _add_directory(library_dirs, os.path.join(sdk_path, "usr", "lib"))
-                _add_directory(include_dirs, os.path.join(sdk_path, "usr", "include"))
         elif (
             sys.platform.startswith("linux")
             or sys.platform.startswith("gnu")
