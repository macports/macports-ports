# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:et:fenc=utf-8::et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               compiler_blacklist_versions 1.0
PortGroup               active_variants 1.1
PortGroup               github 1.0
PortGroup               python 1.0

github.setup            pygobject pycairo 1.18.0 v
github.tarball_from     releases

name                    py-cairo
categories-append       graphics
license                 {LGPL-2.1 MPL-1.1}
platforms               darwin
maintainers             nomaintainer
description             Pycairo is set of Python bindings for the cairo graphics library

long_description        ${description}

checksums               rmd160  0e5f6d6c9be9b7a58ac74b4b2dbee802e07e8d8a \
                        sha256  abd42a4c9c2069febb4c38fe74bfc4b4a9d3a89fea3bc2e4ba7baff7a20f783f \
                        size    202140

python.versions         27 34 35 36 37

if {${name} ne ${subport}} {
    depends_build-append    port:pkgconfig
    depends_lib-append      path:lib/pkgconfig/cairo.pc:cairo

    depends_test-append     port:py${python.version}-pytest \
                            port:py${python.version}-hypothesis
    test.run                yes
    test.cmd                ${python.bin} setup.py

    # cairo/surface.c:478: error: #pragma GCC diagnostic not allowed inside functions
    # early clang versions don't use CPATH
    compiler.blacklist-append *gcc-3.* *gcc-4.* {clang < 300}

    variant quartz {
        require_active_variants cairo quartz
    }

    variant x11 {
        require_active_variants cairo x11
    }

    if {[catch {set result [active_variants cairo quartz]}]} {
        default_variants-append +quartz
    }

    if {[catch {set result [active_variants cairo x11]}]} {
        default_variants-append +x11
    }

    livecheck.type      none
}
