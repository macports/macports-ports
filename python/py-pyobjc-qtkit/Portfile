# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-pyobjc-qtkit
python.rootname     pyobjc-framework-QTKit

categories-append   devel
platforms           darwin
license             MIT
maintainers         nomaintainer

description         QTKit wrappers for PyObjC
long_description    This port provides wrappers for the QTKit framework for \
                    use with PyObjC. QTKit is an modern, object-oriented \
                    framework for working with QuickTime media in Cocoa \
                    applications, and is a replacement for the older \
                    Carbon-based Quicktime framework.
homepage            https://pyobjc.readthedocs.io/

version             6.1
master_sites        pypi:p/${python.rootname}/

python.versions     27 34 35 36 37 38

if {${name} ne ${subport}} {
    if {${python.version} == 27 ||
        ${python.version} == 34 ||
        ${python.version} == 35} {
        # peg at the final version for these Python versions
        version   5.3
        revision  0
        distname  ${python.rootname}-${version}
        checksums rmd160 f7b5d1216944d5e52e3227f4e804722ae0681990 \
                  sha256 d831c3d444364dc8b419db59dc023a4ff826392f1d602d36103085182a1e34dd \
                  size   119683

        patchfiles pyobjc_setup.py.patch
    } else {
        revision  0
        distname  ${python.rootname}-${version}
        checksums rmd160 f44ab01937ee44f0674a9e8d693487885a49e830 \
                  sha256 26d74aa7209827e624eaae03a4a69f2ea5b38746d6af7f55fc6a7709a8809859 \
                  size   119118
    }

    depends_build-append \
                        port:py${python.version}-setuptools
    depends_lib-append  port:py${python.version}-pyobjc \
                        port:py${python.version}-pyobjc-quartz

    if {${configure.sdkroot} eq ""} {
        set sdkroot "/"
    } else {
        set sdkroot ${configure.sdkroot}
    }

    build.env-append    SDKROOT=${sdkroot}
    destroot.env-append SDKROOT=${sdkroot}

    platform darwin 8 {
        depends_build
        depends_lib
        pre-fetch {
            ui_error "${subport} @${version} requires Mac OS X 10.5 or later"
            return -code error "incompatible Mac OS X version"
        }
    }

    post-destroot {
        xinstall -m 0644 -W ${worksrcpath} \
            LICENSE.txt README.txt \
            ${destroot}${prefix}/share/doc/${subport}
    }
}
