--- sip/cpp/sipAPI_adv.h
+++ sip/cpp/sipAPI_adv.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2485,22 +2485,6 @@ extern sipClassTypeDef sipTypeDef__adv_wxPropertySheetDialog;
 
 #define sipType_wxCalendarDateBorder sipExportedTypes__adv[14]
 
-#define sipType_wxHelpSearchMode sipImportedTypes__adv__core[28].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__adv__core[63].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__adv__core[22].it_td
-
-#define sipType_wxFloodFillStyle sipImportedTypes__adv__core[24].it_td
-
-#define sipType_wxRasterOperationMode sipImportedTypes__adv__core[47].it_td
-
-#define sipType_wxPolygonFillMode sipImportedTypes__adv__core[45].it_td
-
-#define sipType_wxBorder sipImportedTypes__adv__core[6].it_td
-
-#define sipType_wxDirection sipImportedTypes__adv__core[20].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__adv;
 extern sipExportedModuleDef sipModuleAPI__adv;
@@ -2618,30 +2602,6 @@ extern sipTypeDef *sipExportedTypes__adv[];
 
 #define sipType_wxString sipImportedTypes__adv__core[54].it_td
 
-#define sipType_wxPropertySheetDialogFlags sipExportedTypes__adv[36]
-
-#define sipType_wxTipKind sipExportedTypes__adv[51]
-
-#define sipType_wxOwnerDrawnComboBoxPaintingFlags sipExportedTypes__adv[34]
-
-#define sipType_wxLayoutAlignment sipExportedTypes__adv[30]
-
-#define sipType_wxLayoutOrientation sipExportedTypes__adv[31]
-
-#define sipType_wxSashDragStatus sipExportedTypes__adv[40]
-
-#define sipType_wxSashEdgePosition sipExportedTypes__adv[41]
-
-#define sipType_wxAnimationDisposal sipExportedTypes__adv[7]
-
-#define sipType_wxAnimationType sipExportedTypes__adv[8]
-
-#define sipType_wxTaskBarIconType sipExportedTypes__adv[49]
-
-#define sipType_wxCalendarHitTestResult sipExportedTypes__adv[16]
-
-#define sipType_wxCalendarDateBorder sipExportedTypes__adv[14]
-
 #define sipType_wxHelpSearchMode sipImportedTypes__adv__core[28].it_td
 
 #define sipType_wxWindowVariant sipImportedTypes__adv__core[63].it_td
--- sip/cpp/sipAPI_aui.h
+++ sip/cpp/sipAPI_aui.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2103,16 +2103,6 @@ extern sipClassTypeDef sipTypeDef__aui_wxAuiMDIClientWindow;
 
 #define sipType_wxAuiManagerDock sipExportedTypes__aui[15]
 
-#define sipType_wxWindowVariant sipImportedTypes__aui__core[41].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__aui__core[11].it_td
-
-#define sipType_wxItemKind sipImportedTypes__aui__core[18].it_td
-
-#define sipType_wxBorder sipImportedTypes__aui__core[5].it_td
-
-#define sipType_wxOrientation sipImportedTypes__aui__core[25].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__aui;
 extern sipExportedModuleDef sipModuleAPI__aui;
@@ -2194,26 +2184,6 @@ extern sipTypeDef *sipExportedTypes__aui[];
 
 #define sipType_wxString sipImportedTypes__aui__core[32].it_td
 
-#define sipType_wxAuiNotebookOption sipExportedTypes__aui[20]
-
-#define sipType_wxAuiToolBarToolTextOrientation sipExportedTypes__aui[42]
-
-#define sipType_wxAuiToolBarArtSetting sipExportedTypes__aui[37]
-
-#define sipType_wxAuiToolBarStyle sipExportedTypes__aui[41]
-
-#define sipType_wxAuiButtonId sipExportedTypes__aui[0]
-
-#define sipType_wxAuiPaneButtonState sipExportedTypes__aui[23]
-
-#define sipType_wxAuiPaneDockArtGradients sipExportedTypes__aui[24]
-
-#define sipType_wxAuiPaneDockArtSetting sipExportedTypes__aui[25]
-
-#define sipType_wxAuiManagerOption sipExportedTypes__aui[17]
-
-#define sipType_wxAuiManagerDock sipExportedTypes__aui[15]
-
 #define sipType_wxWindowVariant sipImportedTypes__aui__core[41].it_td
 
 #define sipType_wxEventCategory sipImportedTypes__aui__core[11].it_td
--- sip/cpp/sipAPI_core.h
+++ sip/cpp/sipAPI_core.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
--- sip/cpp/sipAPI_dataview.h
+++ sip/cpp/sipAPI_dataview.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1603,20 +1603,6 @@ extern sipMappedTypeDef sipTypeDef__dataview_wxDVCVariant;
 
 #define sipType_wxDataViewCellMode sipExportedTypes__dataview[2]
 
-#define sipType_wxCheckBoxState sipImportedTypes__dataview__core[6].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__dataview__core[40].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__dataview__core[17].it_td
-
-#define sipType_wxDragResult sipImportedTypes__dataview__core[14].it_td
-
-#define sipType_wxEllipsizeMode sipImportedTypes__dataview__core[15].it_td
-
-#define sipType_wxBorder sipImportedTypes__dataview__core[5].it_td
-
-#define sipType_wxAlignment sipImportedTypes__dataview__core[0].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__dataview;
 extern sipExportedModuleDef sipModuleAPI__dataview;
@@ -1690,12 +1676,6 @@ extern sipTypeDef *sipExportedTypes__dataview[];
 
 #define sipType_wxUIntPtr sipImportedTypes__dataview__core[34].it_td
 
-#define sipType_wxDataViewColumnFlags sipExportedTypes__dataview[7]
-
-#define sipType_wxDataViewCellRenderState sipExportedTypes__dataview[3]
-
-#define sipType_wxDataViewCellMode sipExportedTypes__dataview[2]
-
 #define sipType_wxCheckBoxState sipImportedTypes__dataview__core[6].it_td
 
 #define sipType_wxWindowVariant sipImportedTypes__dataview__core[40].it_td
diff --git a/sip/cpp/sipAPI_glcanvas.h b/sip/cpp/sipAPI_glcanvas.h
index c77c1ec9..4a0f4018 100644
--- sip/cpp/sipAPI_glcanvas.h
+++ sip/cpp/sipAPI_glcanvas.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -593,10 +593,6 @@ extern sipClassTypeDef sipTypeDef__glcanvas_wxGLContext;
 
 extern sipClassTypeDef sipTypeDef__glcanvas_wxGLCanvas;
 
-#define sipType_wxWindowVariant sipImportedTypes__glcanvas__core[14].it_td
-
-#define sipType_wxBorder sipImportedTypes__glcanvas__core[1].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__glcanvas;
 extern sipExportedModuleDef sipModuleAPI__glcanvas;
diff --git a/sip/cpp/sipAPI_grid.h b/sip/cpp/sipAPI_grid.h
index 603295a9..60087534 100644
--- sip/cpp/sipAPI_grid.h
+++ sip/cpp/sipAPI_grid.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2279,14 +2279,6 @@ extern sipClassTypeDef sipTypeDef__grid_wxGridCellCoordsArray;
 
 #define sipType_wxGridCellFloatFormat sipExportedTypes__grid[31]
 
-#define sipType_wxWindowVariant sipImportedTypes__grid__core[34].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__grid__core[10].it_td
-
-#define sipType_wxEllipsizeMode sipImportedTypes__grid__core[8].it_td
-
-#define sipType_wxBorder sipImportedTypes__grid__core[2].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__grid;
 extern sipExportedModuleDef sipModuleAPI__grid;
@@ -2354,12 +2346,6 @@ extern sipTypeDef *sipExportedTypes__grid[];
 
 #define sipType_wxString sipImportedTypes__grid__core[28].it_td
 
-#define sipType_wxGridRenderStyle sipExportedTypes__grid[48]
-
-#define sipType_wxGridTableRequest sipExportedTypes__grid[56]
-
-#define sipType_wxGridCellFloatFormat sipExportedTypes__grid[31]
-
 #define sipType_wxWindowVariant sipImportedTypes__grid__core[34].it_td
 
 #define sipType_wxEventCategory sipImportedTypes__grid__core[10].it_td
diff --git a/sip/cpp/sipAPI_html.h b/sip/cpp/sipAPI_html.h
index 6f9f1046..4dc9951f 100644
--- sip/cpp/sipAPI_html.h
+++ sip/cpp/sipAPI_html.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1935,16 +1935,6 @@ extern sipClassTypeDef sipTypeDef__html_wxSimpleHtmlListBox;
 
 #define sipType_wxHtmlSelectionState sipExportedTypes__html[30]
 
-#define sipType_wxHelpSearchMode sipImportedTypes__html__core[20].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__html__core[49].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__html__core[12].it_td
-
-#define sipType_wxBorder sipImportedTypes__html__core[4].it_td
-
-#define sipType_wxOrientation sipImportedTypes__html__core[26].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__html;
 extern sipExportedModuleDef sipModuleAPI__html;
@@ -2040,14 +2030,6 @@ extern sipTypeDef *sipExportedTypes__html[];
 
 #define sipType_wxString sipImportedTypes__html__core[37].it_td
 
-#define sipType_wxHtmlOpeningStatus sipExportedTypes__html[22]
-
-#define sipType_wxHtmlURLType sipExportedTypes__html[33]
-
-#define sipType_wxHtmlScriptMode sipExportedTypes__html[28]
-
-#define sipType_wxHtmlSelectionState sipExportedTypes__html[30]
-
 #define sipType_wxHelpSearchMode sipImportedTypes__html__core[20].it_td
 
 #define sipType_wxWindowVariant sipImportedTypes__html__core[49].it_td
diff --git a/sip/cpp/sipAPI_html2.h b/sip/cpp/sipAPI_html2.h
index b75e046f..1831804e 100644
--- sip/cpp/sipAPI_html2.h
+++ sip/cpp/sipAPI_html2.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -821,12 +821,6 @@ extern sipClassTypeDef sipTypeDef__html2_wxWebViewFactory;
 
 #define sipType_wxWebViewZoom sipExportedTypes__html2[13]
 
-#define sipType_wxWindowVariant sipImportedTypes__html2__core[19].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__html2__core[4].it_td
-
-#define sipType_wxBorder sipImportedTypes__html2__core[0].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__html2;
 extern sipExportedModuleDef sipModuleAPI__html2;
@@ -866,22 +860,6 @@ extern sipTypeDef *sipExportedTypes__html2[];
 
 #define sipType_wxString sipImportedTypes__html2__core[12].it_td
 
-#define sipType_wxWebViewIE_EmulationLevel sipExportedTypes__html2[8]
-
-#define sipType_wxWebViewUserScriptInjectionTime sipExportedTypes__html2[12]
-
-#define sipType_wxWebViewNavigationActionFlags sipExportedTypes__html2[9]
-
-#define sipType_wxWebViewFindFlags sipExportedTypes__html2[5]
-
-#define sipType_wxWebViewReloadFlags sipExportedTypes__html2[11]
-
-#define sipType_wxWebViewNavigationError sipExportedTypes__html2[10]
-
-#define sipType_wxWebViewZoomType sipExportedTypes__html2[14]
-
-#define sipType_wxWebViewZoom sipExportedTypes__html2[13]
-
 #define sipType_wxWindowVariant sipImportedTypes__html2__core[19].it_td
 
 #define sipType_wxEventCategory sipImportedTypes__html2__core[4].it_td
diff --git a/sip/cpp/sipAPI_media.h b/sip/cpp/sipAPI_media.h
index 60fa15a9..9d747a76 100644
--- sip/cpp/sipAPI_media.h
+++ sip/cpp/sipAPI_media.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -477,14 +477,6 @@ extern sipClassTypeDef sipTypeDef__media_wxMediaEvent;
 
 #define sipType_wxMediaState sipExportedTypes__media[3]
 
-#define sipType_wxWindowVariant sipImportedTypes__media__core[16].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__media__core[4].it_td
-
-#define sipType_wxSeekMode sipImportedTypes__media__core[9].it_td
-
-#define sipType_wxBorder sipImportedTypes__media__core[0].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__media;
 extern sipExportedModuleDef sipModuleAPI__media;
@@ -516,10 +508,6 @@ extern sipTypeDef *sipExportedTypes__media[];
 
 #define sipType_wxString sipImportedTypes__media__core[11].it_td
 
-#define sipType_wxMediaCtrlPlayerControls sipExportedTypes__media[1]
-
-#define sipType_wxMediaState sipExportedTypes__media[3]
-
 #define sipType_wxWindowVariant sipImportedTypes__media__core[16].it_td
 
 #define sipType_wxEventCategory sipImportedTypes__media__core[4].it_td
diff --git a/sip/cpp/sipAPI_msw.h b/sip/cpp/sipAPI_msw.h
index 4928019e..f6c456a0 100644
--- sip/cpp/sipAPI_msw.h
+++ sip/cpp/sipAPI_msw.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -423,12 +423,6 @@ extern sipClassTypeDef sipTypeDef__msw_wxPyAxBaseWindow;
 
 extern sipClassTypeDef sipTypeDef__msw_wxCHMHelpController;
 
-#define sipType_wxHelpSearchMode sipImportedTypes__msw__core[5].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__msw__core[14].it_td
-
-#define sipType_wxBorder sipImportedTypes__msw__core[0].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__msw;
 extern sipExportedModuleDef sipModuleAPI__msw;
diff --git a/sip/cpp/sipAPI_propgrid.h b/sip/cpp/sipAPI_propgrid.h
index 8b87d173..ed9d20ec 100644
--- sip/cpp/sipAPI_propgrid.h
+++ sip/cpp/sipAPI_propgrid.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2891,14 +2891,6 @@ extern sipMappedTypeDef sipTypeDef__propgrid_wxPGVariant;
 
 #define sipType_wxPG_GETPROPERTYVALUES_FLAGS sipExportedTypes__propgrid[55]
 
-#define sipType_wxScrollbarVisibility sipImportedTypes__propgrid__core[26].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__propgrid__core[41].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__propgrid__core[13].it_td
-
-#define sipType_wxBorder sipImportedTypes__propgrid__core[4].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__propgrid;
 extern sipExportedModuleDef sipModuleAPI__propgrid;
@@ -2980,26 +2972,6 @@ extern sipTypeDef *sipExportedTypes__propgrid[];
 
 #define sipType_wxIntPtr sipImportedTypes__propgrid__core[17].it_td
 
-#define sipType_wxPGNumericValidationConstants sipExportedTypes__propgrid[41]
-
-#define sipType_wxPG_KEYBOARD_ACTIONS sipExportedTypes__propgrid[57]
-
-#define sipType_wxPG_VALIDATION_FAILURE_BEHAVIOR_FLAGS sipExportedTypes__propgrid[60]
-
-#define sipType_wxPG_EX_WINDOW_STYLES sipExportedTypes__propgrid[54]
-
-#define sipType_wxPG_WINDOW_STYLES sipExportedTypes__propgrid[61]
-
-#define sipType_wxPG_ITERATOR_FLAGS sipExportedTypes__propgrid[56]
-
-#define sipType_wxPGPropertyFlags sipExportedTypes__propgrid[45]
-
-#define sipType_wxPG_SETVALUE_FLAGS sipExportedTypes__propgrid[59]
-
-#define sipType_wxPG_MISC_ARG_FLAGS sipExportedTypes__propgrid[58]
-
-#define sipType_wxPG_GETPROPERTYVALUES_FLAGS sipExportedTypes__propgrid[55]
-
 #define sipType_wxScrollbarVisibility sipImportedTypes__propgrid__core[26].it_td
 
 #define sipType_wxWindowVariant sipImportedTypes__propgrid__core[41].it_td
diff --git a/sip/cpp/sipAPI_ribbon.h b/sip/cpp/sipAPI_ribbon.h
index aad10790..34fd4845 100644
--- sip/cpp/sipAPI_ribbon.h
+++ sip/cpp/sipAPI_ribbon.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1515,16 +1515,6 @@ extern sipClassTypeDef sipTypeDef__ribbon_wxRibbonToolBarEvent;
 
 #define sipType_wxRibbonPanelOption sipExportedTypes__ribbon[23]
 
-#define sipType_wxWindowVariant sipImportedTypes__ribbon__core[26].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__ribbon__core[9].it_td
-
-#define sipType_wxBorder sipImportedTypes__ribbon__core[1].it_td
-
-#define sipType_wxDirection sipImportedTypes__ribbon__core[7].it_td
-
-#define sipType_wxOrientation sipImportedTypes__ribbon__core[15].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__ribbon;
 extern sipExportedModuleDef sipModuleAPI__ribbon;
@@ -1574,22 +1564,6 @@ extern sipTypeDef *sipExportedTypes__ribbon[];
 
 #define sipType_wxString sipImportedTypes__ribbon__core[20].it_td
 
-#define sipType_wxRibbonGalleryButtonState sipExportedTypes__ribbon[14]
-
-#define sipType_wxRibbonButtonBarButtonState sipExportedTypes__ribbon[8]
-
-#define sipType_wxRibbonButtonKind sipExportedTypes__ribbon[10]
-
-#define sipType_wxRibbonScrollButtonStyle sipExportedTypes__ribbon[24]
-
-#define sipType_wxRibbonArtSetting sipExportedTypes__ribbon[2]
-
-#define sipType_wxRibbonDisplayMode sipExportedTypes__ribbon[12]
-
-#define sipType_wxRibbonBarOption sipExportedTypes__ribbon[5]
-
-#define sipType_wxRibbonPanelOption sipExportedTypes__ribbon[23]
-
 #define sipType_wxWindowVariant sipImportedTypes__ribbon__core[26].it_td
 
 #define sipType_wxEventCategory sipImportedTypes__ribbon__core[9].it_td
diff --git a/sip/cpp/sipAPI_richtext.h b/sip/cpp/sipAPI_richtext.h
index 56651f67..5c77e93c 100644
--- sip/cpp/sipAPI_richtext.h
+++ sip/cpp/sipAPI_richtext.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -4511,20 +4511,6 @@ extern sipClassTypeDef sipTypeDef__richtext_wxRichTextFormattingDialog;
 
 #define sipType_wxRichTextFileType sipExportedTypes__richtext[27]
 
-#define sipType_wxTextCtrlHitTestResult sipImportedTypes__richtext__core[62].it_td
-
-#define sipType_wxTextAttrAlignment sipImportedTypes__richtext__core[60].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__richtext__core[77].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__richtext__core[27].it_td
-
-#define sipType_wxBitmapType sipImportedTypes__richtext__core[3].it_td
-
-#define sipType_wxBorder sipImportedTypes__richtext__core[5].it_td
-
-#define sipType_wxOrientation sipImportedTypes__richtext__core[43].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__richtext;
 extern sipExportedModuleDef sipModuleAPI__richtext;
@@ -4672,42 +4658,6 @@ extern sipTypeDef *sipExportedTypes__richtext[];
 
 #define sipType_wxString sipImportedTypes__richtext__core[57].it_td
 
-#define sipType_wxRichTextPageLocation sipExportedTypes__richtext[48]
-
-#define sipType_wxRichTextOddEvenPage sipExportedTypes__richtext[47]
-
-#define sipType_wxRichTextCtrlSelectionState sipExportedTypes__richtext[15]
-
-#define sipType_wxRichTextCommandId sipExportedTypes__richtext[11]
-
-#define sipType_wxTextBoxAttrWhitespaceMode sipExportedTypes__richtext[92]
-
-#define sipType_wxTextBoxAttrVerticalAlignment sipExportedTypes__richtext[91]
-
-#define sipType_wxTextBoxAttrCollapseMode sipExportedTypes__richtext[87]
-
-#define sipType_wxTextBoxAttrClearStyle sipExportedTypes__richtext[86]
-
-#define sipType_wxTextBoxAttrFloatStyle sipExportedTypes__richtext[89]
-
-#define sipType_wxTextAttrBorderWidth sipExportedTypes__richtext[76]
-
-#define sipType_wxTextAttrBorderFlags sipExportedTypes__richtext[74]
-
-#define sipType_wxTextAttrBorderStyle sipExportedTypes__richtext[75]
-
-#define sipType_wxTextBoxAttrPosition sipExportedTypes__richtext[90]
-
-#define sipType_wxTextAttrUnits sipExportedTypes__richtext[83]
-
-#define sipType_wxTextAttrValueFlags sipExportedTypes__richtext[84]
-
-#define sipType_wxTextBoxAttrFlags sipExportedTypes__richtext[88]
-
-#define sipType_wxRichTextHitTestFlags sipExportedTypes__richtext[34]
-
-#define sipType_wxRichTextFileType sipExportedTypes__richtext[27]
-
 #define sipType_wxTextCtrlHitTestResult sipImportedTypes__richtext__core[62].it_td
 
 #define sipType_wxTextAttrAlignment sipImportedTypes__richtext__core[60].it_td
@@ -4724,164 +4674,14 @@ extern sipTypeDef *sipExportedTypes__richtext[];
 extern sipImportedTypeDef sipImportedTypes__richtext__core[];
 
 #define sipType_wxXmlNode sipImportedTypes__richtext__xml[0].it_td
-
-#define sipType_wxRichTextPageLocation sipExportedTypes__richtext[48]
-
-#define sipType_wxRichTextOddEvenPage sipExportedTypes__richtext[47]
-
-#define sipType_wxRichTextCtrlSelectionState sipExportedTypes__richtext[15]
-
-#define sipType_wxRichTextCommandId sipExportedTypes__richtext[11]
-
-#define sipType_wxTextBoxAttrWhitespaceMode sipExportedTypes__richtext[92]
-
-#define sipType_wxTextBoxAttrVerticalAlignment sipExportedTypes__richtext[91]
-
-#define sipType_wxTextBoxAttrCollapseMode sipExportedTypes__richtext[87]
-
-#define sipType_wxTextBoxAttrClearStyle sipExportedTypes__richtext[86]
-
-#define sipType_wxTextBoxAttrFloatStyle sipExportedTypes__richtext[89]
-
-#define sipType_wxTextAttrBorderWidth sipExportedTypes__richtext[76]
-
-#define sipType_wxTextAttrBorderFlags sipExportedTypes__richtext[74]
-
-#define sipType_wxTextAttrBorderStyle sipExportedTypes__richtext[75]
-
-#define sipType_wxTextBoxAttrPosition sipExportedTypes__richtext[90]
-
-#define sipType_wxTextAttrUnits sipExportedTypes__richtext[83]
-
-#define sipType_wxTextAttrValueFlags sipExportedTypes__richtext[84]
-
-#define sipType_wxTextBoxAttrFlags sipExportedTypes__richtext[88]
-
-#define sipType_wxRichTextHitTestFlags sipExportedTypes__richtext[34]
-
-#define sipType_wxRichTextFileType sipExportedTypes__richtext[27]
-
-#define sipType_wxTextCtrlHitTestResult sipImportedTypes__richtext__core[62].it_td
-
-#define sipType_wxTextAttrAlignment sipImportedTypes__richtext__core[60].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__richtext__core[77].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__richtext__core[27].it_td
-
-#define sipType_wxBitmapType sipImportedTypes__richtext__core[3].it_td
-
-#define sipType_wxBorder sipImportedTypes__richtext__core[5].it_td
-
-#define sipType_wxOrientation sipImportedTypes__richtext__core[43].it_td
 extern sipImportedTypeDef sipImportedTypes__richtext__xml[];
 
 #define sipType_wxHtmlLinkInfo sipImportedTypes__richtext__html[0].it_td
 
 #define sipType_wxHtmlListBox sipImportedTypes__richtext__html[1].it_td
-
-#define sipType_wxRichTextPageLocation sipExportedTypes__richtext[48]
-
-#define sipType_wxRichTextOddEvenPage sipExportedTypes__richtext[47]
-
-#define sipType_wxRichTextCtrlSelectionState sipExportedTypes__richtext[15]
-
-#define sipType_wxRichTextCommandId sipExportedTypes__richtext[11]
-
-#define sipType_wxTextBoxAttrWhitespaceMode sipExportedTypes__richtext[92]
-
-#define sipType_wxTextBoxAttrVerticalAlignment sipExportedTypes__richtext[91]
-
-#define sipType_wxTextBoxAttrCollapseMode sipExportedTypes__richtext[87]
-
-#define sipType_wxTextBoxAttrClearStyle sipExportedTypes__richtext[86]
-
-#define sipType_wxTextBoxAttrFloatStyle sipExportedTypes__richtext[89]
-
-#define sipType_wxTextAttrBorderWidth sipExportedTypes__richtext[76]
-
-#define sipType_wxTextAttrBorderFlags sipExportedTypes__richtext[74]
-
-#define sipType_wxTextAttrBorderStyle sipExportedTypes__richtext[75]
-
-#define sipType_wxTextBoxAttrPosition sipExportedTypes__richtext[90]
-
-#define sipType_wxTextAttrUnits sipExportedTypes__richtext[83]
-
-#define sipType_wxTextAttrValueFlags sipExportedTypes__richtext[84]
-
-#define sipType_wxTextBoxAttrFlags sipExportedTypes__richtext[88]
-
-#define sipType_wxRichTextHitTestFlags sipExportedTypes__richtext[34]
-
-#define sipType_wxRichTextFileType sipExportedTypes__richtext[27]
-
-#define sipType_wxTextCtrlHitTestResult sipImportedTypes__richtext__core[62].it_td
-
-#define sipType_wxTextAttrAlignment sipImportedTypes__richtext__core[60].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__richtext__core[77].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__richtext__core[27].it_td
-
-#define sipType_wxBitmapType sipImportedTypes__richtext__core[3].it_td
-
-#define sipType_wxBorder sipImportedTypes__richtext__core[5].it_td
-
-#define sipType_wxOrientation sipImportedTypes__richtext__core[43].it_td
 extern sipImportedTypeDef sipImportedTypes__richtext__html[];
 
 #define sipType_wxPropertySheetDialog sipImportedTypes__richtext__adv[0].it_td
-
-#define sipType_wxRichTextPageLocation sipExportedTypes__richtext[48]
-
-#define sipType_wxRichTextOddEvenPage sipExportedTypes__richtext[47]
-
-#define sipType_wxRichTextCtrlSelectionState sipExportedTypes__richtext[15]
-
-#define sipType_wxRichTextCommandId sipExportedTypes__richtext[11]
-
-#define sipType_wxTextBoxAttrWhitespaceMode sipExportedTypes__richtext[92]
-
-#define sipType_wxTextBoxAttrVerticalAlignment sipExportedTypes__richtext[91]
-
-#define sipType_wxTextBoxAttrCollapseMode sipExportedTypes__richtext[87]
-
-#define sipType_wxTextBoxAttrClearStyle sipExportedTypes__richtext[86]
-
-#define sipType_wxTextBoxAttrFloatStyle sipExportedTypes__richtext[89]
-
-#define sipType_wxTextAttrBorderWidth sipExportedTypes__richtext[76]
-
-#define sipType_wxTextAttrBorderFlags sipExportedTypes__richtext[74]
-
-#define sipType_wxTextAttrBorderStyle sipExportedTypes__richtext[75]
-
-#define sipType_wxTextBoxAttrPosition sipExportedTypes__richtext[90]
-
-#define sipType_wxTextAttrUnits sipExportedTypes__richtext[83]
-
-#define sipType_wxTextAttrValueFlags sipExportedTypes__richtext[84]
-
-#define sipType_wxTextBoxAttrFlags sipExportedTypes__richtext[88]
-
-#define sipType_wxRichTextHitTestFlags sipExportedTypes__richtext[34]
-
-#define sipType_wxRichTextFileType sipExportedTypes__richtext[27]
-
-#define sipType_wxTextCtrlHitTestResult sipImportedTypes__richtext__core[62].it_td
-
-#define sipType_wxTextAttrAlignment sipImportedTypes__richtext__core[60].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__richtext__core[77].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__richtext__core[27].it_td
-
-#define sipType_wxBitmapType sipImportedTypes__richtext__core[3].it_td
-
-#define sipType_wxBorder sipImportedTypes__richtext__core[5].it_td
-
-#define sipType_wxOrientation sipImportedTypes__richtext__core[43].it_td
 extern sipImportedTypeDef sipImportedTypes__richtext__adv[];
 #include <wxPython/wxpy_api.h>
 #include <wx/richtext/richtextbuffer.h>
diff --git a/sip/cpp/sipAPI_stc.h b/sip/cpp/sipAPI_stc.h
index 68450ba1..ceb422f5 100644
--- sip/cpp/sipAPI_stc.h
+++ sip/cpp/sipAPI_stc.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -7297,18 +7297,6 @@ extern sipClassTypeDef sipTypeDef__stc_wxStyledTextCtrl;
 
 extern sipClassTypeDef sipTypeDef__stc_wxStyledTextEvent;
 
-#define sipType_wxTextCtrlHitTestResult sipImportedTypes__stc__core[25].it_td
-
-#define sipType_wxWindowVariant sipImportedTypes__stc__core[33].it_td
-
-#define sipType_wxEventCategory sipImportedTypes__stc__core[10].it_td
-
-#define sipType_wxDragResult sipImportedTypes__stc__core[8].it_td
-
-#define sipType_wxFontEncoding sipImportedTypes__stc__core[13].it_td
-
-#define sipType_wxBorder sipImportedTypes__stc__core[2].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__stc;
 extern sipExportedModuleDef sipModuleAPI__stc;
diff --git a/sip/cpp/sipAPI_xml.h b/sip/cpp/sipAPI_xml.h
index 0b9e81d2..bc2ecddd 100644
--- sip/cpp/sipAPI_xml.h
+++ sip/cpp/sipAPI_xml.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -551,8 +551,6 @@ extern sipClassTypeDef sipTypeDef__xml_wxXmlDoctype;
 
 #define sipType_wxXmlNodeType sipExportedTypes__xml[5]
 
-#define sipType_wxTextFileType sipImportedTypes__xml__core[4].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__xml;
 extern sipExportedModuleDef sipModuleAPI__xml;
@@ -568,10 +566,6 @@ extern sipTypeDef *sipExportedTypes__xml[];
 
 #define sipType_wxString sipImportedTypes__xml__core[3].it_td
 
-#define sipType_wxXmlDocumentLoadFlag sipExportedTypes__xml[3]
-
-#define sipType_wxXmlNodeType sipExportedTypes__xml[5]
-
 #define sipType_wxTextFileType sipImportedTypes__xml__core[4].it_td
 extern sipImportedTypeDef sipImportedTypes__xml__core[];
 #include <wxPython/wxpy_api.h>
diff --git a/sip/cpp/sipAPI_xrc.h b/sip/cpp/sipAPI_xrc.h
index 1dc47937..c421804f 100644
--- sip/cpp/sipAPI_xrc.h
+++ sip/cpp/sipAPI_xrc.h
@@ -1,7 +1,7 @@
 /*
  * Internal module API header file.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -607,8 +607,6 @@ extern sipClassTypeDef sipTypeDef__xrc_wxXmlSubclassFactory;
 
 #define sipType_wxXmlResourceFlags sipExportedTypes__xrc[3]
 
-#define sipType_wxDirection sipImportedTypes__xrc__core[4].it_td
-
 /* The SIP API, this module's API and the APIs of any imported modules. */
 extern const sipAPIDef *sipAPI__xrc;
 extern sipExportedModuleDef sipModuleAPI__xrc;
@@ -656,18 +654,12 @@ extern sipTypeDef *sipExportedTypes__xrc[];
 
 #define sipType_wxString sipImportedTypes__xrc__core[19].it_td
 
-#define sipType_wxXmlResourceFlags sipExportedTypes__xrc[3]
-
 #define sipType_wxDirection sipImportedTypes__xrc__core[4].it_td
 extern sipImportedTypeDef sipImportedTypes__xrc__core[];
 
 #define sipType_wxXmlNode sipImportedTypes__xrc__xml[1].it_td
 
 #define sipType_wxXmlDocument sipImportedTypes__xrc__xml[0].it_td
-
-#define sipType_wxXmlResourceFlags sipExportedTypes__xrc[3]
-
-#define sipType_wxDirection sipImportedTypes__xrc__core[4].it_td
 extern sipImportedTypeDef sipImportedTypes__xrc__xml[];
 #include <wxPython/wxpy_api.h>
 #include <wx/animate.h>
diff --git a/sip/cpp/sip_advcmodule.cpp b/sip/cpp/sip_advcmodule.cpp
index 2e5fac42..23b6db6a 100644
--- sip/cpp/sip_advcmodule.cpp
+++ sip/cpp/sip_advcmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2711,7 +2711,6 @@ PyMODINIT_FUNC PyInit__adv()
         {sipName_AboutBox, SIP_MLMETH_CAST(func_AboutBox), METH_VARARGS|METH_KEYWORDS, doc_AboutBox},
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._adv",
diff --git a/sip/cpp/sip_advwxANIDecoder.cpp b/sip/cpp/sip_advwxANIDecoder.cpp
index b5644bce..2002d4d4 100644
--- sip/cpp/sip_advwxANIDecoder.cpp
+++ sip/cpp/sip_advwxANIDecoder.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -743,7 +743,7 @@ sipClassTypeDef sipTypeDef__adv_wxANIDecoder = {
         SIP_TYPE_CLASS,
         sipNameNr_wxANIDecoder,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ANIDecoder,
diff --git a/sip/cpp/sip_advwxAboutDialogInfo.cpp b/sip/cpp/sip_advwxAboutDialogInfo.cpp
index abe27669..d757b0b3 100644
--- sip/cpp/sip_advwxAboutDialogInfo.cpp
+++ sip/cpp/sip_advwxAboutDialogInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1603,7 +1603,7 @@ sipClassTypeDef sipTypeDef__adv_wxAboutDialogInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAboutDialogInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AboutDialogInfo,
diff --git a/sip/cpp/sip_advwxAnimation.cpp b/sip/cpp/sip_advwxAnimation.cpp
index 45667290..e8fa4afb 100644
--- sip/cpp/sip_advwxAnimation.cpp
+++ sip/cpp/sip_advwxAnimation.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -729,7 +729,7 @@ sipClassTypeDef sipTypeDef__adv_wxAnimation = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAnimation,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Animation,
diff --git a/sip/cpp/sip_advwxAnimationCtrl.cpp b/sip/cpp/sip_advwxAnimationCtrl.cpp
index d416d45b..c81c7a55 100644
--- sip/cpp/sip_advwxAnimationCtrl.cpp
+++ sip/cpp/sip_advwxAnimationCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1800,7 +1800,7 @@ static PyObject *meth_wxAnimationCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxAnimationCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAnimationCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAnimationCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAnimationCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1838,7 +1838,7 @@ static PyObject *meth_wxAnimationCtrl_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxAnimationCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAnimationCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAnimationCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAnimationCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1976,7 +1976,7 @@ static PyObject *meth_wxAnimationCtrl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxAnimationCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxAnimationCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxAnimationCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxAnimationCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2163,7 +2163,7 @@ static PyObject *meth_wxAnimationCtrl_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxAnimationCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxAnimationCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxAnimationCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxAnimationCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2312,7 +2312,7 @@ static PyObject *meth_wxAnimationCtrl_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxAnimationCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAnimationCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAnimationCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAnimationCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2346,7 +2346,7 @@ static PyObject *meth_wxAnimationCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxAnimationCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAnimationCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAnimationCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAnimationCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2380,7 +2380,7 @@ static PyObject *meth_wxAnimationCtrl_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxAnimationCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAnimationCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAnimationCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAnimationCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3165,7 +3165,7 @@ sipClassTypeDef sipTypeDef__adv_wxAnimationCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAnimationCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AnimationCtrl,
diff --git a/sip/cpp/sip_advwxAnimationDecoder.cpp b/sip/cpp/sip_advwxAnimationDecoder.cpp
index 3834d0ef..f4ef42f9 100644
--- sip/cpp/sip_advwxAnimationDecoder.cpp
+++ sip/cpp/sip_advwxAnimationDecoder.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -943,7 +943,7 @@ sipClassTypeDef sipTypeDef__adv_wxAnimationDecoder = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxAnimationDecoder,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AnimationDecoder,
diff --git a/sip/cpp/sip_advwxAnimationDecoderList.cpp b/sip/cpp/sip_advwxAnimationDecoderList.cpp
index ec761c6b..1a134c71 100644
--- sip/cpp/sip_advwxAnimationDecoderList.cpp
+++ sip/cpp/sip_advwxAnimationDecoderList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -33,7 +33,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxAnimationDecoderList_index, "index(self, obj: AnimationDecoder) -> int");
+PyDoc_STRVAR(doc_wxAnimationDecoderList_index, "index(self, obj: Optional[AnimationDecoder]) -> int");
 
 extern "C" {static PyObject *meth_wxAnimationDecoderList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAnimationDecoderList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -302,7 +302,7 @@ sipClassTypeDef sipTypeDef__adv_wxAnimationDecoderList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAnimationDecoderList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AnimationDecoderList,
diff --git a/sip/cpp/sip_advwxAnimationDecoderList_iterator.cpp b/sip/cpp/sip_advwxAnimationDecoderList_iterator.cpp
index bee40f20..760bffc3 100644
--- sip/cpp/sip_advwxAnimationDecoderList_iterator.cpp
+++ sip/cpp/sip_advwxAnimationDecoderList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__adv_wxAnimationDecoderList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxAnimationDecoderList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AnimationDecoderList_iterator,
diff --git a/sip/cpp/sip_advwxBannerWindow.cpp b/sip/cpp/sip_advwxBannerWindow.cpp
index 822ec181..7f2a970c 100644
--- sip/cpp/sip_advwxBannerWindow.cpp
+++ sip/cpp/sip_advwxBannerWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1392,7 +1392,7 @@ static PyObject *meth_wxBannerWindow_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxBannerWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxBannerWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxBannerWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBannerWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1430,7 +1430,7 @@ static PyObject *meth_wxBannerWindow_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxBannerWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxBannerWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxBannerWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBannerWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1568,7 +1568,7 @@ static PyObject *meth_wxBannerWindow_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxBannerWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxBannerWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxBannerWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxBannerWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1755,7 +1755,7 @@ static PyObject *meth_wxBannerWindow_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxBannerWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxBannerWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxBannerWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxBannerWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1904,7 +1904,7 @@ static PyObject *meth_wxBannerWindow_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxBannerWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBannerWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBannerWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBannerWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1938,7 +1938,7 @@ static PyObject *meth_wxBannerWindow_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxBannerWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBannerWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBannerWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBannerWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1972,7 +1972,7 @@ static PyObject *meth_wxBannerWindow_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxBannerWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBannerWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBannerWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBannerWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2774,7 +2774,7 @@ sipClassTypeDef sipTypeDef__adv_wxBannerWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBannerWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BannerWindow,
diff --git a/sip/cpp/sip_advwxBitmapComboBox.cpp b/sip/cpp/sip_advwxBitmapComboBox.cpp
index aad38dd5..5eca1da4 100644
--- sip/cpp/sip_advwxBitmapComboBox.cpp
+++ sip/cpp/sip_advwxBitmapComboBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1858,7 +1858,7 @@ static PyObject *meth_wxBitmapComboBox_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapComboBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxBitmapComboBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxBitmapComboBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapComboBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1896,7 +1896,7 @@ static PyObject *meth_wxBitmapComboBox_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapComboBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxBitmapComboBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxBitmapComboBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapComboBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2034,7 +2034,7 @@ static PyObject *meth_wxBitmapComboBox_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapComboBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxBitmapComboBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxBitmapComboBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapComboBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2221,7 +2221,7 @@ static PyObject *meth_wxBitmapComboBox_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapComboBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxBitmapComboBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxBitmapComboBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapComboBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2370,7 +2370,7 @@ static PyObject *meth_wxBitmapComboBox_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapComboBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapComboBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapComboBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapComboBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2404,7 +2404,7 @@ static PyObject *meth_wxBitmapComboBox_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapComboBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapComboBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapComboBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapComboBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2438,7 +2438,7 @@ static PyObject *meth_wxBitmapComboBox_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapComboBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapComboBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapComboBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapComboBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3602,7 +3602,7 @@ static PyObject *meth_wxBitmapComboBox_GetCount(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapComboBox_GetStringSelection, "GetStringSelection(self) -> object");
+PyDoc_STRVAR(doc_wxBitmapComboBox_GetStringSelection, "GetStringSelection(self) -> Any");
 
 extern "C" {static PyObject *meth_wxBitmapComboBox_GetStringSelection(PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapComboBox_GetStringSelection(PyObject *sipSelf, PyObject *sipArgs)
@@ -3870,7 +3870,7 @@ sipClassTypeDef sipTypeDef__adv_wxBitmapComboBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBitmapComboBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BitmapComboBox,
diff --git a/sip/cpp/sip_advwxCalculateLayoutEvent.cpp b/sip/cpp/sip_advwxCalculateLayoutEvent.cpp
index 43a1d5f2..c7526469 100644
--- sip/cpp/sip_advwxCalculateLayoutEvent.cpp
+++ sip/cpp/sip_advwxCalculateLayoutEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -239,7 +239,7 @@ static PyObject *meth_wxCalculateLayoutEvent_SetRect(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxCalculateLayoutEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxCalculateLayoutEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxCalculateLayoutEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxCalculateLayoutEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -400,7 +400,7 @@ sipClassTypeDef sipTypeDef__adv_wxCalculateLayoutEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCalculateLayoutEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CalculateLayoutEvent,
diff --git a/sip/cpp/sip_advwxCalendarCtrl.cpp b/sip/cpp/sip_advwxCalendarCtrl.cpp
index 2266af60..3928abc6 100644
--- sip/cpp/sip_advwxCalendarCtrl.cpp
+++ sip/cpp/sip_advwxCalendarCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2109,7 +2109,7 @@ static PyObject *meth_wxCalendarCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxCalendarCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCalendarCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCalendarCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCalendarCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2147,7 +2147,7 @@ static PyObject *meth_wxCalendarCtrl_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxCalendarCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCalendarCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCalendarCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCalendarCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2285,7 +2285,7 @@ static PyObject *meth_wxCalendarCtrl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxCalendarCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxCalendarCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxCalendarCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxCalendarCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2472,7 +2472,7 @@ static PyObject *meth_wxCalendarCtrl_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxCalendarCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxCalendarCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxCalendarCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxCalendarCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2621,7 +2621,7 @@ static PyObject *meth_wxCalendarCtrl_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxCalendarCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCalendarCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCalendarCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCalendarCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2655,7 +2655,7 @@ static PyObject *meth_wxCalendarCtrl_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxCalendarCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCalendarCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCalendarCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCalendarCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2689,7 +2689,7 @@ static PyObject *meth_wxCalendarCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxCalendarCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCalendarCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCalendarCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCalendarCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3523,7 +3523,7 @@ sipClassTypeDef sipTypeDef__adv_wxCalendarCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCalendarCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CalendarCtrl,
diff --git a/sip/cpp/sip_advwxCalendarDateAttr.cpp b/sip/cpp/sip_advwxCalendarDateAttr.cpp
index b5e4c8a0..a9cdeaa3 100644
--- sip/cpp/sip_advwxCalendarDateAttr.cpp
+++ sip/cpp/sip_advwxCalendarDateAttr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -892,7 +892,7 @@ sipClassTypeDef sipTypeDef__adv_wxCalendarDateAttr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxCalendarDateAttr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CalendarDateAttr,
diff --git a/sip/cpp/sip_advwxCalendarEvent.cpp b/sip/cpp/sip_advwxCalendarEvent.cpp
index 45042221..643b48bd 100644
--- sip/cpp/sip_advwxCalendarEvent.cpp
+++ sip/cpp/sip_advwxCalendarEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -170,7 +170,7 @@ static PyObject *meth_wxCalendarEvent_SetWeekDay(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxCalendarEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxCalendarEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxCalendarEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxCalendarEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -355,7 +355,7 @@ sipClassTypeDef sipTypeDef__adv_wxCalendarEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCalendarEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CalendarEvent,
diff --git a/sip/cpp/sip_advwxCommandLinkButton.cpp b/sip/cpp/sip_advwxCommandLinkButton.cpp
index 8a5dad47..28e19452 100644
--- sip/cpp/sip_advwxCommandLinkButton.cpp
+++ sip/cpp/sip_advwxCommandLinkButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1547,7 +1547,7 @@ static PyObject *meth_wxCommandLinkButton_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxCommandLinkButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCommandLinkButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCommandLinkButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCommandLinkButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1585,7 +1585,7 @@ static PyObject *meth_wxCommandLinkButton_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxCommandLinkButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCommandLinkButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCommandLinkButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCommandLinkButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1723,7 +1723,7 @@ static PyObject *meth_wxCommandLinkButton_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxCommandLinkButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxCommandLinkButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxCommandLinkButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxCommandLinkButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1910,7 +1910,7 @@ static PyObject *meth_wxCommandLinkButton_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxCommandLinkButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxCommandLinkButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxCommandLinkButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxCommandLinkButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2059,7 +2059,7 @@ static PyObject *meth_wxCommandLinkButton_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxCommandLinkButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCommandLinkButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCommandLinkButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCommandLinkButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2093,7 +2093,7 @@ static PyObject *meth_wxCommandLinkButton_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxCommandLinkButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCommandLinkButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCommandLinkButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCommandLinkButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2127,7 +2127,7 @@ static PyObject *meth_wxCommandLinkButton_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxCommandLinkButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCommandLinkButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCommandLinkButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCommandLinkButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2951,7 +2951,7 @@ sipClassTypeDef sipTypeDef__adv_wxCommandLinkButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCommandLinkButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CommandLinkButton,
diff --git a/sip/cpp/sip_advwxDateEvent.cpp b/sip/cpp/sip_advwxDateEvent.cpp
index ec3d8616..ed2c0de4 100644
--- sip/cpp/sip_advwxDateEvent.cpp
+++ sip/cpp/sip_advwxDateEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -171,7 +171,7 @@ static PyObject *meth_wxDateEvent_SetDate(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxDateEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxDateEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxDateEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxDateEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -357,7 +357,7 @@ sipClassTypeDef sipTypeDef__adv_wxDateEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDateEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DateEvent,
diff --git a/sip/cpp/sip_advwxDatePickerCtrl.cpp b/sip/cpp/sip_advwxDatePickerCtrl.cpp
index beebb9d8..f6b2ea07 100644
--- sip/cpp/sip_advwxDatePickerCtrl.cpp
+++ sip/cpp/sip_advwxDatePickerCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1470,7 +1470,7 @@ static PyObject *meth_wxDatePickerCtrl_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDatePickerCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1508,7 +1508,7 @@ static PyObject *meth_wxDatePickerCtrl_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDatePickerCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1646,7 +1646,7 @@ static PyObject *meth_wxDatePickerCtrl_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxDatePickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1833,7 +1833,7 @@ static PyObject *meth_wxDatePickerCtrl_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxDatePickerCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1982,7 +1982,7 @@ static PyObject *meth_wxDatePickerCtrl_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDatePickerCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2016,7 +2016,7 @@ static PyObject *meth_wxDatePickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDatePickerCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2050,7 +2050,7 @@ static PyObject *meth_wxDatePickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDatePickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2864,7 +2864,7 @@ sipClassTypeDef sipTypeDef__adv_wxDatePickerCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDatePickerCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DatePickerCtrl,
diff --git a/sip/cpp/sip_advwxDatePickerCtrlGeneric.cpp b/sip/cpp/sip_advwxDatePickerCtrlGeneric.cpp
index 26355aa3..fdac113a 100644
--- sip/cpp/sip_advwxDatePickerCtrlGeneric.cpp
+++ sip/cpp/sip_advwxDatePickerCtrlGeneric.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1471,7 +1471,7 @@ static PyObject *meth_wxDatePickerCtrlGeneric_AcceptsFocusFromKeyboard(PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrlGeneric_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrlGeneric_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1509,7 +1509,7 @@ static PyObject *meth_wxDatePickerCtrlGeneric_AddChild(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrlGeneric_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrlGeneric_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1647,7 +1647,7 @@ static PyObject *meth_wxDatePickerCtrlGeneric_OnInternalIdle(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrlGeneric_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrlGeneric_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1834,7 +1834,7 @@ static PyObject *meth_wxDatePickerCtrlGeneric_SetValidator(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrlGeneric_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrlGeneric_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1983,7 +1983,7 @@ static PyObject *meth_wxDatePickerCtrlGeneric_DoEnable(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrlGeneric_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrlGeneric_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2017,7 +2017,7 @@ static PyObject *meth_wxDatePickerCtrlGeneric_DoGetPosition(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrlGeneric_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrlGeneric_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2051,7 +2051,7 @@ static PyObject *meth_wxDatePickerCtrlGeneric_DoGetSize(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDatePickerCtrlGeneric_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDatePickerCtrlGeneric_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDatePickerCtrlGeneric_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2865,7 +2865,7 @@ sipClassTypeDef sipTypeDef__adv_wxDatePickerCtrlGeneric = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDatePickerCtrlGeneric,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DatePickerCtrlGeneric,
diff --git a/sip/cpp/sip_advwxEditableListBox.cpp b/sip/cpp/sip_advwxEditableListBox.cpp
index e04c11a2..d0848f61 100644
--- sip/cpp/sip_advwxEditableListBox.cpp
+++ sip/cpp/sip_advwxEditableListBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1370,7 +1370,7 @@ static PyObject *meth_wxEditableListBox_AcceptsFocusFromKeyboard(PyObject *sipSe
 }
 
 
-PyDoc_STRVAR(doc_wxEditableListBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxEditableListBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxEditableListBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxEditableListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1408,7 +1408,7 @@ static PyObject *meth_wxEditableListBox_AddChild(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxEditableListBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxEditableListBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxEditableListBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxEditableListBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1546,7 +1546,7 @@ static PyObject *meth_wxEditableListBox_OnInternalIdle(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxEditableListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxEditableListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxEditableListBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxEditableListBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1733,7 +1733,7 @@ static PyObject *meth_wxEditableListBox_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxEditableListBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxEditableListBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxEditableListBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxEditableListBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1882,7 +1882,7 @@ static PyObject *meth_wxEditableListBox_DoEnable(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxEditableListBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxEditableListBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxEditableListBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxEditableListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1916,7 +1916,7 @@ static PyObject *meth_wxEditableListBox_DoGetPosition(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxEditableListBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxEditableListBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxEditableListBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxEditableListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1950,7 +1950,7 @@ static PyObject *meth_wxEditableListBox_DoGetSize(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxEditableListBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxEditableListBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxEditableListBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxEditableListBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2981,7 +2981,7 @@ sipClassTypeDef sipTypeDef__adv_wxEditableListBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxEditableListBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EditableListBox,
diff --git a/sip/cpp/sip_advwxExtHelpController.cpp b/sip/cpp/sip_advwxExtHelpController.cpp
index aa1b829c..8ae0db96 100644
--- sip/cpp/sip_advwxExtHelpController.cpp
+++ sip/cpp/sip_advwxExtHelpController.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1002,7 +1002,7 @@ sipClassTypeDef sipTypeDef__adv_wxExtHelpController = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxExtHelpController,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ExtHelpController,
diff --git a/sip/cpp/sip_advwxGIFDecoder.cpp b/sip/cpp/sip_advwxGIFDecoder.cpp
index bfcbab09..d07874a7 100644
--- sip/cpp/sip_advwxGIFDecoder.cpp
+++ sip/cpp/sip_advwxGIFDecoder.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -743,7 +743,7 @@ sipClassTypeDef sipTypeDef__adv_wxGIFDecoder = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGIFDecoder,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GIFDecoder,
diff --git a/sip/cpp/sip_advwxGenericAnimationCtrl.cpp b/sip/cpp/sip_advwxGenericAnimationCtrl.cpp
index 34e2841a..37273f77 100644
--- sip/cpp/sip_advwxGenericAnimationCtrl.cpp
+++ sip/cpp/sip_advwxGenericAnimationCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1595,7 +1595,7 @@ static PyObject *meth_wxGenericAnimationCtrl_AcceptsFocusFromKeyboard(PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxGenericAnimationCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericAnimationCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericAnimationCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericAnimationCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1633,7 +1633,7 @@ static PyObject *meth_wxGenericAnimationCtrl_AddChild(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGenericAnimationCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericAnimationCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericAnimationCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericAnimationCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1771,7 +1771,7 @@ static PyObject *meth_wxGenericAnimationCtrl_OnInternalIdle(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxGenericAnimationCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGenericAnimationCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGenericAnimationCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericAnimationCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1958,7 +1958,7 @@ static PyObject *meth_wxGenericAnimationCtrl_SetValidator(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGenericAnimationCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGenericAnimationCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGenericAnimationCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericAnimationCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2107,7 +2107,7 @@ static PyObject *meth_wxGenericAnimationCtrl_DoEnable(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGenericAnimationCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericAnimationCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericAnimationCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericAnimationCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2141,7 +2141,7 @@ static PyObject *meth_wxGenericAnimationCtrl_DoGetPosition(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGenericAnimationCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericAnimationCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericAnimationCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericAnimationCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2175,7 +2175,7 @@ static PyObject *meth_wxGenericAnimationCtrl_DoGetSize(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGenericAnimationCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericAnimationCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericAnimationCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericAnimationCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3348,7 +3348,7 @@ sipClassTypeDef sipTypeDef__adv_wxGenericAnimationCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGenericAnimationCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GenericAnimationCtrl,
diff --git a/sip/cpp/sip_advwxGenericCalendarCtrl.cpp b/sip/cpp/sip_advwxGenericCalendarCtrl.cpp
index 0f20e79a..38538fe4 100644
--- sip/cpp/sip_advwxGenericCalendarCtrl.cpp
+++ sip/cpp/sip_advwxGenericCalendarCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2150,7 +2150,7 @@ static PyObject *meth_wxGenericCalendarCtrl_AcceptsFocusFromKeyboard(PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxGenericCalendarCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericCalendarCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericCalendarCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericCalendarCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2188,7 +2188,7 @@ static PyObject *meth_wxGenericCalendarCtrl_AddChild(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGenericCalendarCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericCalendarCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericCalendarCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericCalendarCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2326,7 +2326,7 @@ static PyObject *meth_wxGenericCalendarCtrl_OnInternalIdle(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGenericCalendarCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGenericCalendarCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGenericCalendarCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericCalendarCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2513,7 +2513,7 @@ static PyObject *meth_wxGenericCalendarCtrl_SetValidator(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxGenericCalendarCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGenericCalendarCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGenericCalendarCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericCalendarCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2662,7 +2662,7 @@ static PyObject *meth_wxGenericCalendarCtrl_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGenericCalendarCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericCalendarCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericCalendarCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericCalendarCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2696,7 +2696,7 @@ static PyObject *meth_wxGenericCalendarCtrl_DoGetPosition(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGenericCalendarCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericCalendarCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericCalendarCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericCalendarCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2730,7 +2730,7 @@ static PyObject *meth_wxGenericCalendarCtrl_DoGetSize(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGenericCalendarCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericCalendarCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericCalendarCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericCalendarCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3565,7 +3565,7 @@ sipClassTypeDef sipTypeDef__adv_wxGenericCalendarCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGenericCalendarCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GenericCalendarCtrl,
diff --git a/sip/cpp/sip_advwxHyperlinkCtrl.cpp b/sip/cpp/sip_advwxHyperlinkCtrl.cpp
index 77a10f67..7c7fa369 100644
--- sip/cpp/sip_advwxHyperlinkCtrl.cpp
+++ sip/cpp/sip_advwxHyperlinkCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1659,7 +1659,7 @@ static PyObject *meth_wxHyperlinkCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxHyperlinkCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHyperlinkCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHyperlinkCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHyperlinkCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1697,7 +1697,7 @@ static PyObject *meth_wxHyperlinkCtrl_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxHyperlinkCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHyperlinkCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHyperlinkCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHyperlinkCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1835,7 +1835,7 @@ static PyObject *meth_wxHyperlinkCtrl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHyperlinkCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHyperlinkCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHyperlinkCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHyperlinkCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2022,7 +2022,7 @@ static PyObject *meth_wxHyperlinkCtrl_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHyperlinkCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHyperlinkCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHyperlinkCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHyperlinkCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2171,7 +2171,7 @@ static PyObject *meth_wxHyperlinkCtrl_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxHyperlinkCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHyperlinkCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHyperlinkCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHyperlinkCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2205,7 +2205,7 @@ static PyObject *meth_wxHyperlinkCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHyperlinkCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHyperlinkCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHyperlinkCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHyperlinkCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2239,7 +2239,7 @@ static PyObject *meth_wxHyperlinkCtrl_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxHyperlinkCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHyperlinkCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHyperlinkCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHyperlinkCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3064,7 +3064,7 @@ sipClassTypeDef sipTypeDef__adv_wxHyperlinkCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHyperlinkCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HyperlinkCtrl,
diff --git a/sip/cpp/sip_advwxHyperlinkEvent.cpp b/sip/cpp/sip_advwxHyperlinkEvent.cpp
index 00c7e989..226e3164 100644
--- sip/cpp/sip_advwxHyperlinkEvent.cpp
+++ sip/cpp/sip_advwxHyperlinkEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -162,7 +162,7 @@ static PyObject *meth_wxHyperlinkEvent_SetURL(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxHyperlinkEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxHyperlinkEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxHyperlinkEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxHyperlinkEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -325,7 +325,7 @@ sipClassTypeDef sipTypeDef__adv_wxHyperlinkEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHyperlinkEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HyperlinkEvent,
diff --git a/sip/cpp/sip_advwxJoystick.cpp b/sip/cpp/sip_advwxJoystick.cpp
index 76216ad6..bb661426 100644
--- sip/cpp/sip_advwxJoystick.cpp
+++ sip/cpp/sip_advwxJoystick.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1794,7 +1794,7 @@ sipClassTypeDef sipTypeDef__adv_wxJoystick = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxJoystick,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Joystick,
diff --git a/sip/cpp/sip_advwxLayoutAlgorithm.cpp b/sip/cpp/sip_advwxLayoutAlgorithm.cpp
index e02dc4b6..1759cd5c 100644
--- sip/cpp/sip_advwxLayoutAlgorithm.cpp
+++ sip/cpp/sip_advwxLayoutAlgorithm.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -309,7 +309,7 @@ sipClassTypeDef sipTypeDef__adv_wxLayoutAlgorithm = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxLayoutAlgorithm,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LayoutAlgorithm,
diff --git a/sip/cpp/sip_advwxNotificationMessage.cpp b/sip/cpp/sip_advwxNotificationMessage.cpp
index f96991fa..155f6408 100644
--- sip/cpp/sip_advwxNotificationMessage.cpp
+++ sip/cpp/sip_advwxNotificationMessage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -799,7 +799,7 @@ sipClassTypeDef sipTypeDef__adv_wxNotificationMessage = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxNotificationMessage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NotificationMessage,
diff --git a/sip/cpp/sip_advwxOwnerDrawnComboBox.cpp b/sip/cpp/sip_advwxOwnerDrawnComboBox.cpp
index 589aca3b..1b5fadb3 100644
--- sip/cpp/sip_advwxOwnerDrawnComboBox.cpp
+++ sip/cpp/sip_advwxOwnerDrawnComboBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2018,7 +2018,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_AcceptsFocusFromKeyboard(PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2056,7 +2056,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_AddChild(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2194,7 +2194,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_OnInternalIdle(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2381,7 +2381,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_SetValidator(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2530,7 +2530,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2564,7 +2564,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_DoGetPosition(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2598,7 +2598,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3234,7 +3234,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_GetCount(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetString, "GetString(self, n: int) -> object");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetString, "GetString(self, n: int) -> Any");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetString(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_GetString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3273,7 +3273,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_GetString(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_SetString, "SetString(self, n: int, s: object)");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_SetString, "SetString(self, n: int, s: Any)");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_SetString(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_SetString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3387,7 +3387,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_GetSelection(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetStringSelection, "GetStringSelection(self) -> object");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_GetStringSelection, "GetStringSelection(self) -> Any");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_GetStringSelection(PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_GetStringSelection(PyObject *sipSelf, PyObject *sipArgs)
@@ -3413,7 +3413,7 @@ static PyObject *meth_wxOwnerDrawnComboBox_GetStringSelection(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoSetPopupControl, "DoSetPopupControl(self, popup: ComboPopup)");
+PyDoc_STRVAR(doc_wxOwnerDrawnComboBox_DoSetPopupControl, "DoSetPopupControl(self, popup: Optional[ComboPopup])");
 
 extern "C" {static PyObject *meth_wxOwnerDrawnComboBox_DoSetPopupControl(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxOwnerDrawnComboBox_DoSetPopupControl(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3909,7 +3909,7 @@ sipClassTypeDef sipTypeDef__adv_wxOwnerDrawnComboBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxOwnerDrawnComboBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_OwnerDrawnComboBox,
diff --git a/sip/cpp/sip_advwxPropertySheetDialog.cpp b/sip/cpp/sip_advwxPropertySheetDialog.cpp
index 41bb8e5d..54276ef1 100644
--- sip/cpp/sip_advwxPropertySheetDialog.cpp
+++ sip/cpp/sip_advwxPropertySheetDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1111,7 +1111,7 @@ static PyObject *meth_wxPropertySheetDialog_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPropertySheetDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertySheetDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertySheetDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertySheetDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1145,7 +1145,7 @@ static PyObject *meth_wxPropertySheetDialog_DoGetPosition(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxPropertySheetDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertySheetDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertySheetDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertySheetDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1179,7 +1179,7 @@ static PyObject *meth_wxPropertySheetDialog_DoGetSize(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPropertySheetDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertySheetDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertySheetDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertySheetDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2623,7 +2623,7 @@ sipClassTypeDef sipTypeDef__adv_wxPropertySheetDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPropertySheetDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertySheetDialog,
diff --git a/sip/cpp/sip_advwxPseudoDC.cpp b/sip/cpp/sip_advwxPseudoDC.cpp
index ea30f858..7e0129d5 100644
--- sip/cpp/sip_advwxPseudoDC.cpp
+++ sip/cpp/sip_advwxPseudoDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2750,7 +2750,7 @@ sipClassTypeDef sipTypeDef__adv_wxPseudoDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPseudoDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PseudoDC,
diff --git a/sip/cpp/sip_advwxQueryLayoutInfoEvent.cpp b/sip/cpp/sip_advwxQueryLayoutInfoEvent.cpp
index 5c238abe..73cf3f84 100644
--- sip/cpp/sip_advwxQueryLayoutInfoEvent.cpp
+++ sip/cpp/sip_advwxQueryLayoutInfoEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -465,7 +465,7 @@ static PyObject *meth_wxQueryLayoutInfoEvent_SetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxQueryLayoutInfoEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxQueryLayoutInfoEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxQueryLayoutInfoEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxQueryLayoutInfoEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -635,7 +635,7 @@ sipClassTypeDef sipTypeDef__adv_wxQueryLayoutInfoEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxQueryLayoutInfoEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_QueryLayoutInfoEvent,
diff --git a/sip/cpp/sip_advwxRichToolTip.cpp b/sip/cpp/sip_advwxRichToolTip.cpp
index ab00b431..e2a0559b 100644
--- sip/cpp/sip_advwxRichToolTip.cpp
+++ sip/cpp/sip_advwxRichToolTip.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -377,7 +377,7 @@ sipClassTypeDef sipTypeDef__adv_wxRichToolTip = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichToolTip,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichToolTip,
diff --git a/sip/cpp/sip_advwxSashEvent.cpp b/sip/cpp/sip_advwxSashEvent.cpp
index 722ec6ee..621a7d8a 100644
--- sip/cpp/sip_advwxSashEvent.cpp
+++ sip/cpp/sip_advwxSashEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -307,7 +307,7 @@ static PyObject *meth_wxSashEvent_SetDragStatus(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSashEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxSashEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxSashEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxSashEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -473,7 +473,7 @@ sipClassTypeDef sipTypeDef__adv_wxSashEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSashEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SashEvent,
diff --git a/sip/cpp/sip_advwxSashLayoutWindow.cpp b/sip/cpp/sip_advwxSashLayoutWindow.cpp
index 61a7194b..3fcd44f8 100644
--- sip/cpp/sip_advwxSashLayoutWindow.cpp
+++ sip/cpp/sip_advwxSashLayoutWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1534,7 +1534,7 @@ static PyObject *meth_wxSashLayoutWindow_AcceptsFocusFromKeyboard(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxSashLayoutWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSashLayoutWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSashLayoutWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashLayoutWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1572,7 +1572,7 @@ static PyObject *meth_wxSashLayoutWindow_AddChild(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxSashLayoutWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSashLayoutWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSashLayoutWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashLayoutWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1710,7 +1710,7 @@ static PyObject *meth_wxSashLayoutWindow_OnInternalIdle(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxSashLayoutWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSashLayoutWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSashLayoutWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSashLayoutWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1897,7 +1897,7 @@ static PyObject *meth_wxSashLayoutWindow_SetValidator(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxSashLayoutWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSashLayoutWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSashLayoutWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSashLayoutWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2046,7 +2046,7 @@ static PyObject *meth_wxSashLayoutWindow_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxSashLayoutWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSashLayoutWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSashLayoutWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashLayoutWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2080,7 +2080,7 @@ static PyObject *meth_wxSashLayoutWindow_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxSashLayoutWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSashLayoutWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSashLayoutWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashLayoutWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2114,7 +2114,7 @@ static PyObject *meth_wxSashLayoutWindow_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxSashLayoutWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSashLayoutWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSashLayoutWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashLayoutWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2924,7 +2924,7 @@ sipClassTypeDef sipTypeDef__adv_wxSashLayoutWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSashLayoutWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SashLayoutWindow,
diff --git a/sip/cpp/sip_advwxSashWindow.cpp b/sip/cpp/sip_advwxSashWindow.cpp
index 78cdd79e..4b2dd196 100644
--- sip/cpp/sip_advwxSashWindow.cpp
+++ sip/cpp/sip_advwxSashWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1836,7 +1836,7 @@ static PyObject *meth_wxSashWindow_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxSashWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSashWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSashWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1874,7 +1874,7 @@ static PyObject *meth_wxSashWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSashWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSashWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSashWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2012,7 +2012,7 @@ static PyObject *meth_wxSashWindow_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxSashWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSashWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSashWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSashWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2199,7 +2199,7 @@ static PyObject *meth_wxSashWindow_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSashWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSashWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSashWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSashWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2348,7 +2348,7 @@ static PyObject *meth_wxSashWindow_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSashWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSashWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSashWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2382,7 +2382,7 @@ static PyObject *meth_wxSashWindow_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSashWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSashWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSashWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2416,7 +2416,7 @@ static PyObject *meth_wxSashWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxSashWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSashWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSashWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSashWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3239,7 +3239,7 @@ sipClassTypeDef sipTypeDef__adv_wxSashWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSashWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SashWindow,
diff --git a/sip/cpp/sip_advwxSound.cpp b/sip/cpp/sip_advwxSound.cpp
index 9419c795..cd4e7ac2 100644
--- sip/cpp/sip_advwxSound.cpp
+++ sip/cpp/sip_advwxSound.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -505,7 +505,7 @@ sipClassTypeDef sipTypeDef__adv_wxSound = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSound,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Sound,
diff --git a/sip/cpp/sip_advwxSplashScreen.cpp b/sip/cpp/sip_advwxSplashScreen.cpp
index b7aff6ef..698115d8 100644
--- sip/cpp/sip_advwxSplashScreen.cpp
+++ sip/cpp/sip_advwxSplashScreen.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1340,7 +1340,7 @@ static PyObject *meth_wxSplashScreen_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxSplashScreen_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSplashScreen_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSplashScreen_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplashScreen_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1378,7 +1378,7 @@ static PyObject *meth_wxSplashScreen_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxSplashScreen_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSplashScreen_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSplashScreen_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplashScreen_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1516,7 +1516,7 @@ static PyObject *meth_wxSplashScreen_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSplashScreen_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSplashScreen_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSplashScreen_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSplashScreen_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1703,7 +1703,7 @@ static PyObject *meth_wxSplashScreen_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxSplashScreen_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSplashScreen_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSplashScreen_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSplashScreen_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1852,7 +1852,7 @@ static PyObject *meth_wxSplashScreen_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxSplashScreen_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSplashScreen_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSplashScreen_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplashScreen_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1886,7 +1886,7 @@ static PyObject *meth_wxSplashScreen_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxSplashScreen_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSplashScreen_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSplashScreen_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplashScreen_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1920,7 +1920,7 @@ static PyObject *meth_wxSplashScreen_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxSplashScreen_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSplashScreen_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSplashScreen_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplashScreen_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2774,7 +2774,7 @@ sipClassTypeDef sipTypeDef__adv_wxSplashScreen = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSplashScreen,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SplashScreen,
diff --git a/sip/cpp/sip_advwxTaskBarIcon.cpp b/sip/cpp/sip_advwxTaskBarIcon.cpp
index d103a672..08112af6 100644
--- sip/cpp/sip_advwxTaskBarIcon.cpp
+++ sip/cpp/sip_advwxTaskBarIcon.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -823,7 +823,7 @@ sipClassTypeDef sipTypeDef__adv_wxTaskBarIcon = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTaskBarIcon,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TaskBarIcon,
diff --git a/sip/cpp/sip_advwxTaskBarIconEvent.cpp b/sip/cpp/sip_advwxTaskBarIconEvent.cpp
index 78080db0..63c383e8 100644
--- sip/cpp/sip_advwxTaskBarIconEvent.cpp
+++ sip/cpp/sip_advwxTaskBarIconEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -87,7 +87,7 @@ sipwxTaskBarIconEvent::~sipwxTaskBarIconEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxTaskBarIconEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxTaskBarIconEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxTaskBarIconEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxTaskBarIconEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -240,7 +240,7 @@ sipClassTypeDef sipTypeDef__adv_wxTaskBarIconEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTaskBarIconEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TaskBarIconEvent,
diff --git a/sip/cpp/sip_advwxTimePickerCtrl.cpp b/sip/cpp/sip_advwxTimePickerCtrl.cpp
index 896a7bc0..f82473ec 100644
--- sip/cpp/sip_advwxTimePickerCtrl.cpp
+++ sip/cpp/sip_advwxTimePickerCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1424,7 +1424,7 @@ static PyObject *meth_wxTimePickerCtrl_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxTimePickerCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTimePickerCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTimePickerCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTimePickerCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1462,7 +1462,7 @@ static PyObject *meth_wxTimePickerCtrl_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTimePickerCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTimePickerCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTimePickerCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTimePickerCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1600,7 +1600,7 @@ static PyObject *meth_wxTimePickerCtrl_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxTimePickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxTimePickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxTimePickerCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxTimePickerCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1787,7 +1787,7 @@ static PyObject *meth_wxTimePickerCtrl_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxTimePickerCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxTimePickerCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxTimePickerCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxTimePickerCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1936,7 +1936,7 @@ static PyObject *meth_wxTimePickerCtrl_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTimePickerCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTimePickerCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTimePickerCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTimePickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1970,7 +1970,7 @@ static PyObject *meth_wxTimePickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxTimePickerCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTimePickerCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTimePickerCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTimePickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2004,7 +2004,7 @@ static PyObject *meth_wxTimePickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxTimePickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTimePickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTimePickerCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTimePickerCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2817,7 +2817,7 @@ sipClassTypeDef sipTypeDef__adv_wxTimePickerCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTimePickerCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TimePickerCtrl,
diff --git a/sip/cpp/sip_advwxTipProvider.cpp b/sip/cpp/sip_advwxTipProvider.cpp
index 9fd8b665..836edf44 100644
--- sip/cpp/sip_advwxTipProvider.cpp
+++ sip/cpp/sip_advwxTipProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -247,7 +247,7 @@ sipClassTypeDef sipTypeDef__adv_wxTipProvider = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTipProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TipProvider,
diff --git a/sip/cpp/sip_advwxWizard.cpp b/sip/cpp/sip_advwxWizard.cpp
index 1ee0fdbc..9f234bba 100644
--- sip/cpp/sip_advwxWizard.cpp
+++ sip/cpp/sip_advwxWizard.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1209,7 +1209,7 @@ static PyObject *meth_wxWizard_DoEnable(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxWizard_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizard_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizard_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizard_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1243,7 +1243,7 @@ static PyObject *meth_wxWizard_DoGetPosition(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxWizard_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizard_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizard_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizard_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1277,7 +1277,7 @@ static PyObject *meth_wxWizard_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxWizard_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizard_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizard_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizard_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2888,7 +2888,7 @@ sipClassTypeDef sipTypeDef__adv_wxWizard = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWizard,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Wizard,
diff --git a/sip/cpp/sip_advwxWizardEvent.cpp b/sip/cpp/sip_advwxWizardEvent.cpp
index f2ee40c6..18db7c7d 100644
--- sip/cpp/sip_advwxWizardEvent.cpp
+++ sip/cpp/sip_advwxWizardEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -161,7 +161,7 @@ static PyObject *meth_wxWizardEvent_GetPage(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxWizardEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxWizardEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxWizardEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxWizardEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -327,7 +327,7 @@ sipClassTypeDef sipTypeDef__adv_wxWizardEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWizardEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WizardEvent,
diff --git a/sip/cpp/sip_advwxWizardPage.cpp b/sip/cpp/sip_advwxWizardPage.cpp
index 97c8b18f..347e335b 100644
--- sip/cpp/sip_advwxWizardPage.cpp
+++ sip/cpp/sip_advwxWizardPage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1049,7 +1049,7 @@ static PyObject *meth_wxWizardPage_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxWizardPage_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizardPage_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizardPage_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizardPage_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1083,7 +1083,7 @@ static PyObject *meth_wxWizardPage_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxWizardPage_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizardPage_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizardPage_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizardPage_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1117,7 +1117,7 @@ static PyObject *meth_wxWizardPage_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxWizardPage_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizardPage_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizardPage_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizardPage_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2058,7 +2058,7 @@ sipClassTypeDef sipTypeDef__adv_wxWizardPage = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWizardPage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WizardPage,
diff --git a/sip/cpp/sip_advwxWizardPageSimple.cpp b/sip/cpp/sip_advwxWizardPageSimple.cpp
index d567c865..0c2f2411 100644
--- sip/cpp/sip_advwxWizardPageSimple.cpp
+++ sip/cpp/sip_advwxWizardPageSimple.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1050,7 +1050,7 @@ static PyObject *meth_wxWizardPageSimple_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxWizardPageSimple_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizardPageSimple_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizardPageSimple_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizardPageSimple_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1084,7 +1084,7 @@ static PyObject *meth_wxWizardPageSimple_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxWizardPageSimple_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizardPageSimple_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizardPageSimple_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizardPageSimple_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1118,7 +1118,7 @@ static PyObject *meth_wxWizardPageSimple_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxWizardPageSimple_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWizardPageSimple_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWizardPageSimple_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWizardPageSimple_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1920,7 +1920,7 @@ static PyObject *meth_wxWizardPageSimple_GetClassDefaultAttributes(PyObject *, P
 }
 
 
-PyDoc_STRVAR(doc_wxWizardPageSimple_GetNext, "GetNext(self) -> WizardPage");
+PyDoc_STRVAR(doc_wxWizardPageSimple_GetNext, "GetNext(self) -> Optional[WizardPage]");
 
 extern "C" {static PyObject *meth_wxWizardPageSimple_GetNext(PyObject *, PyObject *);}
 static PyObject *meth_wxWizardPageSimple_GetNext(PyObject *sipSelf, PyObject *sipArgs)
@@ -1954,7 +1954,7 @@ static PyObject *meth_wxWizardPageSimple_GetNext(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxWizardPageSimple_GetPrev, "GetPrev(self) -> WizardPage");
+PyDoc_STRVAR(doc_wxWizardPageSimple_GetPrev, "GetPrev(self) -> Optional[WizardPage]");
 
 extern "C" {static PyObject *meth_wxWizardPageSimple_GetPrev(PyObject *, PyObject *);}
 static PyObject *meth_wxWizardPageSimple_GetPrev(PyObject *sipSelf, PyObject *sipArgs)
@@ -2160,7 +2160,7 @@ sipClassTypeDef sipTypeDef__adv_wxWizardPageSimple = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWizardPageSimple,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WizardPageSimple,
diff --git a/sip/cpp/sip_auicmodule.cpp b/sip/cpp/sip_auicmodule.cpp
index d3c445d3..5c1953d8 100644
--- sip/cpp/sip_auicmodule.cpp
+++ sip/cpp/sip_auicmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1591,7 +1591,6 @@ PyMODINIT_FUNC PyInit__aui()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._aui",
diff --git a/sip/cpp/sip_auiwxAuiDefaultDockArt.cpp b/sip/cpp/sip_auiwxAuiDefaultDockArt.cpp
index 31280fa5..dd248a06 100644
--- sip/cpp/sip_auiwxAuiDefaultDockArt.cpp
+++ sip/cpp/sip_auiwxAuiDefaultDockArt.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1065,7 +1065,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDefaultDockArt = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiDefaultDockArt,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDefaultDockArt,
diff --git a/sip/cpp/sip_auiwxAuiDefaultTabArt.cpp b/sip/cpp/sip_auiwxAuiDefaultTabArt.cpp
index f619814d..7de3c202 100644
--- sip/cpp/sip_auiwxAuiDefaultTabArt.cpp
+++ sip/cpp/sip_auiwxAuiDefaultTabArt.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1124,7 +1124,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDefaultTabArt = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiDefaultTabArt,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDefaultTabArt,
diff --git a/sip/cpp/sip_auiwxAuiDefaultToolBarArt.cpp b/sip/cpp/sip_auiwxAuiDefaultToolBarArt.cpp
index 87d24875..da8d7da1 100644
--- sip/cpp/sip_auiwxAuiDefaultToolBarArt.cpp
+++ sip/cpp/sip_auiwxAuiDefaultToolBarArt.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1451,7 +1451,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDefaultToolBarArt = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiDefaultToolBarArt,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDefaultToolBarArt,
diff --git a/sip/cpp/sip_auiwxAuiDockArt.cpp b/sip/cpp/sip_auiwxAuiDockArt.cpp
index 405bfbb7..042b2da3 100644
--- sip/cpp/sip_auiwxAuiDockArt.cpp
+++ sip/cpp/sip_auiwxAuiDockArt.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1027,7 +1027,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDockArt = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxAuiDockArt,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDockArt,
diff --git a/sip/cpp/sip_auiwxAuiDockInfo.cpp b/sip/cpp/sip_auiwxAuiDockInfo.cpp
index 4ebbc266..80f16264 100644
--- sip/cpp/sip_auiwxAuiDockInfo.cpp
+++ sip/cpp/sip_auiwxAuiDockInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -591,7 +591,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDockInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiDockInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDockInfo,
diff --git a/sip/cpp/sip_auiwxAuiDockInfoArray.cpp b/sip/cpp/sip_auiwxAuiDockInfoArray.cpp
index 71e0be7e..46259721 100644
--- sip/cpp/sip_auiwxAuiDockInfoArray.cpp
+++ sip/cpp/sip_auiwxAuiDockInfoArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDockInfoArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiDockInfoArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDockInfoArray,
diff --git a/sip/cpp/sip_auiwxAuiDockInfoPtrArray.cpp b/sip/cpp/sip_auiwxAuiDockInfoPtrArray.cpp
index a720a6cd..38d4e120 100644
--- sip/cpp/sip_auiwxAuiDockInfoPtrArray.cpp
+++ sip/cpp/sip_auiwxAuiDockInfoPtrArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -11,7 +11,7 @@
         #include <wx/aui/framemanager.h>
 
 
-PyDoc_STRVAR(doc_wxAuiDockInfoPtrArray_append, "append(self, obj: AuiDockInfo)");
+PyDoc_STRVAR(doc_wxAuiDockInfoPtrArray_append, "append(self, obj: Optional[AuiDockInfo])");
 
 extern "C" {static PyObject *meth_wxAuiDockInfoPtrArray_append(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiDockInfoPtrArray_append(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -41,7 +41,7 @@ static PyObject *meth_wxAuiDockInfoPtrArray_append(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxAuiDockInfoPtrArray_index, "index(self, obj: AuiDockInfo) -> int");
+PyDoc_STRVAR(doc_wxAuiDockInfoPtrArray_index, "index(self, obj: Optional[AuiDockInfo]) -> int");
 
 extern "C" {static PyObject *meth_wxAuiDockInfoPtrArray_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiDockInfoPtrArray_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDockInfoPtrArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiDockInfoPtrArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDockInfoPtrArray,
diff --git a/sip/cpp/sip_auiwxAuiDockUIPart.cpp b/sip/cpp/sip_auiwxAuiDockUIPart.cpp
index 4ef34e35..146e2b8e 100644
--- sip/cpp/sip_auiwxAuiDockUIPart.cpp
+++ sip/cpp/sip_auiwxAuiDockUIPart.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -379,7 +379,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDockUIPart = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiDockUIPart,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDockUIPart,
diff --git a/sip/cpp/sip_auiwxAuiDockUIPartArray.cpp b/sip/cpp/sip_auiwxAuiDockUIPartArray.cpp
index f4882655..eef471ad 100644
--- sip/cpp/sip_auiwxAuiDockUIPartArray.cpp
+++ sip/cpp/sip_auiwxAuiDockUIPartArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiDockUIPartArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiDockUIPartArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiDockUIPartArray,
diff --git a/sip/cpp/sip_auiwxAuiFloatingFrame.cpp b/sip/cpp/sip_auiwxAuiFloatingFrame.cpp
index 94dd0fc7..8c9c3a81 100644
--- sip/cpp/sip_auiwxAuiFloatingFrame.cpp
+++ sip/cpp/sip_auiwxAuiFloatingFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1069,7 +1069,7 @@ static PyObject *meth_wxAuiFloatingFrame_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxAuiFloatingFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiFloatingFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiFloatingFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiFloatingFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1103,7 +1103,7 @@ static PyObject *meth_wxAuiFloatingFrame_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxAuiFloatingFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiFloatingFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiFloatingFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiFloatingFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1137,7 +1137,7 @@ static PyObject *meth_wxAuiFloatingFrame_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxAuiFloatingFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiFloatingFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiFloatingFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiFloatingFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1942,7 +1942,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiFloatingFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiFloatingFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiFloatingFrame,
diff --git a/sip/cpp/sip_auiwxAuiMDIChildFrame.cpp b/sip/cpp/sip_auiwxAuiMDIChildFrame.cpp
index 4957d7aa..69a29424 100644
--- sip/cpp/sip_auiwxAuiMDIChildFrame.cpp
+++ sip/cpp/sip_auiwxAuiMDIChildFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2370,7 +2370,7 @@ static PyObject *meth_wxAuiMDIChildFrame_AcceptsFocusFromKeyboard(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIChildFrame_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiMDIChildFrame_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiMDIChildFrame_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIChildFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2408,7 +2408,7 @@ static PyObject *meth_wxAuiMDIChildFrame_AddChild(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIChildFrame_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiMDIChildFrame_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiMDIChildFrame_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIChildFrame_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2546,7 +2546,7 @@ static PyObject *meth_wxAuiMDIChildFrame_OnInternalIdle(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIChildFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxAuiMDIChildFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxAuiMDIChildFrame_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIChildFrame_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2699,7 +2699,7 @@ static PyObject *meth_wxAuiMDIChildFrame_SetValidator(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIChildFrame_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxAuiMDIChildFrame_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxAuiMDIChildFrame_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIChildFrame_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2848,7 +2848,7 @@ static PyObject *meth_wxAuiMDIChildFrame_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIChildFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIChildFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIChildFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIChildFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2882,7 +2882,7 @@ static PyObject *meth_wxAuiMDIChildFrame_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIChildFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIChildFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIChildFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIChildFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2916,7 +2916,7 @@ static PyObject *meth_wxAuiMDIChildFrame_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIChildFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIChildFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIChildFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIChildFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3754,7 +3754,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiMDIChildFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiMDIChildFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiMDIChildFrame,
diff --git a/sip/cpp/sip_auiwxAuiMDIClientWindow.cpp b/sip/cpp/sip_auiwxAuiMDIClientWindow.cpp
index 59cae7da..628179c6 100644
--- sip/cpp/sip_auiwxAuiMDIClientWindow.cpp
+++ sip/cpp/sip_auiwxAuiMDIClientWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1613,7 +1613,7 @@ static PyObject *meth_wxAuiMDIClientWindow_AcceptsFocusFromKeyboard(PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIClientWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiMDIClientWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiMDIClientWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIClientWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1651,7 +1651,7 @@ static PyObject *meth_wxAuiMDIClientWindow_AddChild(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIClientWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiMDIClientWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiMDIClientWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIClientWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1789,7 +1789,7 @@ static PyObject *meth_wxAuiMDIClientWindow_OnInternalIdle(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIClientWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxAuiMDIClientWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxAuiMDIClientWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIClientWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1976,7 +1976,7 @@ static PyObject *meth_wxAuiMDIClientWindow_SetValidator(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIClientWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxAuiMDIClientWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxAuiMDIClientWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIClientWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2125,7 +2125,7 @@ static PyObject *meth_wxAuiMDIClientWindow_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIClientWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIClientWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIClientWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIClientWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2159,7 +2159,7 @@ static PyObject *meth_wxAuiMDIClientWindow_DoGetPosition(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIClientWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIClientWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIClientWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIClientWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2193,7 +2193,7 @@ static PyObject *meth_wxAuiMDIClientWindow_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIClientWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIClientWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIClientWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIClientWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2971,7 +2971,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiMDIClientWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiMDIClientWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiMDIClientWindow,
diff --git a/sip/cpp/sip_auiwxAuiMDIParentFrame.cpp b/sip/cpp/sip_auiwxAuiMDIParentFrame.cpp
index 029f2ee1..00183b27 100644
--- sip/cpp/sip_auiwxAuiMDIParentFrame.cpp
+++ sip/cpp/sip_auiwxAuiMDIParentFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1885,7 +1885,7 @@ static PyObject *meth_wxAuiMDIParentFrame_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIParentFrame_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiMDIParentFrame_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiMDIParentFrame_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIParentFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1923,7 +1923,7 @@ static PyObject *meth_wxAuiMDIParentFrame_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIParentFrame_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiMDIParentFrame_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiMDIParentFrame_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIParentFrame_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2061,7 +2061,7 @@ static PyObject *meth_wxAuiMDIParentFrame_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIParentFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxAuiMDIParentFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxAuiMDIParentFrame_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIParentFrame_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2248,7 +2248,7 @@ static PyObject *meth_wxAuiMDIParentFrame_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIParentFrame_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxAuiMDIParentFrame_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxAuiMDIParentFrame_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIParentFrame_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2397,7 +2397,7 @@ static PyObject *meth_wxAuiMDIParentFrame_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIParentFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIParentFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIParentFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIParentFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2431,7 +2431,7 @@ static PyObject *meth_wxAuiMDIParentFrame_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIParentFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIParentFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIParentFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIParentFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2465,7 +2465,7 @@ static PyObject *meth_wxAuiMDIParentFrame_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxAuiMDIParentFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiMDIParentFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiMDIParentFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiMDIParentFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3291,7 +3291,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiMDIParentFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiMDIParentFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiMDIParentFrame,
diff --git a/sip/cpp/sip_auiwxAuiManager.cpp b/sip/cpp/sip_auiwxAuiManager.cpp
index 097d8f19..87b7aef1 100644
--- sip/cpp/sip_auiwxAuiManager.cpp
+++ sip/cpp/sip_auiwxAuiManager.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1889,7 +1889,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiManager = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiManager,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiManager,
diff --git a/sip/cpp/sip_auiwxAuiManagerEvent.cpp b/sip/cpp/sip_auiwxAuiManagerEvent.cpp
index fa70b892..f8359082 100644
--- sip/cpp/sip_auiwxAuiManagerEvent.cpp
+++ sip/cpp/sip_auiwxAuiManagerEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -519,7 +519,7 @@ static PyObject *meth_wxAuiManagerEvent_Veto(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxAuiManagerEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxAuiManagerEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxAuiManagerEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiManagerEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -689,7 +689,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiManagerEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiManagerEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiManagerEvent,
diff --git a/sip/cpp/sip_auiwxAuiNotebook.cpp b/sip/cpp/sip_auiwxAuiNotebook.cpp
index c8519631..8e23e837 100644
--- sip/cpp/sip_auiwxAuiNotebook.cpp
+++ sip/cpp/sip_auiwxAuiNotebook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3049,7 +3049,7 @@ static PyObject *meth_wxAuiNotebook_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxAuiNotebook_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiNotebook_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiNotebook_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiNotebook_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3087,7 +3087,7 @@ static PyObject *meth_wxAuiNotebook_AddChild(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxAuiNotebook_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiNotebook_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiNotebook_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiNotebook_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3225,7 +3225,7 @@ static PyObject *meth_wxAuiNotebook_OnInternalIdle(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxAuiNotebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxAuiNotebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxAuiNotebook_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiNotebook_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3412,7 +3412,7 @@ static PyObject *meth_wxAuiNotebook_SetValidator(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxAuiNotebook_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxAuiNotebook_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxAuiNotebook_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiNotebook_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3561,7 +3561,7 @@ static PyObject *meth_wxAuiNotebook_DoEnable(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxAuiNotebook_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiNotebook_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiNotebook_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiNotebook_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3595,7 +3595,7 @@ static PyObject *meth_wxAuiNotebook_DoGetPosition(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxAuiNotebook_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiNotebook_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiNotebook_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiNotebook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3629,7 +3629,7 @@ static PyObject *meth_wxAuiNotebook_DoGetSize(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxAuiNotebook_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiNotebook_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiNotebook_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiNotebook_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4231,7 +4231,7 @@ static PyObject *meth_wxAuiNotebook_GetClassDefaultAttributes(PyObject *, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxAuiNotebook_HitTest, "HitTest(self, pt: Point) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiNotebook_HitTest, "HitTest(self, pt: Point) -> (int, Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiNotebook_HitTest(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiNotebook_HitTest(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4503,7 +4503,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiNotebook = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiNotebook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiNotebook,
diff --git a/sip/cpp/sip_auiwxAuiNotebookEvent.cpp b/sip/cpp/sip_auiwxAuiNotebookEvent.cpp
index b73f3919..5bde80a2 100644
--- sip/cpp/sip_auiwxAuiNotebookEvent.cpp
+++ sip/cpp/sip_auiwxAuiNotebookEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -222,7 +222,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiNotebookEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiNotebookEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiNotebookEvent,
diff --git a/sip/cpp/sip_auiwxAuiNotebookPage.cpp b/sip/cpp/sip_auiwxAuiNotebookPage.cpp
index e3db95bc..fc780e1d 100644
--- sip/cpp/sip_auiwxAuiNotebookPage.cpp
+++ sip/cpp/sip_auiwxAuiNotebookPage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -329,7 +329,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiNotebookPage = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiNotebookPage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiNotebookPage,
diff --git a/sip/cpp/sip_auiwxAuiNotebookPageArray.cpp b/sip/cpp/sip_auiwxAuiNotebookPageArray.cpp
index 564bc8aa..668a17a2 100644
--- sip/cpp/sip_auiwxAuiNotebookPageArray.cpp
+++ sip/cpp/sip_auiwxAuiNotebookPageArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiNotebookPageArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiNotebookPageArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiNotebookPageArray,
diff --git a/sip/cpp/sip_auiwxAuiPaneInfo.cpp b/sip/cpp/sip_auiwxAuiPaneInfo.cpp
index 81888185..4a04b9b4 100644
--- sip/cpp/sip_auiwxAuiPaneInfo.cpp
+++ sip/cpp/sip_auiwxAuiPaneInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3734,7 +3734,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiPaneInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiPaneInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiPaneInfo,
diff --git a/sip/cpp/sip_auiwxAuiPaneInfoArray.cpp b/sip/cpp/sip_auiwxAuiPaneInfoArray.cpp
index 26c873ca..83491897 100644
--- sip/cpp/sip_auiwxAuiPaneInfoArray.cpp
+++ sip/cpp/sip_auiwxAuiPaneInfoArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiPaneInfoArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiPaneInfoArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiPaneInfoArray,
diff --git a/sip/cpp/sip_auiwxAuiPaneInfoPtrArray.cpp b/sip/cpp/sip_auiwxAuiPaneInfoPtrArray.cpp
index c040b72b..b37b01fc 100644
--- sip/cpp/sip_auiwxAuiPaneInfoPtrArray.cpp
+++ sip/cpp/sip_auiwxAuiPaneInfoPtrArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -11,7 +11,7 @@
         #include <wx/aui/framemanager.h>
 
 
-PyDoc_STRVAR(doc_wxAuiPaneInfoPtrArray_append, "append(self, obj: AuiPaneInfo)");
+PyDoc_STRVAR(doc_wxAuiPaneInfoPtrArray_append, "append(self, obj: Optional[AuiPaneInfo])");
 
 extern "C" {static PyObject *meth_wxAuiPaneInfoPtrArray_append(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiPaneInfoPtrArray_append(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -41,7 +41,7 @@ static PyObject *meth_wxAuiPaneInfoPtrArray_append(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxAuiPaneInfoPtrArray_index, "index(self, obj: AuiPaneInfo) -> int");
+PyDoc_STRVAR(doc_wxAuiPaneInfoPtrArray_index, "index(self, obj: Optional[AuiPaneInfo]) -> int");
 
 extern "C" {static PyObject *meth_wxAuiPaneInfoPtrArray_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiPaneInfoPtrArray_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiPaneInfoPtrArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiPaneInfoPtrArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiPaneInfoPtrArray,
diff --git a/sip/cpp/sip_auiwxAuiSimpleTabArt.cpp b/sip/cpp/sip_auiwxAuiSimpleTabArt.cpp
index 286d0b81..acaf411d 100644
--- sip/cpp/sip_auiwxAuiSimpleTabArt.cpp
+++ sip/cpp/sip_auiwxAuiSimpleTabArt.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1103,7 +1103,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiSimpleTabArt = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiSimpleTabArt,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiSimpleTabArt,
diff --git a/sip/cpp/sip_auiwxAuiTabArt.cpp b/sip/cpp/sip_auiwxAuiTabArt.cpp
index c81d4c3a..11381179 100644
--- sip/cpp/sip_auiwxAuiTabArt.cpp
+++ sip/cpp/sip_auiwxAuiTabArt.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -780,7 +780,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiTabArt = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxAuiTabArt,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiTabArt,
diff --git a/sip/cpp/sip_auiwxAuiTabContainer.cpp b/sip/cpp/sip_auiwxAuiTabContainer.cpp
index 077f8f9f..1d3c06fc 100644
--- sip/cpp/sip_auiwxAuiTabContainer.cpp
+++ sip/cpp/sip_auiwxAuiTabContainer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1393,7 +1393,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiTabContainer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiTabContainer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiTabContainer,
diff --git a/sip/cpp/sip_auiwxAuiTabContainerButton.cpp b/sip/cpp/sip_auiwxAuiTabContainerButton.cpp
index b29916cb..e3644960 100644
--- sip/cpp/sip_auiwxAuiTabContainerButton.cpp
+++ sip/cpp/sip_auiwxAuiTabContainerButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -337,7 +337,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiTabContainerButton = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiTabContainerButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiTabContainerButton,
diff --git a/sip/cpp/sip_auiwxAuiTabContainerButtonArray.cpp b/sip/cpp/sip_auiwxAuiTabContainerButtonArray.cpp
index dec65f72..c110c32a 100644
--- sip/cpp/sip_auiwxAuiTabContainerButtonArray.cpp
+++ sip/cpp/sip_auiwxAuiTabContainerButtonArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiTabContainerButtonArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiTabContainerButtonArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiTabContainerButtonArray,
diff --git a/sip/cpp/sip_auiwxAuiTabCtrl.cpp b/sip/cpp/sip_auiwxAuiTabCtrl.cpp
index ac2cf1fe..7f945e95 100644
--- sip/cpp/sip_auiwxAuiTabCtrl.cpp
+++ sip/cpp/sip_auiwxAuiTabCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1224,7 +1224,7 @@ static PyObject *meth_wxAuiTabCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxAuiTabCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiTabCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiTabCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiTabCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1262,7 +1262,7 @@ static PyObject *meth_wxAuiTabCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxAuiTabCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiTabCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiTabCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiTabCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1400,7 +1400,7 @@ static PyObject *meth_wxAuiTabCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxAuiTabCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxAuiTabCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxAuiTabCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiTabCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1587,7 +1587,7 @@ static PyObject *meth_wxAuiTabCtrl_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxAuiTabCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxAuiTabCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxAuiTabCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiTabCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1736,7 +1736,7 @@ static PyObject *meth_wxAuiTabCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxAuiTabCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiTabCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiTabCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiTabCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1770,7 +1770,7 @@ static PyObject *meth_wxAuiTabCtrl_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxAuiTabCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiTabCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiTabCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiTabCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1804,7 +1804,7 @@ static PyObject *meth_wxAuiTabCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxAuiTabCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiTabCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiTabCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiTabCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2566,7 +2566,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiTabCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiTabCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiTabCtrl,
diff --git a/sip/cpp/sip_auiwxAuiToolBar.cpp b/sip/cpp/sip_auiwxAuiToolBar.cpp
index 1795ccc0..46f8636f 100644
--- sip/cpp/sip_auiwxAuiToolBar.cpp
+++ sip/cpp/sip_auiwxAuiToolBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3879,7 +3879,7 @@ static PyObject *meth_wxAuiToolBar_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxAuiToolBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiToolBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiToolBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiToolBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3917,7 +3917,7 @@ static PyObject *meth_wxAuiToolBar_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxAuiToolBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxAuiToolBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxAuiToolBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiToolBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4055,7 +4055,7 @@ static PyObject *meth_wxAuiToolBar_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxAuiToolBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxAuiToolBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxAuiToolBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiToolBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -4242,7 +4242,7 @@ static PyObject *meth_wxAuiToolBar_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxAuiToolBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxAuiToolBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxAuiToolBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiToolBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -4391,7 +4391,7 @@ static PyObject *meth_wxAuiToolBar_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxAuiToolBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiToolBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiToolBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiToolBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4425,7 +4425,7 @@ static PyObject *meth_wxAuiToolBar_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxAuiToolBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiToolBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiToolBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiToolBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4459,7 +4459,7 @@ static PyObject *meth_wxAuiToolBar_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxAuiToolBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxAuiToolBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxAuiToolBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxAuiToolBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5330,7 +5330,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiToolBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiToolBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiToolBar,
diff --git a/sip/cpp/sip_auiwxAuiToolBarArt.cpp b/sip/cpp/sip_auiwxAuiToolBarArt.cpp
index 82ebd82a..8f14122a 100644
--- sip/cpp/sip_auiwxAuiToolBarArt.cpp
+++ sip/cpp/sip_auiwxAuiToolBarArt.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1496,7 +1496,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiToolBarArt = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxAuiToolBarArt,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiToolBarArt,
diff --git a/sip/cpp/sip_auiwxAuiToolBarEvent.cpp b/sip/cpp/sip_auiwxAuiToolBarEvent.cpp
index a5798319..8190325b 100644
--- sip/cpp/sip_auiwxAuiToolBarEvent.cpp
+++ sip/cpp/sip_auiwxAuiToolBarEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -380,7 +380,7 @@ static PyObject *meth_wxAuiToolBarEvent_SetToolId(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxAuiToolBarEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxAuiToolBarEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxAuiToolBarEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxAuiToolBarEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -560,7 +560,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiToolBarEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAuiToolBarEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiToolBarEvent,
diff --git a/sip/cpp/sip_auiwxAuiToolBarItem.cpp b/sip/cpp/sip_auiwxAuiToolBarItem.cpp
index 66846704..caf75af7 100644
--- sip/cpp/sip_auiwxAuiToolBarItem.cpp
+++ sip/cpp/sip_auiwxAuiToolBarItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1627,7 +1627,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiToolBarItem = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiToolBarItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiToolBarItem,
diff --git a/sip/cpp/sip_auiwxAuiToolBarItemArray.cpp b/sip/cpp/sip_auiwxAuiToolBarItemArray.cpp
index 5a576348..e3babd00 100644
--- sip/cpp/sip_auiwxAuiToolBarItemArray.cpp
+++ sip/cpp/sip_auiwxAuiToolBarItemArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__aui_wxAuiToolBarItemArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAuiToolBarItemArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AuiToolBarItemArray,
diff --git a/sip/cpp/sip_core_ScrolledWindowBase.cpp b/sip/cpp/sip_core_ScrolledWindowBase.cpp
index 2aced5a8..b99f3508 100644
--- sip/cpp/sip_core_ScrolledWindowBase.cpp
+++ sip/cpp/sip_core_ScrolledWindowBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2496,7 +2496,7 @@ static PyObject *meth__ScrolledWindowBase_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc__ScrolledWindowBase_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc__ScrolledWindowBase_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth__ScrolledWindowBase_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth__ScrolledWindowBase_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2534,7 +2534,7 @@ static PyObject *meth__ScrolledWindowBase_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc__ScrolledWindowBase_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc__ScrolledWindowBase_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth__ScrolledWindowBase_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth__ScrolledWindowBase_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2672,7 +2672,7 @@ static PyObject *meth__ScrolledWindowBase_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc__ScrolledWindowBase_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc__ScrolledWindowBase_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth__ScrolledWindowBase_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth__ScrolledWindowBase_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2859,7 +2859,7 @@ static PyObject *meth__ScrolledWindowBase_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc__ScrolledWindowBase_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc__ScrolledWindowBase_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth__ScrolledWindowBase_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth__ScrolledWindowBase_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3008,7 +3008,7 @@ static PyObject *meth__ScrolledWindowBase_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc__ScrolledWindowBase_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc__ScrolledWindowBase_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth__ScrolledWindowBase_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth__ScrolledWindowBase_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3042,7 +3042,7 @@ static PyObject *meth__ScrolledWindowBase_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc__ScrolledWindowBase_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc__ScrolledWindowBase_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth__ScrolledWindowBase_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth__ScrolledWindowBase_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3076,7 +3076,7 @@ static PyObject *meth__ScrolledWindowBase_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc__ScrolledWindowBase_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc__ScrolledWindowBase_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth__ScrolledWindowBase_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth__ScrolledWindowBase_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3992,7 +3992,7 @@ sipClassTypeDef sipTypeDef__core__ScrolledWindowBase = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr__ScrolledWindowBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr__ScrolledWindowBase,
diff --git a/sip/cpp/sip_corecmodule.cpp b/sip/cpp/sip_corecmodule.cpp
index 802b1144..a1564d73 100644
--- sip/cpp/sip_corecmodule.cpp
+++ sip/cpp/sip_corecmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -15140,7 +15140,7 @@ static PyObject *func_GetApp(PyObject *,PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_testCppClone, "testCppClone(evt: Event) -> Event");
+PyDoc_STRVAR(doc_testCppClone, "testCppClone(evt: Event) -> Optional[Event]");
 
 extern "C" {static PyObject *func_testCppClone(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testCppClone(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -15295,7 +15295,7 @@ static PyObject *func_NewEventType(PyObject *,PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_testVariantTypeName, "testVariantTypeName(var: object) -> object");
+PyDoc_STRVAR(doc_testVariantTypeName, "testVariantTypeName(var: Optional[Any]) -> Any");
 
 extern "C" {static PyObject *func_testVariantTypeName(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testVariantTypeName(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -15335,7 +15335,7 @@ static PyObject *func_testVariantTypeName(PyObject *,PyObject *sipArgs, PyObject
 }
 
 
-PyDoc_STRVAR(doc_testVariantTypemap, "testVariantTypemap(var: object) -> object");
+PyDoc_STRVAR(doc_testVariantTypemap, "testVariantTypemap(var: Optional[Any]) -> Optional[Any]");
 
 extern "C" {static PyObject *func_testVariantTypemap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testVariantTypemap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -16146,7 +16146,7 @@ static PyObject *func_InitAllImageHandlers(PyObject *,PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_testColourTypeMap, "testColourTypeMap(c: Colour) -> Colour");
+PyDoc_STRVAR(doc_testColourTypeMap, "testColourTypeMap(c: Optional[Colour]) -> Optional[Colour]");
 
 extern "C" {static PyObject *func_testColourTypeMap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testColourTypeMap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -16730,8 +16730,8 @@ static PyObject *func_GetTranslation(PyObject *,PyObject *sipArgs, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_Setlocale, "Setlocale(category: int, locale: bytes) -> bytes\n"
-"Setlocale(category: int, locale: object) -> bytes");
+PyDoc_STRVAR(doc_Setlocale, "Setlocale(category: int, locale: Optional[bytes]) -> Optional[bytes]\n"
+"Setlocale(category: int, locale: Any) -> Optional[bytes]");
 
 extern "C" {static PyObject *func_Setlocale(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_Setlocale(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -16879,7 +16879,7 @@ static PyObject *func_IsRunningUnderWine(PyObject *,PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_testArrayDoubleTypemap, "testArrayDoubleTypemap(arr: object) -> object");
+PyDoc_STRVAR(doc_testArrayDoubleTypemap, "testArrayDoubleTypemap(arr: Any) -> Any");
 
 extern "C" {static PyObject *func_testArrayDoubleTypemap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testArrayDoubleTypemap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -16919,7 +16919,7 @@ static PyObject *func_testArrayDoubleTypemap(PyObject *,PyObject *sipArgs, PyObj
 }
 
 
-PyDoc_STRVAR(doc_testArrayIntTypemap, "testArrayIntTypemap(arr: object) -> object");
+PyDoc_STRVAR(doc_testArrayIntTypemap, "testArrayIntTypemap(arr: Any) -> Any");
 
 extern "C" {static PyObject *func_testArrayIntTypemap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testArrayIntTypemap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -16959,7 +16959,7 @@ static PyObject *func_testArrayIntTypemap(PyObject *,PyObject *sipArgs, PyObject
 }
 
 
-PyDoc_STRVAR(doc_testArrayStringTypemap, "testArrayStringTypemap(arr: object) -> object");
+PyDoc_STRVAR(doc_testArrayStringTypemap, "testArrayStringTypemap(arr: Any) -> Any");
 
 extern "C" {static PyObject *func_testArrayStringTypemap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testArrayStringTypemap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -16999,7 +16999,7 @@ static PyObject *func_testArrayStringTypemap(PyObject *,PyObject *sipArgs, PyObj
 }
 
 
-PyDoc_STRVAR(doc_testStringTypemap, "testStringTypemap(str: object) -> object");
+PyDoc_STRVAR(doc_testStringTypemap, "testStringTypemap(str: Any) -> Any");
 
 extern "C" {static PyObject *func_testStringTypemap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testStringTypemap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -17139,7 +17139,7 @@ static PyObject *func_Abort(PyObject *,PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_testUIntPtrTypemap, "testUIntPtrTypemap(value: object) -> object");
+PyDoc_STRVAR(doc_testUIntPtrTypemap, "testUIntPtrTypemap(value: Any) -> Any");
 
 extern "C" {static PyObject *func_testUIntPtrTypemap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testUIntPtrTypemap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -17179,7 +17179,7 @@ static PyObject *func_testUIntPtrTypemap(PyObject *,PyObject *sipArgs, PyObject
 }
 
 
-PyDoc_STRVAR(doc_testIntPtrTypemap, "testIntPtrTypemap(value: object) -> object");
+PyDoc_STRVAR(doc_testIntPtrTypemap, "testIntPtrTypemap(value: Any) -> Any");
 
 extern "C" {static PyObject *func_testIntPtrTypemap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testIntPtrTypemap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -21725,7 +21725,6 @@ PyMODINIT_FUNC PyInit__core()
         {sipName_testSizetTypemap, SIP_MLMETH_CAST(func_testSizetTypemap), METH_VARARGS|METH_KEYWORDS, doc_testSizetTypemap},
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._core",
diff --git a/sip/cpp/sip_corewxAcceleratorEntry.cpp b/sip/cpp/sip_corewxAcceleratorEntry.cpp
index 2a1b1ff2..e8912471 100644
--- sip/cpp/sip_corewxAcceleratorEntry.cpp
+++ sip/cpp/sip_corewxAcceleratorEntry.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -567,7 +567,7 @@ sipClassTypeDef sipTypeDef__core_wxAcceleratorEntry = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAcceleratorEntry,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AcceleratorEntry,
diff --git a/sip/cpp/sip_corewxAcceleratorTable.cpp b/sip/cpp/sip_corewxAcceleratorTable.cpp
index 9c4ca806..1cfd7713 100644
--- sip/cpp/sip_corewxAcceleratorTable.cpp
+++ sip/cpp/sip_corewxAcceleratorTable.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -230,7 +230,7 @@ sipClassTypeDef sipTypeDef__core_wxAcceleratorTable = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAcceleratorTable,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AcceleratorTable,
diff --git a/sip/cpp/sip_corewxAccessible.cpp b/sip/cpp/sip_corewxAccessible.cpp
index bf5a3568..cc7a4e25 100644
--- sip/cpp/sip_corewxAccessible.cpp
+++ sip/cpp/sip_corewxAccessible.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1346,7 +1346,7 @@ sipClassTypeDef sipTypeDef__core_wxAccessible = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAccessible,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Accessible,
diff --git a/sip/cpp/sip_corewxActivateEvent.cpp b/sip/cpp/sip_corewxActivateEvent.cpp
index 6f0ae22b..6404b496 100644
--- sip/cpp/sip_corewxActivateEvent.cpp
+++ sip/cpp/sip_corewxActivateEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -158,7 +158,7 @@ static PyObject *meth_wxActivateEvent_GetActivationReason(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxActivateEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxActivateEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxActivateEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxActivateEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -327,7 +327,7 @@ sipClassTypeDef sipTypeDef__core_wxActivateEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxActivateEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ActivateEvent,
diff --git a/sip/cpp/sip_corewxActivityIndicator.cpp b/sip/cpp/sip_corewxActivityIndicator.cpp
index 62e35d2e..080a1cc1 100644
--- sip/cpp/sip_corewxActivityIndicator.cpp
+++ sip/cpp/sip_corewxActivityIndicator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1362,7 +1362,7 @@ static PyObject *meth_wxActivityIndicator_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxActivityIndicator_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxActivityIndicator_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxActivityIndicator_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxActivityIndicator_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1400,7 +1400,7 @@ static PyObject *meth_wxActivityIndicator_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxActivityIndicator_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxActivityIndicator_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxActivityIndicator_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxActivityIndicator_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1538,7 +1538,7 @@ static PyObject *meth_wxActivityIndicator_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxActivityIndicator_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxActivityIndicator_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxActivityIndicator_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxActivityIndicator_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1725,7 +1725,7 @@ static PyObject *meth_wxActivityIndicator_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxActivityIndicator_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxActivityIndicator_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxActivityIndicator_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxActivityIndicator_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1874,7 +1874,7 @@ static PyObject *meth_wxActivityIndicator_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxActivityIndicator_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxActivityIndicator_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxActivityIndicator_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxActivityIndicator_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1908,7 +1908,7 @@ static PyObject *meth_wxActivityIndicator_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxActivityIndicator_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxActivityIndicator_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxActivityIndicator_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxActivityIndicator_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1942,7 +1942,7 @@ static PyObject *meth_wxActivityIndicator_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxActivityIndicator_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxActivityIndicator_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxActivityIndicator_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxActivityIndicator_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2743,7 +2743,7 @@ sipClassTypeDef sipTypeDef__core_wxActivityIndicator = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxActivityIndicator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ActivityIndicator,
diff --git a/sip/cpp/sip_corewxAffineMatrix2D.cpp b/sip/cpp/sip_corewxAffineMatrix2D.cpp
index 6ebd448f..4717fdb1 100644
--- sip/cpp/sip_corewxAffineMatrix2D.cpp
+++ sip/cpp/sip_corewxAffineMatrix2D.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -956,7 +956,7 @@ sipClassTypeDef sipTypeDef__core_wxAffineMatrix2D = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAffineMatrix2D,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AffineMatrix2D,
diff --git a/sip/cpp/sip_corewxAffineMatrix2DBase.cpp b/sip/cpp/sip_corewxAffineMatrix2DBase.cpp
index 6399fe1d..1beb1712 100644
--- sip/cpp/sip_corewxAffineMatrix2DBase.cpp
+++ sip/cpp/sip_corewxAffineMatrix2DBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -734,7 +734,7 @@ sipClassTypeDef sipTypeDef__core_wxAffineMatrix2DBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxAffineMatrix2DBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AffineMatrix2DBase,
diff --git a/sip/cpp/sip_corewxAlphaPixelData.cpp b/sip/cpp/sip_corewxAlphaPixelData.cpp
index a0707793..549a2896 100644
--- sip/cpp/sip_corewxAlphaPixelData.cpp
+++ sip/cpp/sip_corewxAlphaPixelData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -368,7 +368,7 @@ sipClassTypeDef sipTypeDef__core_wxAlphaPixelData = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAlphaPixelData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AlphaPixelData,
diff --git a/sip/cpp/sip_corewxAlphaPixelData_Accessor.cpp b/sip/cpp/sip_corewxAlphaPixelData_Accessor.cpp
index e2c8821a..0eeb9e81 100644
--- sip/cpp/sip_corewxAlphaPixelData_Accessor.cpp
+++ sip/cpp/sip_corewxAlphaPixelData_Accessor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -617,7 +617,7 @@ sipClassTypeDef sipTypeDef__core_wxAlphaPixelData_Accessor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAlphaPixelData_Accessor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AlphaPixelData_Accessor,
diff --git a/sip/cpp/sip_corewxAnyButton.cpp b/sip/cpp/sip_corewxAnyButton.cpp
index 3619cbee..8c208748 100644
--- sip/cpp/sip_corewxAnyButton.cpp
+++ sip/cpp/sip_corewxAnyButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -733,7 +733,7 @@ sipClassTypeDef sipTypeDef__core_wxAnyButton = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAnyButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AnyButton,
diff --git a/sip/cpp/sip_corewxAppConsole.cpp b/sip/cpp/sip_corewxAppConsole.cpp
index 441169ac..fc5b765d 100644
--- sip/cpp/sip_corewxAppConsole.cpp
+++ sip/cpp/sip_corewxAppConsole.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1743,7 +1743,7 @@ sipClassTypeDef sipTypeDef__core_wxAppConsole = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAppConsole,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AppConsole,
diff --git a/sip/cpp/sip_corewxAppTraits.cpp b/sip/cpp/sip_corewxAppTraits.cpp
index 8bd7cdb9..e6deb623 100644
--- sip/cpp/sip_corewxAppTraits.cpp
+++ sip/cpp/sip_corewxAppTraits.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -541,7 +541,7 @@ sipClassTypeDef sipTypeDef__core_wxAppTraits = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxAppTraits,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AppTraits,
diff --git a/sip/cpp/sip_corewxArchiveFSHandler.cpp b/sip/cpp/sip_corewxArchiveFSHandler.cpp
index 6d747685..58abcf24 100644
--- sip/cpp/sip_corewxArchiveFSHandler.cpp
+++ sip/cpp/sip_corewxArchiveFSHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -338,7 +338,7 @@ static PyObject *meth_wxArchiveFSHandler_Cleanup(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxArchiveFSHandler_CanOpen, "CanOpen(self, location: object) -> bool");
+PyDoc_STRVAR(doc_wxArchiveFSHandler_CanOpen, "CanOpen(self, location: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxArchiveFSHandler_CanOpen(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxArchiveFSHandler_CanOpen(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -379,7 +379,7 @@ static PyObject *meth_wxArchiveFSHandler_CanOpen(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxArchiveFSHandler_OpenFile, "OpenFile(self, fs: FileSystem, location: object) -> FSFile");
+PyDoc_STRVAR(doc_wxArchiveFSHandler_OpenFile, "OpenFile(self, fs: FileSystem, location: Any) -> Optional[FSFile]");
 
 extern "C" {static PyObject *meth_wxArchiveFSHandler_OpenFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxArchiveFSHandler_OpenFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -422,7 +422,7 @@ static PyObject *meth_wxArchiveFSHandler_OpenFile(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxArchiveFSHandler_FindFirst, "FindFirst(self, spec: object, flags: int = 0) -> object");
+PyDoc_STRVAR(doc_wxArchiveFSHandler_FindFirst, "FindFirst(self, spec: Any, flags: int = 0) -> Any");
 
 extern "C" {static PyObject *meth_wxArchiveFSHandler_FindFirst(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxArchiveFSHandler_FindFirst(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -465,7 +465,7 @@ static PyObject *meth_wxArchiveFSHandler_FindFirst(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxArchiveFSHandler_FindNext, "FindNext(self) -> object");
+PyDoc_STRVAR(doc_wxArchiveFSHandler_FindNext, "FindNext(self) -> Any");
 
 extern "C" {static PyObject *meth_wxArchiveFSHandler_FindNext(PyObject *, PyObject *);}
 static PyObject *meth_wxArchiveFSHandler_FindNext(PyObject *sipSelf, PyObject *sipArgs)
@@ -610,7 +610,7 @@ sipClassTypeDef sipTypeDef__core_wxArchiveFSHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxArchiveFSHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ArchiveFSHandler,
diff --git a/sip/cpp/sip_corewxArrayDouble.cpp b/sip/cpp/sip_corewxArrayDouble.cpp
index bdc83944..88155874 100644
--- sip/cpp/sip_corewxArrayDouble.cpp
+++ sip/cpp/sip_corewxArrayDouble.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -114,15 +114,15 @@ sipMappedTypeDef sipTypeDef__core_wxArrayDouble = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxArrayDouble,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxArrayDouble,
     array_wxArrayDouble,
diff --git a/sip/cpp/sip_corewxArrayInt.cpp b/sip/cpp/sip_corewxArrayInt.cpp
index e9d017d8..f6f399e6 100644
--- sip/cpp/sip_corewxArrayInt.cpp
+++ sip/cpp/sip_corewxArrayInt.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -114,15 +114,15 @@ sipMappedTypeDef sipTypeDef__core_wxArrayInt = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxArrayInt,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxArrayInt,
     array_wxArrayInt,
diff --git a/sip/cpp/sip_corewxArrayString.cpp b/sip/cpp/sip_corewxArrayString.cpp
index efbf553f..0ebc13d3 100644
--- sip/cpp/sip_corewxArrayString.cpp
+++ sip/cpp/sip_corewxArrayString.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -129,15 +129,15 @@ sipMappedTypeDef sipTypeDef__core_wxArrayString = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxArrayString,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxArrayString,
     array_wxArrayString,
diff --git a/sip/cpp/sip_corewxArrayVideoModes.cpp b/sip/cpp/sip_corewxArrayVideoModes.cpp
index 7f042eaf..282a0124 100644
--- sip/cpp/sip_corewxArrayVideoModes.cpp
+++ sip/cpp/sip_corewxArrayVideoModes.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__core_wxArrayVideoModes = {
         SIP_TYPE_CLASS,
         sipNameNr_wxArrayVideoModes,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ArrayVideoModes,
diff --git a/sip/cpp/sip_corewxArtProvider.cpp b/sip/cpp/sip_corewxArtProvider.cpp
index a327819c..b8fd9813 100644
--- sip/cpp/sip_corewxArtProvider.cpp
+++ sip/cpp/sip_corewxArtProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1021,7 +1021,7 @@ sipClassTypeDef sipTypeDef__core_wxArtProvider = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxArtProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ArtProvider,
diff --git a/sip/cpp/sip_corewxAutoBufferedPaintDC.cpp b/sip/cpp/sip_corewxAutoBufferedPaintDC.cpp
index c53a4711..50c37ea1 100644
--- sip/cpp/sip_corewxAutoBufferedPaintDC.cpp
+++ sip/cpp/sip_corewxAutoBufferedPaintDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -157,7 +157,7 @@ sipClassTypeDef sipTypeDef__core_wxAutoBufferedPaintDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxAutoBufferedPaintDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AutoBufferedPaintDC,
diff --git a/sip/cpp/sip_corewxBitmap.cpp b/sip/cpp/sip_corewxBitmap.cpp
index 19d638c4..451975e1 100644
--- sip/cpp/sip_corewxBitmap.cpp
+++ sip/cpp/sip_corewxBitmap.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2988,7 +2988,7 @@ sipClassTypeDef sipTypeDef__core_wxBitmap = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBitmap,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Bitmap,
diff --git a/sip/cpp/sip_corewxBitmapBundle.cpp b/sip/cpp/sip_corewxBitmapBundle.cpp
index 3503ecb7..25fa9726 100644
--- sip/cpp/sip_corewxBitmapBundle.cpp
+++ sip/cpp/sip_corewxBitmapBundle.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1230,7 +1230,7 @@ sipClassTypeDef sipTypeDef__core_wxBitmapBundle = {
         SIP_TYPE_CLASS,
         sipNameNr_wxBitmapBundle,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BitmapBundle,
diff --git a/sip/cpp/sip_corewxBitmapBundleImpl.cpp b/sip/cpp/sip_corewxBitmapBundleImpl.cpp
index d0595397..3691ed75 100644
--- sip/cpp/sip_corewxBitmapBundleImpl.cpp
+++ sip/cpp/sip_corewxBitmapBundleImpl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -489,7 +489,7 @@ sipClassTypeDef sipTypeDef__core_wxBitmapBundleImpl = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxBitmapBundleImpl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BitmapBundleImpl,
diff --git a/sip/cpp/sip_corewxBitmapButton.cpp b/sip/cpp/sip_corewxBitmapButton.cpp
index df2e2227..9ad83cee 100644
--- sip/cpp/sip_corewxBitmapButton.cpp
+++ sip/cpp/sip_corewxBitmapButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1362,7 +1362,7 @@ static PyObject *meth_wxBitmapButton_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxBitmapButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxBitmapButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1400,7 +1400,7 @@ static PyObject *meth_wxBitmapButton_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxBitmapButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxBitmapButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1538,7 +1538,7 @@ static PyObject *meth_wxBitmapButton_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxBitmapButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxBitmapButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1725,7 +1725,7 @@ static PyObject *meth_wxBitmapButton_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxBitmapButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxBitmapButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1874,7 +1874,7 @@ static PyObject *meth_wxBitmapButton_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1908,7 +1908,7 @@ static PyObject *meth_wxBitmapButton_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1942,7 +1942,7 @@ static PyObject *meth_wxBitmapButton_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2749,7 +2749,7 @@ sipClassTypeDef sipTypeDef__core_wxBitmapButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBitmapButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BitmapButton,
diff --git a/sip/cpp/sip_corewxBitmapDataObject.cpp b/sip/cpp/sip_corewxBitmapDataObject.cpp
index 6fb89836..23b09979 100644
--- sip/cpp/sip_corewxBitmapDataObject.cpp
+++ sip/cpp/sip_corewxBitmapDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -517,7 +517,7 @@ static PyObject *meth_wxBitmapDataObject_GetDataSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapDataObject_GetDataHere, "GetDataHere(self, buf: wx.siplib.voidptr) -> bool");
+PyDoc_STRVAR(doc_wxBitmapDataObject_GetDataHere, "GetDataHere(self, buf: Optional[wx.siplib.voidptr]) -> bool");
 
 extern "C" {static PyObject *meth_wxBitmapDataObject_GetDataHere(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapDataObject_GetDataHere(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -679,7 +679,7 @@ sipClassTypeDef sipTypeDef__core_wxBitmapDataObject = {
         SIP_TYPE_CLASS,
         sipNameNr_wxBitmapDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BitmapDataObject,
diff --git a/sip/cpp/sip_corewxBitmapToggleButton.cpp b/sip/cpp/sip_corewxBitmapToggleButton.cpp
index 6a1ae189..67487481 100644
--- sip/cpp/sip_corewxBitmapToggleButton.cpp
+++ sip/cpp/sip_corewxBitmapToggleButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1343,7 +1343,7 @@ static PyObject *meth_wxBitmapToggleButton_AcceptsFocusFromKeyboard(PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapToggleButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxBitmapToggleButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxBitmapToggleButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapToggleButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1381,7 +1381,7 @@ static PyObject *meth_wxBitmapToggleButton_AddChild(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapToggleButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxBitmapToggleButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxBitmapToggleButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapToggleButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1519,7 +1519,7 @@ static PyObject *meth_wxBitmapToggleButton_OnInternalIdle(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapToggleButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxBitmapToggleButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxBitmapToggleButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapToggleButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1706,7 +1706,7 @@ static PyObject *meth_wxBitmapToggleButton_SetValidator(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapToggleButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxBitmapToggleButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxBitmapToggleButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapToggleButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1855,7 +1855,7 @@ static PyObject *meth_wxBitmapToggleButton_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapToggleButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapToggleButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapToggleButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapToggleButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1889,7 +1889,7 @@ static PyObject *meth_wxBitmapToggleButton_DoGetPosition(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapToggleButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapToggleButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapToggleButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapToggleButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1923,7 +1923,7 @@ static PyObject *meth_wxBitmapToggleButton_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxBitmapToggleButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxBitmapToggleButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxBitmapToggleButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxBitmapToggleButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2735,7 +2735,7 @@ sipClassTypeDef sipTypeDef__core_wxBitmapToggleButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBitmapToggleButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BitmapToggleButton,
diff --git a/sip/cpp/sip_corewxBookCtrlBase.cpp b/sip/cpp/sip_corewxBookCtrlBase.cpp
index 4979a8a0..c459d7cd 100644
--- sip/cpp/sip_corewxBookCtrlBase.cpp
+++ sip/cpp/sip_corewxBookCtrlBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1071,7 +1071,7 @@ sipClassTypeDef sipTypeDef__core_wxBookCtrlBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBookCtrlBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BookCtrlBase,
diff --git a/sip/cpp/sip_corewxBookCtrlEvent.cpp b/sip/cpp/sip_corewxBookCtrlEvent.cpp
index f85f43ec..57e1d3dc 100644
--- sip/cpp/sip_corewxBookCtrlEvent.cpp
+++ sip/cpp/sip_corewxBookCtrlEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -368,7 +368,7 @@ sipClassTypeDef sipTypeDef__core_wxBookCtrlEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBookCtrlEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BookCtrlEvent,
diff --git a/sip/cpp/sip_corewxBoxSizer.cpp b/sip/cpp/sip_corewxBoxSizer.cpp
index a1f4276b..32ea2661 100644
--- sip/cpp/sip_corewxBoxSizer.cpp
+++ sip/cpp/sip_corewxBoxSizer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -413,7 +413,7 @@ sipClassTypeDef sipTypeDef__core_wxBoxSizer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBoxSizer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BoxSizer,
diff --git a/sip/cpp/sip_corewxBrush.cpp b/sip/cpp/sip_corewxBrush.cpp
index 32569183..118f0a43 100644
--- sip/cpp/sip_corewxBrush.cpp
+++ sip/cpp/sip_corewxBrush.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -870,7 +870,7 @@ sipClassTypeDef sipTypeDef__core_wxBrush = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBrush,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Brush,
diff --git a/sip/cpp/sip_corewxBrushList.cpp b/sip/cpp/sip_corewxBrushList.cpp
index ba6a4933..9f84d1c5 100644
--- sip/cpp/sip_corewxBrushList.cpp
+++ sip/cpp/sip_corewxBrushList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -149,7 +149,7 @@ sipClassTypeDef sipTypeDef__core_wxBrushList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxBrushList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BrushList,
diff --git a/sip/cpp/sip_corewxBufferedDC.cpp b/sip/cpp/sip_corewxBufferedDC.cpp
index 79fefdc5..e1e9bd07 100644
--- sip/cpp/sip_corewxBufferedDC.cpp
+++ sip/cpp/sip_corewxBufferedDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -455,7 +455,7 @@ sipClassTypeDef sipTypeDef__core_wxBufferedDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBufferedDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BufferedDC,
diff --git a/sip/cpp/sip_corewxBufferedPaintDC.cpp b/sip/cpp/sip_corewxBufferedPaintDC.cpp
index 5a84e856..bf2629ee 100644
--- sip/cpp/sip_corewxBufferedPaintDC.cpp
+++ sip/cpp/sip_corewxBufferedPaintDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -201,7 +201,7 @@ sipClassTypeDef sipTypeDef__core_wxBufferedPaintDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBufferedPaintDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BufferedPaintDC,
diff --git a/sip/cpp/sip_corewxBusyCursor.cpp b/sip/cpp/sip_corewxBusyCursor.cpp
index 3a64ede5..79b17f58 100644
--- sip/cpp/sip_corewxBusyCursor.cpp
+++ sip/cpp/sip_corewxBusyCursor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -117,7 +117,7 @@ sipClassTypeDef sipTypeDef__core_wxBusyCursor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxBusyCursor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BusyCursor,
diff --git a/sip/cpp/sip_corewxBusyInfo.cpp b/sip/cpp/sip_corewxBusyInfo.cpp
index ec1ba75f..b6d14dde 100644
--- sip/cpp/sip_corewxBusyInfo.cpp
+++ sip/cpp/sip_corewxBusyInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -244,7 +244,7 @@ sipClassTypeDef sipTypeDef__core_wxBusyInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxBusyInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BusyInfo,
diff --git a/sip/cpp/sip_corewxBusyInfoFlags.cpp b/sip/cpp/sip_corewxBusyInfoFlags.cpp
index 2b812746..f2e764f3 100644
--- sip/cpp/sip_corewxBusyInfoFlags.cpp
+++ sip/cpp/sip_corewxBusyInfoFlags.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -452,7 +452,7 @@ sipClassTypeDef sipTypeDef__core_wxBusyInfoFlags = {
         SIP_TYPE_CLASS,
         sipNameNr_wxBusyInfoFlags,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BusyInfoFlags,
diff --git a/sip/cpp/sip_corewxButton.cpp b/sip/cpp/sip_corewxButton.cpp
index f41de068..495754fe 100644
--- sip/cpp/sip_corewxButton.cpp
+++ sip/cpp/sip_corewxButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1497,7 +1497,7 @@ static PyObject *meth_wxButton_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1535,7 +1535,7 @@ static PyObject *meth_wxButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1673,7 +1673,7 @@ static PyObject *meth_wxButton_OnInternalIdle(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1860,7 +1860,7 @@ static PyObject *meth_wxButton_SetValidator(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2009,7 +2009,7 @@ static PyObject *meth_wxButton_DoEnable(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2043,7 +2043,7 @@ static PyObject *meth_wxButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2077,7 +2077,7 @@ static PyObject *meth_wxButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2894,7 +2894,7 @@ sipClassTypeDef sipTypeDef__core_wxButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Button,
diff --git a/sip/cpp/sip_corewxCaret.cpp b/sip/cpp/sip_corewxCaret.cpp
index 5f8bf641..3cff1cd7 100644
--- sip/cpp/sip_corewxCaret.cpp
+++ sip/cpp/sip_corewxCaret.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -862,7 +862,7 @@ sipClassTypeDef sipTypeDef__core_wxCaret = {
         SIP_TYPE_CLASS,
         sipNameNr_wxCaret,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Caret,
diff --git a/sip/cpp/sip_corewxCharBuffer.cpp b/sip/cpp/sip_corewxCharBuffer.cpp
index a3459046..cd18f355 100644
--- sip/cpp/sip_corewxCharBuffer.cpp
+++ sip/cpp/sip_corewxCharBuffer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -83,15 +83,15 @@ sipMappedTypeDef sipTypeDef__core_wxCharBuffer = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxCharBuffer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxCharBuffer,
     array_wxCharBuffer,
diff --git a/sip/cpp/sip_corewxCheckBox.cpp b/sip/cpp/sip_corewxCheckBox.cpp
index fc092713..50f99815 100644
--- sip/cpp/sip_corewxCheckBox.cpp
+++ sip/cpp/sip_corewxCheckBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1523,7 +1523,7 @@ static PyObject *meth_wxCheckBox_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxCheckBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCheckBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCheckBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1561,7 +1561,7 @@ static PyObject *meth_wxCheckBox_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxCheckBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCheckBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCheckBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1699,7 +1699,7 @@ static PyObject *meth_wxCheckBox_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxCheckBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxCheckBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxCheckBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxCheckBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1886,7 +1886,7 @@ static PyObject *meth_wxCheckBox_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxCheckBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxCheckBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxCheckBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxCheckBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2035,7 +2035,7 @@ static PyObject *meth_wxCheckBox_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxCheckBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCheckBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCheckBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2069,7 +2069,7 @@ static PyObject *meth_wxCheckBox_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxCheckBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCheckBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCheckBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2103,7 +2103,7 @@ static PyObject *meth_wxCheckBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxCheckBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCheckBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCheckBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2921,7 +2921,7 @@ sipClassTypeDef sipTypeDef__core_wxCheckBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCheckBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CheckBox,
diff --git a/sip/cpp/sip_corewxCheckListBox.cpp b/sip/cpp/sip_corewxCheckListBox.cpp
index 6aa8988c..aed5b72e 100644
--- sip/cpp/sip_corewxCheckListBox.cpp
+++ sip/cpp/sip_corewxCheckListBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1566,7 +1566,7 @@ static PyObject *meth_wxCheckListBox_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCheckListBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCheckListBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1604,7 +1604,7 @@ static PyObject *meth_wxCheckListBox_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCheckListBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCheckListBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1742,7 +1742,7 @@ static PyObject *meth_wxCheckListBox_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxCheckListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxCheckListBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1929,7 +1929,7 @@ static PyObject *meth_wxCheckListBox_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxCheckListBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxCheckListBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2078,7 +2078,7 @@ static PyObject *meth_wxCheckListBox_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCheckListBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCheckListBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2112,7 +2112,7 @@ static PyObject *meth_wxCheckListBox_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCheckListBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCheckListBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2146,7 +2146,7 @@ static PyObject *meth_wxCheckListBox_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCheckListBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCheckListBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2782,7 +2782,7 @@ static PyObject *meth_wxCheckListBox_GetCount(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_GetString, "GetString(self, n: int) -> object");
+PyDoc_STRVAR(doc_wxCheckListBox_GetString, "GetString(self, n: int) -> Any");
 
 extern "C" {static PyObject *meth_wxCheckListBox_GetString(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_GetString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2821,7 +2821,7 @@ static PyObject *meth_wxCheckListBox_GetString(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxCheckListBox_SetString, "SetString(self, n: int, s: object)");
+PyDoc_STRVAR(doc_wxCheckListBox_SetString, "SetString(self, n: int, s: Any)");
 
 extern "C" {static PyObject *meth_wxCheckListBox_SetString(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCheckListBox_SetString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3187,7 +3187,7 @@ sipClassTypeDef sipTypeDef__core_wxCheckListBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCheckListBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CheckListBox,
diff --git a/sip/cpp/sip_corewxChildFocusEvent.cpp b/sip/cpp/sip_corewxChildFocusEvent.cpp
index 9e4a4e9c..e7caae78 100644
--- sip/cpp/sip_corewxChildFocusEvent.cpp
+++ sip/cpp/sip_corewxChildFocusEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -123,7 +123,7 @@ static PyObject *meth_wxChildFocusEvent_GetWindow(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxChildFocusEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxChildFocusEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxChildFocusEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxChildFocusEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -281,7 +281,7 @@ sipClassTypeDef sipTypeDef__core_wxChildFocusEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxChildFocusEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ChildFocusEvent,
diff --git a/sip/cpp/sip_corewxChoice.cpp b/sip/cpp/sip_corewxChoice.cpp
index 0d235aa9..b126c07f 100644
--- sip/cpp/sip_corewxChoice.cpp
+++ sip/cpp/sip_corewxChoice.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1774,7 +1774,7 @@ static PyObject *meth_wxChoice_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxChoice_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxChoice_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxChoice_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoice_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1812,7 +1812,7 @@ static PyObject *meth_wxChoice_AddChild(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxChoice_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxChoice_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxChoice_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoice_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1950,7 +1950,7 @@ static PyObject *meth_wxChoice_OnInternalIdle(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxChoice_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxChoice_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxChoice_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxChoice_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2137,7 +2137,7 @@ static PyObject *meth_wxChoice_SetValidator(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxChoice_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxChoice_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxChoice_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxChoice_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2286,7 +2286,7 @@ static PyObject *meth_wxChoice_DoEnable(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxChoice_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxChoice_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxChoice_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoice_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2320,7 +2320,7 @@ static PyObject *meth_wxChoice_DoGetPosition(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxChoice_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxChoice_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxChoice_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoice_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2354,7 +2354,7 @@ static PyObject *meth_wxChoice_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxChoice_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxChoice_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxChoice_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoice_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3180,7 +3180,7 @@ sipClassTypeDef sipTypeDef__core_wxChoice = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxChoice,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Choice,
diff --git a/sip/cpp/sip_corewxChoicebook.cpp b/sip/cpp/sip_corewxChoicebook.cpp
index bc2fe407..4b960663 100644
--- sip/cpp/sip_corewxChoicebook.cpp
+++ sip/cpp/sip_corewxChoicebook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1586,7 +1586,7 @@ static PyObject *meth_wxChoicebook_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxChoicebook_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxChoicebook_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1624,7 +1624,7 @@ static PyObject *meth_wxChoicebook_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxChoicebook_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxChoicebook_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1762,7 +1762,7 @@ static PyObject *meth_wxChoicebook_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxChoicebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxChoicebook_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1949,7 +1949,7 @@ static PyObject *meth_wxChoicebook_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxChoicebook_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxChoicebook_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2098,7 +2098,7 @@ static PyObject *meth_wxChoicebook_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxChoicebook_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxChoicebook_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2132,7 +2132,7 @@ static PyObject *meth_wxChoicebook_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxChoicebook_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxChoicebook_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2166,7 +2166,7 @@ static PyObject *meth_wxChoicebook_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxChoicebook_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxChoicebook_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2848,7 +2848,7 @@ static PyObject *meth_wxChoicebook_SetPageImage(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_GetPageText, "GetPageText(self, nPage: int) -> object");
+PyDoc_STRVAR(doc_wxChoicebook_GetPageText, "GetPageText(self, nPage: int) -> Any");
 
 extern "C" {static PyObject *meth_wxChoicebook_GetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_GetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2887,7 +2887,7 @@ static PyObject *meth_wxChoicebook_GetPageText(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_SetPageText, "SetPageText(self, page: int, text: object) -> bool");
+PyDoc_STRVAR(doc_wxChoicebook_SetPageText, "SetPageText(self, page: int, text: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxChoicebook_SetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_SetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3042,7 +3042,7 @@ static PyObject *meth_wxChoicebook_ChangeSelection(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_HitTest, "HitTest(self, pt: Point) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxChoicebook_HitTest, "HitTest(self, pt: Point) -> (int, Optional[int])");
 
 extern "C" {static PyObject *meth_wxChoicebook_HitTest(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_HitTest(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3084,7 +3084,7 @@ static PyObject *meth_wxChoicebook_HitTest(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxChoicebook_InsertPage, "InsertPage(self, index: int, page: Window, text: object, select: bool = False, imageId: int = wxBookCtrlBase.NO_IMAGE) -> bool");
+PyDoc_STRVAR(doc_wxChoicebook_InsertPage, "InsertPage(self, index: int, page: Optional[Window], text: Any, select: bool = False, imageId: int = wxBookCtrlBase.NO_IMAGE) -> bool");
 
 extern "C" {static PyObject *meth_wxChoicebook_InsertPage(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxChoicebook_InsertPage(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3371,7 +3371,7 @@ sipClassTypeDef sipTypeDef__core_wxChoicebook = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxChoicebook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Choicebook,
diff --git a/sip/cpp/sip_corewxClassInfo.cpp b/sip/cpp/sip_corewxClassInfo.cpp
index a9aac20b..77746192 100644
--- sip/cpp/sip_corewxClassInfo.cpp
+++ sip/cpp/sip_corewxClassInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -374,7 +374,7 @@ sipClassTypeDef sipTypeDef__core_wxClassInfo = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxClassInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ClassInfo,
diff --git a/sip/cpp/sip_corewxClientDC.cpp b/sip/cpp/sip_corewxClientDC.cpp
index 916f526a..d393b44b 100644
--- sip/cpp/sip_corewxClientDC.cpp
+++ sip/cpp/sip_corewxClientDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -157,7 +157,7 @@ sipClassTypeDef sipTypeDef__core_wxClientDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxClientDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ClientDC,
diff --git a/sip/cpp/sip_corewxClientData.cpp b/sip/cpp/sip_corewxClientData.cpp
index 8dec45d6..aae9cc10 100644
--- sip/cpp/sip_corewxClientData.cpp
+++ sip/cpp/sip_corewxClientData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -80,15 +80,15 @@ sipMappedTypeDef sipTypeDef__core_wxClientData = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxClientData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxClientData,
     array_wxClientData,
diff --git a/sip/cpp/sip_corewxClientDataContainer.cpp b/sip/cpp/sip_corewxClientDataContainer.cpp
index 72b634d7..011a5fa7 100644
--- sip/cpp/sip_corewxClientDataContainer.cpp
+++ sip/cpp/sip_corewxClientDataContainer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -230,7 +230,7 @@ sipClassTypeDef sipTypeDef__core_wxClientDataContainer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxClientDataContainer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ClientDataContainer,
diff --git a/sip/cpp/sip_corewxClipboard.cpp b/sip/cpp/sip_corewxClipboard.cpp
index 4e5291f5..534c9eec 100644
--- sip/cpp/sip_corewxClipboard.cpp
+++ sip/cpp/sip_corewxClipboard.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -829,7 +829,7 @@ sipClassTypeDef sipTypeDef__core_wxClipboard = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxClipboard,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Clipboard,
diff --git a/sip/cpp/sip_corewxClipboardTextEvent.cpp b/sip/cpp/sip_corewxClipboardTextEvent.cpp
index d0534bf8..b6ea9a66 100644
--- sip/cpp/sip_corewxClipboardTextEvent.cpp
+++ sip/cpp/sip_corewxClipboardTextEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -86,7 +86,7 @@ sipwxClipboardTextEvent::~sipwxClipboardTextEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxClipboardTextEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxClipboardTextEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxClipboardTextEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxClipboardTextEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -241,7 +241,7 @@ sipClassTypeDef sipTypeDef__core_wxClipboardTextEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxClipboardTextEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ClipboardTextEvent,
diff --git a/sip/cpp/sip_corewxCloseEvent.cpp b/sip/cpp/sip_corewxCloseEvent.cpp
index 42d9b5c4..92f324c2 100644
--- sip/cpp/sip_corewxCloseEvent.cpp
+++ sip/cpp/sip_corewxCloseEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -311,7 +311,7 @@ static PyObject *meth_wxCloseEvent_GetVeto(PyObject *sipSelf, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxCloseEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxCloseEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxCloseEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxCloseEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -475,7 +475,7 @@ sipClassTypeDef sipTypeDef__core_wxCloseEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCloseEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CloseEvent,
diff --git a/sip/cpp/sip_corewxCollapsibleHeaderCtrl.cpp b/sip/cpp/sip_corewxCollapsibleHeaderCtrl.cpp
index 0426d473..c5c166df 100644
--- sip/cpp/sip_corewxCollapsibleHeaderCtrl.cpp
+++ sip/cpp/sip_corewxCollapsibleHeaderCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1341,7 +1341,7 @@ static PyObject *meth_wxCollapsibleHeaderCtrl_AcceptsFocusFromKeyboard(PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCollapsibleHeaderCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsibleHeaderCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1379,7 +1379,7 @@ static PyObject *meth_wxCollapsibleHeaderCtrl_AddChild(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCollapsibleHeaderCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsibleHeaderCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1517,7 +1517,7 @@ static PyObject *meth_wxCollapsibleHeaderCtrl_OnInternalIdle(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxCollapsibleHeaderCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsibleHeaderCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1704,7 +1704,7 @@ static PyObject *meth_wxCollapsibleHeaderCtrl_SetValidator(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxCollapsibleHeaderCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsibleHeaderCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1853,7 +1853,7 @@ static PyObject *meth_wxCollapsibleHeaderCtrl_DoEnable(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCollapsibleHeaderCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsibleHeaderCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1887,7 +1887,7 @@ static PyObject *meth_wxCollapsibleHeaderCtrl_DoGetPosition(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCollapsibleHeaderCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsibleHeaderCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1921,7 +1921,7 @@ static PyObject *meth_wxCollapsibleHeaderCtrl_DoGetSize(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCollapsibleHeaderCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCollapsibleHeaderCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsibleHeaderCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2728,7 +2728,7 @@ sipClassTypeDef sipTypeDef__core_wxCollapsibleHeaderCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCollapsibleHeaderCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CollapsibleHeaderCtrl,
diff --git a/sip/cpp/sip_corewxCollapsiblePane.cpp b/sip/cpp/sip_corewxCollapsiblePane.cpp
index 033ab181..8d51109f 100644
--- sip/cpp/sip_corewxCollapsiblePane.cpp
+++ sip/cpp/sip_corewxCollapsiblePane.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1443,7 +1443,7 @@ static PyObject *meth_wxCollapsiblePane_AcceptsFocusFromKeyboard(PyObject *sipSe
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsiblePane_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCollapsiblePane_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCollapsiblePane_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsiblePane_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1481,7 +1481,7 @@ static PyObject *meth_wxCollapsiblePane_AddChild(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsiblePane_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxCollapsiblePane_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxCollapsiblePane_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsiblePane_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1619,7 +1619,7 @@ static PyObject *meth_wxCollapsiblePane_OnInternalIdle(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsiblePane_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxCollapsiblePane_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxCollapsiblePane_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsiblePane_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1806,7 +1806,7 @@ static PyObject *meth_wxCollapsiblePane_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsiblePane_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxCollapsiblePane_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxCollapsiblePane_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsiblePane_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1955,7 +1955,7 @@ static PyObject *meth_wxCollapsiblePane_DoEnable(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsiblePane_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCollapsiblePane_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCollapsiblePane_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsiblePane_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1989,7 +1989,7 @@ static PyObject *meth_wxCollapsiblePane_DoGetPosition(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsiblePane_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCollapsiblePane_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCollapsiblePane_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsiblePane_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2023,7 +2023,7 @@ static PyObject *meth_wxCollapsiblePane_DoGetSize(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxCollapsiblePane_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxCollapsiblePane_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxCollapsiblePane_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCollapsiblePane_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2839,7 +2839,7 @@ sipClassTypeDef sipTypeDef__core_wxCollapsiblePane = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCollapsiblePane,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CollapsiblePane,
diff --git a/sip/cpp/sip_corewxCollapsiblePaneEvent.cpp b/sip/cpp/sip_corewxCollapsiblePaneEvent.cpp
index cdf7871e..1b42f506 100644
--- sip/cpp/sip_corewxCollapsiblePaneEvent.cpp
+++ sip/cpp/sip_corewxCollapsiblePaneEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -288,7 +288,7 @@ sipClassTypeDef sipTypeDef__core_wxCollapsiblePaneEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCollapsiblePaneEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CollapsiblePaneEvent,
diff --git a/sip/cpp/sip_corewxColour.cpp b/sip/cpp/sip_corewxColour.cpp
index 5df4bf9d..6d3611aa 100644
--- sip/cpp/sip_corewxColour.cpp
+++ sip/cpp/sip_corewxColour.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1615,7 +1615,7 @@ sipClassTypeDef sipTypeDef__core_wxColour = {
         SIP_TYPE_SCC|SIP_TYPE_ALLOW_NONE|SIP_TYPE_CLASS,
         sipNameNr_wxColour,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Colour,
diff --git a/sip/cpp/sip_corewxColourData.cpp b/sip/cpp/sip_corewxColourData.cpp
index 77bfdd93..d1d59470 100644
--- sip/cpp/sip_corewxColourData.cpp
+++ sip/cpp/sip_corewxColourData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -584,7 +584,7 @@ sipClassTypeDef sipTypeDef__core_wxColourData = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxColourData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ColourData,
diff --git a/sip/cpp/sip_corewxColourDatabase.cpp b/sip/cpp/sip_corewxColourDatabase.cpp
index 1de6bbee..b11dfc23 100644
--- sip/cpp/sip_corewxColourDatabase.cpp
+++ sip/cpp/sip_corewxColourDatabase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -247,7 +247,7 @@ sipClassTypeDef sipTypeDef__core_wxColourDatabase = {
         SIP_TYPE_CLASS,
         sipNameNr_wxColourDatabase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ColourDatabase,
diff --git a/sip/cpp/sip_corewxColourDialog.cpp b/sip/cpp/sip_corewxColourDialog.cpp
index 2e1fee50..aa11cf71 100644
--- sip/cpp/sip_corewxColourDialog.cpp
+++ sip/cpp/sip_corewxColourDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1341,7 +1341,7 @@ static PyObject *meth_wxColourDialog_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxColourDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxColourDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxColourDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1379,7 +1379,7 @@ static PyObject *meth_wxColourDialog_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxColourDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxColourDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxColourDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1517,7 +1517,7 @@ static PyObject *meth_wxColourDialog_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxColourDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxColourDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxColourDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxColourDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1704,7 +1704,7 @@ static PyObject *meth_wxColourDialog_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxColourDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxColourDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxColourDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxColourDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1853,7 +1853,7 @@ static PyObject *meth_wxColourDialog_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxColourDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxColourDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxColourDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1887,7 +1887,7 @@ static PyObject *meth_wxColourDialog_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxColourDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxColourDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxColourDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1921,7 +1921,7 @@ static PyObject *meth_wxColourDialog_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxColourDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxColourDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxColourDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2678,7 +2678,7 @@ sipClassTypeDef sipTypeDef__core_wxColourDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxColourDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ColourDialog,
diff --git a/sip/cpp/sip_corewxColourDialogEvent.cpp b/sip/cpp/sip_corewxColourDialogEvent.cpp
index debf002f..f163411d 100644
--- sip/cpp/sip_corewxColourDialogEvent.cpp
+++ sip/cpp/sip_corewxColourDialogEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -170,7 +170,7 @@ static PyObject *meth_wxColourDialogEvent_SetColour(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxColourDialogEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxColourDialogEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxColourDialogEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxColourDialogEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -355,7 +355,7 @@ sipClassTypeDef sipTypeDef__core_wxColourDialogEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxColourDialogEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ColourDialogEvent,
diff --git a/sip/cpp/sip_corewxColourPickerCtrl.cpp b/sip/cpp/sip_corewxColourPickerCtrl.cpp
index b81c239d..555d2069 100644
--- sip/cpp/sip_corewxColourPickerCtrl.cpp
+++ sip/cpp/sip_corewxColourPickerCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1571,7 +1571,7 @@ static PyObject *meth_wxColourPickerCtrl_AcceptsFocusFromKeyboard(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxColourPickerCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxColourPickerCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxColourPickerCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourPickerCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1609,7 +1609,7 @@ static PyObject *meth_wxColourPickerCtrl_AddChild(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxColourPickerCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxColourPickerCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxColourPickerCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourPickerCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1747,7 +1747,7 @@ static PyObject *meth_wxColourPickerCtrl_OnInternalIdle(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxColourPickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxColourPickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxColourPickerCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxColourPickerCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1934,7 +1934,7 @@ static PyObject *meth_wxColourPickerCtrl_SetValidator(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxColourPickerCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxColourPickerCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxColourPickerCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxColourPickerCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2083,7 +2083,7 @@ static PyObject *meth_wxColourPickerCtrl_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxColourPickerCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxColourPickerCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxColourPickerCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourPickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2117,7 +2117,7 @@ static PyObject *meth_wxColourPickerCtrl_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxColourPickerCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxColourPickerCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxColourPickerCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourPickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2151,7 +2151,7 @@ static PyObject *meth_wxColourPickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxColourPickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxColourPickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxColourPickerCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxColourPickerCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3033,7 +3033,7 @@ sipClassTypeDef sipTypeDef__core_wxColourPickerCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxColourPickerCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ColourPickerCtrl,
diff --git a/sip/cpp/sip_corewxColourPickerEvent.cpp b/sip/cpp/sip_corewxColourPickerEvent.cpp
index ce52ee47..2830cbc0 100644
--- sip/cpp/sip_corewxColourPickerEvent.cpp
+++ sip/cpp/sip_corewxColourPickerEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -169,7 +169,7 @@ static PyObject *meth_wxColourPickerEvent_SetColour(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxColourPickerEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxColourPickerEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxColourPickerEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxColourPickerEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -355,7 +355,7 @@ sipClassTypeDef sipTypeDef__core_wxColourPickerEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxColourPickerEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ColourPickerEvent,
diff --git a/sip/cpp/sip_corewxComboBox.cpp b/sip/cpp/sip_corewxComboBox.cpp
index 689d2873..fb3b56c6 100644
--- sip/cpp/sip_corewxComboBox.cpp
+++ sip/cpp/sip_corewxComboBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2203,7 +2203,7 @@ static PyObject *meth_wxComboBox_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxComboBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxComboBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxComboBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2241,7 +2241,7 @@ static PyObject *meth_wxComboBox_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxComboBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxComboBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxComboBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2379,7 +2379,7 @@ static PyObject *meth_wxComboBox_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxComboBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxComboBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxComboBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxComboBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2566,7 +2566,7 @@ static PyObject *meth_wxComboBox_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxComboBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxComboBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxComboBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxComboBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2715,7 +2715,7 @@ static PyObject *meth_wxComboBox_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxComboBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxComboBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxComboBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2749,7 +2749,7 @@ static PyObject *meth_wxComboBox_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxComboBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxComboBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxComboBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2783,7 +2783,7 @@ static PyObject *meth_wxComboBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxComboBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxComboBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxComboBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3624,7 +3624,7 @@ sipClassTypeDef sipTypeDef__core_wxComboBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxComboBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ComboBox,
diff --git a/sip/cpp/sip_corewxComboCtrl.cpp b/sip/cpp/sip_corewxComboCtrl.cpp
index b724dc65..da1e69e6 100644
--- sip/cpp/sip_corewxComboCtrl.cpp
+++ sip/cpp/sip_corewxComboCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3639,7 +3639,7 @@ static PyObject *meth_wxComboCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxComboCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxComboCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxComboCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3677,7 +3677,7 @@ static PyObject *meth_wxComboCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxComboCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxComboCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxComboCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3815,7 +3815,7 @@ static PyObject *meth_wxComboCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxComboCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxComboCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxComboCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxComboCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -4002,7 +4002,7 @@ static PyObject *meth_wxComboCtrl_SetValidator(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxComboCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxComboCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxComboCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxComboCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -4151,7 +4151,7 @@ static PyObject *meth_wxComboCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxComboCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxComboCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxComboCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4185,7 +4185,7 @@ static PyObject *meth_wxComboCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxComboCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxComboCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxComboCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4219,7 +4219,7 @@ static PyObject *meth_wxComboCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxComboCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxComboCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxComboCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxComboCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5230,7 +5230,7 @@ sipClassTypeDef sipTypeDef__core_wxComboCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxComboCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ComboCtrl,
diff --git a/sip/cpp/sip_corewxComboCtrlFeatures.cpp b/sip/cpp/sip_corewxComboCtrlFeatures.cpp
index d2067701..de46ecd7 100644
--- sip/cpp/sip_corewxComboCtrlFeatures.cpp
+++ sip/cpp/sip_corewxComboCtrlFeatures.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -109,7 +109,7 @@ sipClassTypeDef sipTypeDef__core_wxComboCtrlFeatures = {
         SIP_TYPE_CLASS,
         sipNameNr_wxComboCtrlFeatures,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ComboCtrlFeatures,
diff --git a/sip/cpp/sip_corewxComboPopup.cpp b/sip/cpp/sip_corewxComboPopup.cpp
index ce08b4ec..3b18f5a3 100644
--- sip/cpp/sip_corewxComboPopup.cpp
+++ sip/cpp/sip_corewxComboPopup.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1095,7 +1095,7 @@ sipClassTypeDef sipTypeDef__core_wxComboPopup = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxComboPopup,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ComboPopup,
diff --git a/sip/cpp/sip_corewxCommand.cpp b/sip/cpp/sip_corewxCommand.cpp
index 833d85e9..3c9a597d 100644
--- sip/cpp/sip_corewxCommand.cpp
+++ sip/cpp/sip_corewxCommand.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -384,7 +384,7 @@ sipClassTypeDef sipTypeDef__core_wxCommand = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCommand,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Command,
diff --git a/sip/cpp/sip_corewxCommandEvent.cpp b/sip/cpp/sip_corewxCommandEvent.cpp
index 986744cc..1b8402de 100644
--- sip/cpp/sip_corewxCommandEvent.cpp
+++ sip/cpp/sip_corewxCommandEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -498,7 +498,7 @@ static PyObject *meth_wxCommandEvent_SetString(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxCommandEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxCommandEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxCommandEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxCommandEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -670,7 +670,7 @@ sipClassTypeDef sipTypeDef__core_wxCommandEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCommandEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CommandEvent,
diff --git a/sip/cpp/sip_corewxCommandList.cpp b/sip/cpp/sip_corewxCommandList.cpp
index 34bd1ad9..1abcc16d 100644
--- sip/cpp/sip_corewxCommandList.cpp
+++ sip/cpp/sip_corewxCommandList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -34,7 +34,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxCommandList_index, "index(self, obj: Command) -> int");
+PyDoc_STRVAR(doc_wxCommandList_index, "index(self, obj: Optional[Command]) -> int");
 
 extern "C" {static PyObject *meth_wxCommandList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCommandList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -303,7 +303,7 @@ sipClassTypeDef sipTypeDef__core_wxCommandList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxCommandList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CommandList,
diff --git a/sip/cpp/sip_corewxCommandList_iterator.cpp b/sip/cpp/sip_corewxCommandList_iterator.cpp
index 5f2bf0a0..ea5ff65e 100644
--- sip/cpp/sip_corewxCommandList_iterator.cpp
+++ sip/cpp/sip_corewxCommandList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__core_wxCommandList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxCommandList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CommandList_iterator,
diff --git a/sip/cpp/sip_corewxCommandProcessor.cpp b/sip/cpp/sip_corewxCommandProcessor.cpp
index 090bdf25..aab4d95d 100644
--- sip/cpp/sip_corewxCommandProcessor.cpp
+++ sip/cpp/sip_corewxCommandProcessor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1178,7 +1178,7 @@ sipClassTypeDef sipTypeDef__core_wxCommandProcessor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCommandProcessor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CommandProcessor,
diff --git a/sip/cpp/sip_corewxConfig.cpp b/sip/cpp/sip_corewxConfig.cpp
index abc319bc..1cd64fa2 100644
--- sip/cpp/sip_corewxConfig.cpp
+++ sip/cpp/sip_corewxConfig.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -258,7 +258,7 @@ bool sipwxConfig::DeleteGroup(const  ::wxString& key)
 }
 
 
-PyDoc_STRVAR(doc_wxConfig_GetPath, "GetPath(self) -> object");
+PyDoc_STRVAR(doc_wxConfig_GetPath, "GetPath(self) -> Any");
 
 extern "C" {static PyObject *meth_wxConfig_GetPath(PyObject *, PyObject *);}
 static PyObject *meth_wxConfig_GetPath(PyObject *sipSelf, PyObject *sipArgs)
@@ -292,7 +292,7 @@ static PyObject *meth_wxConfig_GetPath(PyObject *sipSelf, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxConfig_SetPath, "SetPath(self, strPath: object)");
+PyDoc_STRVAR(doc_wxConfig_SetPath, "SetPath(self, strPath: Any)");
 
 extern "C" {static PyObject *meth_wxConfig_SetPath(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxConfig_SetPath(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -410,7 +410,7 @@ static PyObject *meth_wxConfig_GetNumberOfGroups(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxConfig_HasEntry, "HasEntry(self, strName: object) -> bool");
+PyDoc_STRVAR(doc_wxConfig_HasEntry, "HasEntry(self, strName: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxConfig_HasEntry(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxConfig_HasEntry(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -451,7 +451,7 @@ static PyObject *meth_wxConfig_HasEntry(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxConfig_HasGroup, "HasGroup(self, strName: object) -> bool");
+PyDoc_STRVAR(doc_wxConfig_HasGroup, "HasGroup(self, strName: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxConfig_HasGroup(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxConfig_HasGroup(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -531,7 +531,7 @@ static PyObject *meth_wxConfig_Flush(PyObject *sipSelf, PyObject *sipArgs, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxConfig_RenameEntry, "RenameEntry(self, oldName: object, newName: object) -> bool");
+PyDoc_STRVAR(doc_wxConfig_RenameEntry, "RenameEntry(self, oldName: Any, newName: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxConfig_RenameEntry(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxConfig_RenameEntry(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -576,7 +576,7 @@ static PyObject *meth_wxConfig_RenameEntry(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxConfig_RenameGroup, "RenameGroup(self, oldName: object, newName: object) -> bool");
+PyDoc_STRVAR(doc_wxConfig_RenameGroup, "RenameGroup(self, oldName: Any, newName: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxConfig_RenameGroup(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxConfig_RenameGroup(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -655,7 +655,7 @@ static PyObject *meth_wxConfig_DeleteAll(PyObject *sipSelf, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxConfig_DeleteEntry, "DeleteEntry(self, key: object, bDeleteGroupIfEmpty: bool = True) -> bool");
+PyDoc_STRVAR(doc_wxConfig_DeleteEntry, "DeleteEntry(self, key: Any, bDeleteGroupIfEmpty: bool = True) -> bool");
 
 extern "C" {static PyObject *meth_wxConfig_DeleteEntry(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxConfig_DeleteEntry(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -698,7 +698,7 @@ static PyObject *meth_wxConfig_DeleteEntry(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxConfig_DeleteGroup, "DeleteGroup(self, key: object) -> bool");
+PyDoc_STRVAR(doc_wxConfig_DeleteGroup, "DeleteGroup(self, key: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxConfig_DeleteGroup(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxConfig_DeleteGroup(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -866,7 +866,7 @@ static PyMethodDef methods_wxConfig[] = {
     {sipName_SetPath, SIP_MLMETH_CAST(meth_wxConfig_SetPath), METH_VARARGS|METH_KEYWORDS, doc_wxConfig_SetPath}
 };
 
-PyDoc_STRVAR(doc_wxConfig, "\1Config(appName: object = wxEmptyString, vendorName: object = wxEmptyString, localFilename: object = wxEmptyString, globalFilename: object = wxEmptyString, style: int = wxCONFIG_USE_LOCAL_FILE|wxCONFIG_USE_GLOBAL_FILE)");
+PyDoc_STRVAR(doc_wxConfig, "\1Config(appName: Any = wxEmptyString, vendorName: Any = wxEmptyString, localFilename: Any = wxEmptyString, globalFilename: Any = wxEmptyString, style: int = wxCONFIG_USE_LOCAL_FILE|wxCONFIG_USE_GLOBAL_FILE)");
 
 
 sipClassTypeDef sipTypeDef__core_wxConfig = {
@@ -877,7 +877,7 @@ sipClassTypeDef sipTypeDef__core_wxConfig = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxConfig,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Config,
diff --git a/sip/cpp/sip_corewxConfigBase.cpp b/sip/cpp/sip_corewxConfigBase.cpp
index 3b1b87c8..7d8ed178 100644
--- sip/cpp/sip_corewxConfigBase.cpp
+++ sip/cpp/sip_corewxConfigBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1880,7 +1880,7 @@ sipClassTypeDef sipTypeDef__core_wxConfigBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxConfigBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ConfigBase,
diff --git a/sip/cpp/sip_corewxConfigPathChanger.cpp b/sip/cpp/sip_corewxConfigPathChanger.cpp
index 5bd5403c..b6c6305b 100644
--- sip/cpp/sip_corewxConfigPathChanger.cpp
+++ sip/cpp/sip_corewxConfigPathChanger.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -161,7 +161,7 @@ sipClassTypeDef sipTypeDef__core_wxConfigPathChanger = {
         SIP_TYPE_CLASS,
         sipNameNr_wxConfigPathChanger,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ConfigPathChanger,
diff --git a/sip/cpp/sip_corewxContextHelp.cpp b/sip/cpp/sip_corewxContextHelp.cpp
index 9d4c28e1..b129d2a1 100644
--- sip/cpp/sip_corewxContextHelp.cpp
+++ sip/cpp/sip_corewxContextHelp.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -262,7 +262,7 @@ sipClassTypeDef sipTypeDef__core_wxContextHelp = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxContextHelp,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ContextHelp,
diff --git a/sip/cpp/sip_corewxContextHelpButton.cpp b/sip/cpp/sip_corewxContextHelpButton.cpp
index 4d2761eb..6beb95be 100644
--- sip/cpp/sip_corewxContextHelpButton.cpp
+++ sip/cpp/sip_corewxContextHelpButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1191,7 +1191,7 @@ static PyObject *meth_wxContextHelpButton_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxContextHelpButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxContextHelpButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxContextHelpButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxContextHelpButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1229,7 +1229,7 @@ static PyObject *meth_wxContextHelpButton_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxContextHelpButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxContextHelpButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxContextHelpButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxContextHelpButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1367,7 +1367,7 @@ static PyObject *meth_wxContextHelpButton_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxContextHelpButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxContextHelpButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxContextHelpButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxContextHelpButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1554,7 +1554,7 @@ static PyObject *meth_wxContextHelpButton_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxContextHelpButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxContextHelpButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxContextHelpButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxContextHelpButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1703,7 +1703,7 @@ static PyObject *meth_wxContextHelpButton_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxContextHelpButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxContextHelpButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxContextHelpButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxContextHelpButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1737,7 +1737,7 @@ static PyObject *meth_wxContextHelpButton_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxContextHelpButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxContextHelpButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxContextHelpButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxContextHelpButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1771,7 +1771,7 @@ static PyObject *meth_wxContextHelpButton_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxContextHelpButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxContextHelpButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxContextHelpButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxContextHelpButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2532,7 +2532,7 @@ sipClassTypeDef sipTypeDef__core_wxContextHelpButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxContextHelpButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ContextHelpButton,
diff --git a/sip/cpp/sip_corewxContextMenuEvent.cpp b/sip/cpp/sip_corewxContextMenuEvent.cpp
index 5935c32f..be0a47f6 100644
--- sip/cpp/sip_corewxContextMenuEvent.cpp
+++ sip/cpp/sip_corewxContextMenuEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -164,7 +164,7 @@ static PyObject *meth_wxContextMenuEvent_SetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxContextMenuEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxContextMenuEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxContextMenuEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxContextMenuEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -329,7 +329,7 @@ sipClassTypeDef sipTypeDef__core_wxContextMenuEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxContextMenuEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ContextMenuEvent,
diff --git a/sip/cpp/sip_corewxControl.cpp b/sip/cpp/sip_corewxControl.cpp
index de57a4e4..14d0ed27 100644
--- sip/cpp/sip_corewxControl.cpp
+++ sip/cpp/sip_corewxControl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1768,7 +1768,7 @@ static PyObject *meth_wxControl_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxControl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxControl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxControl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxControl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1806,7 +1806,7 @@ static PyObject *meth_wxControl_AddChild(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxControl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxControl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxControl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxControl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1944,7 +1944,7 @@ static PyObject *meth_wxControl_OnInternalIdle(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxControl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxControl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxControl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxControl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2131,7 +2131,7 @@ static PyObject *meth_wxControl_SetValidator(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxControl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxControl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxControl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxControl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2280,7 +2280,7 @@ static PyObject *meth_wxControl_DoEnable(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxControl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxControl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxControl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxControl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2314,7 +2314,7 @@ static PyObject *meth_wxControl_DoGetPosition(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxControl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxControl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxControl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxControl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2348,7 +2348,7 @@ static PyObject *meth_wxControl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxControl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxControl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxControl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxControl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3164,7 +3164,7 @@ sipClassTypeDef sipTypeDef__core_wxControl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxControl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Control,
diff --git a/sip/cpp/sip_corewxControlWithItems.cpp b/sip/cpp/sip_corewxControlWithItems.cpp
index 42aa3059..e1ef0656 100644
--- sip/cpp/sip_corewxControlWithItems.cpp
+++ sip/cpp/sip_corewxControlWithItems.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -102,7 +102,7 @@ sipClassTypeDef sipTypeDef__core_wxControlWithItems = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxControlWithItems,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ControlWithItems,
diff --git a/sip/cpp/sip_corewxCursor.cpp b/sip/cpp/sip_corewxCursor.cpp
index 0a8feef6..8c3ab968 100644
--- sip/cpp/sip_corewxCursor.cpp
+++ sip/cpp/sip_corewxCursor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -628,7 +628,7 @@ sipClassTypeDef sipTypeDef__core_wxCursor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCursor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Cursor,
diff --git a/sip/cpp/sip_corewxCustomDataObject.cpp b/sip/cpp/sip_corewxCustomDataObject.cpp
index 642de2f9..9d942f0f 100644
--- sip/cpp/sip_corewxCustomDataObject.cpp
+++ sip/cpp/sip_corewxCustomDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -57,7 +57,7 @@ private:
     sipwxCustomDataObject(const sipwxCustomDataObject &);
     sipwxCustomDataObject &operator = (const sipwxCustomDataObject &);
 
-    char sipPyMethods[7];
+    char sipPyMethods[6];
 };
 
 sipwxCustomDataObject::sipwxCustomDataObject(const ::wxDataFormat& format): ::wxCustomDataObject(format), sipPySelf(SIP_NULLPTR)
@@ -460,7 +460,7 @@ static PyObject *meth_wxCustomDataObject_GetDataSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxCustomDataObject_GetDataHere, "GetDataHere(self, buf: wx.siplib.voidptr) -> bool");
+PyDoc_STRVAR(doc_wxCustomDataObject_GetDataHere, "GetDataHere(self, buf: Optional[wx.siplib.voidptr]) -> bool");
 
 extern "C" {static PyObject *meth_wxCustomDataObject_GetDataHere(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCustomDataObject_GetDataHere(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -644,7 +644,7 @@ sipClassTypeDef sipTypeDef__core_wxCustomDataObject = {
         SIP_TYPE_CLASS,
         sipNameNr_wxCustomDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CustomDataObject,
diff --git a/sip/cpp/sip_corewxDC.cpp b/sip/cpp/sip_corewxDC.cpp
index d26c78dc..8195bbd8 100644
--- sip/cpp/sip_corewxDC.cpp
+++ sip/cpp/sip_corewxDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -6672,7 +6672,7 @@ sipClassTypeDef sipTypeDef__core_wxDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DC,
diff --git a/sip/cpp/sip_corewxDCBrushChanger.cpp b/sip/cpp/sip_corewxDCBrushChanger.cpp
index c72bf8d1..eb9f7fbb 100644
--- sip/cpp/sip_corewxDCBrushChanger.cpp
+++ sip/cpp/sip_corewxDCBrushChanger.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -85,7 +85,7 @@ sipClassTypeDef sipTypeDef__core_wxDCBrushChanger = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDCBrushChanger,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DCBrushChanger,
diff --git a/sip/cpp/sip_corewxDCClipper.cpp b/sip/cpp/sip_corewxDCClipper.cpp
index aeca57a0..a1ee2580 100644
--- sip/cpp/sip_corewxDCClipper.cpp
+++ sip/cpp/sip_corewxDCClipper.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -149,7 +149,7 @@ sipClassTypeDef sipTypeDef__core_wxDCClipper = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDCClipper,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DCClipper,
diff --git a/sip/cpp/sip_corewxDCFontChanger.cpp b/sip/cpp/sip_corewxDCFontChanger.cpp
index 0b97c5a4..d5f5d28e 100644
--- sip/cpp/sip_corewxDCFontChanger.cpp
+++ sip/cpp/sip_corewxDCFontChanger.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -155,7 +155,7 @@ sipClassTypeDef sipTypeDef__core_wxDCFontChanger = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDCFontChanger,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DCFontChanger,
diff --git a/sip/cpp/sip_corewxDCOverlay.cpp b/sip/cpp/sip_corewxDCOverlay.cpp
index 03b52880..1a2d214a 100644
--- sip/cpp/sip_corewxDCOverlay.cpp
+++ sip/cpp/sip_corewxDCOverlay.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -203,7 +203,7 @@ sipClassTypeDef sipTypeDef__core_wxDCOverlay = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDCOverlay,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DCOverlay,
diff --git a/sip/cpp/sip_corewxDCPenChanger.cpp b/sip/cpp/sip_corewxDCPenChanger.cpp
index d7a68ea1..b091f5c8 100644
--- sip/cpp/sip_corewxDCPenChanger.cpp
+++ sip/cpp/sip_corewxDCPenChanger.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -86,7 +86,7 @@ sipClassTypeDef sipTypeDef__core_wxDCPenChanger = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDCPenChanger,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DCPenChanger,
diff --git a/sip/cpp/sip_corewxDCTextBgColourChanger.cpp b/sip/cpp/sip_corewxDCTextBgColourChanger.cpp
index 69ddd491..8e516c57 100644
--- sip/cpp/sip_corewxDCTextBgColourChanger.cpp
+++ sip/cpp/sip_corewxDCTextBgColourChanger.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -159,7 +159,7 @@ sipClassTypeDef sipTypeDef__core_wxDCTextBgColourChanger = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDCTextBgColourChanger,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DCTextBgColourChanger,
diff --git a/sip/cpp/sip_corewxDCTextBgModeChanger.cpp b/sip/cpp/sip_corewxDCTextBgModeChanger.cpp
index 921cfd1e..62cb52e8 100644
--- sip/cpp/sip_corewxDCTextBgModeChanger.cpp
+++ sip/cpp/sip_corewxDCTextBgModeChanger.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -46,7 +46,7 @@ sipClassTypeDef sipTypeDef__core_wxDCTextBgModeChanger = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDCTextBgModeChanger,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DCTextBgModeChanger,
diff --git a/sip/cpp/sip_corewxDCTextColourChanger.cpp b/sip/cpp/sip_corewxDCTextColourChanger.cpp
index 3b94fa71..6e62c1bc 100644
--- sip/cpp/sip_corewxDCTextColourChanger.cpp
+++ sip/cpp/sip_corewxDCTextColourChanger.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -159,7 +159,7 @@ sipClassTypeDef sipTypeDef__core_wxDCTextColourChanger = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDCTextColourChanger,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DCTextColourChanger,
diff --git a/sip/cpp/sip_corewxDPIChangedEvent.cpp b/sip/cpp/sip_corewxDPIChangedEvent.cpp
index 26e1d4a4..c6fba263 100644
--- sip/cpp/sip_corewxDPIChangedEvent.cpp
+++ sip/cpp/sip_corewxDPIChangedEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -279,7 +279,7 @@ static PyObject *meth_wxDPIChangedEvent_ScaleY(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxDPIChangedEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxDPIChangedEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxDPIChangedEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxDPIChangedEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -425,7 +425,7 @@ sipClassTypeDef sipTypeDef__core_wxDPIChangedEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDPIChangedEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DPIChangedEvent,
diff --git a/sip/cpp/sip_corewxDashCArrayHolder.cpp b/sip/cpp/sip_corewxDashCArrayHolder.cpp
index a7937393..f44f7703 100644
--- sip/cpp/sip_corewxDashCArrayHolder.cpp
+++ sip/cpp/sip_corewxDashCArrayHolder.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -72,7 +72,7 @@ sipClassTypeDef sipTypeDef__core_wxDashCArrayHolder = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDashCArrayHolder,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DashCArrayHolder,
diff --git a/sip/cpp/sip_corewxDataFormat.cpp b/sip/cpp/sip_corewxDataFormat.cpp
index 6e808e31..cf54c48f 100644
--- sip/cpp/sip_corewxDataFormat.cpp
+++ sip/cpp/sip_corewxDataFormat.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -432,7 +432,7 @@ sipClassTypeDef sipTypeDef__core_wxDataFormat = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataFormat,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataFormat,
diff --git a/sip/cpp/sip_corewxDataObject.cpp b/sip/cpp/sip_corewxDataObject.cpp
index 3c794097..f0d7bd06 100644
--- sip/cpp/sip_corewxDataObject.cpp
+++ sip/cpp/sip_corewxDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -632,7 +632,7 @@ sipClassTypeDef sipTypeDef__core_wxDataObject = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataObject,
diff --git a/sip/cpp/sip_corewxDataObjectComposite.cpp b/sip/cpp/sip_corewxDataObjectComposite.cpp
index 6edd6bb9..098cbd33 100644
--- sip/cpp/sip_corewxDataObjectComposite.cpp
+++ sip/cpp/sip_corewxDataObjectComposite.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -552,7 +552,7 @@ sipClassTypeDef sipTypeDef__core_wxDataObjectComposite = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataObjectComposite,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataObjectComposite,
diff --git a/sip/cpp/sip_corewxDataObjectSimple.cpp b/sip/cpp/sip_corewxDataObjectSimple.cpp
index 883561f4..5669adc6 100644
--- sip/cpp/sip_corewxDataObjectSimple.cpp
+++ sip/cpp/sip_corewxDataObjectSimple.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -681,7 +681,7 @@ sipClassTypeDef sipTypeDef__core_wxDataObjectSimple = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataObjectSimple,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataObjectSimple,
diff --git a/sip/cpp/sip_corewxDateSpan.cpp b/sip/cpp/sip_corewxDateSpan.cpp
index 13cee3db..2f866c68 100644
--- sip/cpp/sip_corewxDateSpan.cpp
+++ sip/cpp/sip_corewxDateSpan.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1374,7 +1374,7 @@ sipClassTypeDef sipTypeDef__core_wxDateSpan = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDateSpan,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DateSpan,
diff --git a/sip/cpp/sip_corewxDateTime.cpp b/sip/cpp/sip_corewxDateTime.cpp
index 31b4895e..44fafe37 100644
--- sip/cpp/sip_corewxDateTime.cpp
+++ sip/cpp/sip_corewxDateTime.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -5723,7 +5723,7 @@ sipClassTypeDef sipTypeDef__core_wxDateTime = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDateTime,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DateTime,
diff --git a/sip/cpp/sip_corewxDateTimeTimeZone.cpp b/sip/cpp/sip_corewxDateTimeTimeZone.cpp
index bfbd9d6f..c1d8f342 100644
--- sip/cpp/sip_corewxDateTimeTimeZone.cpp
+++ sip/cpp/sip_corewxDateTimeTimeZone.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -261,7 +261,7 @@ sipClassTypeDef sipTypeDef__core_wxDateTime_TimeZone = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDateTime__TimeZone,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TimeZone,
diff --git a/sip/cpp/sip_corewxDateTimeTm.cpp b/sip/cpp/sip_corewxDateTimeTm.cpp
index 8046b951..1f110590 100644
--- sip/cpp/sip_corewxDateTimeTm.cpp
+++ sip/cpp/sip_corewxDateTimeTm.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -419,7 +419,7 @@ sipClassTypeDef sipTypeDef__core_wxDateTime_Tm = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDateTime__Tm,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Tm,
diff --git a/sip/cpp/sip_corewxDelegateRendererNative.cpp b/sip/cpp/sip_corewxDelegateRendererNative.cpp
index 2b03aaff..ad47c72a 100644
--- sip/cpp/sip_corewxDelegateRendererNative.cpp
+++ sip/cpp/sip_corewxDelegateRendererNative.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1571,7 +1571,7 @@ sipClassTypeDef sipTypeDef__core_wxDelegateRendererNative = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDelegateRendererNative,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DelegateRendererNative,
diff --git a/sip/cpp/sip_corewxDialog.cpp b/sip/cpp/sip_corewxDialog.cpp
index 0c1c517d..9f0c31a6 100644
--- sip/cpp/sip_corewxDialog.cpp
+++ sip/cpp/sip_corewxDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2703,7 +2703,7 @@ static PyObject *meth_wxDialog_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2741,7 +2741,7 @@ static PyObject *meth_wxDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2879,7 +2879,7 @@ static PyObject *meth_wxDialog_OnInternalIdle(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3066,7 +3066,7 @@ static PyObject *meth_wxDialog_SetValidator(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3215,7 +3215,7 @@ static PyObject *meth_wxDialog_DoEnable(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3249,7 +3249,7 @@ static PyObject *meth_wxDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3283,7 +3283,7 @@ static PyObject *meth_wxDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4136,7 +4136,7 @@ sipClassTypeDef sipTypeDef__core_wxDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Dialog,
diff --git a/sip/cpp/sip_corewxDialogLayoutAdapter.cpp b/sip/cpp/sip_corewxDialogLayoutAdapter.cpp
index aeac4e76..4e090c77 100644
--- sip/cpp/sip_corewxDialogLayoutAdapter.cpp
+++ sip/cpp/sip_corewxDialogLayoutAdapter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -270,7 +270,7 @@ sipClassTypeDef sipTypeDef__core_wxDialogLayoutAdapter = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDialogLayoutAdapter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DialogLayoutAdapter,
diff --git a/sip/cpp/sip_corewxDirDialog.cpp b/sip/cpp/sip_corewxDirDialog.cpp
index a7b81544..9ef53cb3 100644
--- sip/cpp/sip_corewxDirDialog.cpp
+++ sip/cpp/sip_corewxDirDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1454,7 +1454,7 @@ static PyObject *meth_wxDirDialog_AcceptsFocusFromKeyboard(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxDirDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDirDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDirDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1492,7 +1492,7 @@ static PyObject *meth_wxDirDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxDirDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDirDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDirDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1630,7 +1630,7 @@ static PyObject *meth_wxDirDialog_OnInternalIdle(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxDirDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxDirDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxDirDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxDirDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1817,7 +1817,7 @@ static PyObject *meth_wxDirDialog_SetValidator(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxDirDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxDirDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxDirDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxDirDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1966,7 +1966,7 @@ static PyObject *meth_wxDirDialog_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxDirDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2000,7 +2000,7 @@ static PyObject *meth_wxDirDialog_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxDirDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2034,7 +2034,7 @@ static PyObject *meth_wxDirDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxDirDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2818,7 +2818,7 @@ sipClassTypeDef sipTypeDef__core_wxDirDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDirDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DirDialog,
diff --git a/sip/cpp/sip_corewxDirFilterListCtrl.cpp b/sip/cpp/sip_corewxDirFilterListCtrl.cpp
index eed3674e..c04092ef 100644
--- sip/cpp/sip_corewxDirFilterListCtrl.cpp
+++ sip/cpp/sip_corewxDirFilterListCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1119,7 +1119,7 @@ static PyObject *meth_wxDirFilterListCtrl_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxDirFilterListCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirFilterListCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirFilterListCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirFilterListCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1153,7 +1153,7 @@ static PyObject *meth_wxDirFilterListCtrl_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxDirFilterListCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirFilterListCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirFilterListCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirFilterListCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1187,7 +1187,7 @@ static PyObject *meth_wxDirFilterListCtrl_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDirFilterListCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirFilterListCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirFilterListCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirFilterListCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2041,7 +2041,7 @@ sipClassTypeDef sipTypeDef__core_wxDirFilterListCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDirFilterListCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DirFilterListCtrl,
diff --git a/sip/cpp/sip_corewxDirPickerCtrl.cpp b/sip/cpp/sip_corewxDirPickerCtrl.cpp
index 53729ddc..70b3adc0 100644
--- sip/cpp/sip_corewxDirPickerCtrl.cpp
+++ sip/cpp/sip_corewxDirPickerCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1589,7 +1589,7 @@ static PyObject *meth_wxDirPickerCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxDirPickerCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDirPickerCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDirPickerCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirPickerCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1627,7 +1627,7 @@ static PyObject *meth_wxDirPickerCtrl_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxDirPickerCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDirPickerCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDirPickerCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirPickerCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1765,7 +1765,7 @@ static PyObject *meth_wxDirPickerCtrl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDirPickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxDirPickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxDirPickerCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxDirPickerCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1952,7 +1952,7 @@ static PyObject *meth_wxDirPickerCtrl_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxDirPickerCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxDirPickerCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxDirPickerCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxDirPickerCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2101,7 +2101,7 @@ static PyObject *meth_wxDirPickerCtrl_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxDirPickerCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirPickerCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirPickerCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirPickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2135,7 +2135,7 @@ static PyObject *meth_wxDirPickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDirPickerCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirPickerCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirPickerCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirPickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2169,7 +2169,7 @@ static PyObject *meth_wxDirPickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxDirPickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDirPickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDirPickerCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDirPickerCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3057,7 +3057,7 @@ sipClassTypeDef sipTypeDef__core_wxDirPickerCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDirPickerCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DirPickerCtrl,
diff --git a/sip/cpp/sip_corewxDisplay.cpp b/sip/cpp/sip_corewxDisplay.cpp
index 2ccd704e..783af0c3 100644
--- sip/cpp/sip_corewxDisplay.cpp
+++ sip/cpp/sip_corewxDisplay.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -677,7 +677,7 @@ sipClassTypeDef sipTypeDef__core_wxDisplay = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDisplay,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Display,
diff --git a/sip/cpp/sip_corewxDisplayChangedEvent.cpp b/sip/cpp/sip_corewxDisplayChangedEvent.cpp
index 80a9f7fa..11096596 100644
--- sip/cpp/sip_corewxDisplayChangedEvent.cpp
+++ sip/cpp/sip_corewxDisplayChangedEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -86,7 +86,7 @@ sipwxDisplayChangedEvent::~sipwxDisplayChangedEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxDisplayChangedEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxDisplayChangedEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxDisplayChangedEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxDisplayChangedEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -232,7 +232,7 @@ sipClassTypeDef sipTypeDef__core_wxDisplayChangedEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDisplayChangedEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DisplayChangedEvent,
diff --git a/sip/cpp/sip_corewxDragImage.cpp b/sip/cpp/sip_corewxDragImage.cpp
index 106ee2d8..ddc678a8 100644
--- sip/cpp/sip_corewxDragImage.cpp
+++ sip/cpp/sip_corewxDragImage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -509,7 +509,7 @@ sipClassTypeDef sipTypeDef__core_wxDragImage = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDragImage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DragImage,
diff --git a/sip/cpp/sip_corewxDropFilesEvent.cpp b/sip/cpp/sip_corewxDropFilesEvent.cpp
index 9e8cdfb3..9235775d 100644
--- sip/cpp/sip_corewxDropFilesEvent.cpp
+++ sip/cpp/sip_corewxDropFilesEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -209,7 +209,7 @@ static PyObject *meth_wxDropFilesEvent_GetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxDropFilesEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxDropFilesEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxDropFilesEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxDropFilesEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -375,7 +375,7 @@ sipClassTypeDef sipTypeDef__core_wxDropFilesEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDropFilesEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DropFilesEvent,
diff --git a/sip/cpp/sip_corewxDropSource.cpp b/sip/cpp/sip_corewxDropSource.cpp
index dea1834d..d316bd0f 100644
--- sip/cpp/sip_corewxDropSource.cpp
+++ sip/cpp/sip_corewxDropSource.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -471,7 +471,7 @@ sipClassTypeDef sipTypeDef__core_wxDropSource = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDropSource,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DropSource,
diff --git a/sip/cpp/sip_corewxDropTarget.cpp b/sip/cpp/sip_corewxDropTarget.cpp
index cb6e56b9..e6377a8e 100644
--- sip/cpp/sip_corewxDropTarget.cpp
+++ sip/cpp/sip_corewxDropTarget.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -645,7 +645,7 @@ sipClassTypeDef sipTypeDef__core_wxDropTarget = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDropTarget,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DropTarget,
diff --git a/sip/cpp/sip_corewxEraseEvent.cpp b/sip/cpp/sip_corewxEraseEvent.cpp
index 00381115..920721d1 100644
--- sip/cpp/sip_corewxEraseEvent.cpp
+++ sip/cpp/sip_corewxEraseEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -122,7 +122,7 @@ static PyObject *meth_wxEraseEvent_GetDC(PyObject *sipSelf, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxEraseEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxEraseEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxEraseEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxEraseEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -281,7 +281,7 @@ sipClassTypeDef sipTypeDef__core_wxEraseEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxEraseEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EraseEvent,
diff --git a/sip/cpp/sip_corewxEvent.cpp b/sip/cpp/sip_corewxEvent.cpp
index 124d8b3c..51ed6124 100644
--- sip/cpp/sip_corewxEvent.cpp
+++ sip/cpp/sip_corewxEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -697,7 +697,7 @@ sipClassTypeDef sipTypeDef__core_wxEvent = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Event,
diff --git a/sip/cpp/sip_corewxEventBlocker.cpp b/sip/cpp/sip_corewxEventBlocker.cpp
index 3cf72fd8..e6da1790 100644
--- sip/cpp/sip_corewxEventBlocker.cpp
+++ sip/cpp/sip_corewxEventBlocker.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -346,7 +346,7 @@ sipClassTypeDef sipTypeDef__core_wxEventBlocker = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxEventBlocker,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EventBlocker,
diff --git a/sip/cpp/sip_corewxEventFilter.cpp b/sip/cpp/sip_corewxEventFilter.cpp
index 69e8bc76..62a0fb66 100644
--- sip/cpp/sip_corewxEventFilter.cpp
+++ sip/cpp/sip_corewxEventFilter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -190,7 +190,7 @@ sipClassTypeDef sipTypeDef__core_wxEventFilter = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxEventFilter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EventFilter,
diff --git a/sip/cpp/sip_corewxEventLoopActivator.cpp b/sip/cpp/sip_corewxEventLoopActivator.cpp
index 3b9c5384..0fce32b9 100644
--- sip/cpp/sip_corewxEventLoopActivator.cpp
+++ sip/cpp/sip_corewxEventLoopActivator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -80,7 +80,7 @@ sipClassTypeDef sipTypeDef__core_wxEventLoopActivator = {
         SIP_TYPE_CLASS,
         sipNameNr_wxEventLoopActivator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EventLoopActivator,
diff --git a/sip/cpp/sip_corewxEventLoopBase.cpp b/sip/cpp/sip_corewxEventLoopBase.cpp
index 0d9a5209..fd0097fa 100644
--- sip/cpp/sip_corewxEventLoopBase.cpp
+++ sip/cpp/sip_corewxEventLoopBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -778,7 +778,7 @@ sipClassTypeDef sipTypeDef__core_wxEventLoopBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxEventLoopBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EventLoopBase,
diff --git a/sip/cpp/sip_corewxEvtHandler.cpp b/sip/cpp/sip_corewxEvtHandler.cpp
index 7b84730d..eaee008e 100644
--- sip/cpp/sip_corewxEvtHandler.cpp
+++ sip/cpp/sip_corewxEvtHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1185,7 +1185,7 @@ sipClassTypeDef sipTypeDef__core_wxEvtHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxEvtHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EvtHandler,
diff --git a/sip/cpp/sip_corewxExecuteEnv.cpp b/sip/cpp/sip_corewxExecuteEnv.cpp
index 0d68aa63..47f7e61a 100644
--- sip/cpp/sip_corewxExecuteEnv.cpp
+++ sip/cpp/sip_corewxExecuteEnv.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -27,7 +27,7 @@ sipClassTypeDef sipTypeDef__core_wxExecuteEnv = {
         SIP_TYPE_CLASS,
         sipNameNr_wxExecuteEnv,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ExecuteEnv,
diff --git a/sip/cpp/sip_corewxFSFile.cpp b/sip/cpp/sip_corewxFSFile.cpp
index f8801a34..fd5bc00c 100644
--- sip/cpp/sip_corewxFSFile.cpp
+++ sip/cpp/sip_corewxFSFile.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -353,7 +353,7 @@ sipClassTypeDef sipTypeDef__core_wxFSFile = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFSFile,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FSFile,
diff --git a/sip/cpp/sip_corewxFileConfig.cpp b/sip/cpp/sip_corewxFileConfig.cpp
index 943b66d1..c0e36775 100644
--- sip/cpp/sip_corewxFileConfig.cpp
+++ sip/cpp/sip_corewxFileConfig.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1198,7 +1198,7 @@ sipClassTypeDef sipTypeDef__core_wxFileConfig = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileConfig,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileConfig,
diff --git a/sip/cpp/sip_corewxFileCtrl.cpp b/sip/cpp/sip_corewxFileCtrl.cpp
index a732b462..ac879f50 100644
--- sip/cpp/sip_corewxFileCtrl.cpp
+++ sip/cpp/sip_corewxFileCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1783,7 +1783,7 @@ static PyObject *meth_wxFileCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxFileCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFileCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFileCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1821,7 +1821,7 @@ static PyObject *meth_wxFileCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxFileCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFileCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFileCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1959,7 +1959,7 @@ static PyObject *meth_wxFileCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFileCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxFileCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxFileCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxFileCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2146,7 +2146,7 @@ static PyObject *meth_wxFileCtrl_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxFileCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxFileCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxFileCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxFileCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2295,7 +2295,7 @@ static PyObject *meth_wxFileCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxFileCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFileCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFileCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2329,7 +2329,7 @@ static PyObject *meth_wxFileCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxFileCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFileCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFileCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2363,7 +2363,7 @@ static PyObject *meth_wxFileCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxFileCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFileCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFileCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3198,7 +3198,7 @@ sipClassTypeDef sipTypeDef__core_wxFileCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileCtrl,
diff --git a/sip/cpp/sip_corewxFileCtrlEvent.cpp b/sip/cpp/sip_corewxFileCtrlEvent.cpp
index 72f03409..dbcb12dd 100644
--- sip/cpp/sip_corewxFileCtrlEvent.cpp
+++ sip/cpp/sip_corewxFileCtrlEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -347,7 +347,7 @@ static PyObject *meth_wxFileCtrlEvent_SetFilterIndex(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxFileCtrlEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxFileCtrlEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxFileCtrlEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxFileCtrlEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -517,7 +517,7 @@ sipClassTypeDef sipTypeDef__core_wxFileCtrlEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileCtrlEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileCtrlEvent,
diff --git a/sip/cpp/sip_corewxFileDataObject.cpp b/sip/cpp/sip_corewxFileDataObject.cpp
index 4e5c86df..0cc35a79 100644
--- sip/cpp/sip_corewxFileDataObject.cpp
+++ sip/cpp/sip_corewxFileDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -482,7 +482,7 @@ static PyObject *meth_wxFileDataObject_GetDataSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxFileDataObject_GetDataHere, "GetDataHere(self, buf: wx.siplib.voidptr) -> bool");
+PyDoc_STRVAR(doc_wxFileDataObject_GetDataHere, "GetDataHere(self, buf: Optional[wx.siplib.voidptr]) -> bool");
 
 extern "C" {static PyObject *meth_wxFileDataObject_GetDataHere(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileDataObject_GetDataHere(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -636,7 +636,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDataObject = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFileDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDataObject,
diff --git a/sip/cpp/sip_corewxFileDialog.cpp b/sip/cpp/sip_corewxFileDialog.cpp
index 2445ed76..22d47a11 100644
--- sip/cpp/sip_corewxFileDialog.cpp
+++ sip/cpp/sip_corewxFileDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1995,7 +1995,7 @@ static PyObject *meth_wxFileDialog_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxFileDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFileDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFileDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2033,7 +2033,7 @@ static PyObject *meth_wxFileDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxFileDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFileDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFileDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2171,7 +2171,7 @@ static PyObject *meth_wxFileDialog_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxFileDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxFileDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxFileDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxFileDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2358,7 +2358,7 @@ static PyObject *meth_wxFileDialog_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFileDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxFileDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxFileDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxFileDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2507,7 +2507,7 @@ static PyObject *meth_wxFileDialog_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxFileDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFileDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFileDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2541,7 +2541,7 @@ static PyObject *meth_wxFileDialog_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxFileDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFileDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFileDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2575,7 +2575,7 @@ static PyObject *meth_wxFileDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxFileDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFileDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFileDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3394,7 +3394,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialog,
diff --git a/sip/cpp/sip_corewxFileDialogButton.cpp b/sip/cpp/sip_corewxFileDialogButton.cpp
index 8407c7f3..2efed768 100644
--- sip/cpp/sip_corewxFileDialogButton.cpp
+++ sip/cpp/sip_corewxFileDialogButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -70,7 +70,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogButton,
diff --git a/sip/cpp/sip_corewxFileDialogCheckBox.cpp b/sip/cpp/sip_corewxFileDialogCheckBox.cpp
index f1ac178a..98fffa31 100644
--- sip/cpp/sip_corewxFileDialogCheckBox.cpp
+++ sip/cpp/sip_corewxFileDialogCheckBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -154,7 +154,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogCheckBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogCheckBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogCheckBox,
diff --git a/sip/cpp/sip_corewxFileDialogChoice.cpp b/sip/cpp/sip_corewxFileDialogChoice.cpp
index 6288c0a5..70312510 100644
--- sip/cpp/sip_corewxFileDialogChoice.cpp
+++ sip/cpp/sip_corewxFileDialogChoice.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -154,7 +154,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogChoice = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogChoice,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogChoice,
diff --git a/sip/cpp/sip_corewxFileDialogCustomControl.cpp b/sip/cpp/sip_corewxFileDialogCustomControl.cpp
index 3484b334..ce9e7ccd 100644
--- sip/cpp/sip_corewxFileDialogCustomControl.cpp
+++ sip/cpp/sip_corewxFileDialogCustomControl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -224,7 +224,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogCustomControl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogCustomControl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogCustomControl,
diff --git a/sip/cpp/sip_corewxFileDialogCustomize.cpp b/sip/cpp/sip_corewxFileDialogCustomize.cpp
index dd251ef5..4ae1253a 100644
--- sip/cpp/sip_corewxFileDialogCustomize.cpp
+++ sip/cpp/sip_corewxFileDialogCustomize.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -318,7 +318,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogCustomize = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogCustomize,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogCustomize,
diff --git a/sip/cpp/sip_corewxFileDialogCustomizeHook.cpp b/sip/cpp/sip_corewxFileDialogCustomizeHook.cpp
index b4c1c1b5..ced89b65 100644
--- sip/cpp/sip_corewxFileDialogCustomizeHook.cpp
+++ sip/cpp/sip_corewxFileDialogCustomizeHook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -306,7 +306,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogCustomizeHook = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogCustomizeHook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogCustomizeHook,
diff --git a/sip/cpp/sip_corewxFileDialogRadioButton.cpp b/sip/cpp/sip_corewxFileDialogRadioButton.cpp
index 8fc04471..c7d0a66a 100644
--- sip/cpp/sip_corewxFileDialogRadioButton.cpp
+++ sip/cpp/sip_corewxFileDialogRadioButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -154,7 +154,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogRadioButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogRadioButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogRadioButton,
diff --git a/sip/cpp/sip_corewxFileDialogStaticText.cpp b/sip/cpp/sip_corewxFileDialogStaticText.cpp
index dd3bb44f..5966089e 100644
--- sip/cpp/sip_corewxFileDialogStaticText.cpp
+++ sip/cpp/sip_corewxFileDialogStaticText.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -116,7 +116,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogStaticText = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogStaticText,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogStaticText,
diff --git a/sip/cpp/sip_corewxFileDialogTextCtrl.cpp b/sip/cpp/sip_corewxFileDialogTextCtrl.cpp
index 39821532..ff4ca1c9 100644
--- sip/cpp/sip_corewxFileDialogTextCtrl.cpp
+++ sip/cpp/sip_corewxFileDialogTextCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -156,7 +156,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDialogTextCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDialogTextCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDialogTextCtrl,
diff --git a/sip/cpp/sip_corewxFileDirPickerEvent.cpp b/sip/cpp/sip_corewxFileDirPickerEvent.cpp
index e062f11c..64cddd3a 100644
--- sip/cpp/sip_corewxFileDirPickerEvent.cpp
+++ sip/cpp/sip_corewxFileDirPickerEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -169,7 +169,7 @@ static PyObject *meth_wxFileDirPickerEvent_SetPath(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxFileDirPickerEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxFileDirPickerEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxFileDirPickerEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxFileDirPickerEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -357,7 +357,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDirPickerEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileDirPickerEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDirPickerEvent,
diff --git a/sip/cpp/sip_corewxFileDropTarget.cpp b/sip/cpp/sip_corewxFileDropTarget.cpp
index cc3f7cff..27bab994 100644
--- sip/cpp/sip_corewxFileDropTarget.cpp
+++ sip/cpp/sip_corewxFileDropTarget.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -397,7 +397,7 @@ sipClassTypeDef sipTypeDef__core_wxFileDropTarget = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxFileDropTarget,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileDropTarget,
diff --git a/sip/cpp/sip_corewxFileHistory.cpp b/sip/cpp/sip_corewxFileHistory.cpp
index eaf8a57b..319ae62a 100644
--- sip/cpp/sip_corewxFileHistory.cpp
+++ sip/cpp/sip_corewxFileHistory.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -988,7 +988,7 @@ sipClassTypeDef sipTypeDef__core_wxFileHistory = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileHistory,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileHistory,
diff --git a/sip/cpp/sip_corewxFileHistoryMenuList.cpp b/sip/cpp/sip_corewxFileHistoryMenuList.cpp
index 66af1f8a..7def0860 100644
--- sip/cpp/sip_corewxFileHistoryMenuList.cpp
+++ sip/cpp/sip_corewxFileHistoryMenuList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -34,7 +34,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxFileHistoryMenuList_index, "index(self, obj: Menu) -> int");
+PyDoc_STRVAR(doc_wxFileHistoryMenuList_index, "index(self, obj: Optional[Menu]) -> int");
 
 extern "C" {static PyObject *meth_wxFileHistoryMenuList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileHistoryMenuList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -303,7 +303,7 @@ sipClassTypeDef sipTypeDef__core_wxFileHistoryMenuList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFileHistoryMenuList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileHistoryMenuList,
diff --git a/sip/cpp/sip_corewxFileHistoryMenuList_iterator.cpp b/sip/cpp/sip_corewxFileHistoryMenuList_iterator.cpp
index aa9925aa..8f319bda 100644
--- sip/cpp/sip_corewxFileHistoryMenuList_iterator.cpp
+++ sip/cpp/sip_corewxFileHistoryMenuList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__core_wxFileHistoryMenuList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxFileHistoryMenuList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileHistoryMenuList_iterator,
diff --git a/sip/cpp/sip_corewxFileName.cpp b/sip/cpp/sip_corewxFileName.cpp
index f3a93d61..1d0fb191 100644
--- sip/cpp/sip_corewxFileName.cpp
+++ sip/cpp/sip_corewxFileName.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -79,15 +79,15 @@ sipMappedTypeDef sipTypeDef__core_wxFileName = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxFileName,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxFileName,
     array_wxFileName,
diff --git a/sip/cpp/sip_corewxFilePickerCtrl.cpp b/sip/cpp/sip_corewxFilePickerCtrl.cpp
index f08e281d..3b6e5696 100644
--- sip/cpp/sip_corewxFilePickerCtrl.cpp
+++ sip/cpp/sip_corewxFilePickerCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1594,7 +1594,7 @@ static PyObject *meth_wxFilePickerCtrl_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxFilePickerCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFilePickerCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFilePickerCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFilePickerCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1632,7 +1632,7 @@ static PyObject *meth_wxFilePickerCtrl_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFilePickerCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFilePickerCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFilePickerCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFilePickerCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1770,7 +1770,7 @@ static PyObject *meth_wxFilePickerCtrl_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxFilePickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxFilePickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxFilePickerCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxFilePickerCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1957,7 +1957,7 @@ static PyObject *meth_wxFilePickerCtrl_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxFilePickerCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxFilePickerCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxFilePickerCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxFilePickerCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2106,7 +2106,7 @@ static PyObject *meth_wxFilePickerCtrl_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFilePickerCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFilePickerCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFilePickerCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFilePickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2140,7 +2140,7 @@ static PyObject *meth_wxFilePickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxFilePickerCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFilePickerCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFilePickerCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFilePickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2174,7 +2174,7 @@ static PyObject *meth_wxFilePickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxFilePickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFilePickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFilePickerCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFilePickerCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3067,7 +3067,7 @@ sipClassTypeDef sipTypeDef__core_wxFilePickerCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFilePickerCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FilePickerCtrl,
diff --git a/sip/cpp/sip_corewxFileSystem.cpp b/sip/cpp/sip_corewxFileSystem.cpp
index e4830648..bc8f9d35 100644
--- sip/cpp/sip_corewxFileSystem.cpp
+++ sip/cpp/sip_corewxFileSystem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -575,7 +575,7 @@ sipClassTypeDef sipTypeDef__core_wxFileSystem = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileSystem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileSystem,
diff --git a/sip/cpp/sip_corewxFileSystemHandler.cpp b/sip/cpp/sip_corewxFileSystemHandler.cpp
index cec87d46..1e3ca6f5 100644
--- sip/cpp/sip_corewxFileSystemHandler.cpp
+++ sip/cpp/sip_corewxFileSystemHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -654,7 +654,7 @@ sipClassTypeDef sipTypeDef__core_wxFileSystemHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileSystemHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileSystemHandler,
diff --git a/sip/cpp/sip_corewxFileSystemWatcher.cpp b/sip/cpp/sip_corewxFileSystemWatcher.cpp
index 2fe7859d..7eee5827 100644
--- sip/cpp/sip_corewxFileSystemWatcher.cpp
+++ sip/cpp/sip_corewxFileSystemWatcher.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -730,7 +730,7 @@ sipClassTypeDef sipTypeDef__core_wxFileSystemWatcher = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileSystemWatcher,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileSystemWatcher,
diff --git a/sip/cpp/sip_corewxFileSystemWatcherEvent.cpp b/sip/cpp/sip_corewxFileSystemWatcherEvent.cpp
index 24c57662..d311445a 100644
--- sip/cpp/sip_corewxFileSystemWatcherEvent.cpp
+++ sip/cpp/sip_corewxFileSystemWatcherEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -588,7 +588,7 @@ sipClassTypeDef sipTypeDef__core_wxFileSystemWatcherEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileSystemWatcherEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileSystemWatcherEvent,
diff --git a/sip/cpp/sip_corewxFileTranslationsLoader.cpp b/sip/cpp/sip_corewxFileTranslationsLoader.cpp
index 8f5ffa05..81510c72 100644
--- sip/cpp/sip_corewxFileTranslationsLoader.cpp
+++ sip/cpp/sip_corewxFileTranslationsLoader.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -125,7 +125,7 @@ static PyObject *meth_wxFileTranslationsLoader_AddCatalogLookupPathPrefix(PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxFileTranslationsLoader_LoadCatalog, "LoadCatalog(self, domain: object, lang: object) -> MsgCatalog");
+PyDoc_STRVAR(doc_wxFileTranslationsLoader_LoadCatalog, "LoadCatalog(self, domain: Any, lang: Any) -> Optional[MsgCatalog]");
 
 extern "C" {static PyObject *meth_wxFileTranslationsLoader_LoadCatalog(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileTranslationsLoader_LoadCatalog(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -170,7 +170,7 @@ static PyObject *meth_wxFileTranslationsLoader_LoadCatalog(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxFileTranslationsLoader_GetAvailableTranslations, "GetAvailableTranslations(self, domain: object) -> object");
+PyDoc_STRVAR(doc_wxFileTranslationsLoader_GetAvailableTranslations, "GetAvailableTranslations(self, domain: Any) -> Any");
 
 extern "C" {static PyObject *meth_wxFileTranslationsLoader_GetAvailableTranslations(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFileTranslationsLoader_GetAvailableTranslations(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -334,7 +334,7 @@ sipClassTypeDef sipTypeDef__core_wxFileTranslationsLoader = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFileTranslationsLoader,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileTranslationsLoader,
diff --git a/sip/cpp/sip_corewxFileType.cpp b/sip/cpp/sip_corewxFileType.cpp
index 45772760..5cc6f5d2 100644
--- sip/cpp/sip_corewxFileType.cpp
+++ sip/cpp/sip_corewxFileType.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -700,7 +700,7 @@ sipClassTypeDef sipTypeDef__core_wxFileType = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFileType,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileType,
diff --git a/sip/cpp/sip_corewxFileTypeInfo.cpp b/sip/cpp/sip_corewxFileTypeInfo.cpp
index 5d81497a..74bcf9d8 100644
--- sip/cpp/sip_corewxFileTypeInfo.cpp
+++ sip/cpp/sip_corewxFileTypeInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -801,7 +801,7 @@ sipClassTypeDef sipTypeDef__core_wxFileTypeInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFileTypeInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileTypeInfo,
diff --git a/sip/cpp/sip_corewxFileTypeMessageParameters.cpp b/sip/cpp/sip_corewxFileTypeMessageParameters.cpp
index 02997e0b..42b124d9 100644
--- sip/cpp/sip_corewxFileTypeMessageParameters.cpp
+++ sip/cpp/sip_corewxFileTypeMessageParameters.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -341,7 +341,7 @@ sipClassTypeDef sipTypeDef__core_wxFileType_MessageParameters = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFileType__MessageParameters,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MessageParameters,
diff --git a/sip/cpp/sip_corewxFilterFSHandler.cpp b/sip/cpp/sip_corewxFilterFSHandler.cpp
index 4b40ab91..86b278f9 100644
--- sip/cpp/sip_corewxFilterFSHandler.cpp
+++ sip/cpp/sip_corewxFilterFSHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -306,7 +306,7 @@ static PyObject *meth_wxFilterFSHandler_GetRightLocation(PyObject *, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxFilterFSHandler_CanOpen, "CanOpen(self, location: object) -> bool");
+PyDoc_STRVAR(doc_wxFilterFSHandler_CanOpen, "CanOpen(self, location: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxFilterFSHandler_CanOpen(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFilterFSHandler_CanOpen(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -347,7 +347,7 @@ static PyObject *meth_wxFilterFSHandler_CanOpen(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFilterFSHandler_OpenFile, "OpenFile(self, fs: FileSystem, location: object) -> FSFile");
+PyDoc_STRVAR(doc_wxFilterFSHandler_OpenFile, "OpenFile(self, fs: FileSystem, location: Any) -> Optional[FSFile]");
 
 extern "C" {static PyObject *meth_wxFilterFSHandler_OpenFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFilterFSHandler_OpenFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -390,7 +390,7 @@ static PyObject *meth_wxFilterFSHandler_OpenFile(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxFilterFSHandler_FindFirst, "FindFirst(self, spec: object, flags: int = 0) -> object");
+PyDoc_STRVAR(doc_wxFilterFSHandler_FindFirst, "FindFirst(self, spec: Any, flags: int = 0) -> Any");
 
 extern "C" {static PyObject *meth_wxFilterFSHandler_FindFirst(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFilterFSHandler_FindFirst(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -433,7 +433,7 @@ static PyObject *meth_wxFilterFSHandler_FindFirst(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxFilterFSHandler_FindNext, "FindNext(self) -> object");
+PyDoc_STRVAR(doc_wxFilterFSHandler_FindNext, "FindNext(self) -> Any");
 
 extern "C" {static PyObject *meth_wxFilterFSHandler_FindNext(PyObject *, PyObject *);}
 static PyObject *meth_wxFilterFSHandler_FindNext(PyObject *sipSelf, PyObject *sipArgs)
@@ -577,7 +577,7 @@ sipClassTypeDef sipTypeDef__core_wxFilterFSHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFilterFSHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FilterFSHandler,
diff --git a/sip/cpp/sip_corewxFindDialogEvent.cpp b/sip/cpp/sip_corewxFindDialogEvent.cpp
index 69fb6795..3a3b2b38 100644
--- sip/cpp/sip_corewxFindDialogEvent.cpp
+++ sip/cpp/sip_corewxFindDialogEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -229,7 +229,7 @@ static PyObject *meth_wxFindDialogEvent_GetReplaceString(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxFindDialogEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxFindDialogEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxFindDialogEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxFindDialogEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -393,7 +393,7 @@ sipClassTypeDef sipTypeDef__core_wxFindDialogEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFindDialogEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FindDialogEvent,
diff --git a/sip/cpp/sip_corewxFindReplaceData.cpp b/sip/cpp/sip_corewxFindReplaceData.cpp
index a4827874..50938d36 100644
--- sip/cpp/sip_corewxFindReplaceData.cpp
+++ sip/cpp/sip_corewxFindReplaceData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -378,7 +378,7 @@ sipClassTypeDef sipTypeDef__core_wxFindReplaceData = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFindReplaceData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FindReplaceData,
diff --git a/sip/cpp/sip_corewxFindReplaceDialog.cpp b/sip/cpp/sip_corewxFindReplaceDialog.cpp
index a16d681f..c24df841 100644
--- sip/cpp/sip_corewxFindReplaceDialog.cpp
+++ sip/cpp/sip_corewxFindReplaceDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1318,7 +1318,7 @@ static PyObject *meth_wxFindReplaceDialog_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFindReplaceDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFindReplaceDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFindReplaceDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFindReplaceDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1356,7 +1356,7 @@ static PyObject *meth_wxFindReplaceDialog_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxFindReplaceDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFindReplaceDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFindReplaceDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFindReplaceDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1494,7 +1494,7 @@ static PyObject *meth_wxFindReplaceDialog_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxFindReplaceDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxFindReplaceDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxFindReplaceDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxFindReplaceDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1681,7 +1681,7 @@ static PyObject *meth_wxFindReplaceDialog_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxFindReplaceDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxFindReplaceDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxFindReplaceDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxFindReplaceDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1830,7 +1830,7 @@ static PyObject *meth_wxFindReplaceDialog_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxFindReplaceDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFindReplaceDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFindReplaceDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFindReplaceDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1864,7 +1864,7 @@ static PyObject *meth_wxFindReplaceDialog_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxFindReplaceDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFindReplaceDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFindReplaceDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFindReplaceDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1898,7 +1898,7 @@ static PyObject *meth_wxFindReplaceDialog_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxFindReplaceDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFindReplaceDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFindReplaceDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFindReplaceDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2697,7 +2697,7 @@ sipClassTypeDef sipTypeDef__core_wxFindReplaceDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFindReplaceDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FindReplaceDialog,
diff --git a/sip/cpp/sip_corewxFlexGridSizer.cpp b/sip/cpp/sip_corewxFlexGridSizer.cpp
index e30627dc..eaa90dea 100644
--- sip/cpp/sip_corewxFlexGridSizer.cpp
+++ sip/cpp/sip_corewxFlexGridSizer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -902,7 +902,7 @@ sipClassTypeDef sipTypeDef__core_wxFlexGridSizer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFlexGridSizer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FlexGridSizer,
diff --git a/sip/cpp/sip_corewxFocusEvent.cpp b/sip/cpp/sip_corewxFocusEvent.cpp
index e9739aa8..4db9a169 100644
--- sip/cpp/sip_corewxFocusEvent.cpp
+++ sip/cpp/sip_corewxFocusEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -161,7 +161,7 @@ static PyObject *meth_wxFocusEvent_SetWindow(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxFocusEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxFocusEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxFocusEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxFocusEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -320,7 +320,7 @@ sipClassTypeDef sipTypeDef__core_wxFocusEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFocusEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FocusEvent,
diff --git a/sip/cpp/sip_corewxFont.cpp b/sip/cpp/sip_corewxFont.cpp
index 9c96978e..578ae3c8 100644
--- sip/cpp/sip_corewxFont.cpp
+++ sip/cpp/sip_corewxFont.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2882,7 +2882,7 @@ sipClassTypeDef sipTypeDef__core_wxFont = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFont,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Font,
diff --git a/sip/cpp/sip_corewxFontData.cpp b/sip/cpp/sip_corewxFontData.cpp
index f6c3fecb..ab2c2fae 100644
--- sip/cpp/sip_corewxFontData.cpp
+++ sip/cpp/sip_corewxFontData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -724,7 +724,7 @@ sipClassTypeDef sipTypeDef__core_wxFontData = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFontData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontData,
diff --git a/sip/cpp/sip_corewxFontDialog.cpp b/sip/cpp/sip_corewxFontDialog.cpp
index c6a18e56..c06fb5d6 100644
--- sip/cpp/sip_corewxFontDialog.cpp
+++ sip/cpp/sip_corewxFontDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1381,7 +1381,7 @@ static PyObject *meth_wxFontDialog_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxFontDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFontDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFontDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1419,7 +1419,7 @@ static PyObject *meth_wxFontDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxFontDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFontDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFontDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1557,7 +1557,7 @@ static PyObject *meth_wxFontDialog_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxFontDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxFontDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxFontDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxFontDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1744,7 +1744,7 @@ static PyObject *meth_wxFontDialog_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFontDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxFontDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxFontDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxFontDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1893,7 +1893,7 @@ static PyObject *meth_wxFontDialog_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxFontDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFontDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFontDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1927,7 +1927,7 @@ static PyObject *meth_wxFontDialog_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxFontDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFontDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFontDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1961,7 +1961,7 @@ static PyObject *meth_wxFontDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxFontDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFontDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFontDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2779,7 +2779,7 @@ sipClassTypeDef sipTypeDef__core_wxFontDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFontDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontDialog,
diff --git a/sip/cpp/sip_corewxFontEnumerator.cpp b/sip/cpp/sip_corewxFontEnumerator.cpp
index cb1fbd85..7e24f8a0 100644
--- sip/cpp/sip_corewxFontEnumerator.cpp
+++ sip/cpp/sip_corewxFontEnumerator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -542,7 +542,7 @@ sipClassTypeDef sipTypeDef__core_wxFontEnumerator = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFontEnumerator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontEnumerator,
diff --git a/sip/cpp/sip_corewxFontInfo.cpp b/sip/cpp/sip_corewxFontInfo.cpp
index 259a1788..77f59ce5 100644
--- sip/cpp/sip_corewxFontInfo.cpp
+++ sip/cpp/sip_corewxFontInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -744,7 +744,7 @@ sipClassTypeDef sipTypeDef__core_wxFontInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFontInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontInfo,
diff --git a/sip/cpp/sip_corewxFontList.cpp b/sip/cpp/sip_corewxFontList.cpp
index c6761732..fa72cfb9 100644
--- sip/cpp/sip_corewxFontList.cpp
+++ sip/cpp/sip_corewxFontList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -197,7 +197,7 @@ sipClassTypeDef sipTypeDef__core_wxFontList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFontList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontList,
diff --git a/sip/cpp/sip_corewxFontMapper.cpp b/sip/cpp/sip_corewxFontMapper.cpp
index 341a7fd1..0d9ecc4a 100644
--- sip/cpp/sip_corewxFontMapper.cpp
+++ sip/cpp/sip_corewxFontMapper.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -751,7 +751,7 @@ sipClassTypeDef sipTypeDef__core_wxFontMapper = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFontMapper,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontMapper,
diff --git a/sip/cpp/sip_corewxFontMetrics.cpp b/sip/cpp/sip_corewxFontMetrics.cpp
index fd0ed6b6..4b9e4d53 100644
--- sip/cpp/sip_corewxFontMetrics.cpp
+++ sip/cpp/sip_corewxFontMetrics.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -291,7 +291,7 @@ sipClassTypeDef sipTypeDef__core_wxFontMetrics = {
         SIP_TYPE_CLASS,
         sipNameNr_wxFontMetrics,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontMetrics,
diff --git a/sip/cpp/sip_corewxFontPickerCtrl.cpp b/sip/cpp/sip_corewxFontPickerCtrl.cpp
index 03cc74c3..8b613c7f 100644
--- sip/cpp/sip_corewxFontPickerCtrl.cpp
+++ sip/cpp/sip_corewxFontPickerCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1763,7 +1763,7 @@ static PyObject *meth_wxFontPickerCtrl_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxFontPickerCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFontPickerCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFontPickerCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontPickerCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1801,7 +1801,7 @@ static PyObject *meth_wxFontPickerCtrl_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFontPickerCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFontPickerCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFontPickerCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontPickerCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1939,7 +1939,7 @@ static PyObject *meth_wxFontPickerCtrl_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxFontPickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxFontPickerCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxFontPickerCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxFontPickerCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2126,7 +2126,7 @@ static PyObject *meth_wxFontPickerCtrl_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxFontPickerCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxFontPickerCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxFontPickerCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxFontPickerCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2275,7 +2275,7 @@ static PyObject *meth_wxFontPickerCtrl_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFontPickerCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFontPickerCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFontPickerCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontPickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2309,7 +2309,7 @@ static PyObject *meth_wxFontPickerCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxFontPickerCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFontPickerCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFontPickerCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontPickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2343,7 +2343,7 @@ static PyObject *meth_wxFontPickerCtrl_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxFontPickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFontPickerCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFontPickerCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFontPickerCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3232,7 +3232,7 @@ sipClassTypeDef sipTypeDef__core_wxFontPickerCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFontPickerCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontPickerCtrl,
diff --git a/sip/cpp/sip_corewxFontPickerEvent.cpp b/sip/cpp/sip_corewxFontPickerEvent.cpp
index 1d0e93d4..0c321ccb 100644
--- sip/cpp/sip_corewxFontPickerEvent.cpp
+++ sip/cpp/sip_corewxFontPickerEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -161,7 +161,7 @@ static PyObject *meth_wxFontPickerEvent_SetFont(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxFontPickerEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxFontPickerEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxFontPickerEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxFontPickerEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -322,7 +322,7 @@ sipClassTypeDef sipTypeDef__core_wxFontPickerEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFontPickerEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontPickerEvent,
diff --git a/sip/cpp/sip_corewxFrame.cpp b/sip/cpp/sip_corewxFrame.cpp
index dbca35c7..b4e4c2bc 100644
--- sip/cpp/sip_corewxFrame.cpp
+++ sip/cpp/sip_corewxFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2119,7 +2119,7 @@ static PyObject *meth_wxFrame_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxFrame_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFrame_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFrame_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2157,7 +2157,7 @@ static PyObject *meth_wxFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxFrame_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxFrame_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxFrame_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFrame_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2295,7 +2295,7 @@ static PyObject *meth_wxFrame_OnInternalIdle(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxFrame_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxFrame_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2482,7 +2482,7 @@ static PyObject *meth_wxFrame_SetValidator(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxFrame_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxFrame_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxFrame_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxFrame_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2631,7 +2631,7 @@ static PyObject *meth_wxFrame_DoEnable(PyObject *sipSelf, PyObject *sipArgs, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2665,7 +2665,7 @@ static PyObject *meth_wxFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2699,7 +2699,7 @@ static PyObject *meth_wxFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3530,7 +3530,7 @@ sipClassTypeDef sipTypeDef__core_wxFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Frame,
diff --git a/sip/cpp/sip_corewxFullScreenEvent.cpp b/sip/cpp/sip_corewxFullScreenEvent.cpp
index a926effa..8bd7bad3 100644
--- sip/cpp/sip_corewxFullScreenEvent.cpp
+++ sip/cpp/sip_corewxFullScreenEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -122,7 +122,7 @@ static PyObject *meth_wxFullScreenEvent_IsFullScreen(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxFullScreenEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxFullScreenEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxFullScreenEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxFullScreenEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -276,7 +276,7 @@ sipClassTypeDef sipTypeDef__core_wxFullScreenEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFullScreenEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FullScreenEvent,
diff --git a/sip/cpp/sip_corewxGBPosition.cpp b/sip/cpp/sip_corewxGBPosition.cpp
index 1c490713..7b747271 100644
--- sip/cpp/sip_corewxGBPosition.cpp
+++ sip/cpp/sip_corewxGBPosition.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -508,7 +508,7 @@ sipClassTypeDef sipTypeDef__core_wxGBPosition = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGBPosition,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GBPosition,
diff --git a/sip/cpp/sip_corewxGBSizerItem.cpp b/sip/cpp/sip_corewxGBSizerItem.cpp
index b81fd8c1..dd1a9c03 100644
--- sip/cpp/sip_corewxGBSizerItem.cpp
+++ sip/cpp/sip_corewxGBSizerItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -571,7 +571,7 @@ sipClassTypeDef sipTypeDef__core_wxGBSizerItem = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGBSizerItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GBSizerItem,
diff --git a/sip/cpp/sip_corewxGBSpan.cpp b/sip/cpp/sip_corewxGBSpan.cpp
index 885d3e23..df253427 100644
--- sip/cpp/sip_corewxGBSpan.cpp
+++ sip/cpp/sip_corewxGBSpan.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -508,7 +508,7 @@ sipClassTypeDef sipTypeDef__core_wxGBSpan = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGBSpan,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GBSpan,
diff --git a/sip/cpp/sip_corewxGCDC.cpp b/sip/cpp/sip_corewxGCDC.cpp
index 10077892..87f97131 100644
--- sip/cpp/sip_corewxGCDC.cpp
+++ sip/cpp/sip_corewxGCDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -442,7 +442,7 @@ sipClassTypeDef sipTypeDef__core_wxGCDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGCDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GCDC,
diff --git a/sip/cpp/sip_corewxGDIObject.cpp b/sip/cpp/sip_corewxGDIObject.cpp
index b02b37e2..2a630000 100644
--- sip/cpp/sip_corewxGDIObject.cpp
+++ sip/cpp/sip_corewxGDIObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -69,7 +69,7 @@ sipClassTypeDef sipTypeDef__core_wxGDIObject = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGDIObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GDIObject,
diff --git a/sip/cpp/sip_corewxGIFHandler.cpp b/sip/cpp/sip_corewxGIFHandler.cpp
index 2fca31ae..ef154fcc 100644
--- sip/cpp/sip_corewxGIFHandler.cpp
+++ sip/cpp/sip_corewxGIFHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -470,7 +470,7 @@ sipClassTypeDef sipTypeDef__core_wxGIFHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGIFHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GIFHandler,
diff --git a/sip/cpp/sip_corewxGUIEventLoop.cpp b/sip/cpp/sip_corewxGUIEventLoop.cpp
index 63473173..d9b53953 100644
--- sip/cpp/sip_corewxGUIEventLoop.cpp
+++ sip/cpp/sip_corewxGUIEventLoop.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -712,7 +712,7 @@ sipClassTypeDef sipTypeDef__core_wxGUIEventLoop = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGUIEventLoop,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GUIEventLoop,
diff --git a/sip/cpp/sip_corewxGauge.cpp b/sip/cpp/sip_corewxGauge.cpp
index 90c86bb0..fdcb6c46 100644
--- sip/cpp/sip_corewxGauge.cpp
+++ sip/cpp/sip_corewxGauge.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1484,7 +1484,7 @@ static PyObject *meth_wxGauge_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGauge_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGauge_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGauge_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGauge_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1522,7 +1522,7 @@ static PyObject *meth_wxGauge_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGauge_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGauge_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGauge_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGauge_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1660,7 +1660,7 @@ static PyObject *meth_wxGauge_OnInternalIdle(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxGauge_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGauge_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGauge_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGauge_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1847,7 +1847,7 @@ static PyObject *meth_wxGauge_SetValidator(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxGauge_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGauge_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGauge_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGauge_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1996,7 +1996,7 @@ static PyObject *meth_wxGauge_DoEnable(PyObject *sipSelf, PyObject *sipArgs, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGauge_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGauge_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGauge_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGauge_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2030,7 +2030,7 @@ static PyObject *meth_wxGauge_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxGauge_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGauge_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGauge_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGauge_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2064,7 +2064,7 @@ static PyObject *meth_wxGauge_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGauge_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGauge_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGauge_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGauge_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2878,7 +2878,7 @@ sipClassTypeDef sipTypeDef__core_wxGauge = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGauge,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Gauge,
diff --git a/sip/cpp/sip_corewxGenericDirCtrl.cpp b/sip/cpp/sip_corewxGenericDirCtrl.cpp
index 060bdeec..87bcfb2a 100644
--- sip/cpp/sip_corewxGenericDirCtrl.cpp
+++ sip/cpp/sip_corewxGenericDirCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2163,7 +2163,7 @@ static PyObject *meth_wxGenericDirCtrl_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxGenericDirCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericDirCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericDirCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericDirCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2201,7 +2201,7 @@ static PyObject *meth_wxGenericDirCtrl_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxGenericDirCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericDirCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericDirCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericDirCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2339,7 +2339,7 @@ static PyObject *meth_wxGenericDirCtrl_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGenericDirCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGenericDirCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGenericDirCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericDirCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2526,7 +2526,7 @@ static PyObject *meth_wxGenericDirCtrl_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGenericDirCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGenericDirCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGenericDirCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericDirCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2675,7 +2675,7 @@ static PyObject *meth_wxGenericDirCtrl_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxGenericDirCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericDirCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericDirCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericDirCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2709,7 +2709,7 @@ static PyObject *meth_wxGenericDirCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGenericDirCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericDirCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericDirCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericDirCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2743,7 +2743,7 @@ static PyObject *meth_wxGenericDirCtrl_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGenericDirCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericDirCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericDirCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericDirCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3590,7 +3590,7 @@ sipClassTypeDef sipTypeDef__core_wxGenericDirCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGenericDirCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GenericDirCtrl,
diff --git a/sip/cpp/sip_corewxGenericDragImage.cpp b/sip/cpp/sip_corewxGenericDragImage.cpp
index 6e36790a..97ac0e52 100644
--- sip/cpp/sip_corewxGenericDragImage.cpp
+++ sip/cpp/sip_corewxGenericDragImage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -786,7 +786,7 @@ sipClassTypeDef sipTypeDef__core_wxGenericDragImage = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGenericDragImage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GenericDragImage,
diff --git a/sip/cpp/sip_corewxGenericMessageDialog.cpp b/sip/cpp/sip_corewxGenericMessageDialog.cpp
index 55f30f72..aecad983 100644
--- sip/cpp/sip_corewxGenericMessageDialog.cpp
+++ sip/cpp/sip_corewxGenericMessageDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1946,7 +1946,7 @@ static PyObject *meth_wxGenericMessageDialog_AcceptsFocusFromKeyboard(PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxGenericMessageDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericMessageDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericMessageDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericMessageDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1984,7 +1984,7 @@ static PyObject *meth_wxGenericMessageDialog_AddChild(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGenericMessageDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericMessageDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericMessageDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericMessageDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2122,7 +2122,7 @@ static PyObject *meth_wxGenericMessageDialog_OnInternalIdle(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxGenericMessageDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGenericMessageDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGenericMessageDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericMessageDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2309,7 +2309,7 @@ static PyObject *meth_wxGenericMessageDialog_SetValidator(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGenericMessageDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGenericMessageDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGenericMessageDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericMessageDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2458,7 +2458,7 @@ static PyObject *meth_wxGenericMessageDialog_DoEnable(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGenericMessageDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericMessageDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericMessageDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericMessageDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2492,7 +2492,7 @@ static PyObject *meth_wxGenericMessageDialog_DoGetPosition(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGenericMessageDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericMessageDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericMessageDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericMessageDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2526,7 +2526,7 @@ static PyObject *meth_wxGenericMessageDialog_DoGetSize(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGenericMessageDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericMessageDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericMessageDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericMessageDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3403,7 +3403,7 @@ sipClassTypeDef sipTypeDef__core_wxGenericMessageDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGenericMessageDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GenericMessageDialog,
diff --git a/sip/cpp/sip_corewxGenericProgressDialog.cpp b/sip/cpp/sip_corewxGenericProgressDialog.cpp
index 4a470eee..58fd9be7 100644
--- sip/cpp/sip_corewxGenericProgressDialog.cpp
+++ sip/cpp/sip_corewxGenericProgressDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1570,7 +1570,7 @@ static PyObject *meth_wxGenericProgressDialog_AcceptsFocusFromKeyboard(PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGenericProgressDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericProgressDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericProgressDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericProgressDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1608,7 +1608,7 @@ static PyObject *meth_wxGenericProgressDialog_AddChild(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGenericProgressDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericProgressDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericProgressDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericProgressDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1746,7 +1746,7 @@ static PyObject *meth_wxGenericProgressDialog_OnInternalIdle(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxGenericProgressDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGenericProgressDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGenericProgressDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericProgressDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1933,7 +1933,7 @@ static PyObject *meth_wxGenericProgressDialog_SetValidator(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGenericProgressDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGenericProgressDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGenericProgressDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericProgressDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2082,7 +2082,7 @@ static PyObject *meth_wxGenericProgressDialog_DoEnable(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGenericProgressDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericProgressDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericProgressDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericProgressDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2116,7 +2116,7 @@ static PyObject *meth_wxGenericProgressDialog_DoGetPosition(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxGenericProgressDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericProgressDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericProgressDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericProgressDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2150,7 +2150,7 @@ static PyObject *meth_wxGenericProgressDialog_DoGetSize(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxGenericProgressDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericProgressDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericProgressDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericProgressDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2924,7 +2924,7 @@ sipClassTypeDef sipTypeDef__core_wxGenericProgressDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGenericProgressDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GenericProgressDialog,
diff --git a/sip/cpp/sip_corewxGenericStaticBitmap.cpp b/sip/cpp/sip_corewxGenericStaticBitmap.cpp
index 24a04db1..33ac4337 100644
--- sip/cpp/sip_corewxGenericStaticBitmap.cpp
+++ sip/cpp/sip_corewxGenericStaticBitmap.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1491,7 +1491,7 @@ static PyObject *meth_wxGenericStaticBitmap_AcceptsFocusFromKeyboard(PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxGenericStaticBitmap_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericStaticBitmap_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericStaticBitmap_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericStaticBitmap_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1529,7 +1529,7 @@ static PyObject *meth_wxGenericStaticBitmap_AddChild(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGenericStaticBitmap_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGenericStaticBitmap_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGenericStaticBitmap_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericStaticBitmap_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1667,7 +1667,7 @@ static PyObject *meth_wxGenericStaticBitmap_OnInternalIdle(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGenericStaticBitmap_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGenericStaticBitmap_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGenericStaticBitmap_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericStaticBitmap_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1854,7 +1854,7 @@ static PyObject *meth_wxGenericStaticBitmap_SetValidator(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxGenericStaticBitmap_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGenericStaticBitmap_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGenericStaticBitmap_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGenericStaticBitmap_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2003,7 +2003,7 @@ static PyObject *meth_wxGenericStaticBitmap_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGenericStaticBitmap_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericStaticBitmap_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericStaticBitmap_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericStaticBitmap_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2037,7 +2037,7 @@ static PyObject *meth_wxGenericStaticBitmap_DoGetPosition(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGenericStaticBitmap_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericStaticBitmap_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericStaticBitmap_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericStaticBitmap_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2071,7 +2071,7 @@ static PyObject *meth_wxGenericStaticBitmap_DoGetSize(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGenericStaticBitmap_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGenericStaticBitmap_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGenericStaticBitmap_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGenericStaticBitmap_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2891,7 +2891,7 @@ sipClassTypeDef sipTypeDef__core_wxGenericStaticBitmap = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGenericStaticBitmap,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GenericStaticBitmap,
diff --git a/sip/cpp/sip_corewxGestureEvent.cpp b/sip/cpp/sip_corewxGestureEvent.cpp
index ba22a5b9..7931fc13 100644
--- sip/cpp/sip_corewxGestureEvent.cpp
+++ sip/cpp/sip_corewxGestureEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -317,7 +317,7 @@ static PyObject *meth_wxGestureEvent_SetGestureEnd(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxGestureEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxGestureEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxGestureEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGestureEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -480,7 +480,7 @@ sipClassTypeDef sipTypeDef__core_wxGestureEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGestureEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GestureEvent,
diff --git a/sip/cpp/sip_corewxGraphicsBitmap.cpp b/sip/cpp/sip_corewxGraphicsBitmap.cpp
index a5f38297..c3e6c9ae 100644
--- sip/cpp/sip_corewxGraphicsBitmap.cpp
+++ sip/cpp/sip_corewxGraphicsBitmap.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -217,7 +217,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsBitmap = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsBitmap,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsBitmap,
diff --git a/sip/cpp/sip_corewxGraphicsBrush.cpp b/sip/cpp/sip_corewxGraphicsBrush.cpp
index 419732fb..e9b80cff 100644
--- sip/cpp/sip_corewxGraphicsBrush.cpp
+++ sip/cpp/sip_corewxGraphicsBrush.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -122,7 +122,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsBrush = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsBrush,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsBrush,
diff --git a/sip/cpp/sip_corewxGraphicsContext.cpp b/sip/cpp/sip_corewxGraphicsContext.cpp
index 0673a308..25b64539 100644
--- sip/cpp/sip_corewxGraphicsContext.cpp
+++ sip/cpp/sip_corewxGraphicsContext.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2357,7 +2357,7 @@ static PyObject *meth_wxGraphicsContext_GetFullTextExtent(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGraphicsContext_GetTextExtent, "GetTextExtent(self, text: object) -> object");
+PyDoc_STRVAR(doc_wxGraphicsContext_GetTextExtent, "GetTextExtent(self, text: Any) -> Any");
 
 extern "C" {static PyObject *meth_wxGraphicsContext_GetTextExtent(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGraphicsContext_GetTextExtent(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3778,7 +3778,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsContext = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsContext,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsContext,
diff --git a/sip/cpp/sip_corewxGraphicsFont.cpp b/sip/cpp/sip_corewxGraphicsFont.cpp
index bcf56a12..06483601 100644
--- sip/cpp/sip_corewxGraphicsFont.cpp
+++ sip/cpp/sip_corewxGraphicsFont.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -122,7 +122,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsFont = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsFont,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsFont,
diff --git a/sip/cpp/sip_corewxGraphicsGradientStop.cpp b/sip/cpp/sip_corewxGraphicsGradientStop.cpp
index 2654005d..fa4af26c 100644
--- sip/cpp/sip_corewxGraphicsGradientStop.cpp
+++ sip/cpp/sip_corewxGraphicsGradientStop.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -283,7 +283,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsGradientStop = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsGradientStop,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsGradientStop,
diff --git a/sip/cpp/sip_corewxGraphicsGradientStops.cpp b/sip/cpp/sip_corewxGraphicsGradientStops.cpp
index 909fc1ee..2405ae49 100644
--- sip/cpp/sip_corewxGraphicsGradientStops.cpp
+++ sip/cpp/sip_corewxGraphicsGradientStops.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -519,7 +519,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsGradientStops = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsGradientStops,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsGradientStops,
diff --git a/sip/cpp/sip_corewxGraphicsMatrix.cpp b/sip/cpp/sip_corewxGraphicsMatrix.cpp
index 7149af9f..fad286f6 100644
--- sip/cpp/sip_corewxGraphicsMatrix.cpp
+++ sip/cpp/sip_corewxGraphicsMatrix.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -619,7 +619,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsMatrix = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsMatrix,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsMatrix,
diff --git a/sip/cpp/sip_corewxGraphicsObject.cpp b/sip/cpp/sip_corewxGraphicsObject.cpp
index 6c147324..fe65e639 100644
--- sip/cpp/sip_corewxGraphicsObject.cpp
+++ sip/cpp/sip_corewxGraphicsObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -321,7 +321,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsObject = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsObject,
diff --git a/sip/cpp/sip_corewxGraphicsPath.cpp b/sip/cpp/sip_corewxGraphicsPath.cpp
index 79c4c5fb..a32bd62a 100644
--- sip/cpp/sip_corewxGraphicsPath.cpp
+++ sip/cpp/sip_corewxGraphicsPath.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1082,7 +1082,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsPath = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsPath,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsPath,
diff --git a/sip/cpp/sip_corewxGraphicsPen.cpp b/sip/cpp/sip_corewxGraphicsPen.cpp
index f4e48637..64257bd9 100644
--- sip/cpp/sip_corewxGraphicsPen.cpp
+++ sip/cpp/sip_corewxGraphicsPen.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -122,7 +122,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsPen = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsPen,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsPen,
diff --git a/sip/cpp/sip_corewxGraphicsPenInfo.cpp b/sip/cpp/sip_corewxGraphicsPenInfo.cpp
index c8a24366..55209062 100644
--- sip/cpp/sip_corewxGraphicsPenInfo.cpp
+++ sip/cpp/sip_corewxGraphicsPenInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1185,7 +1185,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsPenInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsPenInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsPenInfo,
diff --git a/sip/cpp/sip_corewxGraphicsRenderer.cpp b/sip/cpp/sip_corewxGraphicsRenderer.cpp
index ddbc1941..9994e2e8 100644
--- sip/cpp/sip_corewxGraphicsRenderer.cpp
+++ sip/cpp/sip_corewxGraphicsRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1266,7 +1266,7 @@ sipClassTypeDef sipTypeDef__core_wxGraphicsRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGraphicsRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GraphicsRenderer,
diff --git a/sip/cpp/sip_corewxGridBagSizer.cpp b/sip/cpp/sip_corewxGridBagSizer.cpp
index 3d46ea63..64fc4834 100644
--- sip/cpp/sip_corewxGridBagSizer.cpp
+++ sip/cpp/sip_corewxGridBagSizer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1328,7 +1328,7 @@ sipClassTypeDef sipTypeDef__core_wxGridBagSizer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGridBagSizer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridBagSizer,
diff --git a/sip/cpp/sip_corewxGridSizer.cpp b/sip/cpp/sip_corewxGridSizer.cpp
index 0ae62835..40f59a42 100644
--- sip/cpp/sip_corewxGridSizer.cpp
+++ sip/cpp/sip_corewxGridSizer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -798,7 +798,7 @@ sipClassTypeDef sipTypeDef__core_wxGridSizer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGridSizer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridSizer,
diff --git a/sip/cpp/sip_corewxHScrolledWindow.cpp b/sip/cpp/sip_corewxHScrolledWindow.cpp
index 221f94e5..ed68edd8 100644
--- sip/cpp/sip_corewxHScrolledWindow.cpp
+++ sip/cpp/sip_corewxHScrolledWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1879,7 +1879,7 @@ static PyObject *meth_wxHScrolledWindow_AcceptsFocusFromKeyboard(PyObject *sipSe
 }
 
 
-PyDoc_STRVAR(doc_wxHScrolledWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHScrolledWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHScrolledWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHScrolledWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1917,7 +1917,7 @@ static PyObject *meth_wxHScrolledWindow_AddChild(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxHScrolledWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHScrolledWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHScrolledWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHScrolledWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2055,7 +2055,7 @@ static PyObject *meth_wxHScrolledWindow_OnInternalIdle(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxHScrolledWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHScrolledWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHScrolledWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHScrolledWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2242,7 +2242,7 @@ static PyObject *meth_wxHScrolledWindow_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHScrolledWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHScrolledWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHScrolledWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHScrolledWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2391,7 +2391,7 @@ static PyObject *meth_wxHScrolledWindow_DoEnable(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxHScrolledWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHScrolledWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHScrolledWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHScrolledWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2425,7 +2425,7 @@ static PyObject *meth_wxHScrolledWindow_DoGetPosition(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxHScrolledWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHScrolledWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHScrolledWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHScrolledWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2459,7 +2459,7 @@ static PyObject *meth_wxHScrolledWindow_DoGetSize(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHScrolledWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHScrolledWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHScrolledWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHScrolledWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3263,7 +3263,7 @@ sipClassTypeDef sipTypeDef__core_wxHScrolledWindow = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHScrolledWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HScrolledWindow,
diff --git a/sip/cpp/sip_corewxHTMLDataObject.cpp b/sip/cpp/sip_corewxHTMLDataObject.cpp
index 3905de7c..588e8489 100644
--- sip/cpp/sip_corewxHTMLDataObject.cpp
+++ sip/cpp/sip_corewxHTMLDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -518,7 +518,7 @@ static PyObject *meth_wxHTMLDataObject_GetDataSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHTMLDataObject_GetDataHere, "GetDataHere(self, buf: wx.siplib.voidptr) -> bool");
+PyDoc_STRVAR(doc_wxHTMLDataObject_GetDataHere, "GetDataHere(self, buf: Optional[wx.siplib.voidptr]) -> bool");
 
 extern "C" {static PyObject *meth_wxHTMLDataObject_GetDataHere(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHTMLDataObject_GetDataHere(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -681,7 +681,7 @@ sipClassTypeDef sipTypeDef__core_wxHTMLDataObject = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHTMLDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HTMLDataObject,
diff --git a/sip/cpp/sip_corewxHVScrolledWindow.cpp b/sip/cpp/sip_corewxHVScrolledWindow.cpp
index 893b7559..f1cf931b 100644
--- sip/cpp/sip_corewxHVScrolledWindow.cpp
+++ sip/cpp/sip_corewxHVScrolledWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1877,7 +1877,7 @@ static PyObject *meth_wxHVScrolledWindow_AcceptsFocusFromKeyboard(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxHVScrolledWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHVScrolledWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHVScrolledWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHVScrolledWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1915,7 +1915,7 @@ static PyObject *meth_wxHVScrolledWindow_AddChild(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHVScrolledWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHVScrolledWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHVScrolledWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHVScrolledWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2053,7 +2053,7 @@ static PyObject *meth_wxHVScrolledWindow_OnInternalIdle(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxHVScrolledWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHVScrolledWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHVScrolledWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHVScrolledWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2240,7 +2240,7 @@ static PyObject *meth_wxHVScrolledWindow_SetValidator(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxHVScrolledWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHVScrolledWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHVScrolledWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHVScrolledWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2389,7 +2389,7 @@ static PyObject *meth_wxHVScrolledWindow_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHVScrolledWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHVScrolledWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHVScrolledWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHVScrolledWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2423,7 +2423,7 @@ static PyObject *meth_wxHVScrolledWindow_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxHVScrolledWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHVScrolledWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHVScrolledWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHVScrolledWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2457,7 +2457,7 @@ static PyObject *meth_wxHVScrolledWindow_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHVScrolledWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHVScrolledWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHVScrolledWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHVScrolledWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3258,7 +3258,7 @@ sipClassTypeDef sipTypeDef__core_wxHVScrolledWindow = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHVScrolledWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HVScrolledWindow,
diff --git a/sip/cpp/sip_corewxHeaderButtonParams.cpp b/sip/cpp/sip_corewxHeaderButtonParams.cpp
index 0af2fc8b..73f42111 100644
--- sip/cpp/sip_corewxHeaderButtonParams.cpp
+++ sip/cpp/sip_corewxHeaderButtonParams.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -413,7 +413,7 @@ sipClassTypeDef sipTypeDef__core_wxHeaderButtonParams = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHeaderButtonParams,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HeaderButtonParams,
diff --git a/sip/cpp/sip_corewxHeaderColumn.cpp b/sip/cpp/sip_corewxHeaderColumn.cpp
index 47b9cd1d..a5471995 100644
--- sip/cpp/sip_corewxHeaderColumn.cpp
+++ sip/cpp/sip_corewxHeaderColumn.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -967,7 +967,7 @@ sipClassTypeDef sipTypeDef__core_wxHeaderColumn = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxHeaderColumn,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HeaderColumn,
diff --git a/sip/cpp/sip_corewxHeaderColumnSimple.cpp b/sip/cpp/sip_corewxHeaderColumnSimple.cpp
index b04cbc01..8b8c275c 100644
--- sip/cpp/sip_corewxHeaderColumnSimple.cpp
+++ sip/cpp/sip_corewxHeaderColumnSimple.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1283,7 +1283,7 @@ sipClassTypeDef sipTypeDef__core_wxHeaderColumnSimple = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHeaderColumnSimple,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HeaderColumnSimple,
diff --git a/sip/cpp/sip_corewxHeaderCtrl.cpp b/sip/cpp/sip_corewxHeaderCtrl.cpp
index b109c30b..9fe42946 100644
--- sip/cpp/sip_corewxHeaderCtrl.cpp
+++ sip/cpp/sip_corewxHeaderCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1961,7 +1961,7 @@ static PyObject *meth_wxHeaderCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHeaderCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1999,7 +1999,7 @@ static PyObject *meth_wxHeaderCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHeaderCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2137,7 +2137,7 @@ static PyObject *meth_wxHeaderCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHeaderCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHeaderCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2324,7 +2324,7 @@ static PyObject *meth_wxHeaderCtrl_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHeaderCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHeaderCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2473,7 +2473,7 @@ static PyObject *meth_wxHeaderCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHeaderCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2507,7 +2507,7 @@ static PyObject *meth_wxHeaderCtrl_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHeaderCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2541,7 +2541,7 @@ static PyObject *meth_wxHeaderCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHeaderCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3575,7 +3575,7 @@ sipClassTypeDef sipTypeDef__core_wxHeaderCtrl = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHeaderCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HeaderCtrl,
diff --git a/sip/cpp/sip_corewxHeaderCtrlEvent.cpp b/sip/cpp/sip_corewxHeaderCtrlEvent.cpp
index 893d35ce..46478565 100644
--- sip/cpp/sip_corewxHeaderCtrlEvent.cpp
+++ sip/cpp/sip_corewxHeaderCtrlEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -302,7 +302,7 @@ static PyObject *meth_wxHeaderCtrlEvent_SetNewOrder(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxHeaderCtrlEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -480,7 +480,7 @@ sipClassTypeDef sipTypeDef__core_wxHeaderCtrlEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHeaderCtrlEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HeaderCtrlEvent,
diff --git a/sip/cpp/sip_corewxHeaderCtrlSimple.cpp b/sip/cpp/sip_corewxHeaderCtrlSimple.cpp
index cd01c56d..b52d0169 100644
--- sip/cpp/sip_corewxHeaderCtrlSimple.cpp
+++ sip/cpp/sip_corewxHeaderCtrlSimple.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1611,7 +1611,7 @@ static PyObject *meth_wxHeaderCtrlSimple_AcceptsFocusFromKeyboard(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlSimple_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHeaderCtrlSimple_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlSimple_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlSimple_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1649,7 +1649,7 @@ static PyObject *meth_wxHeaderCtrlSimple_AddChild(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlSimple_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHeaderCtrlSimple_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlSimple_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlSimple_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1787,7 +1787,7 @@ static PyObject *meth_wxHeaderCtrlSimple_OnInternalIdle(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlSimple_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHeaderCtrlSimple_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlSimple_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlSimple_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1974,7 +1974,7 @@ static PyObject *meth_wxHeaderCtrlSimple_SetValidator(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlSimple_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHeaderCtrlSimple_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlSimple_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlSimple_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2123,7 +2123,7 @@ static PyObject *meth_wxHeaderCtrlSimple_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlSimple_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHeaderCtrlSimple_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlSimple_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlSimple_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2157,7 +2157,7 @@ static PyObject *meth_wxHeaderCtrlSimple_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlSimple_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHeaderCtrlSimple_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlSimple_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlSimple_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2191,7 +2191,7 @@ static PyObject *meth_wxHeaderCtrlSimple_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlSimple_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHeaderCtrlSimple_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlSimple_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlSimple_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2914,7 +2914,7 @@ static PyObject *meth_wxHeaderCtrlSimple_UpdateColumnVisibility(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxHeaderCtrlSimple_UpdateColumnsOrder, "UpdateColumnsOrder(self, order: object)");
+PyDoc_STRVAR(doc_wxHeaderCtrlSimple_UpdateColumnsOrder, "UpdateColumnsOrder(self, order: Any)");
 
 extern "C" {static PyObject *meth_wxHeaderCtrlSimple_UpdateColumnsOrder(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHeaderCtrlSimple_UpdateColumnsOrder(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3242,7 +3242,7 @@ sipClassTypeDef sipTypeDef__core_wxHeaderCtrlSimple = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHeaderCtrlSimple,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HeaderCtrlSimple,
diff --git a/sip/cpp/sip_corewxHelpControllerBase.cpp b/sip/cpp/sip_corewxHelpControllerBase.cpp
index 0def31fa..d1f3ddc3 100644
--- sip/cpp/sip_corewxHelpControllerBase.cpp
+++ sip/cpp/sip_corewxHelpControllerBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1159,7 +1159,7 @@ sipClassTypeDef sipTypeDef__core_wxHelpControllerBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHelpControllerBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HelpControllerBase,
diff --git a/sip/cpp/sip_corewxHelpControllerHelpProvider.cpp b/sip/cpp/sip_corewxHelpControllerHelpProvider.cpp
index ab94af03..1c2175f8 100644
--- sip/cpp/sip_corewxHelpControllerHelpProvider.cpp
+++ sip/cpp/sip_corewxHelpControllerHelpProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -344,7 +344,7 @@ sipClassTypeDef sipTypeDef__core_wxHelpControllerHelpProvider = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHelpControllerHelpProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HelpControllerHelpProvider,
diff --git a/sip/cpp/sip_corewxHelpEvent.cpp b/sip/cpp/sip_corewxHelpEvent.cpp
index 15934bec..5e2f2826 100644
--- sip/cpp/sip_corewxHelpEvent.cpp
+++ sip/cpp/sip_corewxHelpEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -238,7 +238,7 @@ static PyObject *meth_wxHelpEvent_SetPosition(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxHelpEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxHelpEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxHelpEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxHelpEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -413,7 +413,7 @@ sipClassTypeDef sipTypeDef__core_wxHelpEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHelpEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HelpEvent,
diff --git a/sip/cpp/sip_corewxHelpProvider.cpp b/sip/cpp/sip_corewxHelpProvider.cpp
index e2dc6a0d..2a2c2b34 100644
--- sip/cpp/sip_corewxHelpProvider.cpp
+++ sip/cpp/sip_corewxHelpProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -382,7 +382,7 @@ sipClassTypeDef sipTypeDef__core_wxHelpProvider = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxHelpProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HelpProvider,
diff --git a/sip/cpp/sip_corewxIFFHandler.cpp b/sip/cpp/sip_corewxIFFHandler.cpp
index 90c3da18..a15c3e40 100644
--- sip/cpp/sip_corewxIFFHandler.cpp
+++ sip/cpp/sip_corewxIFFHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -421,7 +421,7 @@ sipClassTypeDef sipTypeDef__core_wxIFFHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxIFFHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IFFHandler,
diff --git a/sip/cpp/sip_corewxIcon.cpp b/sip/cpp/sip_corewxIcon.cpp
index 6bd02cda..c69b04dc 100644
--- sip/cpp/sip_corewxIcon.cpp
+++ sip/cpp/sip_corewxIcon.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1006,7 +1006,7 @@ sipClassTypeDef sipTypeDef__core_wxIcon = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxIcon,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Icon,
diff --git a/sip/cpp/sip_corewxIconBundle.cpp b/sip/cpp/sip_corewxIconBundle.cpp
index 81ea5f43..51431535 100644
--- sip/cpp/sip_corewxIconBundle.cpp
+++ sip/cpp/sip_corewxIconBundle.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -653,7 +653,7 @@ sipClassTypeDef sipTypeDef__core_wxIconBundle = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxIconBundle,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IconBundle,
diff --git a/sip/cpp/sip_corewxIconLocation.cpp b/sip/cpp/sip_corewxIconLocation.cpp
index f827e7a8..eccc9340 100644
--- sip/cpp/sip_corewxIconLocation.cpp
+++ sip/cpp/sip_corewxIconLocation.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -411,7 +411,7 @@ sipClassTypeDef sipTypeDef__core_wxIconLocation = {
         SIP_TYPE_CLASS,
         sipNameNr_wxIconLocation,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IconLocation,
diff --git a/sip/cpp/sip_corewxIconizeEvent.cpp b/sip/cpp/sip_corewxIconizeEvent.cpp
index fc315412..a743d866 100644
--- sip/cpp/sip_corewxIconizeEvent.cpp
+++ sip/cpp/sip_corewxIconizeEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -122,7 +122,7 @@ static PyObject *meth_wxIconizeEvent_IsIconized(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxIconizeEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxIconizeEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxIconizeEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxIconizeEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -277,7 +277,7 @@ sipClassTypeDef sipTypeDef__core_wxIconizeEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxIconizeEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IconizeEvent,
diff --git a/sip/cpp/sip_corewxIdManager.cpp b/sip/cpp/sip_corewxIdManager.cpp
index f2002c4d..47e8de7f 100644
--- sip/cpp/sip_corewxIdManager.cpp
+++ sip/cpp/sip_corewxIdManager.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -185,7 +185,7 @@ sipClassTypeDef sipTypeDef__core_wxIdManager = {
         SIP_TYPE_CLASS,
         sipNameNr_wxIdManager,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IdManager,
diff --git a/sip/cpp/sip_corewxIdleEvent.cpp b/sip/cpp/sip_corewxIdleEvent.cpp
index 10bdbf3f..5f27161b 100644
--- sip/cpp/sip_corewxIdleEvent.cpp
+++ sip/cpp/sip_corewxIdleEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -236,7 +236,7 @@ static PyObject *meth_wxIdleEvent_SetMode(PyObject *, PyObject *sipArgs, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxIdleEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxIdleEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxIdleEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxIdleEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -386,7 +386,7 @@ sipClassTypeDef sipTypeDef__core_wxIdleEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxIdleEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IdleEvent,
diff --git a/sip/cpp/sip_corewxImage.cpp b/sip/cpp/sip_corewxImage.cpp
index 8d0f280b..d32dc9ab 100644
--- sip/cpp/sip_corewxImage.cpp
+++ sip/cpp/sip_corewxImage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -5348,7 +5348,7 @@ sipClassTypeDef sipTypeDef__core_wxImage = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxImage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Image,
diff --git a/sip/cpp/sip_corewxImageArray.cpp b/sip/cpp/sip_corewxImageArray.cpp
index 0f4e68ef..853e5a5f 100644
--- sip/cpp/sip_corewxImageArray.cpp
+++ sip/cpp/sip_corewxImageArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__core_wxImageArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxImageArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ImageArray,
diff --git a/sip/cpp/sip_corewxImageDataObject.cpp b/sip/cpp/sip_corewxImageDataObject.cpp
index 8310f606..2a880c38 100644
--- sip/cpp/sip_corewxImageDataObject.cpp
+++ sip/cpp/sip_corewxImageDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -512,7 +512,7 @@ sipClassTypeDef sipTypeDef__core_wxImageDataObject = {
         SIP_TYPE_CLASS,
         sipNameNr_wxImageDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ImageDataObject,
diff --git a/sip/cpp/sip_corewxImageHSVValue.cpp b/sip/cpp/sip_corewxImageHSVValue.cpp
index 19c4ac64..51378319 100644
--- sip/cpp/sip_corewxImageHSVValue.cpp
+++ sip/cpp/sip_corewxImageHSVValue.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -213,7 +213,7 @@ sipClassTypeDef sipTypeDef__core_wxImage_HSVValue = {
         SIP_TYPE_CLASS,
         sipNameNr_wxImage__HSVValue,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HSVValue,
diff --git a/sip/cpp/sip_corewxImageHandler.cpp b/sip/cpp/sip_corewxImageHandler.cpp
index 36a8cc51..5e2a1e14 100644
--- sip/cpp/sip_corewxImageHandler.cpp
+++ sip/cpp/sip_corewxImageHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -934,7 +934,7 @@ sipClassTypeDef sipTypeDef__core_wxImageHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxImageHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ImageHandler,
diff --git a/sip/cpp/sip_corewxImageHistogram.cpp b/sip/cpp/sip_corewxImageHistogram.cpp
index 4df87eb1..4b8ff0b1 100644
--- sip/cpp/sip_corewxImageHistogram.cpp
+++ sip/cpp/sip_corewxImageHistogram.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -196,7 +196,7 @@ sipClassTypeDef sipTypeDef__core_wxImageHistogram = {
         SIP_TYPE_CLASS,
         sipNameNr_wxImageHistogram,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ImageHistogram,
diff --git a/sip/cpp/sip_corewxImageList.cpp b/sip/cpp/sip_corewxImageList.cpp
index a0347d1f..0346c058 100644
--- sip/cpp/sip_corewxImageList.cpp
+++ sip/cpp/sip_corewxImageList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -715,7 +715,7 @@ sipClassTypeDef sipTypeDef__core_wxImageList = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxImageList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ImageList,
diff --git a/sip/cpp/sip_corewxImageRGBValue.cpp b/sip/cpp/sip_corewxImageRGBValue.cpp
index 7c6f929f..c610c7ff 100644
--- sip/cpp/sip_corewxImageRGBValue.cpp
+++ sip/cpp/sip_corewxImageRGBValue.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -213,7 +213,7 @@ sipClassTypeDef sipTypeDef__core_wxImage_RGBValue = {
         SIP_TYPE_CLASS,
         sipNameNr_wxImage__RGBValue,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RGBValue,
diff --git a/sip/cpp/sip_corewxIndividualLayoutConstraint.cpp b/sip/cpp/sip_corewxIndividualLayoutConstraint.cpp
index e695b962..ab8c0d71 100644
--- sip/cpp/sip_corewxIndividualLayoutConstraint.cpp
+++ sip/cpp/sip_corewxIndividualLayoutConstraint.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1167,7 +1167,7 @@ sipClassTypeDef sipTypeDef__core_wxIndividualLayoutConstraint = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxIndividualLayoutConstraint,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IndividualLayoutConstraint,
diff --git a/sip/cpp/sip_corewxInfoBar.cpp b/sip/cpp/sip_corewxInfoBar.cpp
index c6eeead4..4051aab3 100644
--- sip/cpp/sip_corewxInfoBar.cpp
+++ sip/cpp/sip_corewxInfoBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1762,7 +1762,7 @@ static PyObject *meth_wxInfoBar_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxInfoBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxInfoBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxInfoBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxInfoBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1800,7 +1800,7 @@ static PyObject *meth_wxInfoBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxInfoBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxInfoBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxInfoBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxInfoBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1938,7 +1938,7 @@ static PyObject *meth_wxInfoBar_OnInternalIdle(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxInfoBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxInfoBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxInfoBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxInfoBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2125,7 +2125,7 @@ static PyObject *meth_wxInfoBar_SetValidator(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxInfoBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxInfoBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxInfoBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxInfoBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2274,7 +2274,7 @@ static PyObject *meth_wxInfoBar_DoEnable(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxInfoBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxInfoBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxInfoBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxInfoBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2308,7 +2308,7 @@ static PyObject *meth_wxInfoBar_DoGetPosition(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxInfoBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxInfoBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxInfoBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxInfoBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2342,7 +2342,7 @@ static PyObject *meth_wxInfoBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxInfoBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxInfoBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxInfoBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxInfoBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3143,7 +3143,7 @@ sipClassTypeDef sipTypeDef__core_wxInfoBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxInfoBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_InfoBar,
diff --git a/sip/cpp/sip_corewxInitDialogEvent.cpp b/sip/cpp/sip_corewxInitDialogEvent.cpp
index 7558b486..81679d6a 100644
--- sip/cpp/sip_corewxInitDialogEvent.cpp
+++ sip/cpp/sip_corewxInitDialogEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -86,7 +86,7 @@ sipwxInitDialogEvent::~sipwxInitDialogEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxInitDialogEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxInitDialogEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxInitDialogEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxInitDialogEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -237,7 +237,7 @@ sipClassTypeDef sipTypeDef__core_wxInitDialogEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxInitDialogEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_InitDialogEvent,
diff --git a/sip/cpp/sip_corewxInputStream.cpp b/sip/cpp/sip_corewxInputStream.cpp
index 1a6f05d3..9813e0d9 100644
--- sip/cpp/sip_corewxInputStream.cpp
+++ sip/cpp/sip_corewxInputStream.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1191,7 +1191,7 @@ sipClassTypeDef sipTypeDef__core_wxInputStream = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxInputStream,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_InputStream,
diff --git a/sip/cpp/sip_corewxIntCArrayHolder.cpp b/sip/cpp/sip_corewxIntCArrayHolder.cpp
index 867d0122..6341f5af 100644
--- sip/cpp/sip_corewxIntCArrayHolder.cpp
+++ sip/cpp/sip_corewxIntCArrayHolder.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -72,7 +72,7 @@ sipClassTypeDef sipTypeDef__core_wxIntCArrayHolder = {
         SIP_TYPE_CLASS,
         sipNameNr_wxIntCArrayHolder,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IntCArrayHolder,
diff --git a/sip/cpp/sip_corewxIntPtr.cpp b/sip/cpp/sip_corewxIntPtr.cpp
index 34a8f929..38f25952 100644
--- sip/cpp/sip_corewxIntPtr.cpp
+++ sip/cpp/sip_corewxIntPtr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -87,15 +87,15 @@ sipMappedTypeDef sipTypeDef__core_wxIntPtr = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxIntPtr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxIntPtr,
     array_wxIntPtr,
diff --git a/sip/cpp/sip_corewxInternetFSHandler.cpp b/sip/cpp/sip_corewxInternetFSHandler.cpp
index 10bf2d76..336b9902 100644
--- sip/cpp/sip_corewxInternetFSHandler.cpp
+++ sip/cpp/sip_corewxInternetFSHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -306,7 +306,7 @@ static PyObject *meth_wxInternetFSHandler_GetRightLocation(PyObject *, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxInternetFSHandler_CanOpen, "CanOpen(self, location: object) -> bool");
+PyDoc_STRVAR(doc_wxInternetFSHandler_CanOpen, "CanOpen(self, location: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxInternetFSHandler_CanOpen(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxInternetFSHandler_CanOpen(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -347,7 +347,7 @@ static PyObject *meth_wxInternetFSHandler_CanOpen(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxInternetFSHandler_OpenFile, "OpenFile(self, fs: FileSystem, location: object) -> FSFile");
+PyDoc_STRVAR(doc_wxInternetFSHandler_OpenFile, "OpenFile(self, fs: FileSystem, location: Any) -> Optional[FSFile]");
 
 extern "C" {static PyObject *meth_wxInternetFSHandler_OpenFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxInternetFSHandler_OpenFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -390,7 +390,7 @@ static PyObject *meth_wxInternetFSHandler_OpenFile(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxInternetFSHandler_FindFirst, "FindFirst(self, spec: object, flags: int = 0) -> object");
+PyDoc_STRVAR(doc_wxInternetFSHandler_FindFirst, "FindFirst(self, spec: Any, flags: int = 0) -> Any");
 
 extern "C" {static PyObject *meth_wxInternetFSHandler_FindFirst(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxInternetFSHandler_FindFirst(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -433,7 +433,7 @@ static PyObject *meth_wxInternetFSHandler_FindFirst(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxInternetFSHandler_FindNext, "FindNext(self) -> object");
+PyDoc_STRVAR(doc_wxInternetFSHandler_FindNext, "FindNext(self) -> Any");
 
 extern "C" {static PyObject *meth_wxInternetFSHandler_FindNext(PyObject *, PyObject *);}
 static PyObject *meth_wxInternetFSHandler_FindNext(PyObject *sipSelf, PyObject *sipArgs)
@@ -577,7 +577,7 @@ sipClassTypeDef sipTypeDef__core_wxInternetFSHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxInternetFSHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_InternetFSHandler,
diff --git a/sip/cpp/sip_corewxItemAttr.cpp b/sip/cpp/sip_corewxItemAttr.cpp
index f1159736..ad2c9563 100644
--- sip/cpp/sip_corewxItemAttr.cpp
+++ sip/cpp/sip_corewxItemAttr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -646,7 +646,7 @@ sipClassTypeDef sipTypeDef__core_wxItemAttr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxItemAttr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ItemAttr,
diff --git a/sip/cpp/sip_corewxItemContainer.cpp b/sip/cpp/sip_corewxItemContainer.cpp
index aab0bcba..e928ee5e 100644
--- sip/cpp/sip_corewxItemContainer.cpp
+++ sip/cpp/sip_corewxItemContainer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -645,7 +645,7 @@ sipClassTypeDef sipTypeDef__core_wxItemContainer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxItemContainer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ItemContainer,
diff --git a/sip/cpp/sip_corewxItemContainerImmutable.cpp b/sip/cpp/sip_corewxItemContainerImmutable.cpp
index 542bb05f..236c4341 100644
--- sip/cpp/sip_corewxItemContainerImmutable.cpp
+++ sip/cpp/sip_corewxItemContainerImmutable.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -532,7 +532,7 @@ sipClassTypeDef sipTypeDef__core_wxItemContainerImmutable = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxItemContainerImmutable,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ItemContainerImmutable,
diff --git a/sip/cpp/sip_corewxJPEGHandler.cpp b/sip/cpp/sip_corewxJPEGHandler.cpp
index 620164ff..918e0076 100644
--- sip/cpp/sip_corewxJPEGHandler.cpp
+++ sip/cpp/sip_corewxJPEGHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -457,7 +457,7 @@ sipClassTypeDef sipTypeDef__core_wxJPEGHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxJPEGHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_JPEGHandler,
diff --git a/sip/cpp/sip_corewxJoystickEvent.cpp b/sip/cpp/sip_corewxJoystickEvent.cpp
index 71c21f67..5c61400b 100644
--- sip/cpp/sip_corewxJoystickEvent.cpp
+++ sip/cpp/sip_corewxJoystickEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -527,7 +527,7 @@ static PyObject *meth_wxJoystickEvent_IsZMove(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxJoystickEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxJoystickEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxJoystickEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxJoystickEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -706,7 +706,7 @@ sipClassTypeDef sipTypeDef__core_wxJoystickEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxJoystickEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_JoystickEvent,
diff --git a/sip/cpp/sip_corewxKeyEvent.cpp b/sip/cpp/sip_corewxKeyEvent.cpp
index a047eb3f..b8d1ce5f 100644
--- sip/cpp/sip_corewxKeyEvent.cpp
+++ sip/cpp/sip_corewxKeyEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -646,7 +646,7 @@ static PyObject *meth_wxKeyEvent_SetUnicodeKey(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxKeyEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxKeyEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxKeyEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxKeyEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -826,7 +826,7 @@ sipClassTypeDef sipTypeDef__core_wxKeyEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxKeyEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_KeyEvent,
diff --git a/sip/cpp/sip_corewxKeyboardState.cpp b/sip/cpp/sip_corewxKeyboardState.cpp
index 56b8075b..447589d9 100644
--- sip/cpp/sip_corewxKeyboardState.cpp
+++ sip/cpp/sip_corewxKeyboardState.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -648,7 +648,7 @@ sipClassTypeDef sipTypeDef__core_wxKeyboardState = {
         SIP_TYPE_CLASS,
         sipNameNr_wxKeyboardState,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_KeyboardState,
diff --git a/sip/cpp/sip_corewxLanguageInfo.cpp b/sip/cpp/sip_corewxLanguageInfo.cpp
index 5371d7e0..7c6b2795 100644
--- sip/cpp/sip_corewxLanguageInfo.cpp
+++ sip/cpp/sip_corewxLanguageInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -411,7 +411,7 @@ sipClassTypeDef sipTypeDef__core_wxLanguageInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLanguageInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LanguageInfo,
diff --git a/sip/cpp/sip_corewxLayoutConstraints.cpp b/sip/cpp/sip_corewxLayoutConstraints.cpp
index 70084055..0067604d 100644
--- sip/cpp/sip_corewxLayoutConstraints.cpp
+++ sip/cpp/sip_corewxLayoutConstraints.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -610,7 +610,7 @@ sipClassTypeDef sipTypeDef__core_wxLayoutConstraints = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxLayoutConstraints,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LayoutConstraints,
diff --git a/sip/cpp/sip_corewxLinuxDistributionInfo.cpp b/sip/cpp/sip_corewxLinuxDistributionInfo.cpp
index 992e4a6d..0d55b7f5 100644
--- sip/cpp/sip_corewxLinuxDistributionInfo.cpp
+++ sip/cpp/sip_corewxLinuxDistributionInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -318,7 +318,7 @@ sipClassTypeDef sipTypeDef__core_wxLinuxDistributionInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLinuxDistributionInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LinuxDistributionInfo,
diff --git a/sip/cpp/sip_corewxListBox.cpp b/sip/cpp/sip_corewxListBox.cpp
index 6896fb12..f2422294 100644
--- sip/cpp/sip_corewxListBox.cpp
+++ sip/cpp/sip_corewxListBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2394,7 +2394,7 @@ static PyObject *meth_wxListBox_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxListBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxListBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxListBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2432,7 +2432,7 @@ static PyObject *meth_wxListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxListBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxListBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxListBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2570,7 +2570,7 @@ static PyObject *meth_wxListBox_OnInternalIdle(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxListBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxListBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2757,7 +2757,7 @@ static PyObject *meth_wxListBox_SetValidator(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxListBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxListBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxListBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxListBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2906,7 +2906,7 @@ static PyObject *meth_wxListBox_DoEnable(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxListBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2940,7 +2940,7 @@ static PyObject *meth_wxListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxListBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2974,7 +2974,7 @@ static PyObject *meth_wxListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3812,7 +3812,7 @@ sipClassTypeDef sipTypeDef__core_wxListBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxListBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ListBox,
diff --git a/sip/cpp/sip_corewxListCtrl.cpp b/sip/cpp/sip_corewxListCtrl.cpp
index 1e59b30e..a95e62f5 100644
--- sip/cpp/sip_corewxListCtrl.cpp
+++ sip/cpp/sip_corewxListCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -5085,7 +5085,7 @@ static PyObject *meth_wxListCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxListCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxListCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxListCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5123,7 +5123,7 @@ static PyObject *meth_wxListCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxListCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxListCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5261,7 +5261,7 @@ static PyObject *meth_wxListCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxListCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxListCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxListCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxListCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -5448,7 +5448,7 @@ static PyObject *meth_wxListCtrl_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxListCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxListCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxListCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxListCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -5597,7 +5597,7 @@ static PyObject *meth_wxListCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5631,7 +5631,7 @@ static PyObject *meth_wxListCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxListCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5665,7 +5665,7 @@ static PyObject *meth_wxListCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -6943,7 +6943,7 @@ sipClassTypeDef sipTypeDef__core_wxListCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxListCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ListCtrl,
diff --git a/sip/cpp/sip_corewxListEvent.cpp b/sip/cpp/sip_corewxListEvent.cpp
index 4c017b2e..ff8a70c1 100644
--- sip/cpp/sip_corewxListEvent.cpp
+++ sip/cpp/sip_corewxListEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -813,7 +813,7 @@ static PyObject *meth_wxListEvent_SetCacheTo(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxListEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxListEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxListEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxListEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -1002,7 +1002,7 @@ sipClassTypeDef sipTypeDef__core_wxListEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxListEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ListEvent,
diff --git a/sip/cpp/sip_corewxListItem.cpp b/sip/cpp/sip_corewxListItem.cpp
index 553feef1..8c0fbe62 100644
--- sip/cpp/sip_corewxListItem.cpp
+++ sip/cpp/sip_corewxListItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1149,7 +1149,7 @@ sipClassTypeDef sipTypeDef__core_wxListItem = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxListItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ListItem,
diff --git a/sip/cpp/sip_corewxListView.cpp b/sip/cpp/sip_corewxListView.cpp
index 12a7f552..b95fa697 100644
--- sip/cpp/sip_corewxListView.cpp
+++ sip/cpp/sip_corewxListView.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1838,7 +1838,7 @@ static PyObject *meth_wxListView_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxListView_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxListView_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxListView_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListView_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1876,7 +1876,7 @@ static PyObject *meth_wxListView_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListView_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxListView_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxListView_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListView_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2014,7 +2014,7 @@ static PyObject *meth_wxListView_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxListView_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxListView_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxListView_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxListView_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2201,7 +2201,7 @@ static PyObject *meth_wxListView_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxListView_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxListView_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxListView_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxListView_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2350,7 +2350,7 @@ static PyObject *meth_wxListView_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListView_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListView_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListView_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListView_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2384,7 +2384,7 @@ static PyObject *meth_wxListView_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxListView_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListView_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListView_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListView_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2418,7 +2418,7 @@ static PyObject *meth_wxListView_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListView_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListView_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListView_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListView_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3225,7 +3225,7 @@ PyDoc_STRVAR(doc_wxListView, "ListView()\n"
 "ListView(parent, winid=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=LC_REPORT, validator=DefaultValidator, name=ListCtrlNameStr)\n"
 "\n"
 "This class currently simply presents a simpler to use interface for\n"
-"the wxListCtrl  it can be thought of as a fa\303\247ade for that complicated\n"
+"the wxListCtrl  it can be thought of as a façade for that complicated\n"
 "class.");
 
 
@@ -3237,7 +3237,7 @@ sipClassTypeDef sipTypeDef__core_wxListView = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxListView,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ListView,
diff --git a/sip/cpp/sip_corewxListbook.cpp b/sip/cpp/sip_corewxListbook.cpp
index cd4e39a5..664bce88 100644
--- sip/cpp/sip_corewxListbook.cpp
+++ sip/cpp/sip_corewxListbook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1586,7 +1586,7 @@ static PyObject *meth_wxListbook_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxListbook_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxListbook_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1624,7 +1624,7 @@ static PyObject *meth_wxListbook_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxListbook_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxListbook_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1762,7 +1762,7 @@ static PyObject *meth_wxListbook_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxListbook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxListbook_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1949,7 +1949,7 @@ static PyObject *meth_wxListbook_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxListbook_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxListbook_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2098,7 +2098,7 @@ static PyObject *meth_wxListbook_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListbook_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListbook_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2132,7 +2132,7 @@ static PyObject *meth_wxListbook_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListbook_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListbook_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2166,7 +2166,7 @@ static PyObject *meth_wxListbook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListbook_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxListbook_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2848,7 +2848,7 @@ static PyObject *meth_wxListbook_SetPageImage(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_GetPageText, "GetPageText(self, nPage: int) -> object");
+PyDoc_STRVAR(doc_wxListbook_GetPageText, "GetPageText(self, nPage: int) -> Any");
 
 extern "C" {static PyObject *meth_wxListbook_GetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_GetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2887,7 +2887,7 @@ static PyObject *meth_wxListbook_GetPageText(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_SetPageText, "SetPageText(self, page: int, text: object) -> bool");
+PyDoc_STRVAR(doc_wxListbook_SetPageText, "SetPageText(self, page: int, text: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxListbook_SetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_SetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3042,7 +3042,7 @@ static PyObject *meth_wxListbook_ChangeSelection(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_HitTest, "HitTest(self, pt: Point) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxListbook_HitTest, "HitTest(self, pt: Point) -> (int, Optional[int])");
 
 extern "C" {static PyObject *meth_wxListbook_HitTest(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_HitTest(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3084,7 +3084,7 @@ static PyObject *meth_wxListbook_HitTest(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxListbook_InsertPage, "InsertPage(self, index: int, page: Window, text: object, select: bool = False, imageId: int = wxBookCtrlBase.NO_IMAGE) -> bool");
+PyDoc_STRVAR(doc_wxListbook_InsertPage, "InsertPage(self, index: int, page: Optional[Window], text: Any, select: bool = False, imageId: int = wxBookCtrlBase.NO_IMAGE) -> bool");
 
 extern "C" {static PyObject *meth_wxListbook_InsertPage(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxListbook_InsertPage(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3371,7 +3371,7 @@ sipClassTypeDef sipTypeDef__core_wxListbook = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxListbook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Listbook,
diff --git a/sip/cpp/sip_corewxLocale.cpp b/sip/cpp/sip_corewxLocale.cpp
index f26a06a6..3436cb68 100644
--- sip/cpp/sip_corewxLocale.cpp
+++ sip/cpp/sip_corewxLocale.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1326,7 +1326,7 @@ sipClassTypeDef sipTypeDef__core_wxLocale = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLocale,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Locale,
diff --git a/sip/cpp/sip_corewxLog.cpp b/sip/cpp/sip_corewxLog.cpp
index b1c83b4d..c3a7d4e6 100644
--- sip/cpp/sip_corewxLog.cpp
+++ sip/cpp/sip_corewxLog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1415,7 +1415,7 @@ sipClassTypeDef sipTypeDef__core_wxLog = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Log,
diff --git a/sip/cpp/sip_corewxLogBuffer.cpp b/sip/cpp/sip_corewxLogBuffer.cpp
index effc6aaf..f88c9ce1 100644
--- sip/cpp/sip_corewxLogBuffer.cpp
+++ sip/cpp/sip_corewxLogBuffer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -456,7 +456,7 @@ sipClassTypeDef sipTypeDef__core_wxLogBuffer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogBuffer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogBuffer,
diff --git a/sip/cpp/sip_corewxLogChain.cpp b/sip/cpp/sip_corewxLogChain.cpp
index 0cb2315d..95e0fcd9 100644
--- sip/cpp/sip_corewxLogChain.cpp
+++ sip/cpp/sip_corewxLogChain.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -578,7 +578,7 @@ sipClassTypeDef sipTypeDef__core_wxLogChain = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogChain,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogChain,
diff --git a/sip/cpp/sip_corewxLogFormatter.cpp b/sip/cpp/sip_corewxLogFormatter.cpp
index 1c65630e..3405731a 100644
--- sip/cpp/sip_corewxLogFormatter.cpp
+++ sip/cpp/sip_corewxLogFormatter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -297,7 +297,7 @@ sipClassTypeDef sipTypeDef__core_wxLogFormatter = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogFormatter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogFormatter,
diff --git a/sip/cpp/sip_corewxLogGui.cpp b/sip/cpp/sip_corewxLogGui.cpp
index 5470b461..f1af3ea7 100644
--- sip/cpp/sip_corewxLogGui.cpp
+++ sip/cpp/sip_corewxLogGui.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -411,7 +411,7 @@ sipClassTypeDef sipTypeDef__core_wxLogGui = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogGui,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogGui,
diff --git a/sip/cpp/sip_corewxLogInterposer.cpp b/sip/cpp/sip_corewxLogInterposer.cpp
index f7674ac3..0328109a 100644
--- sip/cpp/sip_corewxLogInterposer.cpp
+++ sip/cpp/sip_corewxLogInterposer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -377,7 +377,7 @@ sipClassTypeDef sipTypeDef__core_wxLogInterposer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogInterposer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogInterposer,
diff --git a/sip/cpp/sip_corewxLogInterposerTemp.cpp b/sip/cpp/sip_corewxLogInterposerTemp.cpp
index cf7f5f89..1f7c157c 100644
--- sip/cpp/sip_corewxLogInterposerTemp.cpp
+++ sip/cpp/sip_corewxLogInterposerTemp.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -377,7 +377,7 @@ sipClassTypeDef sipTypeDef__core_wxLogInterposerTemp = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogInterposerTemp,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogInterposerTemp,
diff --git a/sip/cpp/sip_corewxLogNull.cpp b/sip/cpp/sip_corewxLogNull.cpp
index 5a41f90d..61ddaa51 100644
--- sip/cpp/sip_corewxLogNull.cpp
+++ sip/cpp/sip_corewxLogNull.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -108,7 +108,7 @@ sipClassTypeDef sipTypeDef__core_wxLogNull = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogNull,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogNull,
diff --git a/sip/cpp/sip_corewxLogRecordInfo.cpp b/sip/cpp/sip_corewxLogRecordInfo.cpp
index f31a5607..c383758e 100644
--- sip/cpp/sip_corewxLogRecordInfo.cpp
+++ sip/cpp/sip_corewxLogRecordInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -267,7 +267,7 @@ sipClassTypeDef sipTypeDef__core_wxLogRecordInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogRecordInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogRecordInfo,
diff --git a/sip/cpp/sip_corewxLogStderr.cpp b/sip/cpp/sip_corewxLogStderr.cpp
index adbca829..a70ae149 100644
--- sip/cpp/sip_corewxLogStderr.cpp
+++ sip/cpp/sip_corewxLogStderr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -376,7 +376,7 @@ sipClassTypeDef sipTypeDef__core_wxLogStderr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogStderr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogStderr,
diff --git a/sip/cpp/sip_corewxLogTextCtrl.cpp b/sip/cpp/sip_corewxLogTextCtrl.cpp
index 50a5915e..8bf18586 100644
--- sip/cpp/sip_corewxLogTextCtrl.cpp
+++ sip/cpp/sip_corewxLogTextCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -383,7 +383,7 @@ sipClassTypeDef sipTypeDef__core_wxLogTextCtrl = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogTextCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogTextCtrl,
diff --git a/sip/cpp/sip_corewxLogWindow.cpp b/sip/cpp/sip_corewxLogWindow.cpp
index be70fe93..5675958d 100644
--- sip/cpp/sip_corewxLogWindow.cpp
+++ sip/cpp/sip_corewxLogWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -595,7 +595,7 @@ sipClassTypeDef sipTypeDef__core_wxLogWindow = {
         SIP_TYPE_CLASS,
         sipNameNr_wxLogWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LogWindow,
diff --git a/sip/cpp/sip_corewxLongLong.cpp b/sip/cpp/sip_corewxLongLong.cpp
index 15a42b1e..3cf35e79 100644
--- sip/cpp/sip_corewxLongLong.cpp
+++ sip/cpp/sip_corewxLongLong.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -99,15 +99,15 @@ sipMappedTypeDef sipTypeDef__core_wxLongLong = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxLongLong,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxLongLong,
     array_wxLongLong,
diff --git a/sip/cpp/sip_corewxLongPressEvent.cpp b/sip/cpp/sip_corewxLongPressEvent.cpp
index 60b86a2a..b5c8cc32 100644
--- sip/cpp/sip_corewxLongPressEvent.cpp
+++ sip/cpp/sip_corewxLongPressEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -87,7 +87,7 @@ sipwxLongPressEvent::~sipwxLongPressEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxLongPressEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxLongPressEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxLongPressEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxLongPressEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -239,7 +239,7 @@ sipClassTypeDef sipTypeDef__core_wxLongPressEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxLongPressEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LongPressEvent,
diff --git a/sip/cpp/sip_corewxMDIChildFrame.cpp b/sip/cpp/sip_corewxMDIChildFrame.cpp
index b069aa21..f59bb29b 100644
--- sip/cpp/sip_corewxMDIChildFrame.cpp
+++ sip/cpp/sip_corewxMDIChildFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1547,7 +1547,7 @@ static PyObject *meth_wxMDIChildFrame_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrame_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMDIChildFrame_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMDIChildFrame_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1585,7 +1585,7 @@ static PyObject *meth_wxMDIChildFrame_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrame_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMDIChildFrame_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMDIChildFrame_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrame_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1723,7 +1723,7 @@ static PyObject *meth_wxMDIChildFrame_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxMDIChildFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxMDIChildFrame_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrame_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1910,7 +1910,7 @@ static PyObject *meth_wxMDIChildFrame_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrame_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxMDIChildFrame_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxMDIChildFrame_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrame_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2059,7 +2059,7 @@ static PyObject *meth_wxMDIChildFrame_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIChildFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIChildFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2093,7 +2093,7 @@ static PyObject *meth_wxMDIChildFrame_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIChildFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIChildFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2127,7 +2127,7 @@ static PyObject *meth_wxMDIChildFrame_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIChildFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIChildFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2941,7 +2941,7 @@ sipClassTypeDef sipTypeDef__core_wxMDIChildFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMDIChildFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MDIChildFrame,
diff --git a/sip/cpp/sip_corewxMDIChildFrameBase.cpp b/sip/cpp/sip_corewxMDIChildFrameBase.cpp
index 9b46a2a4..758fa94a 100644
--- sip/cpp/sip_corewxMDIChildFrameBase.cpp
+++ sip/cpp/sip_corewxMDIChildFrameBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1099,7 +1099,7 @@ static PyObject *meth_wxMDIChildFrameBase_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrameBase_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIChildFrameBase_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIChildFrameBase_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrameBase_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1133,7 +1133,7 @@ static PyObject *meth_wxMDIChildFrameBase_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrameBase_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIChildFrameBase_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIChildFrameBase_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrameBase_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1167,7 +1167,7 @@ static PyObject *meth_wxMDIChildFrameBase_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrameBase_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIChildFrameBase_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIChildFrameBase_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrameBase_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1770,7 +1770,7 @@ static PyObject *meth_wxMDIChildFrameBase_Activate(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxMDIChildFrameBase_GetMDIParent, "GetMDIParent(self) -> MDIParentFrame");
+PyDoc_STRVAR(doc_wxMDIChildFrameBase_GetMDIParent, "GetMDIParent(self) -> Optional[MDIParentFrame]");
 
 extern "C" {static PyObject *meth_wxMDIChildFrameBase_GetMDIParent(PyObject *, PyObject *);}
 static PyObject *meth_wxMDIChildFrameBase_GetMDIParent(PyObject *sipSelf, PyObject *sipArgs)
@@ -1953,7 +1953,7 @@ sipClassTypeDef sipTypeDef__core_wxMDIChildFrameBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMDIChildFrameBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MDIChildFrameBase,
diff --git a/sip/cpp/sip_corewxMDIClientWindow.cpp b/sip/cpp/sip_corewxMDIClientWindow.cpp
index 7fdeaa8c..46243f84 100644
--- sip/cpp/sip_corewxMDIClientWindow.cpp
+++ sip/cpp/sip_corewxMDIClientWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1247,7 +1247,7 @@ static PyObject *meth_wxMDIClientWindow_AcceptsFocusFromKeyboard(PyObject *sipSe
 }
 
 
-PyDoc_STRVAR(doc_wxMDIClientWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMDIClientWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMDIClientWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIClientWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1285,7 +1285,7 @@ static PyObject *meth_wxMDIClientWindow_AddChild(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxMDIClientWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMDIClientWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMDIClientWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIClientWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1423,7 +1423,7 @@ static PyObject *meth_wxMDIClientWindow_OnInternalIdle(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxMDIClientWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxMDIClientWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxMDIClientWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxMDIClientWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1610,7 +1610,7 @@ static PyObject *meth_wxMDIClientWindow_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMDIClientWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxMDIClientWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxMDIClientWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxMDIClientWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1759,7 +1759,7 @@ static PyObject *meth_wxMDIClientWindow_DoEnable(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxMDIClientWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIClientWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIClientWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIClientWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1793,7 +1793,7 @@ static PyObject *meth_wxMDIClientWindow_DoGetPosition(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxMDIClientWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIClientWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIClientWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIClientWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1827,7 +1827,7 @@ static PyObject *meth_wxMDIClientWindow_DoGetSize(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxMDIClientWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIClientWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIClientWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIClientWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2576,7 +2576,7 @@ sipClassTypeDef sipTypeDef__core_wxMDIClientWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMDIClientWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MDIClientWindow,
diff --git a/sip/cpp/sip_corewxMDIParentFrame.cpp b/sip/cpp/sip_corewxMDIParentFrame.cpp
index 68452e02..b77cd76f 100644
--- sip/cpp/sip_corewxMDIParentFrame.cpp
+++ sip/cpp/sip_corewxMDIParentFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1744,7 +1744,7 @@ static PyObject *meth_wxMDIParentFrame_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxMDIParentFrame_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMDIParentFrame_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMDIParentFrame_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIParentFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1782,7 +1782,7 @@ static PyObject *meth_wxMDIParentFrame_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMDIParentFrame_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMDIParentFrame_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMDIParentFrame_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIParentFrame_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1920,7 +1920,7 @@ static PyObject *meth_wxMDIParentFrame_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxMDIParentFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxMDIParentFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxMDIParentFrame_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxMDIParentFrame_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2107,7 +2107,7 @@ static PyObject *meth_wxMDIParentFrame_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMDIParentFrame_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxMDIParentFrame_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxMDIParentFrame_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxMDIParentFrame_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2256,7 +2256,7 @@ static PyObject *meth_wxMDIParentFrame_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMDIParentFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIParentFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIParentFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIParentFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2290,7 +2290,7 @@ static PyObject *meth_wxMDIParentFrame_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMDIParentFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIParentFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIParentFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIParentFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2324,7 +2324,7 @@ static PyObject *meth_wxMDIParentFrame_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxMDIParentFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMDIParentFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMDIParentFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMDIParentFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3147,7 +3147,7 @@ sipClassTypeDef sipTypeDef__core_wxMDIParentFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMDIParentFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MDIParentFrame,
diff --git a/sip/cpp/sip_corewxMask.cpp b/sip/cpp/sip_corewxMask.cpp
index 689401f8..b58ccc07 100644
--- sip/cpp/sip_corewxMask.cpp
+++ sip/cpp/sip_corewxMask.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -329,7 +329,7 @@ sipClassTypeDef sipTypeDef__core_wxMask = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMask,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Mask,
diff --git a/sip/cpp/sip_corewxMatrix2D.cpp b/sip/cpp/sip_corewxMatrix2D.cpp
index ebf555fe..05f6dc6e 100644
--- sip/cpp/sip_corewxMatrix2D.cpp
+++ sip/cpp/sip_corewxMatrix2D.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -243,7 +243,7 @@ sipClassTypeDef sipTypeDef__core_wxMatrix2D = {
         SIP_TYPE_CLASS,
         sipNameNr_wxMatrix2D,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Matrix2D,
diff --git a/sip/cpp/sip_corewxMaximizeEvent.cpp b/sip/cpp/sip_corewxMaximizeEvent.cpp
index 7c446dbc..ab750b78 100644
--- sip/cpp/sip_corewxMaximizeEvent.cpp
+++ sip/cpp/sip_corewxMaximizeEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -86,7 +86,7 @@ sipwxMaximizeEvent::~sipwxMaximizeEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxMaximizeEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxMaximizeEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxMaximizeEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxMaximizeEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -237,7 +237,7 @@ sipClassTypeDef sipTypeDef__core_wxMaximizeEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMaximizeEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MaximizeEvent,
diff --git a/sip/cpp/sip_corewxMemoryBuffer.cpp b/sip/cpp/sip_corewxMemoryBuffer.cpp
index 784a655b..561d0697 100644
--- sip/cpp/sip_corewxMemoryBuffer.cpp
+++ sip/cpp/sip_corewxMemoryBuffer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -82,15 +82,15 @@ sipMappedTypeDef sipTypeDef__core_wxMemoryBuffer = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxMemoryBuffer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxMemoryBuffer,
     array_wxMemoryBuffer,
diff --git a/sip/cpp/sip_corewxMemoryDC.cpp b/sip/cpp/sip_corewxMemoryDC.cpp
index e0620835..4fda9dd3 100644
--- sip/cpp/sip_corewxMemoryDC.cpp
+++ sip/cpp/sip_corewxMemoryDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -351,7 +351,7 @@ sipClassTypeDef sipTypeDef__core_wxMemoryDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMemoryDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MemoryDC,
diff --git a/sip/cpp/sip_corewxMemoryFSHandler.cpp b/sip/cpp/sip_corewxMemoryFSHandler.cpp
index 04b55b6f..b68cf87f 100644
--- sip/cpp/sip_corewxMemoryFSHandler.cpp
+++ sip/cpp/sip_corewxMemoryFSHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -592,7 +592,7 @@ static PyObject *meth_wxMemoryFSHandler_RemoveFile(PyObject *, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxMemoryFSHandler_CanOpen, "CanOpen(self, location: object) -> bool");
+PyDoc_STRVAR(doc_wxMemoryFSHandler_CanOpen, "CanOpen(self, location: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxMemoryFSHandler_CanOpen(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMemoryFSHandler_CanOpen(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -633,7 +633,7 @@ static PyObject *meth_wxMemoryFSHandler_CanOpen(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMemoryFSHandler_OpenFile, "OpenFile(self, fs: FileSystem, location: object) -> FSFile");
+PyDoc_STRVAR(doc_wxMemoryFSHandler_OpenFile, "OpenFile(self, fs: FileSystem, location: Any) -> Optional[FSFile]");
 
 extern "C" {static PyObject *meth_wxMemoryFSHandler_OpenFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMemoryFSHandler_OpenFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -676,7 +676,7 @@ static PyObject *meth_wxMemoryFSHandler_OpenFile(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxMemoryFSHandler_FindFirst, "FindFirst(self, spec: object, flags: int = 0) -> object");
+PyDoc_STRVAR(doc_wxMemoryFSHandler_FindFirst, "FindFirst(self, spec: Any, flags: int = 0) -> Any");
 
 extern "C" {static PyObject *meth_wxMemoryFSHandler_FindFirst(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMemoryFSHandler_FindFirst(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -719,7 +719,7 @@ static PyObject *meth_wxMemoryFSHandler_FindFirst(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxMemoryFSHandler_FindNext, "FindNext(self) -> object");
+PyDoc_STRVAR(doc_wxMemoryFSHandler_FindNext, "FindNext(self) -> Any");
 
 extern "C" {static PyObject *meth_wxMemoryFSHandler_FindNext(PyObject *, PyObject *);}
 static PyObject *meth_wxMemoryFSHandler_FindNext(PyObject *sipSelf, PyObject *sipArgs)
@@ -867,7 +867,7 @@ sipClassTypeDef sipTypeDef__core_wxMemoryFSHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMemoryFSHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MemoryFSHandler,
diff --git a/sip/cpp/sip_corewxMenu.cpp b/sip/cpp/sip_corewxMenu.cpp
index d80d3433..268f826c 100644
--- sip/cpp/sip_corewxMenu.cpp
+++ sip/cpp/sip_corewxMenu.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2558,7 +2558,7 @@ sipClassTypeDef sipTypeDef__core_wxMenu = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMenu,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Menu,
diff --git a/sip/cpp/sip_corewxMenuBar.cpp b/sip/cpp/sip_corewxMenuBar.cpp
index b24e9c42..134715e8 100644
--- sip/cpp/sip_corewxMenuBar.cpp
+++ sip/cpp/sip_corewxMenuBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -941,7 +941,7 @@ static PyObject *meth_wxMenuBar_DoEnable(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxMenuBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMenuBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMenuBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMenuBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -975,7 +975,7 @@ static PyObject *meth_wxMenuBar_DoGetPosition(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxMenuBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMenuBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMenuBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMenuBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1009,7 +1009,7 @@ static PyObject *meth_wxMenuBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxMenuBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMenuBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMenuBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMenuBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2767,7 +2767,7 @@ static PyObject *meth_wxMenuBar_MacSetCommonMenuBar(PyObject *, PyObject *sipArg
             sipName_menubar,
         };
 
-        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J8", sipType_wxMenuBar, &menubar))
+        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, SIP_NULLPTR, "J:", sipType_wxMenuBar, &menubar))
         {
             int sipIsErr = 0;
         PyErr_Clear();
@@ -3027,7 +3027,7 @@ sipClassTypeDef sipTypeDef__core_wxMenuBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMenuBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MenuBar,
diff --git a/sip/cpp/sip_corewxMenuEvent.cpp b/sip/cpp/sip_corewxMenuEvent.cpp
index 89bbba62..58f49658 100644
--- sip/cpp/sip_corewxMenuEvent.cpp
+++ sip/cpp/sip_corewxMenuEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -194,7 +194,7 @@ static PyObject *meth_wxMenuEvent_IsPopup(PyObject *sipSelf, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxMenuEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxMenuEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxMenuEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxMenuEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -357,7 +357,7 @@ sipClassTypeDef sipTypeDef__core_wxMenuEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMenuEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MenuEvent,
diff --git a/sip/cpp/sip_corewxMenuItem.cpp b/sip/cpp/sip_corewxMenuItem.cpp
index 029ad3ec..95032eb6 100644
--- sip/cpp/sip_corewxMenuItem.cpp
+++ sip/cpp/sip_corewxMenuItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1807,7 +1807,7 @@ sipClassTypeDef sipTypeDef__core_wxMenuItem = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMenuItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MenuItem,
diff --git a/sip/cpp/sip_corewxMenuItemList.cpp b/sip/cpp/sip_corewxMenuItemList.cpp
index e2b61214..4e988c8d 100644
--- sip/cpp/sip_corewxMenuItemList.cpp
+++ sip/cpp/sip_corewxMenuItemList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -32,7 +32,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxMenuItemList_index, "index(self, obj: MenuItem) -> int");
+PyDoc_STRVAR(doc_wxMenuItemList_index, "index(self, obj: Optional[MenuItem]) -> int");
 
 extern "C" {static PyObject *meth_wxMenuItemList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMenuItemList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -301,7 +301,7 @@ sipClassTypeDef sipTypeDef__core_wxMenuItemList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxMenuItemList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MenuItemList,
diff --git a/sip/cpp/sip_corewxMenuItemList_iterator.cpp b/sip/cpp/sip_corewxMenuItemList_iterator.cpp
index 4cc4fcf2..3de3a29d 100644
--- sip/cpp/sip_corewxMenuItemList_iterator.cpp
+++ sip/cpp/sip_corewxMenuItemList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__core_wxMenuItemList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxMenuItemList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MenuItemList_iterator,
diff --git a/sip/cpp/sip_corewxMenuList.cpp b/sip/cpp/sip_corewxMenuList.cpp
index 9a3914b0..5b5ae5ed 100644
--- sip/cpp/sip_corewxMenuList.cpp
+++ sip/cpp/sip_corewxMenuList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -32,7 +32,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxMenuList_index, "index(self, obj: Menu) -> int");
+PyDoc_STRVAR(doc_wxMenuList_index, "index(self, obj: Optional[Menu]) -> int");
 
 extern "C" {static PyObject *meth_wxMenuList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMenuList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -301,7 +301,7 @@ sipClassTypeDef sipTypeDef__core_wxMenuList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxMenuList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MenuList,
diff --git a/sip/cpp/sip_corewxMenuList_iterator.cpp b/sip/cpp/sip_corewxMenuList_iterator.cpp
index 47f315eb..71f7c4ef 100644
--- sip/cpp/sip_corewxMenuList_iterator.cpp
+++ sip/cpp/sip_corewxMenuList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__core_wxMenuList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxMenuList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MenuList_iterator,
diff --git a/sip/cpp/sip_corewxMessageDialog.cpp b/sip/cpp/sip_corewxMessageDialog.cpp
index 96fcdb5f..a997a826 100644
--- sip/cpp/sip_corewxMessageDialog.cpp
+++ sip/cpp/sip_corewxMessageDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1934,7 +1934,7 @@ static PyObject *meth_wxMessageDialog_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxMessageDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMessageDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMessageDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMessageDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1972,7 +1972,7 @@ static PyObject *meth_wxMessageDialog_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxMessageDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMessageDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMessageDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMessageDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2110,7 +2110,7 @@ static PyObject *meth_wxMessageDialog_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMessageDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxMessageDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxMessageDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxMessageDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2297,7 +2297,7 @@ static PyObject *meth_wxMessageDialog_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxMessageDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxMessageDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxMessageDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxMessageDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2446,7 +2446,7 @@ static PyObject *meth_wxMessageDialog_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxMessageDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMessageDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMessageDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMessageDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2480,7 +2480,7 @@ static PyObject *meth_wxMessageDialog_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMessageDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMessageDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMessageDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMessageDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2514,7 +2514,7 @@ static PyObject *meth_wxMessageDialog_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMessageDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMessageDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMessageDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMessageDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3311,7 +3311,7 @@ sipClassTypeDef sipTypeDef__core_wxMessageDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMessageDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MessageDialog,
diff --git a/sip/cpp/sip_corewxMessageDialogButtonLabel.cpp b/sip/cpp/sip_corewxMessageDialogButtonLabel.cpp
index f249e137..a8d1851f 100644
--- sip/cpp/sip_corewxMessageDialogButtonLabel.cpp
+++ sip/cpp/sip_corewxMessageDialogButtonLabel.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -84,15 +84,15 @@ sipMappedTypeDef sipTypeDef__core_wxMessageDialogButtonLabel = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxMessageDialogButtonLabel,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxMessageDialogButtonLabel,
     array_wxMessageDialogButtonLabel,
diff --git a/sip/cpp/sip_corewxMetafile.cpp b/sip/cpp/sip_corewxMetafile.cpp
index 0091e53f..82ae1a33 100644
--- sip/cpp/sip_corewxMetafile.cpp
+++ sip/cpp/sip_corewxMetafile.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -239,7 +239,7 @@ sipClassTypeDef sipTypeDef__core_wxMetafile = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMetafile,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Metafile,
diff --git a/sip/cpp/sip_corewxMetafileDC.cpp b/sip/cpp/sip_corewxMetafileDC.cpp
index d41a1008..16e17081 100644
--- sip/cpp/sip_corewxMetafileDC.cpp
+++ sip/cpp/sip_corewxMetafileDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -206,7 +206,7 @@ sipClassTypeDef sipTypeDef__core_wxMetafileDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMetafileDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MetafileDC,
diff --git a/sip/cpp/sip_corewxMimeTypesManager.cpp b/sip/cpp/sip_corewxMimeTypesManager.cpp
index 333aabb7..5a323e6f 100644
--- sip/cpp/sip_corewxMimeTypesManager.cpp
+++ sip/cpp/sip_corewxMimeTypesManager.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -391,7 +391,7 @@ sipClassTypeDef sipTypeDef__core_wxMimeTypesManager = {
         SIP_TYPE_CLASS,
         sipNameNr_wxMimeTypesManager,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MimeTypesManager,
diff --git a/sip/cpp/sip_corewxMiniFrame.cpp b/sip/cpp/sip_corewxMiniFrame.cpp
index 6c18983e..46912a82 100644
--- sip/cpp/sip_corewxMiniFrame.cpp
+++ sip/cpp/sip_corewxMiniFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1333,7 +1333,7 @@ static PyObject *meth_wxMiniFrame_AcceptsFocusFromKeyboard(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxMiniFrame_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMiniFrame_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMiniFrame_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMiniFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1371,7 +1371,7 @@ static PyObject *meth_wxMiniFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxMiniFrame_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMiniFrame_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMiniFrame_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMiniFrame_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1509,7 +1509,7 @@ static PyObject *meth_wxMiniFrame_OnInternalIdle(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxMiniFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxMiniFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxMiniFrame_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxMiniFrame_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1696,7 +1696,7 @@ static PyObject *meth_wxMiniFrame_SetValidator(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxMiniFrame_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxMiniFrame_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxMiniFrame_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxMiniFrame_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1845,7 +1845,7 @@ static PyObject *meth_wxMiniFrame_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxMiniFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMiniFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMiniFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMiniFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1879,7 +1879,7 @@ static PyObject *meth_wxMiniFrame_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMiniFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMiniFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMiniFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMiniFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1913,7 +1913,7 @@ static PyObject *meth_wxMiniFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxMiniFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMiniFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMiniFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMiniFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2717,7 +2717,7 @@ sipClassTypeDef sipTypeDef__core_wxMiniFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMiniFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MiniFrame,
diff --git a/sip/cpp/sip_corewxMirrorDC.cpp b/sip/cpp/sip_corewxMirrorDC.cpp
index f8ae12c6..9d44bb46 100644
--- sip/cpp/sip_corewxMirrorDC.cpp
+++ sip/cpp/sip_corewxMirrorDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -161,7 +161,7 @@ sipClassTypeDef sipTypeDef__core_wxMirrorDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMirrorDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MirrorDC,
diff --git a/sip/cpp/sip_corewxModalDialogHook.cpp b/sip/cpp/sip_corewxModalDialogHook.cpp
index 07045ac1..c35c48e0 100644
--- sip/cpp/sip_corewxModalDialogHook.cpp
+++ sip/cpp/sip_corewxModalDialogHook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -330,7 +330,7 @@ sipClassTypeDef sipTypeDef__core_wxModalDialogHook = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxModalDialogHook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ModalDialogHook,
diff --git a/sip/cpp/sip_corewxMouseCaptureChangedEvent.cpp b/sip/cpp/sip_corewxMouseCaptureChangedEvent.cpp
index 87220907..12116ae5 100644
--- sip/cpp/sip_corewxMouseCaptureChangedEvent.cpp
+++ sip/cpp/sip_corewxMouseCaptureChangedEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -123,7 +123,7 @@ static PyObject *meth_wxMouseCaptureChangedEvent_GetCapturedWindow(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMouseCaptureChangedEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxMouseCaptureChangedEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxMouseCaptureChangedEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxMouseCaptureChangedEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -282,7 +282,7 @@ sipClassTypeDef sipTypeDef__core_wxMouseCaptureChangedEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMouseCaptureChangedEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MouseCaptureChangedEvent,
diff --git a/sip/cpp/sip_corewxMouseCaptureLostEvent.cpp b/sip/cpp/sip_corewxMouseCaptureLostEvent.cpp
index 769bc14e..3450a814 100644
--- sip/cpp/sip_corewxMouseCaptureLostEvent.cpp
+++ sip/cpp/sip_corewxMouseCaptureLostEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -86,7 +86,7 @@ sipwxMouseCaptureLostEvent::~sipwxMouseCaptureLostEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxMouseCaptureLostEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxMouseCaptureLostEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxMouseCaptureLostEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxMouseCaptureLostEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -240,7 +240,7 @@ sipClassTypeDef sipTypeDef__core_wxMouseCaptureLostEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMouseCaptureLostEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MouseCaptureLostEvent,
diff --git a/sip/cpp/sip_corewxMouseEvent.cpp b/sip/cpp/sip_corewxMouseEvent.cpp
index 5ebe75a0..431ea71f 100644
--- sip/cpp/sip_corewxMouseEvent.cpp
+++ sip/cpp/sip_corewxMouseEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1636,7 +1636,7 @@ static PyObject *meth_wxMouseEvent_SetColumnsPerAction(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxMouseEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxMouseEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxMouseEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxMouseEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -1843,7 +1843,7 @@ sipClassTypeDef sipTypeDef__core_wxMouseEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMouseEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MouseEvent,
diff --git a/sip/cpp/sip_corewxMouseEventsManager.cpp b/sip/cpp/sip_corewxMouseEventsManager.cpp
index cef965e3..dc38a926 100644
--- sip/cpp/sip_corewxMouseEventsManager.cpp
+++ sip/cpp/sip_corewxMouseEventsManager.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -939,7 +939,7 @@ sipClassTypeDef sipTypeDef__core_wxMouseEventsManager = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMouseEventsManager,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MouseEventsManager,
diff --git a/sip/cpp/sip_corewxMouseState.cpp b/sip/cpp/sip_corewxMouseState.cpp
index 5beb2a8d..2826a28c 100644
--- sip/cpp/sip_corewxMouseState.cpp
+++ sip/cpp/sip_corewxMouseState.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -778,7 +778,7 @@ sipClassTypeDef sipTypeDef__core_wxMouseState = {
         SIP_TYPE_CLASS,
         sipNameNr_wxMouseState,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MouseState,
diff --git a/sip/cpp/sip_corewxMoveEvent.cpp b/sip/cpp/sip_corewxMoveEvent.cpp
index 18c00499..d48d3d6f 100644
--- sip/cpp/sip_corewxMoveEvent.cpp
+++ sip/cpp/sip_corewxMoveEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -234,7 +234,7 @@ static PyObject *meth_wxMoveEvent_SetPosition(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxMoveEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxMoveEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxMoveEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxMoveEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -398,7 +398,7 @@ sipClassTypeDef sipTypeDef__core_wxMoveEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMoveEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MoveEvent,
diff --git a/sip/cpp/sip_corewxMsgCatalog.cpp b/sip/cpp/sip_corewxMsgCatalog.cpp
index 2fdd4ed0..73508637 100644
--- sip/cpp/sip_corewxMsgCatalog.cpp
+++ sip/cpp/sip_corewxMsgCatalog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -27,7 +27,7 @@ sipClassTypeDef sipTypeDef__core_wxMsgCatalog = {
         SIP_TYPE_CLASS,
         sipNameNr_wxMsgCatalog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MsgCatalog,
diff --git a/sip/cpp/sip_corewxMultiChoiceDialog.cpp b/sip/cpp/sip_corewxMultiChoiceDialog.cpp
index 2394e7da..161c540f 100644
--- sip/cpp/sip_corewxMultiChoiceDialog.cpp
+++ sip/cpp/sip_corewxMultiChoiceDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1342,7 +1342,7 @@ static PyObject *meth_wxMultiChoiceDialog_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMultiChoiceDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMultiChoiceDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMultiChoiceDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMultiChoiceDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1380,7 +1380,7 @@ static PyObject *meth_wxMultiChoiceDialog_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxMultiChoiceDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxMultiChoiceDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxMultiChoiceDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMultiChoiceDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1518,7 +1518,7 @@ static PyObject *meth_wxMultiChoiceDialog_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxMultiChoiceDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxMultiChoiceDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxMultiChoiceDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxMultiChoiceDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1705,7 +1705,7 @@ static PyObject *meth_wxMultiChoiceDialog_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxMultiChoiceDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxMultiChoiceDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxMultiChoiceDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxMultiChoiceDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1854,7 +1854,7 @@ static PyObject *meth_wxMultiChoiceDialog_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxMultiChoiceDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMultiChoiceDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMultiChoiceDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMultiChoiceDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1888,7 +1888,7 @@ static PyObject *meth_wxMultiChoiceDialog_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxMultiChoiceDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMultiChoiceDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMultiChoiceDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMultiChoiceDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1922,7 +1922,7 @@ static PyObject *meth_wxMultiChoiceDialog_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxMultiChoiceDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMultiChoiceDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMultiChoiceDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMultiChoiceDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2748,7 +2748,7 @@ sipClassTypeDef sipTypeDef__core_wxMultiChoiceDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMultiChoiceDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MultiChoiceDialog,
diff --git a/sip/cpp/sip_corewxNativeFontInfo.cpp b/sip/cpp/sip_corewxNativeFontInfo.cpp
index 7c42923a..22570036 100644
--- sip/cpp/sip_corewxNativeFontInfo.cpp
+++ sip/cpp/sip_corewxNativeFontInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1082,7 +1082,7 @@ sipClassTypeDef sipTypeDef__core_wxNativeFontInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxNativeFontInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NativeFontInfo,
diff --git a/sip/cpp/sip_corewxNativePixelData.cpp b/sip/cpp/sip_corewxNativePixelData.cpp
index 437bbfbe..6c182617 100644
--- sip/cpp/sip_corewxNativePixelData.cpp
+++ sip/cpp/sip_corewxNativePixelData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -368,7 +368,7 @@ sipClassTypeDef sipTypeDef__core_wxNativePixelData = {
         SIP_TYPE_CLASS,
         sipNameNr_wxNativePixelData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NativePixelData,
diff --git a/sip/cpp/sip_corewxNativePixelData_Accessor.cpp b/sip/cpp/sip_corewxNativePixelData_Accessor.cpp
index 1ac7299e..514d0467 100644
--- sip/cpp/sip_corewxNativePixelData_Accessor.cpp
+++ sip/cpp/sip_corewxNativePixelData_Accessor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -608,7 +608,7 @@ sipClassTypeDef sipTypeDef__core_wxNativePixelData_Accessor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxNativePixelData_Accessor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NativePixelData_Accessor,
diff --git a/sip/cpp/sip_corewxNavigationKeyEvent.cpp b/sip/cpp/sip_corewxNavigationKeyEvent.cpp
index e440b360..4f8aa69c 100644
--- sip/cpp/sip_corewxNavigationKeyEvent.cpp
+++ sip/cpp/sip_corewxNavigationKeyEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -424,7 +424,7 @@ static PyObject *meth_wxNavigationKeyEvent_SetWindowChange(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxNavigationKeyEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxNavigationKeyEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxNavigationKeyEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxNavigationKeyEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -604,7 +604,7 @@ sipClassTypeDef sipTypeDef__core_wxNavigationKeyEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxNavigationKeyEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NavigationKeyEvent,
diff --git a/sip/cpp/sip_corewxNonOwnedWindow.cpp b/sip/cpp/sip_corewxNonOwnedWindow.cpp
index 11b2c576..d00b5f86 100644
--- sip/cpp/sip_corewxNonOwnedWindow.cpp
+++ sip/cpp/sip_corewxNonOwnedWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -914,7 +914,7 @@ static PyObject *meth_wxNonOwnedWindow_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxNonOwnedWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNonOwnedWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNonOwnedWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNonOwnedWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -948,7 +948,7 @@ static PyObject *meth_wxNonOwnedWindow_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxNonOwnedWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNonOwnedWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNonOwnedWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNonOwnedWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -982,7 +982,7 @@ static PyObject *meth_wxNonOwnedWindow_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxNonOwnedWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNonOwnedWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNonOwnedWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNonOwnedWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1774,7 +1774,7 @@ sipClassTypeDef sipTypeDef__core_wxNonOwnedWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxNonOwnedWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NonOwnedWindow,
diff --git a/sip/cpp/sip_corewxNotebook.cpp b/sip/cpp/sip_corewxNotebook.cpp
index e08cdd40..08beb698 100644
--- sip/cpp/sip_corewxNotebook.cpp
+++ sip/cpp/sip_corewxNotebook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1978,7 +1978,7 @@ static PyObject *meth_wxNotebook_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxNotebook_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxNotebook_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxNotebook_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNotebook_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2016,7 +2016,7 @@ static PyObject *meth_wxNotebook_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxNotebook_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxNotebook_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxNotebook_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNotebook_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2154,7 +2154,7 @@ static PyObject *meth_wxNotebook_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxNotebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxNotebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxNotebook_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxNotebook_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2341,7 +2341,7 @@ static PyObject *meth_wxNotebook_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxNotebook_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxNotebook_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxNotebook_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxNotebook_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2490,7 +2490,7 @@ static PyObject *meth_wxNotebook_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxNotebook_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNotebook_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNotebook_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNotebook_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2524,7 +2524,7 @@ static PyObject *meth_wxNotebook_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxNotebook_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNotebook_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNotebook_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNotebook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2558,7 +2558,7 @@ static PyObject *meth_wxNotebook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxNotebook_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNotebook_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNotebook_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNotebook_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3160,7 +3160,7 @@ static PyObject *meth_wxNotebook_GetClassDefaultAttributes(PyObject *, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxNotebook_HitTest, "HitTest(self, pt: Point) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNotebook_HitTest, "HitTest(self, pt: Point) -> (int, Optional[int])");
 
 extern "C" {static PyObject *meth_wxNotebook_HitTest(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNotebook_HitTest(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3444,7 +3444,7 @@ sipClassTypeDef sipTypeDef__core_wxNotebook = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxNotebook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Notebook,
diff --git a/sip/cpp/sip_corewxNotifyEvent.cpp b/sip/cpp/sip_corewxNotifyEvent.cpp
index fdbddd4b..a895c747 100644
--- sip/cpp/sip_corewxNotifyEvent.cpp
+++ sip/cpp/sip_corewxNotifyEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -191,7 +191,7 @@ static PyObject *meth_wxNotifyEvent_Veto(PyObject *sipSelf, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxNotifyEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxNotifyEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxNotifyEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxNotifyEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -348,7 +348,7 @@ sipClassTypeDef sipTypeDef__core_wxNotifyEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxNotifyEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NotifyEvent,
diff --git a/sip/cpp/sip_corewxNumberEntryDialog.cpp b/sip/cpp/sip_corewxNumberEntryDialog.cpp
index 7905d665..4632ceeb 100644
--- sip/cpp/sip_corewxNumberEntryDialog.cpp
+++ sip/cpp/sip_corewxNumberEntryDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1330,7 +1330,7 @@ static PyObject *meth_wxNumberEntryDialog_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxNumberEntryDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxNumberEntryDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxNumberEntryDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNumberEntryDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1368,7 +1368,7 @@ static PyObject *meth_wxNumberEntryDialog_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxNumberEntryDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxNumberEntryDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxNumberEntryDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNumberEntryDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1506,7 +1506,7 @@ static PyObject *meth_wxNumberEntryDialog_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxNumberEntryDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxNumberEntryDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxNumberEntryDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxNumberEntryDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1693,7 +1693,7 @@ static PyObject *meth_wxNumberEntryDialog_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxNumberEntryDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxNumberEntryDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxNumberEntryDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxNumberEntryDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1842,7 +1842,7 @@ static PyObject *meth_wxNumberEntryDialog_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxNumberEntryDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNumberEntryDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNumberEntryDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNumberEntryDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1876,7 +1876,7 @@ static PyObject *meth_wxNumberEntryDialog_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxNumberEntryDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNumberEntryDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNumberEntryDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNumberEntryDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1910,7 +1910,7 @@ static PyObject *meth_wxNumberEntryDialog_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxNumberEntryDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxNumberEntryDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxNumberEntryDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxNumberEntryDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2719,7 +2719,7 @@ sipClassTypeDef sipTypeDef__core_wxNumberEntryDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxNumberEntryDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NumberEntryDialog,
diff --git a/sip/cpp/sip_corewxObject.cpp b/sip/cpp/sip_corewxObject.cpp
index 84c01b05..ce63b011 100644
--- sip/cpp/sip_corewxObject.cpp
+++ sip/cpp/sip_corewxObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -487,7 +487,7 @@ sipClassTypeDef sipTypeDef__core_wxObject = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Object,
diff --git a/sip/cpp/sip_corewxOutputStream.cpp b/sip/cpp/sip_corewxOutputStream.cpp
index adfd6e1c..95428c8a 100644
--- sip/cpp/sip_corewxOutputStream.cpp
+++ sip/cpp/sip_corewxOutputStream.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -795,7 +795,7 @@ sipClassTypeDef sipTypeDef__core_wxOutputStream = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxOutputStream,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_OutputStream,
diff --git a/sip/cpp/sip_corewxOverlay.cpp b/sip/cpp/sip_corewxOverlay.cpp
index bdffeb67..1b2978a9 100644
--- sip/cpp/sip_corewxOverlay.cpp
+++ sip/cpp/sip_corewxOverlay.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -121,7 +121,7 @@ sipClassTypeDef sipTypeDef__core_wxOverlay = {
         SIP_TYPE_CLASS,
         sipNameNr_wxOverlay,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Overlay,
diff --git a/sip/cpp/sip_corewxPCXHandler.cpp b/sip/cpp/sip_corewxPCXHandler.cpp
index bf8ab38e..399cbf70 100644
--- sip/cpp/sip_corewxPCXHandler.cpp
+++ sip/cpp/sip_corewxPCXHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -421,7 +421,7 @@ sipClassTypeDef sipTypeDef__core_wxPCXHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPCXHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PCXHandler,
diff --git a/sip/cpp/sip_corewxPNGHandler.cpp b/sip/cpp/sip_corewxPNGHandler.cpp
index 90fb9eb5..5f68c5cd 100644
--- sip/cpp/sip_corewxPNGHandler.cpp
+++ sip/cpp/sip_corewxPNGHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -421,7 +421,7 @@ sipClassTypeDef sipTypeDef__core_wxPNGHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPNGHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PNGHandler,
diff --git a/sip/cpp/sip_corewxPNMHandler.cpp b/sip/cpp/sip_corewxPNMHandler.cpp
index 32964e96..69df28f2 100644
--- sip/cpp/sip_corewxPNMHandler.cpp
+++ sip/cpp/sip_corewxPNMHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -421,7 +421,7 @@ sipClassTypeDef sipTypeDef__core_wxPNMHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPNMHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PNMHandler,
diff --git a/sip/cpp/sip_corewxPageSetupDialog.cpp b/sip/cpp/sip_corewxPageSetupDialog.cpp
index 8a1cd7a3..7c07dca9 100644
--- sip/cpp/sip_corewxPageSetupDialog.cpp
+++ sip/cpp/sip_corewxPageSetupDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -219,7 +219,7 @@ sipClassTypeDef sipTypeDef__core_wxPageSetupDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPageSetupDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PageSetupDialog,
diff --git a/sip/cpp/sip_corewxPageSetupDialogData.cpp b/sip/cpp/sip_corewxPageSetupDialogData.cpp
index 14e1d58e..f398dbf8 100644
--- sip/cpp/sip_corewxPageSetupDialogData.cpp
+++ sip/cpp/sip_corewxPageSetupDialogData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1387,7 +1387,7 @@ sipClassTypeDef sipTypeDef__core_wxPageSetupDialogData = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPageSetupDialogData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PageSetupDialogData,
diff --git a/sip/cpp/sip_corewxPaintDC.cpp b/sip/cpp/sip_corewxPaintDC.cpp
index 9da15763..bf25bab9 100644
--- sip/cpp/sip_corewxPaintDC.cpp
+++ sip/cpp/sip_corewxPaintDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -157,7 +157,7 @@ sipClassTypeDef sipTypeDef__core_wxPaintDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPaintDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PaintDC,
diff --git a/sip/cpp/sip_corewxPaintEvent.cpp b/sip/cpp/sip_corewxPaintEvent.cpp
index 15be4cba..b0c6a330 100644
--- sip/cpp/sip_corewxPaintEvent.cpp
+++ sip/cpp/sip_corewxPaintEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -81,7 +81,7 @@ sipwxPaintEvent::~sipwxPaintEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxPaintEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxPaintEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxPaintEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxPaintEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -205,7 +205,7 @@ sipClassTypeDef sipTypeDef__core_wxPaintEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPaintEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PaintEvent,
diff --git a/sip/cpp/sip_corewxPalette.cpp b/sip/cpp/sip_corewxPalette.cpp
index 105463dc..dab41067 100644
--- sip/cpp/sip_corewxPalette.cpp
+++ sip/cpp/sip_corewxPalette.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -479,7 +479,7 @@ sipClassTypeDef sipTypeDef__core_wxPalette = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPalette,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Palette,
diff --git a/sip/cpp/sip_corewxPaletteChangedEvent.cpp b/sip/cpp/sip_corewxPaletteChangedEvent.cpp
index 148d6b7d..2fd7395f 100644
--- sip/cpp/sip_corewxPaletteChangedEvent.cpp
+++ sip/cpp/sip_corewxPaletteChangedEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -157,7 +157,7 @@ static PyObject *meth_wxPaletteChangedEvent_GetChangedWindow(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxPaletteChangedEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxPaletteChangedEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxPaletteChangedEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxPaletteChangedEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -312,7 +312,7 @@ sipClassTypeDef sipTypeDef__core_wxPaletteChangedEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPaletteChangedEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PaletteChangedEvent,
diff --git a/sip/cpp/sip_corewxPanGestureEvent.cpp b/sip/cpp/sip_corewxPanGestureEvent.cpp
index 39e4fc7e..a3531a09 100644
--- sip/cpp/sip_corewxPanGestureEvent.cpp
+++ sip/cpp/sip_corewxPanGestureEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -163,7 +163,7 @@ static PyObject *meth_wxPanGestureEvent_SetDelta(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxPanGestureEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxPanGestureEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxPanGestureEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxPanGestureEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -320,7 +320,7 @@ sipClassTypeDef sipTypeDef__core_wxPanGestureEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPanGestureEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PanGestureEvent,
diff --git a/sip/cpp/sip_corewxPanel.cpp b/sip/cpp/sip_corewxPanel.cpp
index 49a88491..1b98b8ae 100644
--- sip/cpp/sip_corewxPanel.cpp
+++ sip/cpp/sip_corewxPanel.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1369,7 +1369,7 @@ static PyObject *meth_wxPanel_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxPanel_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPanel_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPanel_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPanel_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1407,7 +1407,7 @@ static PyObject *meth_wxPanel_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxPanel_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPanel_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPanel_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPanel_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1545,7 +1545,7 @@ static PyObject *meth_wxPanel_OnInternalIdle(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxPanel_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPanel_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPanel_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPanel_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1732,7 +1732,7 @@ static PyObject *meth_wxPanel_SetValidator(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxPanel_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPanel_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPanel_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPanel_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1881,7 +1881,7 @@ static PyObject *meth_wxPanel_DoEnable(PyObject *sipSelf, PyObject *sipArgs, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxPanel_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPanel_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPanel_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPanel_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1915,7 +1915,7 @@ static PyObject *meth_wxPanel_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxPanel_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPanel_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPanel_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPanel_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1949,7 +1949,7 @@ static PyObject *meth_wxPanel_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxPanel_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPanel_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPanel_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPanel_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2749,7 +2749,7 @@ sipClassTypeDef sipTypeDef__core_wxPanel = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPanel,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Panel,
diff --git a/sip/cpp/sip_corewxPasswordEntryDialog.cpp b/sip/cpp/sip_corewxPasswordEntryDialog.cpp
index d31abee9..1b6373c2 100644
--- sip/cpp/sip_corewxPasswordEntryDialog.cpp
+++ sip/cpp/sip_corewxPasswordEntryDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1225,7 +1225,7 @@ static PyObject *meth_wxPasswordEntryDialog_AcceptsFocusFromKeyboard(PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxPasswordEntryDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPasswordEntryDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPasswordEntryDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPasswordEntryDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1263,7 +1263,7 @@ static PyObject *meth_wxPasswordEntryDialog_AddChild(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPasswordEntryDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPasswordEntryDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPasswordEntryDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPasswordEntryDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1401,7 +1401,7 @@ static PyObject *meth_wxPasswordEntryDialog_OnInternalIdle(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxPasswordEntryDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPasswordEntryDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPasswordEntryDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPasswordEntryDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1588,7 +1588,7 @@ static PyObject *meth_wxPasswordEntryDialog_SetValidator(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxPasswordEntryDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPasswordEntryDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPasswordEntryDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPasswordEntryDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1737,7 +1737,7 @@ static PyObject *meth_wxPasswordEntryDialog_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPasswordEntryDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPasswordEntryDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPasswordEntryDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPasswordEntryDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1771,7 +1771,7 @@ static PyObject *meth_wxPasswordEntryDialog_DoGetPosition(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxPasswordEntryDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPasswordEntryDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPasswordEntryDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPasswordEntryDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1805,7 +1805,7 @@ static PyObject *meth_wxPasswordEntryDialog_DoGetSize(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPasswordEntryDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPasswordEntryDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPasswordEntryDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPasswordEntryDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2575,7 +2575,7 @@ sipClassTypeDef sipTypeDef__core_wxPasswordEntryDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPasswordEntryDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PasswordEntryDialog,
diff --git a/sip/cpp/sip_corewxPen.cpp b/sip/cpp/sip_corewxPen.cpp
index d1e924b2..28908ac5 100644
--- sip/cpp/sip_corewxPen.cpp
+++ sip/cpp/sip_corewxPen.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1119,7 +1119,7 @@ sipClassTypeDef sipTypeDef__core_wxPen = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPen,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Pen,
diff --git a/sip/cpp/sip_corewxPenInfo.cpp b/sip/cpp/sip_corewxPenInfo.cpp
index f03c6720..b0cd4a42 100644
--- sip/cpp/sip_corewxPenInfo.cpp
+++ sip/cpp/sip_corewxPenInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -750,7 +750,7 @@ sipClassTypeDef sipTypeDef__core_wxPenInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPenInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PenInfo,
diff --git a/sip/cpp/sip_corewxPenList.cpp b/sip/cpp/sip_corewxPenList.cpp
index 07dd2164..3729ce12 100644
--- sip/cpp/sip_corewxPenList.cpp
+++ sip/cpp/sip_corewxPenList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -162,7 +162,7 @@ sipClassTypeDef sipTypeDef__core_wxPenList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPenList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PenList,
diff --git a/sip/cpp/sip_corewxPickerBase.cpp b/sip/cpp/sip_corewxPickerBase.cpp
index c56affd8..38a91b40 100644
--- sip/cpp/sip_corewxPickerBase.cpp
+++ sip/cpp/sip_corewxPickerBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1078,7 +1078,7 @@ static PyObject *meth_wxPickerBase_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxPickerBase_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPickerBase_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPickerBase_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPickerBase_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1112,7 +1112,7 @@ static PyObject *meth_wxPickerBase_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxPickerBase_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPickerBase_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPickerBase_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPickerBase_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1146,7 +1146,7 @@ static PyObject *meth_wxPickerBase_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxPickerBase_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPickerBase_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPickerBase_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPickerBase_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2660,7 +2660,7 @@ sipClassTypeDef sipTypeDef__core_wxPickerBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPickerBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PickerBase,
diff --git a/sip/cpp/sip_corewxPixelDataBase.cpp b/sip/cpp/sip_corewxPixelDataBase.cpp
index 75a0338f..91ae6c6b 100644
--- sip/cpp/sip_corewxPixelDataBase.cpp
+++ sip/cpp/sip_corewxPixelDataBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -331,7 +331,7 @@ sipClassTypeDef sipTypeDef__core_wxPixelDataBase = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPixelDataBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PixelDataBase,
diff --git a/sip/cpp/sip_corewxPlatformId.cpp b/sip/cpp/sip_corewxPlatformId.cpp
index 48443398..ecfe6fbe 100644
--- sip/cpp/sip_corewxPlatformId.cpp
+++ sip/cpp/sip_corewxPlatformId.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -98,7 +98,7 @@ sipClassTypeDef sipTypeDef__core_wxPlatformId = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPlatformId,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PlatformId,
diff --git a/sip/cpp/sip_corewxPlatformInfo.cpp b/sip/cpp/sip_corewxPlatformInfo.cpp
index 35d0d803..4fd90435 100644
--- sip/cpp/sip_corewxPlatformInfo.cpp
+++ sip/cpp/sip_corewxPlatformInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1826,7 +1826,7 @@ sipClassTypeDef sipTypeDef__core_wxPlatformInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPlatformInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PlatformInformation,
diff --git a/sip/cpp/sip_corewxPoint.cpp b/sip/cpp/sip_corewxPoint.cpp
index 46cc240d..39341660 100644
--- sip/cpp/sip_corewxPoint.cpp
+++ sip/cpp/sip_corewxPoint.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -860,7 +860,7 @@ sipClassTypeDef sipTypeDef__core_wxPoint = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPoint,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Point,
diff --git a/sip/cpp/sip_corewxPoint2DDouble.cpp b/sip/cpp/sip_corewxPoint2DDouble.cpp
index a3f905e2..19e3dce4 100644
--- sip/cpp/sip_corewxPoint2DDouble.cpp
+++ sip/cpp/sip_corewxPoint2DDouble.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1047,7 +1047,7 @@ sipClassTypeDef sipTypeDef__core_wxPoint2DDouble = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPoint2DDouble,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Point2D,
diff --git a/sip/cpp/sip_corewxPointList.cpp b/sip/cpp/sip_corewxPointList.cpp
index 02148337..42d2a02f 100644
--- sip/cpp/sip_corewxPointList.cpp
+++ sip/cpp/sip_corewxPointList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -32,7 +32,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxPointList_index, "index(self, obj: Point) -> int");
+PyDoc_STRVAR(doc_wxPointList_index, "index(self, obj: Optional[Point]) -> int");
 
 extern "C" {static PyObject *meth_wxPointList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPointList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -369,7 +369,7 @@ sipClassTypeDef sipTypeDef__core_wxPointList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPointList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PointList,
diff --git a/sip/cpp/sip_corewxPointList_iterator.cpp b/sip/cpp/sip_corewxPointList_iterator.cpp
index ae240b4c..555c1af4 100644
--- sip/cpp/sip_corewxPointList_iterator.cpp
+++ sip/cpp/sip_corewxPointList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__core_wxPointList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxPointList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PointList_iterator,
diff --git a/sip/cpp/sip_corewxPopupTransientWindow.cpp b/sip/cpp/sip_corewxPopupTransientWindow.cpp
index d397bd7e..f9856643 100644
--- sip/cpp/sip_corewxPopupTransientWindow.cpp
+++ sip/cpp/sip_corewxPopupTransientWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1388,7 +1388,7 @@ static PyObject *meth_wxPopupTransientWindow_AcceptsFocusFromKeyboard(PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPopupTransientWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPopupTransientWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPopupTransientWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupTransientWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1426,7 +1426,7 @@ static PyObject *meth_wxPopupTransientWindow_AddChild(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPopupTransientWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPopupTransientWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPopupTransientWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupTransientWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1564,7 +1564,7 @@ static PyObject *meth_wxPopupTransientWindow_OnInternalIdle(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxPopupTransientWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPopupTransientWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPopupTransientWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPopupTransientWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1751,7 +1751,7 @@ static PyObject *meth_wxPopupTransientWindow_SetValidator(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxPopupTransientWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPopupTransientWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPopupTransientWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPopupTransientWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1900,7 +1900,7 @@ static PyObject *meth_wxPopupTransientWindow_DoEnable(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPopupTransientWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPopupTransientWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPopupTransientWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupTransientWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1934,7 +1934,7 @@ static PyObject *meth_wxPopupTransientWindow_DoGetPosition(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxPopupTransientWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPopupTransientWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPopupTransientWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupTransientWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1968,7 +1968,7 @@ static PyObject *meth_wxPopupTransientWindow_DoGetSize(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxPopupTransientWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPopupTransientWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPopupTransientWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupTransientWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2788,7 +2788,7 @@ sipClassTypeDef sipTypeDef__core_wxPopupTransientWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPopupTransientWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PopupTransientWindow,
diff --git a/sip/cpp/sip_corewxPopupWindow.cpp b/sip/cpp/sip_corewxPopupWindow.cpp
index b95b2eae..998055ca 100644
--- sip/cpp/sip_corewxPopupWindow.cpp
+++ sip/cpp/sip_corewxPopupWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1307,7 +1307,7 @@ static PyObject *meth_wxPopupWindow_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxPopupWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPopupWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPopupWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1345,7 +1345,7 @@ static PyObject *meth_wxPopupWindow_AddChild(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxPopupWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPopupWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPopupWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1483,7 +1483,7 @@ static PyObject *meth_wxPopupWindow_OnInternalIdle(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPopupWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPopupWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPopupWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPopupWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1670,7 +1670,7 @@ static PyObject *meth_wxPopupWindow_SetValidator(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxPopupWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPopupWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPopupWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPopupWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1819,7 +1819,7 @@ static PyObject *meth_wxPopupWindow_DoEnable(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxPopupWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPopupWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPopupWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1853,7 +1853,7 @@ static PyObject *meth_wxPopupWindow_DoGetPosition(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxPopupWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPopupWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPopupWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1887,7 +1887,7 @@ static PyObject *meth_wxPopupWindow_DoGetSize(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxPopupWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPopupWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPopupWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPopupWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2669,7 +2669,7 @@ sipClassTypeDef sipTypeDef__core_wxPopupWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPopupWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PopupWindow,
diff --git a/sip/cpp/sip_corewxPosition.cpp b/sip/cpp/sip_corewxPosition.cpp
index 4978cf0e..4fde1c16 100644
--- sip/cpp/sip_corewxPosition.cpp
+++ sip/cpp/sip_corewxPosition.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -808,7 +808,7 @@ sipClassTypeDef sipTypeDef__core_wxPosition = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPosition,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Position,
diff --git a/sip/cpp/sip_corewxPostScriptDC.cpp b/sip/cpp/sip_corewxPostScriptDC.cpp
index a6f4b790..811491c0 100644
--- sip/cpp/sip_corewxPostScriptDC.cpp
+++ sip/cpp/sip_corewxPostScriptDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -193,7 +193,7 @@ sipClassTypeDef sipTypeDef__core_wxPostScriptDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPostScriptDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PostScriptDC,
diff --git a/sip/cpp/sip_corewxPowerEvent.cpp b/sip/cpp/sip_corewxPowerEvent.cpp
index 252e4989..bd357c85 100644
--- sip/cpp/sip_corewxPowerEvent.cpp
+++ sip/cpp/sip_corewxPowerEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -162,7 +162,7 @@ static PyObject *meth_wxPowerEvent_IsVetoed(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxPowerEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxPowerEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxPowerEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxPowerEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -338,7 +338,7 @@ sipClassTypeDef sipTypeDef__core_wxPowerEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPowerEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PowerEvent,
diff --git a/sip/cpp/sip_corewxPowerResource.cpp b/sip/cpp/sip_corewxPowerResource.cpp
index 276e7f23..2edf8180 100644
--- sip/cpp/sip_corewxPowerResource.cpp
+++ sip/cpp/sip_corewxPowerResource.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -186,7 +186,7 @@ sipClassTypeDef sipTypeDef__core_wxPowerResource = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPowerResource,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PowerResource,
diff --git a/sip/cpp/sip_corewxPowerResourceBlocker.cpp b/sip/cpp/sip_corewxPowerResourceBlocker.cpp
index 37339c0b..56df157f 100644
--- sip/cpp/sip_corewxPowerResourceBlocker.cpp
+++ sip/cpp/sip_corewxPowerResourceBlocker.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -125,7 +125,7 @@ sipClassTypeDef sipTypeDef__core_wxPowerResourceBlocker = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPowerResourceBlocker,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PowerResourceBlocker,
diff --git a/sip/cpp/sip_corewxPreferencesEditor.cpp b/sip/cpp/sip_corewxPreferencesEditor.cpp
index c1f0a3e5..77c8293b 100644
--- sip/cpp/sip_corewxPreferencesEditor.cpp
+++ sip/cpp/sip_corewxPreferencesEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -341,7 +341,7 @@ sipClassTypeDef sipTypeDef__core_wxPreferencesEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPreferencesEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PreferencesEditor,
diff --git a/sip/cpp/sip_corewxPreferencesPage.cpp b/sip/cpp/sip_corewxPreferencesPage.cpp
index 075c0718..e314ddaa 100644
--- sip/cpp/sip_corewxPreferencesPage.cpp
+++ sip/cpp/sip_corewxPreferencesPage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -369,7 +369,7 @@ sipClassTypeDef sipTypeDef__core_wxPreferencesPage = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxPreferencesPage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PreferencesPage,
diff --git a/sip/cpp/sip_corewxPressAndTapEvent.cpp b/sip/cpp/sip_corewxPressAndTapEvent.cpp
index fc0dc169..7fcfae42 100644
--- sip/cpp/sip_corewxPressAndTapEvent.cpp
+++ sip/cpp/sip_corewxPressAndTapEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -87,7 +87,7 @@ sipwxPressAndTapEvent::~sipwxPressAndTapEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxPressAndTapEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxPressAndTapEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxPressAndTapEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxPressAndTapEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -239,7 +239,7 @@ sipClassTypeDef sipTypeDef__core_wxPressAndTapEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPressAndTapEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PressAndTapEvent,
diff --git a/sip/cpp/sip_corewxPreviewCanvas.cpp b/sip/cpp/sip_corewxPreviewCanvas.cpp
index e82ff330..54c899be 100644
--- sip/cpp/sip_corewxPreviewCanvas.cpp
+++ sip/cpp/sip_corewxPreviewCanvas.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1394,7 +1394,7 @@ static PyObject *meth_wxPreviewCanvas_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewCanvas_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPreviewCanvas_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPreviewCanvas_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewCanvas_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1432,7 +1432,7 @@ static PyObject *meth_wxPreviewCanvas_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewCanvas_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPreviewCanvas_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPreviewCanvas_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewCanvas_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1570,7 +1570,7 @@ static PyObject *meth_wxPreviewCanvas_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewCanvas_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPreviewCanvas_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPreviewCanvas_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewCanvas_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1757,7 +1757,7 @@ static PyObject *meth_wxPreviewCanvas_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewCanvas_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPreviewCanvas_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPreviewCanvas_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewCanvas_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1906,7 +1906,7 @@ static PyObject *meth_wxPreviewCanvas_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewCanvas_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewCanvas_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewCanvas_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewCanvas_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1940,7 +1940,7 @@ static PyObject *meth_wxPreviewCanvas_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewCanvas_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewCanvas_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewCanvas_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewCanvas_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1974,7 +1974,7 @@ static PyObject *meth_wxPreviewCanvas_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewCanvas_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewCanvas_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewCanvas_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewCanvas_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2743,7 +2743,7 @@ sipClassTypeDef sipTypeDef__core_wxPreviewCanvas = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPreviewCanvas,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PreviewCanvas,
diff --git a/sip/cpp/sip_corewxPreviewControlBar.cpp b/sip/cpp/sip_corewxPreviewControlBar.cpp
index 8f475e4e..611eb274 100644
--- sip/cpp/sip_corewxPreviewControlBar.cpp
+++ sip/cpp/sip_corewxPreviewControlBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1391,7 +1391,7 @@ static PyObject *meth_wxPreviewControlBar_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewControlBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPreviewControlBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPreviewControlBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewControlBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1429,7 +1429,7 @@ static PyObject *meth_wxPreviewControlBar_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewControlBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPreviewControlBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPreviewControlBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewControlBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1567,7 +1567,7 @@ static PyObject *meth_wxPreviewControlBar_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewControlBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPreviewControlBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPreviewControlBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewControlBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1754,7 +1754,7 @@ static PyObject *meth_wxPreviewControlBar_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewControlBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPreviewControlBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPreviewControlBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewControlBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1903,7 +1903,7 @@ static PyObject *meth_wxPreviewControlBar_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewControlBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewControlBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewControlBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewControlBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1937,7 +1937,7 @@ static PyObject *meth_wxPreviewControlBar_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewControlBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewControlBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewControlBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewControlBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1971,7 +1971,7 @@ static PyObject *meth_wxPreviewControlBar_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewControlBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewControlBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewControlBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewControlBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2748,7 +2748,7 @@ sipClassTypeDef sipTypeDef__core_wxPreviewControlBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPreviewControlBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PreviewControlBar,
diff --git a/sip/cpp/sip_corewxPreviewFrame.cpp b/sip/cpp/sip_corewxPreviewFrame.cpp
index 1736444a..186e6447 100644
--- sip/cpp/sip_corewxPreviewFrame.cpp
+++ sip/cpp/sip_corewxPreviewFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1506,7 +1506,7 @@ static PyObject *meth_wxPreviewFrame_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewFrame_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPreviewFrame_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPreviewFrame_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1544,7 +1544,7 @@ static PyObject *meth_wxPreviewFrame_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewFrame_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPreviewFrame_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPreviewFrame_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewFrame_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1682,7 +1682,7 @@ static PyObject *meth_wxPreviewFrame_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPreviewFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPreviewFrame_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewFrame_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1869,7 +1869,7 @@ static PyObject *meth_wxPreviewFrame_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewFrame_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPreviewFrame_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPreviewFrame_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewFrame_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2018,7 +2018,7 @@ static PyObject *meth_wxPreviewFrame_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2052,7 +2052,7 @@ static PyObject *meth_wxPreviewFrame_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2086,7 +2086,7 @@ static PyObject *meth_wxPreviewFrame_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxPreviewFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPreviewFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPreviewFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPreviewFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2864,7 +2864,7 @@ sipClassTypeDef sipTypeDef__core_wxPreviewFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPreviewFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PreviewFrame,
diff --git a/sip/cpp/sip_corewxPrintAbortDialog.cpp b/sip/cpp/sip_corewxPrintAbortDialog.cpp
index e6a62610..4d7861c5 100644
--- sip/cpp/sip_corewxPrintAbortDialog.cpp
+++ sip/cpp/sip_corewxPrintAbortDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1268,7 +1268,7 @@ static PyObject *meth_wxPrintAbortDialog_AcceptsFocusFromKeyboard(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxPrintAbortDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPrintAbortDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPrintAbortDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPrintAbortDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1306,7 +1306,7 @@ static PyObject *meth_wxPrintAbortDialog_AddChild(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxPrintAbortDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPrintAbortDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPrintAbortDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPrintAbortDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1444,7 +1444,7 @@ static PyObject *meth_wxPrintAbortDialog_OnInternalIdle(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxPrintAbortDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPrintAbortDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPrintAbortDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPrintAbortDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1631,7 +1631,7 @@ static PyObject *meth_wxPrintAbortDialog_SetValidator(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPrintAbortDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPrintAbortDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPrintAbortDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPrintAbortDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1780,7 +1780,7 @@ static PyObject *meth_wxPrintAbortDialog_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxPrintAbortDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPrintAbortDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPrintAbortDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPrintAbortDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1814,7 +1814,7 @@ static PyObject *meth_wxPrintAbortDialog_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxPrintAbortDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPrintAbortDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPrintAbortDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPrintAbortDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1848,7 +1848,7 @@ static PyObject *meth_wxPrintAbortDialog_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPrintAbortDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPrintAbortDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPrintAbortDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPrintAbortDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2619,7 +2619,7 @@ sipClassTypeDef sipTypeDef__core_wxPrintAbortDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPrintAbortDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PrintAbortDialog,
diff --git a/sip/cpp/sip_corewxPrintData.cpp b/sip/cpp/sip_corewxPrintData.cpp
index 2dde38c0..b6e52516 100644
--- sip/cpp/sip_corewxPrintData.cpp
+++ sip/cpp/sip_corewxPrintData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1316,7 +1316,7 @@ sipClassTypeDef sipTypeDef__core_wxPrintData = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPrintData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PrintData,
diff --git a/sip/cpp/sip_corewxPrintDialog.cpp b/sip/cpp/sip_corewxPrintDialog.cpp
index 30723c0c..ae3e0410 100644
--- sip/cpp/sip_corewxPrintDialog.cpp
+++ sip/cpp/sip_corewxPrintDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -408,7 +408,7 @@ sipClassTypeDef sipTypeDef__core_wxPrintDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPrintDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PrintDialog,
diff --git a/sip/cpp/sip_corewxPrintDialogData.cpp b/sip/cpp/sip_corewxPrintDialogData.cpp
index 9d7e1b16..9ec0111c 100644
--- sip/cpp/sip_corewxPrintDialogData.cpp
+++ sip/cpp/sip_corewxPrintDialogData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1185,7 +1185,7 @@ sipClassTypeDef sipTypeDef__core_wxPrintDialogData = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPrintDialogData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PrintDialogData,
diff --git a/sip/cpp/sip_corewxPrintPreview.cpp b/sip/cpp/sip_corewxPrintPreview.cpp
index 7a18c845..574ca67a 100644
--- sip/cpp/sip_corewxPrintPreview.cpp
+++ sip/cpp/sip_corewxPrintPreview.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1169,7 +1169,7 @@ sipClassTypeDef sipTypeDef__core_wxPrintPreview = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPrintPreview,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PrintPreview,
diff --git a/sip/cpp/sip_corewxPrinter.cpp b/sip/cpp/sip_corewxPrinter.cpp
index f0dd6a49..e67d14b8 100644
--- sip/cpp/sip_corewxPrinter.cpp
+++ sip/cpp/sip_corewxPrinter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -597,7 +597,7 @@ sipClassTypeDef sipTypeDef__core_wxPrinter = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPrinter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Printer,
diff --git a/sip/cpp/sip_corewxPrinterDC.cpp b/sip/cpp/sip_corewxPrinterDC.cpp
index 66d538b4..a9137fd8 100644
--- sip/cpp/sip_corewxPrinterDC.cpp
+++ sip/cpp/sip_corewxPrinterDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -202,7 +202,7 @@ sipClassTypeDef sipTypeDef__core_wxPrinterDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPrinterDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PrinterDC,
diff --git a/sip/cpp/sip_corewxPrintout.cpp b/sip/cpp/sip_corewxPrintout.cpp
index 12045fe8..43b74eec 100644
--- sip/cpp/sip_corewxPrintout.cpp
+++ sip/cpp/sip_corewxPrintout.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1486,7 +1486,7 @@ sipClassTypeDef sipTypeDef__core_wxPrintout = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPrintout,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Printout,
diff --git a/sip/cpp/sip_corewxProcess.cpp b/sip/cpp/sip_corewxProcess.cpp
index c056d568..6d8f8703 100644
--- sip/cpp/sip_corewxProcess.cpp
+++ sip/cpp/sip_corewxProcess.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -994,7 +994,7 @@ sipClassTypeDef sipTypeDef__core_wxProcess = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxProcess,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Process,
diff --git a/sip/cpp/sip_corewxProcessEvent.cpp b/sip/cpp/sip_corewxProcessEvent.cpp
index 02ded445..638430d5 100644
--- sip/cpp/sip_corewxProcessEvent.cpp
+++ sip/cpp/sip_corewxProcessEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -284,7 +284,7 @@ sipClassTypeDef sipTypeDef__core_wxProcessEvent = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxProcessEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ProcessEvent,
diff --git a/sip/cpp/sip_corewxProgressDialog.cpp b/sip/cpp/sip_corewxProgressDialog.cpp
index 4ffc07ef..54fa7f9d 100644
--- sip/cpp/sip_corewxProgressDialog.cpp
+++ sip/cpp/sip_corewxProgressDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1608,7 +1608,7 @@ static PyObject *meth_wxProgressDialog_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxProgressDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxProgressDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxProgressDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxProgressDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1646,7 +1646,7 @@ static PyObject *meth_wxProgressDialog_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxProgressDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxProgressDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxProgressDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxProgressDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1784,7 +1784,7 @@ static PyObject *meth_wxProgressDialog_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxProgressDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxProgressDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxProgressDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxProgressDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1971,7 +1971,7 @@ static PyObject *meth_wxProgressDialog_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxProgressDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxProgressDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxProgressDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxProgressDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2120,7 +2120,7 @@ static PyObject *meth_wxProgressDialog_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxProgressDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxProgressDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxProgressDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxProgressDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2154,7 +2154,7 @@ static PyObject *meth_wxProgressDialog_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxProgressDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxProgressDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxProgressDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxProgressDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2188,7 +2188,7 @@ static PyObject *meth_wxProgressDialog_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxProgressDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxProgressDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxProgressDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxProgressDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2925,7 +2925,7 @@ sipClassTypeDef sipTypeDef__core_wxProgressDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxProgressDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ProgressDialog,
diff --git a/sip/cpp/sip_corewxPropagateOnce.cpp b/sip/cpp/sip_corewxPropagateOnce.cpp
index 5737ae07..228366d6 100644
--- sip/cpp/sip_corewxPropagateOnce.cpp
+++ sip/cpp/sip_corewxPropagateOnce.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -80,7 +80,7 @@ sipClassTypeDef sipTypeDef__core_wxPropagateOnce = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPropagateOnce,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropagateOnce,
diff --git a/sip/cpp/sip_corewxPropagationDisabler.cpp b/sip/cpp/sip_corewxPropagationDisabler.cpp
index 7432a724..f41da684 100644
--- sip/cpp/sip_corewxPropagationDisabler.cpp
+++ sip/cpp/sip_corewxPropagationDisabler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -80,7 +80,7 @@ sipClassTypeDef sipTypeDef__core_wxPropagationDisabler = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPropagationDisabler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropagationDisabler,
diff --git a/sip/cpp/sip_corewxPyApp.cpp b/sip/cpp/sip_corewxPyApp.cpp
index 86d97895..ab396132 100644
--- sip/cpp/sip_corewxPyApp.cpp
+++ sip/cpp/sip_corewxPyApp.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2236,7 +2236,7 @@ static PyObject *meth_wxPyApp_GetMacExitMenuItemId(PyObject *, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxPyApp_GetMacHelpMenuTitleName, "GetMacHelpMenuTitleName() -> object");
+PyDoc_STRVAR(doc_wxPyApp_GetMacHelpMenuTitleName, "GetMacHelpMenuTitleName() -> Any");
 
 extern "C" {static PyObject *meth_wxPyApp_GetMacHelpMenuTitleName(PyObject *, PyObject *);}
 static PyObject *meth_wxPyApp_GetMacHelpMenuTitleName(PyObject *, PyObject *sipArgs)
@@ -2375,7 +2375,7 @@ static PyObject *meth_wxPyApp_SetMacExitMenuItemId(PyObject *, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxPyApp_SetMacHelpMenuTitleName, "SetMacHelpMenuTitleName(val: object)");
+PyDoc_STRVAR(doc_wxPyApp_SetMacHelpMenuTitleName, "SetMacHelpMenuTitleName(val: Any)");
 
 extern "C" {static PyObject *meth_wxPyApp_SetMacHelpMenuTitleName(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPyApp_SetMacHelpMenuTitleName(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -2687,7 +2687,7 @@ sipClassTypeDef sipTypeDef__core_wxPyApp = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPyApp,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PyApp,
diff --git a/sip/cpp/sip_corewxPyBuffer.cpp b/sip/cpp/sip_corewxPyBuffer.cpp
index 162e0709..ea2f0bf9 100644
--- sip/cpp/sip_corewxPyBuffer.cpp
+++ sip/cpp/sip_corewxPyBuffer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -84,15 +84,15 @@ sipMappedTypeDef sipTypeDef__core_wxPyBuffer = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxPyBuffer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxPyBuffer,
     array_wxPyBuffer,
diff --git a/sip/cpp/sip_corewxPyCommandEvent.cpp b/sip/cpp/sip_corewxPyCommandEvent.cpp
index 12033e7c..cd541632 100644
--- sip/cpp/sip_corewxPyCommandEvent.cpp
+++ sip/cpp/sip_corewxPyCommandEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -364,7 +364,7 @@ sipClassTypeDef sipTypeDef__core_wxPyCommandEvent = {
         SIP_TYPE_SCC|SIP_TYPE_NONLAZY|SIP_TYPE_CLASS,
         sipNameNr_wxPyCommandEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PyCommandEvent,
diff --git a/sip/cpp/sip_corewxPyEvent.cpp b/sip/cpp/sip_corewxPyEvent.cpp
index e7b56bff..ddf6d747 100644
--- sip/cpp/sip_corewxPyEvent.cpp
+++ sip/cpp/sip_corewxPyEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -363,7 +363,7 @@ sipClassTypeDef sipTypeDef__core_wxPyEvent = {
         SIP_TYPE_SCC|SIP_TYPE_NONLAZY|SIP_TYPE_CLASS,
         sipNameNr_wxPyEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PyEvent,
diff --git a/sip/cpp/sip_corewxPySingleChoiceDialog.cpp b/sip/cpp/sip_corewxPySingleChoiceDialog.cpp
index dc20c90e..3e0d975f 100644
--- sip/cpp/sip_corewxPySingleChoiceDialog.cpp
+++ sip/cpp/sip_corewxPySingleChoiceDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1380,7 +1380,7 @@ static PyObject *meth_wxPySingleChoiceDialog_AcceptsFocusFromKeyboard(PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPySingleChoiceDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPySingleChoiceDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPySingleChoiceDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPySingleChoiceDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1418,7 +1418,7 @@ static PyObject *meth_wxPySingleChoiceDialog_AddChild(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPySingleChoiceDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPySingleChoiceDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPySingleChoiceDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPySingleChoiceDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1556,7 +1556,7 @@ static PyObject *meth_wxPySingleChoiceDialog_OnInternalIdle(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxPySingleChoiceDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPySingleChoiceDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPySingleChoiceDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPySingleChoiceDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1743,7 +1743,7 @@ static PyObject *meth_wxPySingleChoiceDialog_SetValidator(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxPySingleChoiceDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPySingleChoiceDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPySingleChoiceDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPySingleChoiceDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1892,7 +1892,7 @@ static PyObject *meth_wxPySingleChoiceDialog_DoEnable(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPySingleChoiceDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPySingleChoiceDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPySingleChoiceDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPySingleChoiceDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1926,7 +1926,7 @@ static PyObject *meth_wxPySingleChoiceDialog_DoGetPosition(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxPySingleChoiceDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPySingleChoiceDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPySingleChoiceDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPySingleChoiceDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1960,7 +1960,7 @@ static PyObject *meth_wxPySingleChoiceDialog_DoGetSize(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxPySingleChoiceDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPySingleChoiceDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPySingleChoiceDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPySingleChoiceDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2735,7 +2735,7 @@ sipClassTypeDef sipTypeDef__core_wxPySingleChoiceDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPySingleChoiceDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SingleChoiceDialog,
diff --git a/sip/cpp/sip_corewxPyUserData.cpp b/sip/cpp/sip_corewxPyUserData.cpp
index adb280f3..cf1d13d0 100644
--- sip/cpp/sip_corewxPyUserData.cpp
+++ sip/cpp/sip_corewxPyUserData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -80,15 +80,15 @@ sipMappedTypeDef sipTypeDef__core_wxPyUserData = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxPyUserData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxPyUserData,
     array_wxPyUserData,
diff --git a/sip/cpp/sip_corewxQueryNewPaletteEvent.cpp b/sip/cpp/sip_corewxQueryNewPaletteEvent.cpp
index bb536622..3432b3d6 100644
--- sip/cpp/sip_corewxQueryNewPaletteEvent.cpp
+++ sip/cpp/sip_corewxQueryNewPaletteEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -156,7 +156,7 @@ static PyObject *meth_wxQueryNewPaletteEvent_GetPaletteRealized(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxQueryNewPaletteEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxQueryNewPaletteEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxQueryNewPaletteEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxQueryNewPaletteEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -311,7 +311,7 @@ sipClassTypeDef sipTypeDef__core_wxQueryNewPaletteEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxQueryNewPaletteEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_QueryNewPaletteEvent,
diff --git a/sip/cpp/sip_corewxRadioBox.cpp b/sip/cpp/sip_corewxRadioBox.cpp
index 8952dd06..42f126fc 100644
--- sip/cpp/sip_corewxRadioBox.cpp
+++ sip/cpp/sip_corewxRadioBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2081,7 +2081,7 @@ static PyObject *meth_wxRadioBox_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxRadioBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRadioBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRadioBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2119,7 +2119,7 @@ static PyObject *meth_wxRadioBox_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxRadioBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRadioBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRadioBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2257,7 +2257,7 @@ static PyObject *meth_wxRadioBox_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRadioBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRadioBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRadioBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRadioBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2444,7 +2444,7 @@ static PyObject *meth_wxRadioBox_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxRadioBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRadioBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRadioBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRadioBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2593,7 +2593,7 @@ static PyObject *meth_wxRadioBox_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxRadioBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRadioBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRadioBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2627,7 +2627,7 @@ static PyObject *meth_wxRadioBox_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRadioBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRadioBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRadioBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2661,7 +2661,7 @@ static PyObject *meth_wxRadioBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxRadioBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRadioBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRadioBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3501,7 +3501,7 @@ sipClassTypeDef sipTypeDef__core_wxRadioBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRadioBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RadioBox,
diff --git a/sip/cpp/sip_corewxRadioButton.cpp b/sip/cpp/sip_corewxRadioButton.cpp
index b0f7a968..9a83f673 100644
--- sip/cpp/sip_corewxRadioButton.cpp
+++ sip/cpp/sip_corewxRadioButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1483,7 +1483,7 @@ static PyObject *meth_wxRadioButton_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRadioButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRadioButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRadioButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1521,7 +1521,7 @@ static PyObject *meth_wxRadioButton_AddChild(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxRadioButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRadioButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRadioButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1659,7 +1659,7 @@ static PyObject *meth_wxRadioButton_OnInternalIdle(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRadioButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRadioButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRadioButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRadioButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1846,7 +1846,7 @@ static PyObject *meth_wxRadioButton_SetValidator(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRadioButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRadioButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRadioButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRadioButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1995,7 +1995,7 @@ static PyObject *meth_wxRadioButton_DoEnable(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxRadioButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRadioButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRadioButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2029,7 +2029,7 @@ static PyObject *meth_wxRadioButton_DoGetPosition(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxRadioButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRadioButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRadioButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2063,7 +2063,7 @@ static PyObject *meth_wxRadioButton_DoGetSize(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxRadioButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRadioButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRadioButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRadioButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2883,7 +2883,7 @@ sipClassTypeDef sipTypeDef__core_wxRadioButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRadioButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RadioButton,
diff --git a/sip/cpp/sip_corewxRealPoint.cpp b/sip/cpp/sip_corewxRealPoint.cpp
index 6aa51ad1..862f7e99 100644
--- sip/cpp/sip_corewxRealPoint.cpp
+++ sip/cpp/sip_corewxRealPoint.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -703,7 +703,7 @@ sipClassTypeDef sipTypeDef__core_wxRealPoint = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRealPoint,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RealPoint,
diff --git a/sip/cpp/sip_corewxRearrangeCtrl.cpp b/sip/cpp/sip_corewxRearrangeCtrl.cpp
index 271f3f8c..e28167c8 100644
--- sip/cpp/sip_corewxRearrangeCtrl.cpp
+++ sip/cpp/sip_corewxRearrangeCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1307,7 +1307,7 @@ static PyObject *meth_wxRearrangeCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRearrangeCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRearrangeCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1345,7 +1345,7 @@ static PyObject *meth_wxRearrangeCtrl_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRearrangeCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRearrangeCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1483,7 +1483,7 @@ static PyObject *meth_wxRearrangeCtrl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRearrangeCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRearrangeCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1670,7 +1670,7 @@ static PyObject *meth_wxRearrangeCtrl_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRearrangeCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRearrangeCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1819,7 +1819,7 @@ static PyObject *meth_wxRearrangeCtrl_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1853,7 +1853,7 @@ static PyObject *meth_wxRearrangeCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1887,7 +1887,7 @@ static PyObject *meth_wxRearrangeCtrl_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2703,7 +2703,7 @@ sipClassTypeDef sipTypeDef__core_wxRearrangeCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRearrangeCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RearrangeCtrl,
diff --git a/sip/cpp/sip_corewxRearrangeDialog.cpp b/sip/cpp/sip_corewxRearrangeDialog.cpp
index 94e03a86..5cb05070 100644
--- sip/cpp/sip_corewxRearrangeDialog.cpp
+++ sip/cpp/sip_corewxRearrangeDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1414,7 +1414,7 @@ static PyObject *meth_wxRearrangeDialog_AcceptsFocusFromKeyboard(PyObject *sipSe
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRearrangeDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRearrangeDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1452,7 +1452,7 @@ static PyObject *meth_wxRearrangeDialog_AddChild(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRearrangeDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRearrangeDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1590,7 +1590,7 @@ static PyObject *meth_wxRearrangeDialog_OnInternalIdle(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRearrangeDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRearrangeDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1777,7 +1777,7 @@ static PyObject *meth_wxRearrangeDialog_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRearrangeDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRearrangeDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1926,7 +1926,7 @@ static PyObject *meth_wxRearrangeDialog_DoEnable(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1960,7 +1960,7 @@ static PyObject *meth_wxRearrangeDialog_DoGetPosition(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1994,7 +1994,7 @@ static PyObject *meth_wxRearrangeDialog_DoGetSize(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2811,7 +2811,7 @@ sipClassTypeDef sipTypeDef__core_wxRearrangeDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRearrangeDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RearrangeDialog,
diff --git a/sip/cpp/sip_corewxRearrangeList.cpp b/sip/cpp/sip_corewxRearrangeList.cpp
index 52b61be3..a54e1cb9 100644
--- sip/cpp/sip_corewxRearrangeList.cpp
+++ sip/cpp/sip_corewxRearrangeList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1598,7 +1598,7 @@ static PyObject *meth_wxRearrangeList_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeList_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRearrangeList_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRearrangeList_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeList_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1636,7 +1636,7 @@ static PyObject *meth_wxRearrangeList_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeList_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRearrangeList_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRearrangeList_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeList_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1774,7 +1774,7 @@ static PyObject *meth_wxRearrangeList_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeList_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRearrangeList_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRearrangeList_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeList_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1961,7 +1961,7 @@ static PyObject *meth_wxRearrangeList_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeList_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRearrangeList_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRearrangeList_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeList_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2110,7 +2110,7 @@ static PyObject *meth_wxRearrangeList_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeList_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeList_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeList_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeList_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2144,7 +2144,7 @@ static PyObject *meth_wxRearrangeList_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeList_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeList_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeList_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeList_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2178,7 +2178,7 @@ static PyObject *meth_wxRearrangeList_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRearrangeList_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRearrangeList_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRearrangeList_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRearrangeList_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2998,7 +2998,7 @@ sipClassTypeDef sipTypeDef__core_wxRearrangeList = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRearrangeList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RearrangeList,
diff --git a/sip/cpp/sip_corewxRect.cpp b/sip/cpp/sip_corewxRect.cpp
index 878a34fd..2eda95f8 100644
--- sip/cpp/sip_corewxRect.cpp
+++ sip/cpp/sip_corewxRect.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2444,7 +2444,7 @@ sipClassTypeDef sipTypeDef__core_wxRect = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRect,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Rect,
diff --git a/sip/cpp/sip_corewxRect2DDouble.cpp b/sip/cpp/sip_corewxRect2DDouble.cpp
index 21b1ffc5..d4919aef 100644
--- sip/cpp/sip_corewxRect2DDouble.cpp
+++ sip/cpp/sip_corewxRect2DDouble.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2311,7 +2311,7 @@ sipClassTypeDef sipTypeDef__core_wxRect2DDouble = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRect2DDouble,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Rect2D,
diff --git a/sip/cpp/sip_corewxRefCounter.cpp b/sip/cpp/sip_corewxRefCounter.cpp
index dbfd2cae..5d1c2fdd 100644
--- sip/cpp/sip_corewxRefCounter.cpp
+++ sip/cpp/sip_corewxRefCounter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -223,7 +223,7 @@ sipClassTypeDef sipTypeDef__core_wxRefCounter = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRefCounter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RefCounter,
diff --git a/sip/cpp/sip_corewxRegion.cpp b/sip/cpp/sip_corewxRegion.cpp
index da090a59..a2998bc4 100644
--- sip/cpp/sip_corewxRegion.cpp
+++ sip/cpp/sip_corewxRegion.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1244,7 +1244,7 @@ sipClassTypeDef sipTypeDef__core_wxRegion = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRegion,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Region,
diff --git a/sip/cpp/sip_corewxRegionIterator.cpp b/sip/cpp/sip_corewxRegionIterator.cpp
index 5970505c..d1f67cc4 100644
--- sip/cpp/sip_corewxRegionIterator.cpp
+++ sip/cpp/sip_corewxRegionIterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -650,7 +650,7 @@ sipClassTypeDef sipTypeDef__core_wxRegionIterator = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRegionIterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RegionIterator,
diff --git a/sip/cpp/sip_corewxRendererNative.cpp b/sip/cpp/sip_corewxRendererNative.cpp
index 853b5422..49fb6254 100644
--- sip/cpp/sip_corewxRendererNative.cpp
+++ sip/cpp/sip_corewxRendererNative.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1777,7 +1777,7 @@ sipClassTypeDef sipTypeDef__core_wxRendererNative = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxRendererNative,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RendererNative,
diff --git a/sip/cpp/sip_corewxRendererVersion.cpp b/sip/cpp/sip_corewxRendererVersion.cpp
index 3dbc6ab5..1d6633d6 100644
--- sip/cpp/sip_corewxRendererVersion.cpp
+++ sip/cpp/sip_corewxRendererVersion.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -171,7 +171,7 @@ sipClassTypeDef sipTypeDef__core_wxRendererVersion = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRendererVersion,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RendererVersion,
diff --git a/sip/cpp/sip_corewxRichMessageDialog.cpp b/sip/cpp/sip_corewxRichMessageDialog.cpp
index 6610ac57..e4f25447 100644
--- sip/cpp/sip_corewxRichMessageDialog.cpp
+++ sip/cpp/sip_corewxRichMessageDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1692,7 +1692,7 @@ static PyObject *meth_wxRichMessageDialog_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRichMessageDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichMessageDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichMessageDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichMessageDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1730,7 +1730,7 @@ static PyObject *meth_wxRichMessageDialog_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRichMessageDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichMessageDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichMessageDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichMessageDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1868,7 +1868,7 @@ static PyObject *meth_wxRichMessageDialog_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxRichMessageDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRichMessageDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRichMessageDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRichMessageDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2055,7 +2055,7 @@ static PyObject *meth_wxRichMessageDialog_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRichMessageDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRichMessageDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRichMessageDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRichMessageDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2204,7 +2204,7 @@ static PyObject *meth_wxRichMessageDialog_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRichMessageDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichMessageDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichMessageDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichMessageDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2238,7 +2238,7 @@ static PyObject *meth_wxRichMessageDialog_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxRichMessageDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichMessageDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichMessageDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichMessageDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2272,7 +2272,7 @@ static PyObject *meth_wxRichMessageDialog_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRichMessageDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichMessageDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichMessageDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichMessageDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3050,7 +3050,7 @@ sipClassTypeDef sipTypeDef__core_wxRichMessageDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichMessageDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichMessageDialog,
diff --git a/sip/cpp/sip_corewxRotateGestureEvent.cpp b/sip/cpp/sip_corewxRotateGestureEvent.cpp
index 24d9e2b6..ccbb4ef7 100644
--- sip/cpp/sip_corewxRotateGestureEvent.cpp
+++ sip/cpp/sip_corewxRotateGestureEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -163,7 +163,7 @@ static PyObject *meth_wxRotateGestureEvent_SetRotationAngle(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxRotateGestureEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxRotateGestureEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxRotateGestureEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxRotateGestureEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -321,7 +321,7 @@ sipClassTypeDef sipTypeDef__core_wxRotateGestureEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRotateGestureEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RotateGestureEvent,
diff --git a/sip/cpp/sip_corewxSVGBitmapEmbedHandler.cpp b/sip/cpp/sip_corewxSVGBitmapEmbedHandler.cpp
index 28c6ea0a..a8522759 100644
--- sip/cpp/sip_corewxSVGBitmapEmbedHandler.cpp
+++ sip/cpp/sip_corewxSVGBitmapEmbedHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -238,7 +238,7 @@ sipClassTypeDef sipTypeDef__core_wxSVGBitmapEmbedHandler = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSVGBitmapEmbedHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SVGBitmapEmbedHandler,
diff --git a/sip/cpp/sip_corewxSVGBitmapFileHandler.cpp b/sip/cpp/sip_corewxSVGBitmapFileHandler.cpp
index 90b918b7..562415db 100644
--- sip/cpp/sip_corewxSVGBitmapFileHandler.cpp
+++ sip/cpp/sip_corewxSVGBitmapFileHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -250,7 +250,7 @@ sipClassTypeDef sipTypeDef__core_wxSVGBitmapFileHandler = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSVGBitmapFileHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SVGBitmapFileHandler,
diff --git a/sip/cpp/sip_corewxSVGBitmapHandler.cpp b/sip/cpp/sip_corewxSVGBitmapHandler.cpp
index 124ea44b..0a1685ac 100644
--- sip/cpp/sip_corewxSVGBitmapHandler.cpp
+++ sip/cpp/sip_corewxSVGBitmapHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -203,7 +203,7 @@ sipClassTypeDef sipTypeDef__core_wxSVGBitmapHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxSVGBitmapHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SVGBitmapHandler,
diff --git a/sip/cpp/sip_corewxSVGFileDC.cpp b/sip/cpp/sip_corewxSVGFileDC.cpp
index d2c8d48b..468660f0 100644
--- sip/cpp/sip_corewxSVGFileDC.cpp
+++ sip/cpp/sip_corewxSVGFileDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -769,7 +769,7 @@ sipClassTypeDef sipTypeDef__core_wxSVGFileDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSVGFileDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SVGFileDC,
diff --git a/sip/cpp/sip_corewxScreenDC.cpp b/sip/cpp/sip_corewxScreenDC.cpp
index 60a9c910..f2faa0ab 100644
--- sip/cpp/sip_corewxScreenDC.cpp
+++ sip/cpp/sip_corewxScreenDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -264,7 +264,7 @@ sipClassTypeDef sipTypeDef__core_wxScreenDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxScreenDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ScreenDC,
diff --git a/sip/cpp/sip_corewxScrollBar.cpp b/sip/cpp/sip_corewxScrollBar.cpp
index 408ca707..9ef4feb4 100644
--- sip/cpp/sip_corewxScrollBar.cpp
+++ sip/cpp/sip_corewxScrollBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1523,7 +1523,7 @@ static PyObject *meth_wxScrollBar_AcceptsFocusFromKeyboard(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxScrollBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxScrollBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxScrollBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrollBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1561,7 +1561,7 @@ static PyObject *meth_wxScrollBar_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxScrollBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxScrollBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxScrollBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrollBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1699,7 +1699,7 @@ static PyObject *meth_wxScrollBar_OnInternalIdle(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxScrollBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxScrollBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxScrollBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxScrollBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1886,7 +1886,7 @@ static PyObject *meth_wxScrollBar_SetValidator(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxScrollBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxScrollBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxScrollBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxScrollBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2035,7 +2035,7 @@ static PyObject *meth_wxScrollBar_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxScrollBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrollBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrollBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrollBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2069,7 +2069,7 @@ static PyObject *meth_wxScrollBar_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxScrollBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrollBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrollBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrollBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2103,7 +2103,7 @@ static PyObject *meth_wxScrollBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxScrollBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrollBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrollBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrollBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2918,7 +2918,7 @@ sipClassTypeDef sipTypeDef__core_wxScrollBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxScrollBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ScrollBar,
diff --git a/sip/cpp/sip_corewxScrollEvent.cpp b/sip/cpp/sip_corewxScrollEvent.cpp
index ae3792a8..092221f4 100644
--- sip/cpp/sip_corewxScrollEvent.cpp
+++ sip/cpp/sip_corewxScrollEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -231,7 +231,7 @@ static PyObject *meth_wxScrollEvent_SetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxScrollEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxScrollEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxScrollEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxScrollEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -398,7 +398,7 @@ sipClassTypeDef sipTypeDef__core_wxScrollEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxScrollEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ScrollEvent,
diff --git a/sip/cpp/sip_corewxScrollWinEvent.cpp b/sip/cpp/sip_corewxScrollWinEvent.cpp
index 88cb7329..65f2b011 100644
--- sip/cpp/sip_corewxScrollWinEvent.cpp
+++ sip/cpp/sip_corewxScrollWinEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -232,7 +232,7 @@ static PyObject *meth_wxScrollWinEvent_SetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxScrollWinEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxScrollWinEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxScrollWinEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxScrollWinEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -397,7 +397,7 @@ sipClassTypeDef sipTypeDef__core_wxScrollWinEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxScrollWinEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ScrollWinEvent,
diff --git a/sip/cpp/sip_corewxScrolledCanvas.cpp b/sip/cpp/sip_corewxScrolledCanvas.cpp
index cee983a4..afe713d6 100644
--- sip/cpp/sip_corewxScrolledCanvas.cpp
+++ sip/cpp/sip_corewxScrolledCanvas.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2496,7 +2496,7 @@ static PyObject *meth_wxScrolledCanvas_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledCanvas_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxScrolledCanvas_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxScrolledCanvas_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledCanvas_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2534,7 +2534,7 @@ static PyObject *meth_wxScrolledCanvas_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledCanvas_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxScrolledCanvas_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxScrolledCanvas_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledCanvas_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2672,7 +2672,7 @@ static PyObject *meth_wxScrolledCanvas_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledCanvas_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxScrolledCanvas_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxScrolledCanvas_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledCanvas_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2859,7 +2859,7 @@ static PyObject *meth_wxScrolledCanvas_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledCanvas_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxScrolledCanvas_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxScrolledCanvas_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledCanvas_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3008,7 +3008,7 @@ static PyObject *meth_wxScrolledCanvas_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledCanvas_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrolledCanvas_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrolledCanvas_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledCanvas_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3042,7 +3042,7 @@ static PyObject *meth_wxScrolledCanvas_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledCanvas_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrolledCanvas_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrolledCanvas_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledCanvas_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3076,7 +3076,7 @@ static PyObject *meth_wxScrolledCanvas_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledCanvas_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrolledCanvas_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrolledCanvas_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledCanvas_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3992,7 +3992,7 @@ sipClassTypeDef sipTypeDef__core_wxScrolledCanvas = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxScrolledCanvas,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ScrolledCanvas,
diff --git a/sip/cpp/sip_corewxScrolledWindow.cpp b/sip/cpp/sip_corewxScrolledWindow.cpp
index 411c3b39..7fd19f8a 100644
--- sip/cpp/sip_corewxScrolledWindow.cpp
+++ sip/cpp/sip_corewxScrolledWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1393,7 +1393,7 @@ static PyObject *meth_wxScrolledWindow_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxScrolledWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxScrolledWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1431,7 +1431,7 @@ static PyObject *meth_wxScrolledWindow_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxScrolledWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxScrolledWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1569,7 +1569,7 @@ static PyObject *meth_wxScrolledWindow_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxScrolledWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxScrolledWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1756,7 +1756,7 @@ static PyObject *meth_wxScrolledWindow_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxScrolledWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxScrolledWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1905,7 +1905,7 @@ static PyObject *meth_wxScrolledWindow_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrolledWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrolledWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1939,7 +1939,7 @@ static PyObject *meth_wxScrolledWindow_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrolledWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrolledWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1973,7 +1973,7 @@ static PyObject *meth_wxScrolledWindow_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxScrolledWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxScrolledWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxScrolledWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxScrolledWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2765,7 +2765,7 @@ sipClassTypeDef sipTypeDef__core_wxScrolledWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxScrolledWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ScrolledWindow,
diff --git a/sip/cpp/sip_corewxSearchCtrl.cpp b/sip/cpp/sip_corewxSearchCtrl.cpp
index 34e7a5ce..2d517a1e 100644
--- sip/cpp/sip_corewxSearchCtrl.cpp
+++ sip/cpp/sip_corewxSearchCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3252,7 +3252,7 @@ static PyObject *meth_wxSearchCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxSearchCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSearchCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSearchCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSearchCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3290,7 +3290,7 @@ static PyObject *meth_wxSearchCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSearchCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSearchCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSearchCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSearchCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3428,7 +3428,7 @@ static PyObject *meth_wxSearchCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxSearchCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSearchCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSearchCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSearchCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3615,7 +3615,7 @@ static PyObject *meth_wxSearchCtrl_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSearchCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSearchCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSearchCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSearchCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3764,7 +3764,7 @@ static PyObject *meth_wxSearchCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSearchCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSearchCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSearchCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSearchCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3798,7 +3798,7 @@ static PyObject *meth_wxSearchCtrl_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSearchCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSearchCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSearchCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSearchCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3832,7 +3832,7 @@ static PyObject *meth_wxSearchCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxSearchCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSearchCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSearchCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSearchCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4702,7 +4702,7 @@ sipClassTypeDef sipTypeDef__core_wxSearchCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSearchCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SearchCtrl,
diff --git a/sip/cpp/sip_corewxSetCursorEvent.cpp b/sip/cpp/sip_corewxSetCursorEvent.cpp
index 935b2528..a59a515f 100644
--- sip/cpp/sip_corewxSetCursorEvent.cpp
+++ sip/cpp/sip_corewxSetCursorEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -266,7 +266,7 @@ static PyObject *meth_wxSetCursorEvent_SetCursor(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSetCursorEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxSetCursorEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxSetCursorEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxSetCursorEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -431,7 +431,7 @@ sipClassTypeDef sipTypeDef__core_wxSetCursorEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSetCursorEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SetCursorEvent,
diff --git a/sip/cpp/sip_corewxSettableHeaderColumn.cpp b/sip/cpp/sip_corewxSettableHeaderColumn.cpp
index 4265a722..23f16639 100644
--- sip/cpp/sip_corewxSettableHeaderColumn.cpp
+++ sip/cpp/sip_corewxSettableHeaderColumn.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1278,7 +1278,7 @@ sipClassTypeDef sipTypeDef__core_wxSettableHeaderColumn = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxSettableHeaderColumn,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SettableHeaderColumn,
diff --git a/sip/cpp/sip_corewxSharedClientDataContainer.cpp b/sip/cpp/sip_corewxSharedClientDataContainer.cpp
index 35e50d57..145728f1 100644
--- sip/cpp/sip_corewxSharedClientDataContainer.cpp
+++ sip/cpp/sip_corewxSharedClientDataContainer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -263,7 +263,7 @@ sipClassTypeDef sipTypeDef__core_wxSharedClientDataContainer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSharedClientDataContainer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SharedClientDataContainer,
diff --git a/sip/cpp/sip_corewxShowEvent.cpp b/sip/cpp/sip_corewxShowEvent.cpp
index 5a72fa1b..29860b39 100644
--- sip/cpp/sip_corewxShowEvent.cpp
+++ sip/cpp/sip_corewxShowEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -160,7 +160,7 @@ static PyObject *meth_wxShowEvent_IsShown(PyObject *sipSelf, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxShowEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxShowEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxShowEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxShowEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -319,7 +319,7 @@ sipClassTypeDef sipTypeDef__core_wxShowEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxShowEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ShowEvent,
diff --git a/sip/cpp/sip_corewxSimpleHelpProvider.cpp b/sip/cpp/sip_corewxSimpleHelpProvider.cpp
index a791d18c..d2f9c6a4 100644
--- sip/cpp/sip_corewxSimpleHelpProvider.cpp
+++ sip/cpp/sip_corewxSimpleHelpProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -158,7 +158,7 @@ bool sipwxSimpleHelpProvider::ShowHelpAtPoint( ::wxWindowBase*window,const  ::wx
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHelpProvider_GetHelp, "GetHelp(self, window: WindowBase) -> object");
+PyDoc_STRVAR(doc_wxSimpleHelpProvider_GetHelp, "GetHelp(self, window: Optional[WindowBase]) -> Any");
 
 extern "C" {static PyObject *meth_wxSimpleHelpProvider_GetHelp(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHelpProvider_GetHelp(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -320,7 +320,7 @@ sipClassTypeDef sipTypeDef__core_wxSimpleHelpProvider = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSimpleHelpProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SimpleHelpProvider,
diff --git a/sip/cpp/sip_corewxSimplebook.cpp b/sip/cpp/sip_corewxSimplebook.cpp
index 610dd88b..9a233b0f 100644
--- sip/cpp/sip_corewxSimplebook.cpp
+++ sip/cpp/sip_corewxSimplebook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1725,7 +1725,7 @@ static PyObject *meth_wxSimplebook_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSimplebook_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSimplebook_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1763,7 +1763,7 @@ static PyObject *meth_wxSimplebook_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSimplebook_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSimplebook_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1901,7 +1901,7 @@ static PyObject *meth_wxSimplebook_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSimplebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSimplebook_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2088,7 +2088,7 @@ static PyObject *meth_wxSimplebook_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSimplebook_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSimplebook_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2237,7 +2237,7 @@ static PyObject *meth_wxSimplebook_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSimplebook_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSimplebook_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2271,7 +2271,7 @@ static PyObject *meth_wxSimplebook_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSimplebook_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSimplebook_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2305,7 +2305,7 @@ static PyObject *meth_wxSimplebook_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSimplebook_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSimplebook_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2987,7 +2987,7 @@ static PyObject *meth_wxSimplebook_SetPageImage(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_GetPageText, "GetPageText(self, nPage: int) -> object");
+PyDoc_STRVAR(doc_wxSimplebook_GetPageText, "GetPageText(self, nPage: int) -> Any");
 
 extern "C" {static PyObject *meth_wxSimplebook_GetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_GetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3026,7 +3026,7 @@ static PyObject *meth_wxSimplebook_GetPageText(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_SetPageText, "SetPageText(self, page: int, text: object) -> bool");
+PyDoc_STRVAR(doc_wxSimplebook_SetPageText, "SetPageText(self, page: int, text: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxSimplebook_SetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_SetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3181,7 +3181,7 @@ static PyObject *meth_wxSimplebook_ChangeSelection(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_HitTest, "HitTest(self, pt: Point) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSimplebook_HitTest, "HitTest(self, pt: Point) -> (int, Optional[int])");
 
 extern "C" {static PyObject *meth_wxSimplebook_HitTest(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_HitTest(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3223,7 +3223,7 @@ static PyObject *meth_wxSimplebook_HitTest(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxSimplebook_InsertPage, "InsertPage(self, index: int, page: Window, text: object, select: bool = False, imageId: int = wxBookCtrlBase.NO_IMAGE) -> bool");
+PyDoc_STRVAR(doc_wxSimplebook_InsertPage, "InsertPage(self, index: int, page: Optional[Window], text: Any, select: bool = False, imageId: int = wxBookCtrlBase.NO_IMAGE) -> bool");
 
 extern "C" {static PyObject *meth_wxSimplebook_InsertPage(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimplebook_InsertPage(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3509,7 +3509,7 @@ sipClassTypeDef sipTypeDef__core_wxSimplebook = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSimplebook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Simplebook,
diff --git a/sip/cpp/sip_corewxSingleInstanceChecker.cpp b/sip/cpp/sip_corewxSingleInstanceChecker.cpp
index 82dad8ad..a4567d75 100644
--- sip/cpp/sip_corewxSingleInstanceChecker.cpp
+++ sip/cpp/sip_corewxSingleInstanceChecker.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -234,7 +234,7 @@ sipClassTypeDef sipTypeDef__core_wxSingleInstanceChecker = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSingleInstanceChecker,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SingleInstanceChecker,
diff --git a/sip/cpp/sip_corewxSize.cpp b/sip/cpp/sip_corewxSize.cpp
index 8f5a6658..e56317e7 100644
--- sip/cpp/sip_corewxSize.cpp
+++ sip/cpp/sip_corewxSize.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1466,7 +1466,7 @@ sipClassTypeDef sipTypeDef__core_wxSize = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSize,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Size,
diff --git a/sip/cpp/sip_corewxSizeEvent.cpp b/sip/cpp/sip_corewxSizeEvent.cpp
index e9c94abf..68ba9063 100644
--- sip/cpp/sip_corewxSizeEvent.cpp
+++ sip/cpp/sip_corewxSizeEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -235,7 +235,7 @@ static PyObject *meth_wxSizeEvent_SetRect(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxSizeEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxSizeEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxSizeEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxSizeEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -399,7 +399,7 @@ sipClassTypeDef sipTypeDef__core_wxSizeEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSizeEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SizeEvent,
diff --git a/sip/cpp/sip_corewxSizer.cpp b/sip/cpp/sip_corewxSizer.cpp
index 8283dd82..5731c033 100644
--- sip/cpp/sip_corewxSizer.cpp
+++ sip/cpp/sip_corewxSizer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3290,7 +3290,7 @@ sipClassTypeDef sipTypeDef__core_wxSizer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSizer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Sizer,
diff --git a/sip/cpp/sip_corewxSizerFlags.cpp b/sip/cpp/sip_corewxSizerFlags.cpp
index 3290b048..8761f90e 100644
--- sip/cpp/sip_corewxSizerFlags.cpp
+++ sip/cpp/sip_corewxSizerFlags.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1001,7 +1001,7 @@ sipClassTypeDef sipTypeDef__core_wxSizerFlags = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSizerFlags,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SizerFlags,
diff --git a/sip/cpp/sip_corewxSizerItem.cpp b/sip/cpp/sip_corewxSizerItem.cpp
index 51c070c2..c2d76b7d 100644
--- sip/cpp/sip_corewxSizerItem.cpp
+++ sip/cpp/sip_corewxSizerItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1642,7 +1642,7 @@ sipClassTypeDef sipTypeDef__core_wxSizerItem = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSizerItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SizerItem,
diff --git a/sip/cpp/sip_corewxSizerItemList.cpp b/sip/cpp/sip_corewxSizerItemList.cpp
index 579fbf50..3ccfdb33 100644
--- sip/cpp/sip_corewxSizerItemList.cpp
+++ sip/cpp/sip_corewxSizerItemList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -32,7 +32,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxSizerItemList_index, "index(self, obj: SizerItem) -> int");
+PyDoc_STRVAR(doc_wxSizerItemList_index, "index(self, obj: Optional[SizerItem]) -> int");
 
 extern "C" {static PyObject *meth_wxSizerItemList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSizerItemList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -301,7 +301,7 @@ sipClassTypeDef sipTypeDef__core_wxSizerItemList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSizerItemList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SizerItemList,
diff --git a/sip/cpp/sip_corewxSizerItemList_iterator.cpp b/sip/cpp/sip_corewxSizerItemList_iterator.cpp
index b0408b04..db22d731 100644
--- sip/cpp/sip_corewxSizerItemList_iterator.cpp
+++ sip/cpp/sip_corewxSizerItemList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__core_wxSizerItemList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxSizerItemList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SizerItemList_iterator,
diff --git a/sip/cpp/sip_corewxSlider.cpp b/sip/cpp/sip_corewxSlider.cpp
index 359e737d..e0dedadf 100644
--- sip/cpp/sip_corewxSlider.cpp
+++ sip/cpp/sip_corewxSlider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2045,7 +2045,7 @@ static PyObject *meth_wxSlider_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxSlider_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSlider_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSlider_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSlider_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2083,7 +2083,7 @@ static PyObject *meth_wxSlider_AddChild(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxSlider_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSlider_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSlider_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSlider_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2221,7 +2221,7 @@ static PyObject *meth_wxSlider_OnInternalIdle(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxSlider_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSlider_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSlider_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSlider_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2408,7 +2408,7 @@ static PyObject *meth_wxSlider_SetValidator(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSlider_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSlider_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSlider_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSlider_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2557,7 +2557,7 @@ static PyObject *meth_wxSlider_DoEnable(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxSlider_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSlider_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSlider_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSlider_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2591,7 +2591,7 @@ static PyObject *meth_wxSlider_DoGetPosition(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxSlider_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSlider_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSlider_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSlider_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2625,7 +2625,7 @@ static PyObject *meth_wxSlider_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxSlider_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSlider_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSlider_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSlider_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3465,7 +3465,7 @@ sipClassTypeDef sipTypeDef__core_wxSlider = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSlider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Slider,
diff --git a/sip/cpp/sip_corewxSpinButton.cpp b/sip/cpp/sip_corewxSpinButton.cpp
index 956346f8..13408a6f 100644
--- sip/cpp/sip_corewxSpinButton.cpp
+++ sip/cpp/sip_corewxSpinButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1518,7 +1518,7 @@ static PyObject *meth_wxSpinButton_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxSpinButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSpinButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSpinButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1556,7 +1556,7 @@ static PyObject *meth_wxSpinButton_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSpinButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSpinButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSpinButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1694,7 +1694,7 @@ static PyObject *meth_wxSpinButton_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxSpinButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSpinButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSpinButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSpinButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1881,7 +1881,7 @@ static PyObject *meth_wxSpinButton_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSpinButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSpinButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSpinButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSpinButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2030,7 +2030,7 @@ static PyObject *meth_wxSpinButton_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxSpinButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2064,7 +2064,7 @@ static PyObject *meth_wxSpinButton_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSpinButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2098,7 +2098,7 @@ static PyObject *meth_wxSpinButton_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxSpinButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2908,7 +2908,7 @@ sipClassTypeDef sipTypeDef__core_wxSpinButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSpinButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SpinButton,
diff --git a/sip/cpp/sip_corewxSpinCtrl.cpp b/sip/cpp/sip_corewxSpinCtrl.cpp
index dfc522d1..f6420ced 100644
--- sip/cpp/sip_corewxSpinCtrl.cpp
+++ sip/cpp/sip_corewxSpinCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1709,7 +1709,7 @@ static PyObject *meth_wxSpinCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSpinCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSpinCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1747,7 +1747,7 @@ static PyObject *meth_wxSpinCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSpinCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSpinCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1885,7 +1885,7 @@ static PyObject *meth_wxSpinCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSpinCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSpinCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2072,7 +2072,7 @@ static PyObject *meth_wxSpinCtrl_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSpinCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSpinCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2221,7 +2221,7 @@ static PyObject *meth_wxSpinCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2255,7 +2255,7 @@ static PyObject *meth_wxSpinCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2289,7 +2289,7 @@ static PyObject *meth_wxSpinCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3115,7 +3115,7 @@ sipClassTypeDef sipTypeDef__core_wxSpinCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSpinCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SpinCtrl,
diff --git a/sip/cpp/sip_corewxSpinCtrlDouble.cpp b/sip/cpp/sip_corewxSpinCtrlDouble.cpp
index af003edb..7e05b7d6 100644
--- sip/cpp/sip_corewxSpinCtrlDouble.cpp
+++ sip/cpp/sip_corewxSpinCtrlDouble.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1668,7 +1668,7 @@ static PyObject *meth_wxSpinCtrlDouble_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrlDouble_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSpinCtrlDouble_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSpinCtrlDouble_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrlDouble_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1706,7 +1706,7 @@ static PyObject *meth_wxSpinCtrlDouble_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrlDouble_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSpinCtrlDouble_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSpinCtrlDouble_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrlDouble_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1844,7 +1844,7 @@ static PyObject *meth_wxSpinCtrlDouble_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrlDouble_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSpinCtrlDouble_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSpinCtrlDouble_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrlDouble_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2031,7 +2031,7 @@ static PyObject *meth_wxSpinCtrlDouble_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrlDouble_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSpinCtrlDouble_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSpinCtrlDouble_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrlDouble_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2180,7 +2180,7 @@ static PyObject *meth_wxSpinCtrlDouble_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrlDouble_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinCtrlDouble_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinCtrlDouble_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrlDouble_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2214,7 +2214,7 @@ static PyObject *meth_wxSpinCtrlDouble_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrlDouble_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinCtrlDouble_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinCtrlDouble_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrlDouble_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2248,7 +2248,7 @@ static PyObject *meth_wxSpinCtrlDouble_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSpinCtrlDouble_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSpinCtrlDouble_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSpinCtrlDouble_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSpinCtrlDouble_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3076,7 +3076,7 @@ sipClassTypeDef sipTypeDef__core_wxSpinCtrlDouble = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSpinCtrlDouble,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SpinCtrlDouble,
diff --git a/sip/cpp/sip_corewxSpinDoubleEvent.cpp b/sip/cpp/sip_corewxSpinDoubleEvent.cpp
index da44b779..b8aa36b5 100644
--- sip/cpp/sip_corewxSpinDoubleEvent.cpp
+++ sip/cpp/sip_corewxSpinDoubleEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -160,7 +160,7 @@ static PyObject *meth_wxSpinDoubleEvent_SetValue(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSpinDoubleEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxSpinDoubleEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxSpinDoubleEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxSpinDoubleEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -334,7 +334,7 @@ sipClassTypeDef sipTypeDef__core_wxSpinDoubleEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSpinDoubleEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SpinDoubleEvent,
diff --git a/sip/cpp/sip_corewxSpinEvent.cpp b/sip/cpp/sip_corewxSpinEvent.cpp
index 15b3ed99..a11daae3 100644
--- sip/cpp/sip_corewxSpinEvent.cpp
+++ sip/cpp/sip_corewxSpinEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -160,7 +160,7 @@ static PyObject *meth_wxSpinEvent_SetPosition(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxSpinEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxSpinEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxSpinEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxSpinEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -320,7 +320,7 @@ sipClassTypeDef sipTypeDef__core_wxSpinEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSpinEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SpinEvent,
diff --git a/sip/cpp/sip_corewxSplitterEvent.cpp b/sip/cpp/sip_corewxSplitterEvent.cpp
index f5934b67..f92054c1 100644
--- sip/cpp/sip_corewxSplitterEvent.cpp
+++ sip/cpp/sip_corewxSplitterEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -345,7 +345,7 @@ static PyObject *meth_wxSplitterEvent_GetOldSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSplitterEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxSplitterEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxSplitterEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxSplitterEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -513,7 +513,7 @@ sipClassTypeDef sipTypeDef__core_wxSplitterEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSplitterEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SplitterEvent,
diff --git a/sip/cpp/sip_corewxSplitterRenderParams.cpp b/sip/cpp/sip_corewxSplitterRenderParams.cpp
index f4061724..f31b3dc3 100644
--- sip/cpp/sip_corewxSplitterRenderParams.cpp
+++ sip/cpp/sip_corewxSplitterRenderParams.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -140,7 +140,7 @@ sipClassTypeDef sipTypeDef__core_wxSplitterRenderParams = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSplitterRenderParams,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SplitterRenderParams,
diff --git a/sip/cpp/sip_corewxSplitterWindow.cpp b/sip/cpp/sip_corewxSplitterWindow.cpp
index c7dd73a5..1aa69908 100644
--- sip/cpp/sip_corewxSplitterWindow.cpp
+++ sip/cpp/sip_corewxSplitterWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2051,7 +2051,7 @@ static PyObject *meth_wxSplitterWindow_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxSplitterWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSplitterWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSplitterWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplitterWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2089,7 +2089,7 @@ static PyObject *meth_wxSplitterWindow_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSplitterWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSplitterWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSplitterWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplitterWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2227,7 +2227,7 @@ static PyObject *meth_wxSplitterWindow_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxSplitterWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSplitterWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSplitterWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSplitterWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2414,7 +2414,7 @@ static PyObject *meth_wxSplitterWindow_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSplitterWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSplitterWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSplitterWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSplitterWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2563,7 +2563,7 @@ static PyObject *meth_wxSplitterWindow_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSplitterWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSplitterWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSplitterWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplitterWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2597,7 +2597,7 @@ static PyObject *meth_wxSplitterWindow_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSplitterWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSplitterWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSplitterWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplitterWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2631,7 +2631,7 @@ static PyObject *meth_wxSplitterWindow_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSplitterWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSplitterWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSplitterWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSplitterWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3461,7 +3461,7 @@ sipClassTypeDef sipTypeDef__core_wxSplitterWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSplitterWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SplitterWindow,
diff --git a/sip/cpp/sip_corewxStandardPaths.cpp b/sip/cpp/sip_corewxStandardPaths.cpp
index 8193e1b9..b8920c61 100644
--- sip/cpp/sip_corewxStandardPaths.cpp
+++ sip/cpp/sip_corewxStandardPaths.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -963,7 +963,7 @@ sipClassTypeDef sipTypeDef__core_wxStandardPaths = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxStandardPaths,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StandardPaths,
diff --git a/sip/cpp/sip_corewxStaticBitmap.cpp b/sip/cpp/sip_corewxStaticBitmap.cpp
index 1e9567f9..2334652f 100644
--- sip/cpp/sip_corewxStaticBitmap.cpp
+++ sip/cpp/sip_corewxStaticBitmap.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1491,7 +1491,7 @@ static PyObject *meth_wxStaticBitmap_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBitmap_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStaticBitmap_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStaticBitmap_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBitmap_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1529,7 +1529,7 @@ static PyObject *meth_wxStaticBitmap_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBitmap_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStaticBitmap_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStaticBitmap_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBitmap_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1667,7 +1667,7 @@ static PyObject *meth_wxStaticBitmap_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBitmap_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxStaticBitmap_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxStaticBitmap_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBitmap_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1854,7 +1854,7 @@ static PyObject *meth_wxStaticBitmap_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBitmap_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxStaticBitmap_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxStaticBitmap_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBitmap_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2003,7 +2003,7 @@ static PyObject *meth_wxStaticBitmap_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBitmap_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticBitmap_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticBitmap_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBitmap_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2037,7 +2037,7 @@ static PyObject *meth_wxStaticBitmap_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBitmap_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticBitmap_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticBitmap_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBitmap_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2071,7 +2071,7 @@ static PyObject *meth_wxStaticBitmap_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBitmap_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticBitmap_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticBitmap_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBitmap_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2891,7 +2891,7 @@ sipClassTypeDef sipTypeDef__core_wxStaticBitmap = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStaticBitmap,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StaticBitmap,
diff --git a/sip/cpp/sip_corewxStaticBox.cpp b/sip/cpp/sip_corewxStaticBox.cpp
index 11cc4211..e5ab2929 100644
--- sip/cpp/sip_corewxStaticBox.cpp
+++ sip/cpp/sip_corewxStaticBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1324,7 +1324,7 @@ static PyObject *meth_wxStaticBox_AcceptsFocusFromKeyboard(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStaticBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStaticBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1362,7 +1362,7 @@ static PyObject *meth_wxStaticBox_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStaticBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStaticBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1500,7 +1500,7 @@ static PyObject *meth_wxStaticBox_OnInternalIdle(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxStaticBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxStaticBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1687,7 +1687,7 @@ static PyObject *meth_wxStaticBox_SetValidator(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxStaticBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxStaticBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1836,7 +1836,7 @@ static PyObject *meth_wxStaticBox_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1870,7 +1870,7 @@ static PyObject *meth_wxStaticBox_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1904,7 +1904,7 @@ static PyObject *meth_wxStaticBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxStaticBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2745,7 +2745,7 @@ sipClassTypeDef sipTypeDef__core_wxStaticBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStaticBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StaticBox,
diff --git a/sip/cpp/sip_corewxStaticBoxSizer.cpp b/sip/cpp/sip_corewxStaticBoxSizer.cpp
index 7f8f0160..d4c4842a 100644
--- sip/cpp/sip_corewxStaticBoxSizer.cpp
+++ sip/cpp/sip_corewxStaticBoxSizer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -373,7 +373,7 @@ sipClassTypeDef sipTypeDef__core_wxStaticBoxSizer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStaticBoxSizer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StaticBoxSizer,
diff --git a/sip/cpp/sip_corewxStaticLine.cpp b/sip/cpp/sip_corewxStaticLine.cpp
index 54b8f82f..19fc6993 100644
--- sip/cpp/sip_corewxStaticLine.cpp
+++ sip/cpp/sip_corewxStaticLine.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1328,7 +1328,7 @@ static PyObject *meth_wxStaticLine_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxStaticLine_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStaticLine_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStaticLine_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticLine_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1366,7 +1366,7 @@ static PyObject *meth_wxStaticLine_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxStaticLine_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStaticLine_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStaticLine_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticLine_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1504,7 +1504,7 @@ static PyObject *meth_wxStaticLine_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxStaticLine_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxStaticLine_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxStaticLine_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxStaticLine_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1691,7 +1691,7 @@ static PyObject *meth_wxStaticLine_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxStaticLine_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxStaticLine_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxStaticLine_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxStaticLine_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1840,7 +1840,7 @@ static PyObject *meth_wxStaticLine_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxStaticLine_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticLine_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticLine_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticLine_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1874,7 +1874,7 @@ static PyObject *meth_wxStaticLine_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxStaticLine_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticLine_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticLine_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticLine_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1908,7 +1908,7 @@ static PyObject *meth_wxStaticLine_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxStaticLine_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticLine_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticLine_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticLine_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2708,7 +2708,7 @@ sipClassTypeDef sipTypeDef__core_wxStaticLine = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStaticLine,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StaticLine,
diff --git a/sip/cpp/sip_corewxStaticText.cpp b/sip/cpp/sip_corewxStaticText.cpp
index eea63d65..82f3f838 100644
--- sip/cpp/sip_corewxStaticText.cpp
+++ sip/cpp/sip_corewxStaticText.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1383,7 +1383,7 @@ static PyObject *meth_wxStaticText_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxStaticText_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStaticText_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStaticText_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticText_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1421,7 +1421,7 @@ static PyObject *meth_wxStaticText_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxStaticText_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStaticText_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStaticText_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticText_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1559,7 +1559,7 @@ static PyObject *meth_wxStaticText_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxStaticText_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxStaticText_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxStaticText_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxStaticText_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1746,7 +1746,7 @@ static PyObject *meth_wxStaticText_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxStaticText_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxStaticText_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxStaticText_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxStaticText_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1895,7 +1895,7 @@ static PyObject *meth_wxStaticText_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxStaticText_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticText_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticText_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticText_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1929,7 +1929,7 @@ static PyObject *meth_wxStaticText_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxStaticText_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticText_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticText_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticText_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1963,7 +1963,7 @@ static PyObject *meth_wxStaticText_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxStaticText_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStaticText_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStaticText_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStaticText_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2768,7 +2768,7 @@ sipClassTypeDef sipTypeDef__core_wxStaticText = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStaticText,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StaticText,
diff --git a/sip/cpp/sip_corewxStatusBar.cpp b/sip/cpp/sip_corewxStatusBar.cpp
index a7bcaee9..9a357d65 100644
--- sip/cpp/sip_corewxStatusBar.cpp
+++ sip/cpp/sip_corewxStatusBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1843,7 +1843,7 @@ static PyObject *meth_wxStatusBar_AcceptsFocusFromKeyboard(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxStatusBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStatusBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStatusBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStatusBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1881,7 +1881,7 @@ static PyObject *meth_wxStatusBar_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxStatusBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxStatusBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxStatusBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStatusBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2019,7 +2019,7 @@ static PyObject *meth_wxStatusBar_OnInternalIdle(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxStatusBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxStatusBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxStatusBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxStatusBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2206,7 +2206,7 @@ static PyObject *meth_wxStatusBar_SetValidator(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxStatusBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxStatusBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxStatusBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxStatusBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2355,7 +2355,7 @@ static PyObject *meth_wxStatusBar_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxStatusBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStatusBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStatusBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStatusBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2389,7 +2389,7 @@ static PyObject *meth_wxStatusBar_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxStatusBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStatusBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStatusBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStatusBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2423,7 +2423,7 @@ static PyObject *meth_wxStatusBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxStatusBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStatusBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStatusBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStatusBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3232,7 +3232,7 @@ sipClassTypeDef sipTypeDef__core_wxStatusBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStatusBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StatusBar,
diff --git a/sip/cpp/sip_corewxStatusBarPane.cpp b/sip/cpp/sip_corewxStatusBarPane.cpp
index 79510223..0d00f433 100644
--- sip/cpp/sip_corewxStatusBarPane.cpp
+++ sip/cpp/sip_corewxStatusBarPane.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -235,7 +235,7 @@ sipClassTypeDef sipTypeDef__core_wxStatusBarPane = {
         SIP_TYPE_CLASS,
         sipNameNr_wxStatusBarPane,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StatusBarPane,
diff --git a/sip/cpp/sip_corewxStdDialogButtonSizer.cpp b/sip/cpp/sip_corewxStdDialogButtonSizer.cpp
index a345ab98..33a30f2d 100644
--- sip/cpp/sip_corewxStdDialogButtonSizer.cpp
+++ sip/cpp/sip_corewxStdDialogButtonSizer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -481,7 +481,7 @@ sipClassTypeDef sipTypeDef__core_wxStdDialogButtonSizer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStdDialogButtonSizer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StdDialogButtonSizer,
diff --git a/sip/cpp/sip_corewxStockGDI.cpp b/sip/cpp/sip_corewxStockGDI.cpp
index 5e495af2..df53c791 100644
--- sip/cpp/sip_corewxStockGDI.cpp
+++ sip/cpp/sip_corewxStockGDI.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -105,7 +105,7 @@ static PyObject *meth_wxStockGDI_instance(PyObject *, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI_GetBrush, "GetBrush(item: StockGDI.Item) -> Brush");
+PyDoc_STRVAR(doc_wxStockGDI_GetBrush, "GetBrush(item: StockGDI.Item) -> Optional[Brush]");
 
 extern "C" {static PyObject *meth_wxStockGDI_GetBrush(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI_GetBrush(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -142,7 +142,7 @@ static PyObject *meth_wxStockGDI_GetBrush(PyObject *, PyObject *sipArgs, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI_GetColour, "GetColour(item: StockGDI.Item) -> Colour");
+PyDoc_STRVAR(doc_wxStockGDI_GetColour, "GetColour(item: StockGDI.Item) -> Optional[Colour]");
 
 extern "C" {static PyObject *meth_wxStockGDI_GetColour(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI_GetColour(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -179,7 +179,7 @@ static PyObject *meth_wxStockGDI_GetColour(PyObject *, PyObject *sipArgs, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI_GetCursor, "GetCursor(item: StockGDI.Item) -> Cursor");
+PyDoc_STRVAR(doc_wxStockGDI_GetCursor, "GetCursor(item: StockGDI.Item) -> Optional[Cursor]");
 
 extern "C" {static PyObject *meth_wxStockGDI_GetCursor(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI_GetCursor(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -216,7 +216,7 @@ static PyObject *meth_wxStockGDI_GetCursor(PyObject *, PyObject *sipArgs, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI_GetPen, "GetPen(item: StockGDI.Item) -> Pen");
+PyDoc_STRVAR(doc_wxStockGDI_GetPen, "GetPen(item: StockGDI.Item) -> Optional[Pen]");
 
 extern "C" {static PyObject *meth_wxStockGDI_GetPen(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI_GetPen(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -253,7 +253,7 @@ static PyObject *meth_wxStockGDI_GetPen(PyObject *, PyObject *sipArgs, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI_GetFont, "GetFont(self, item: StockGDI.Item) -> Font");
+PyDoc_STRVAR(doc_wxStockGDI_GetFont, "GetFont(self, item: StockGDI.Item) -> Optional[Font]");
 
 extern "C" {static PyObject *meth_wxStockGDI_GetFont(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI_GetFont(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -291,7 +291,7 @@ static PyObject *meth_wxStockGDI_GetFont(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI__getTheFontList, "_getTheFontList() -> FontList");
+PyDoc_STRVAR(doc_wxStockGDI__getTheFontList, "_getTheFontList() -> Optional[FontList]");
 
 extern "C" {static PyObject *meth_wxStockGDI__getTheFontList(PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI__getTheFontList(PyObject *, PyObject *sipArgs)
@@ -314,7 +314,7 @@ static PyObject *meth_wxStockGDI__getTheFontList(PyObject *, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI__getThePenList, "_getThePenList() -> PenList");
+PyDoc_STRVAR(doc_wxStockGDI__getThePenList, "_getThePenList() -> Optional[PenList]");
 
 extern "C" {static PyObject *meth_wxStockGDI__getThePenList(PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI__getThePenList(PyObject *, PyObject *sipArgs)
@@ -337,7 +337,7 @@ static PyObject *meth_wxStockGDI__getThePenList(PyObject *, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI__getTheBrushList, "_getTheBrushList() -> BrushList");
+PyDoc_STRVAR(doc_wxStockGDI__getTheBrushList, "_getTheBrushList() -> Optional[BrushList]");
 
 extern "C" {static PyObject *meth_wxStockGDI__getTheBrushList(PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI__getTheBrushList(PyObject *, PyObject *sipArgs)
@@ -360,7 +360,7 @@ static PyObject *meth_wxStockGDI__getTheBrushList(PyObject *, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxStockGDI__getTheColourDatabase, "_getTheColourDatabase() -> ColourDatabase");
+PyDoc_STRVAR(doc_wxStockGDI__getTheColourDatabase, "_getTheColourDatabase() -> Optional[ColourDatabase]");
 
 extern "C" {static PyObject *meth_wxStockGDI__getTheColourDatabase(PyObject *, PyObject *);}
 static PyObject *meth_wxStockGDI__getTheColourDatabase(PyObject *, PyObject *sipArgs)
@@ -507,7 +507,7 @@ sipClassTypeDef sipTypeDef__core_wxStockGDI = {
         SIP_TYPE_CLASS,
         sipNameNr_wxStockGDI,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StockGDI,
diff --git a/sip/cpp/sip_corewxStockPreferencesPage.cpp b/sip/cpp/sip_corewxStockPreferencesPage.cpp
index 0ffb21b4..b00d7613 100644
--- sip/cpp/sip_corewxStockPreferencesPage.cpp
+++ sip/cpp/sip_corewxStockPreferencesPage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -332,7 +332,7 @@ sipClassTypeDef sipTypeDef__core_wxStockPreferencesPage = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxStockPreferencesPage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StockPreferencesPage,
diff --git a/sip/cpp/sip_corewxStopWatch.cpp b/sip/cpp/sip_corewxStopWatch.cpp
index dc995665..eb5e2e47 100644
--- sip/cpp/sip_corewxStopWatch.cpp
+++ sip/cpp/sip_corewxStopWatch.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -295,7 +295,7 @@ sipClassTypeDef sipTypeDef__core_wxStopWatch = {
         SIP_TYPE_CLASS,
         sipNameNr_wxStopWatch,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StopWatch,
diff --git a/sip/cpp/sip_corewxStreamBase.cpp b/sip/cpp/sip_corewxStreamBase.cpp
index 3cdab694..e3e841ac 100644
--- sip/cpp/sip_corewxStreamBase.cpp
+++ sip/cpp/sip_corewxStreamBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -277,7 +277,7 @@ sipClassTypeDef sipTypeDef__core_wxStreamBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxStreamBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StreamBase,
diff --git a/sip/cpp/sip_corewxString.cpp b/sip/cpp/sip_corewxString.cpp
index a7c7606c..7b287f1a 100644
--- sip/cpp/sip_corewxString.cpp
+++ sip/cpp/sip_corewxString.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -98,15 +98,15 @@ sipMappedTypeDef sipTypeDef__core_wxString = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxString,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxString,
     array_wxString,
diff --git a/sip/cpp/sip_corewxStringCArrayHolder.cpp b/sip/cpp/sip_corewxStringCArrayHolder.cpp
index da90cc25..338b7c82 100644
--- sip/cpp/sip_corewxStringCArrayHolder.cpp
+++ sip/cpp/sip_corewxStringCArrayHolder.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -72,7 +72,7 @@ sipClassTypeDef sipTypeDef__core_wxStringCArrayHolder = {
         SIP_TYPE_CLASS,
         sipNameNr_wxStringCArrayHolder,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StringCArrayHolder,
diff --git a/sip/cpp/sip_corewxSysColourChangedEvent.cpp b/sip/cpp/sip_corewxSysColourChangedEvent.cpp
index 3f2492d6..6022d725 100644
--- sip/cpp/sip_corewxSysColourChangedEvent.cpp
+++ sip/cpp/sip_corewxSysColourChangedEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -86,7 +86,7 @@ sipwxSysColourChangedEvent::~sipwxSysColourChangedEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxSysColourChangedEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxSysColourChangedEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxSysColourChangedEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxSysColourChangedEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -233,7 +233,7 @@ sipClassTypeDef sipTypeDef__core_wxSysColourChangedEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSysColourChangedEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SysColourChangedEvent,
diff --git a/sip/cpp/sip_corewxSystemAppearance.cpp b/sip/cpp/sip_corewxSystemAppearance.cpp
index 95be5c27..2944eeae 100644
--- sip/cpp/sip_corewxSystemAppearance.cpp
+++ sip/cpp/sip_corewxSystemAppearance.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -198,7 +198,7 @@ sipClassTypeDef sipTypeDef__core_wxSystemAppearance = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSystemAppearance,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SystemAppearance,
diff --git a/sip/cpp/sip_corewxSystemOptions.cpp b/sip/cpp/sip_corewxSystemOptions.cpp
index d667b76b..aa12bdb8 100644
--- sip/cpp/sip_corewxSystemOptions.cpp
+++ sip/cpp/sip_corewxSystemOptions.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -378,7 +378,7 @@ sipClassTypeDef sipTypeDef__core_wxSystemOptions = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSystemOptions,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SystemOptions,
diff --git a/sip/cpp/sip_corewxSystemSettings.cpp b/sip/cpp/sip_corewxSystemSettings.cpp
index a01424b0..9325777d 100644
--- sip/cpp/sip_corewxSystemSettings.cpp
+++ sip/cpp/sip_corewxSystemSettings.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -354,7 +354,7 @@ sipClassTypeDef sipTypeDef__core_wxSystemSettings = {
         SIP_TYPE_CLASS,
         sipNameNr_wxSystemSettings,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SystemSettings,
diff --git a/sip/cpp/sip_corewxTDIChildFrame.cpp b/sip/cpp/sip_corewxTDIChildFrame.cpp
index 041acb95..63ec6ff9 100644
--- sip/cpp/sip_corewxTDIChildFrame.cpp
+++ sip/cpp/sip_corewxTDIChildFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -101,7 +101,7 @@ sipClassTypeDef sipTypeDef__core_wxTDIChildFrame = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTDIChildFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TDIChildFrame,
diff --git a/sip/cpp/sip_corewxTGAHandler.cpp b/sip/cpp/sip_corewxTGAHandler.cpp
index d0190d2b..a2b24faa 100644
--- sip/cpp/sip_corewxTGAHandler.cpp
+++ sip/cpp/sip_corewxTGAHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -421,7 +421,7 @@ sipClassTypeDef sipTypeDef__core_wxTGAHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTGAHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TGAHandler,
diff --git a/sip/cpp/sip_corewxTIFFHandler.cpp b/sip/cpp/sip_corewxTIFFHandler.cpp
index e986f893..fbe952ea 100644
--- sip/cpp/sip_corewxTIFFHandler.cpp
+++ sip/cpp/sip_corewxTIFFHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -373,7 +373,7 @@ sipClassTypeDef sipTypeDef__core_wxTIFFHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTIFFHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TIFFHandler,
diff --git a/sip/cpp/sip_corewxTextAttr.cpp b/sip/cpp/sip_corewxTextAttr.cpp
index 23db6972..5ab49928 100644
--- sip/cpp/sip_corewxTextAttr.cpp
+++ sip/cpp/sip_corewxTextAttr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -4229,7 +4229,7 @@ sipClassTypeDef sipTypeDef__core_wxTextAttr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextAttr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextAttr,
diff --git a/sip/cpp/sip_corewxTextCompleter.cpp b/sip/cpp/sip_corewxTextCompleter.cpp
index 7c40768e..45deb9d0 100644
--- sip/cpp/sip_corewxTextCompleter.cpp
+++ sip/cpp/sip_corewxTextCompleter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -247,7 +247,7 @@ sipClassTypeDef sipTypeDef__core_wxTextCompleter = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTextCompleter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextCompleter,
diff --git a/sip/cpp/sip_corewxTextCompleterSimple.cpp b/sip/cpp/sip_corewxTextCompleterSimple.cpp
index 21f9fdfd..60c62593 100644
--- sip/cpp/sip_corewxTextCompleterSimple.cpp
+++ sip/cpp/sip_corewxTextCompleterSimple.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -323,7 +323,7 @@ sipClassTypeDef sipTypeDef__core_wxTextCompleterSimple = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTextCompleterSimple,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextCompleterSimple,
diff --git a/sip/cpp/sip_corewxTextCtrl.cpp b/sip/cpp/sip_corewxTextCtrl.cpp
index d13b6cbe..0bdd17a5 100644
--- sip/cpp/sip_corewxTextCtrl.cpp
+++ sip/cpp/sip_corewxTextCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2452,7 +2452,7 @@ static PyObject *meth_wxTextCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxTextCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTextCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTextCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2490,7 +2490,7 @@ static PyObject *meth_wxTextCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTextCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTextCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTextCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2628,7 +2628,7 @@ static PyObject *meth_wxTextCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTextCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxTextCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxTextCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxTextCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2815,7 +2815,7 @@ static PyObject *meth_wxTextCtrl_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxTextCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxTextCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxTextCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxTextCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2964,7 +2964,7 @@ static PyObject *meth_wxTextCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTextCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTextCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTextCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2998,7 +2998,7 @@ static PyObject *meth_wxTextCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxTextCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTextCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTextCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3032,7 +3032,7 @@ static PyObject *meth_wxTextCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTextCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTextCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTextCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4187,7 +4187,7 @@ sipClassTypeDef sipTypeDef__core_wxTextCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTextCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextCtrl,
diff --git a/sip/cpp/sip_corewxTextDataObject.cpp b/sip/cpp/sip_corewxTextDataObject.cpp
index 0516fb0d..dedb14c7 100644
--- sip/cpp/sip_corewxTextDataObject.cpp
+++ sip/cpp/sip_corewxTextDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -609,7 +609,7 @@ static PyObject *meth_wxTextDataObject_GetDataSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxTextDataObject_GetDataHere, "GetDataHere(self, buf: wx.siplib.voidptr) -> bool");
+PyDoc_STRVAR(doc_wxTextDataObject_GetDataHere, "GetDataHere(self, buf: Optional[wx.siplib.voidptr]) -> bool");
 
 extern "C" {static PyObject *meth_wxTextDataObject_GetDataHere(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextDataObject_GetDataHere(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -778,7 +778,7 @@ sipClassTypeDef sipTypeDef__core_wxTextDataObject = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextDataObject,
diff --git a/sip/cpp/sip_corewxTextDropTarget.cpp b/sip/cpp/sip_corewxTextDropTarget.cpp
index 3b45acfe..afb3e86e 100644
--- sip/cpp/sip_corewxTextDropTarget.cpp
+++ sip/cpp/sip_corewxTextDropTarget.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -396,7 +396,7 @@ sipClassTypeDef sipTypeDef__core_wxTextDropTarget = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTextDropTarget,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextDropTarget,
diff --git a/sip/cpp/sip_corewxTextEntry.cpp b/sip/cpp/sip_corewxTextEntry.cpp
index 51c423d6..2002fde2 100644
--- sip/cpp/sip_corewxTextEntry.cpp
+++ sip/cpp/sip_corewxTextEntry.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1658,7 +1658,7 @@ sipClassTypeDef sipTypeDef__core_wxTextEntry = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTextEntry,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextEntry,
diff --git a/sip/cpp/sip_corewxTextEntryDialog.cpp b/sip/cpp/sip_corewxTextEntryDialog.cpp
index 66871d49..e478710d 100644
--- sip/cpp/sip_corewxTextEntryDialog.cpp
+++ sip/cpp/sip_corewxTextEntryDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1480,7 +1480,7 @@ static PyObject *meth_wxTextEntryDialog_AcceptsFocusFromKeyboard(PyObject *sipSe
 }
 
 
-PyDoc_STRVAR(doc_wxTextEntryDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTextEntryDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTextEntryDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextEntryDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1518,7 +1518,7 @@ static PyObject *meth_wxTextEntryDialog_AddChild(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxTextEntryDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTextEntryDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTextEntryDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextEntryDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1656,7 +1656,7 @@ static PyObject *meth_wxTextEntryDialog_OnInternalIdle(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxTextEntryDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxTextEntryDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxTextEntryDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxTextEntryDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1843,7 +1843,7 @@ static PyObject *meth_wxTextEntryDialog_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxTextEntryDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxTextEntryDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxTextEntryDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxTextEntryDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1992,7 +1992,7 @@ static PyObject *meth_wxTextEntryDialog_DoEnable(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxTextEntryDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTextEntryDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTextEntryDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextEntryDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2026,7 +2026,7 @@ static PyObject *meth_wxTextEntryDialog_DoGetPosition(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxTextEntryDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTextEntryDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTextEntryDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextEntryDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2060,7 +2060,7 @@ static PyObject *meth_wxTextEntryDialog_DoGetSize(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxTextEntryDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTextEntryDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTextEntryDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTextEntryDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2871,7 +2871,7 @@ sipClassTypeDef sipTypeDef__core_wxTextEntryDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTextEntryDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextEntryDialog,
diff --git a/sip/cpp/sip_corewxTextUrlEvent.cpp b/sip/cpp/sip_corewxTextUrlEvent.cpp
index 5db2ca9f..9eb414c0 100644
--- sip/cpp/sip_corewxTextUrlEvent.cpp
+++ sip/cpp/sip_corewxTextUrlEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -365,7 +365,7 @@ sipClassTypeDef sipTypeDef__core_wxTextUrlEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTextUrlEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextUrlEvent,
diff --git a/sip/cpp/sip_corewxThreadEvent.cpp b/sip/cpp/sip_corewxThreadEvent.cpp
index 52af6171..ce866bc5 100644
--- sip/cpp/sip_corewxThreadEvent.cpp
+++ sip/cpp/sip_corewxThreadEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -518,7 +518,7 @@ sipClassTypeDef sipTypeDef__core_wxThreadEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxThreadEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ThreadEvent,
diff --git a/sip/cpp/sip_corewxTimeSpan.cpp b/sip/cpp/sip_corewxTimeSpan.cpp
index 3b4552ae..432d32d7 100644
--- sip/cpp/sip_corewxTimeSpan.cpp
+++ sip/cpp/sip_corewxTimeSpan.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1873,7 +1873,7 @@ sipClassTypeDef sipTypeDef__core_wxTimeSpan = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTimeSpan,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TimeSpan,
diff --git a/sip/cpp/sip_corewxTimer.cpp b/sip/cpp/sip_corewxTimer.cpp
index 7a59910f..8cc6bd70 100644
--- sip/cpp/sip_corewxTimer.cpp
+++ sip/cpp/sip_corewxTimer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -783,7 +783,7 @@ sipClassTypeDef sipTypeDef__core_wxTimer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTimer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Timer,
diff --git a/sip/cpp/sip_corewxTimerEvent.cpp b/sip/cpp/sip_corewxTimerEvent.cpp
index 5f3146ac..d847ee42 100644
--- sip/cpp/sip_corewxTimerEvent.cpp
+++ sip/cpp/sip_corewxTimerEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -281,7 +281,7 @@ sipClassTypeDef sipTypeDef__core_wxTimerEvent = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTimerEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TimerEvent,
diff --git a/sip/cpp/sip_corewxTimerRunner.cpp b/sip/cpp/sip_corewxTimerRunner.cpp
index 99d6ddbd..d84fc818 100644
--- sip/cpp/sip_corewxTimerRunner.cpp
+++ sip/cpp/sip_corewxTimerRunner.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -158,7 +158,7 @@ sipClassTypeDef sipTypeDef__core_wxTimerRunner = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTimerRunner,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TimerRunner,
diff --git a/sip/cpp/sip_corewxTipWindow.cpp b/sip/cpp/sip_corewxTipWindow.cpp
index fc684b58..1a9d3564 100644
--- sip/cpp/sip_corewxTipWindow.cpp
+++ sip/cpp/sip_corewxTipWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1229,7 +1229,7 @@ static PyObject *meth_wxTipWindow_AcceptsFocusFromKeyboard(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxTipWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTipWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTipWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTipWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1267,7 +1267,7 @@ static PyObject *meth_wxTipWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTipWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTipWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTipWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTipWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1405,7 +1405,7 @@ static PyObject *meth_wxTipWindow_OnInternalIdle(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxTipWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxTipWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxTipWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxTipWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1592,7 +1592,7 @@ static PyObject *meth_wxTipWindow_SetValidator(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxTipWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxTipWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxTipWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxTipWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1741,7 +1741,7 @@ static PyObject *meth_wxTipWindow_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTipWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTipWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTipWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTipWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1775,7 +1775,7 @@ static PyObject *meth_wxTipWindow_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTipWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTipWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTipWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTipWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1809,7 +1809,7 @@ static PyObject *meth_wxTipWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxTipWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTipWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTipWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTipWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2562,7 +2562,7 @@ sipClassTypeDef sipTypeDef__core_wxTipWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTipWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TipWindow,
diff --git a/sip/cpp/sip_corewxToggleButton.cpp b/sip/cpp/sip_corewxToggleButton.cpp
index 664f14b6..400eb46b 100644
--- sip/cpp/sip_corewxToggleButton.cpp
+++ sip/cpp/sip_corewxToggleButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1343,7 +1343,7 @@ static PyObject *meth_wxToggleButton_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxToggleButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxToggleButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxToggleButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToggleButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1381,7 +1381,7 @@ static PyObject *meth_wxToggleButton_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxToggleButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxToggleButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxToggleButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToggleButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1519,7 +1519,7 @@ static PyObject *meth_wxToggleButton_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxToggleButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxToggleButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxToggleButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxToggleButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1706,7 +1706,7 @@ static PyObject *meth_wxToggleButton_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxToggleButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxToggleButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxToggleButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxToggleButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1855,7 +1855,7 @@ static PyObject *meth_wxToggleButton_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxToggleButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToggleButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToggleButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToggleButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1889,7 +1889,7 @@ static PyObject *meth_wxToggleButton_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxToggleButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToggleButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToggleButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToggleButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1923,7 +1923,7 @@ static PyObject *meth_wxToggleButton_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxToggleButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToggleButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToggleButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToggleButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2735,7 +2735,7 @@ sipClassTypeDef sipTypeDef__core_wxToggleButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxToggleButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ToggleButton,
diff --git a/sip/cpp/sip_corewxToolBar.cpp b/sip/cpp/sip_corewxToolBar.cpp
index 2eee95e3..77ab84ba 100644
--- sip/cpp/sip_corewxToolBar.cpp
+++ sip/cpp/sip_corewxToolBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3286,7 +3286,7 @@ static PyObject *meth_wxToolBar_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxToolBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxToolBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxToolBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3324,7 +3324,7 @@ static PyObject *meth_wxToolBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxToolBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxToolBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxToolBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3462,7 +3462,7 @@ static PyObject *meth_wxToolBar_OnInternalIdle(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxToolBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxToolBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxToolBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxToolBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3649,7 +3649,7 @@ static PyObject *meth_wxToolBar_SetValidator(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxToolBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxToolBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxToolBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxToolBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3798,7 +3798,7 @@ static PyObject *meth_wxToolBar_DoEnable(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxToolBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToolBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToolBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3832,7 +3832,7 @@ static PyObject *meth_wxToolBar_DoGetPosition(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxToolBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToolBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToolBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3866,7 +3866,7 @@ static PyObject *meth_wxToolBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxToolBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToolBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToolBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4717,7 +4717,7 @@ sipClassTypeDef sipTypeDef__core_wxToolBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxToolBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ToolBar,
diff --git a/sip/cpp/sip_corewxToolBarToolBase.cpp b/sip/cpp/sip_corewxToolBarToolBase.cpp
index 05b58733..e4520995 100644
--- sip/cpp/sip_corewxToolBarToolBase.cpp
+++ sip/cpp/sip_corewxToolBarToolBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1414,7 +1414,7 @@ sipClassTypeDef sipTypeDef__core_wxToolBarToolBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxToolBarToolBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ToolBarToolBase,
diff --git a/sip/cpp/sip_corewxToolTip.cpp b/sip/cpp/sip_corewxToolTip.cpp
index b66c5648..3486d561 100644
--- sip/cpp/sip_corewxToolTip.cpp
+++ sip/cpp/sip_corewxToolTip.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -434,7 +434,7 @@ sipClassTypeDef sipTypeDef__core_wxToolTip = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxToolTip,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ToolTip,
diff --git a/sip/cpp/sip_corewxToolbook.cpp b/sip/cpp/sip_corewxToolbook.cpp
index 943bd8f1..d9502255 100644
--- sip/cpp/sip_corewxToolbook.cpp
+++ sip/cpp/sip_corewxToolbook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1635,7 +1635,7 @@ static PyObject *meth_wxToolbook_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxToolbook_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxToolbook_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1673,7 +1673,7 @@ static PyObject *meth_wxToolbook_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxToolbook_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxToolbook_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1811,7 +1811,7 @@ static PyObject *meth_wxToolbook_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxToolbook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxToolbook_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1998,7 +1998,7 @@ static PyObject *meth_wxToolbook_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxToolbook_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxToolbook_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2147,7 +2147,7 @@ static PyObject *meth_wxToolbook_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToolbook_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToolbook_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2181,7 +2181,7 @@ static PyObject *meth_wxToolbook_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToolbook_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToolbook_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2215,7 +2215,7 @@ static PyObject *meth_wxToolbook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToolbook_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxToolbook_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2897,7 +2897,7 @@ static PyObject *meth_wxToolbook_SetPageImage(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_GetPageText, "GetPageText(self, nPage: int) -> object");
+PyDoc_STRVAR(doc_wxToolbook_GetPageText, "GetPageText(self, nPage: int) -> Any");
 
 extern "C" {static PyObject *meth_wxToolbook_GetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_GetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2936,7 +2936,7 @@ static PyObject *meth_wxToolbook_GetPageText(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_SetPageText, "SetPageText(self, page: int, text: object) -> bool");
+PyDoc_STRVAR(doc_wxToolbook_SetPageText, "SetPageText(self, page: int, text: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxToolbook_SetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_SetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3091,7 +3091,7 @@ static PyObject *meth_wxToolbook_ChangeSelection(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_HitTest, "HitTest(self, pt: Point) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxToolbook_HitTest, "HitTest(self, pt: Point) -> (int, Optional[int])");
 
 extern "C" {static PyObject *meth_wxToolbook_HitTest(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_HitTest(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3133,7 +3133,7 @@ static PyObject *meth_wxToolbook_HitTest(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxToolbook_InsertPage, "InsertPage(self, index: int, page: Window, text: object, select: bool = False, imageId: int = wxBookCtrlBase.NO_IMAGE) -> bool");
+PyDoc_STRVAR(doc_wxToolbook_InsertPage, "InsertPage(self, index: int, page: Optional[Window], text: Any, select: bool = False, imageId: int = wxBookCtrlBase.NO_IMAGE) -> bool");
 
 extern "C" {static PyObject *meth_wxToolbook_InsertPage(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxToolbook_InsertPage(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3421,7 +3421,7 @@ sipClassTypeDef sipTypeDef__core_wxToolbook = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxToolbook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Toolbook,
diff --git a/sip/cpp/sip_corewxTopLevelWindow.cpp b/sip/cpp/sip_corewxTopLevelWindow.cpp
index 2768f676..9cc685d9 100644
--- sip/cpp/sip_corewxTopLevelWindow.cpp
+++ sip/cpp/sip_corewxTopLevelWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3090,7 +3090,7 @@ static PyObject *meth_wxTopLevelWindow_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxTopLevelWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTopLevelWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTopLevelWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTopLevelWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3128,7 +3128,7 @@ static PyObject *meth_wxTopLevelWindow_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTopLevelWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTopLevelWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTopLevelWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTopLevelWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3266,7 +3266,7 @@ static PyObject *meth_wxTopLevelWindow_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxTopLevelWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxTopLevelWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxTopLevelWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxTopLevelWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3453,7 +3453,7 @@ static PyObject *meth_wxTopLevelWindow_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxTopLevelWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxTopLevelWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxTopLevelWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxTopLevelWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3602,7 +3602,7 @@ static PyObject *meth_wxTopLevelWindow_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTopLevelWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTopLevelWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTopLevelWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTopLevelWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3636,7 +3636,7 @@ static PyObject *meth_wxTopLevelWindow_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxTopLevelWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTopLevelWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTopLevelWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTopLevelWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3670,7 +3670,7 @@ static PyObject *meth_wxTopLevelWindow_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxTopLevelWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTopLevelWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTopLevelWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTopLevelWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4529,7 +4529,7 @@ sipClassTypeDef sipTypeDef__core_wxTopLevelWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTopLevelWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TopLevelWindow,
diff --git a/sip/cpp/sip_corewxTopLevelWindowGeometrySerializer.cpp b/sip/cpp/sip_corewxTopLevelWindowGeometrySerializer.cpp
index 9defcda5..840befdb 100644
--- sip/cpp/sip_corewxTopLevelWindowGeometrySerializer.cpp
+++ sip/cpp/sip_corewxTopLevelWindowGeometrySerializer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -45,7 +45,7 @@ sipClassTypeDef sipTypeDef__core_wxTopLevelWindow_GeometrySerializer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTopLevelWindow__GeometrySerializer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GeometrySerializer,
diff --git a/sip/cpp/sip_corewxTrackable.cpp b/sip/cpp/sip_corewxTrackable.cpp
index aca3ac61..87d2f053 100644
--- sip/cpp/sip_corewxTrackable.cpp
+++ sip/cpp/sip_corewxTrackable.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -29,7 +29,7 @@ sipClassTypeDef sipTypeDef__core_wxTrackable = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTrackable,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Trackable,
diff --git a/sip/cpp/sip_corewxTranslations.cpp b/sip/cpp/sip_corewxTranslations.cpp
index 7aa11b2d..38a9c440 100644
--- sip/cpp/sip_corewxTranslations.cpp
+++ sip/cpp/sip_corewxTranslations.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -674,7 +674,7 @@ sipClassTypeDef sipTypeDef__core_wxTranslations = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTranslations,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Translations,
diff --git a/sip/cpp/sip_corewxTranslationsLoader.cpp b/sip/cpp/sip_corewxTranslationsLoader.cpp
index 2da695c2..6529a74c 100644
--- sip/cpp/sip_corewxTranslationsLoader.cpp
+++ sip/cpp/sip_corewxTranslationsLoader.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -154,7 +154,7 @@ sipClassTypeDef sipTypeDef__core_wxTranslationsLoader = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTranslationsLoader,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TranslationsLoader,
diff --git a/sip/cpp/sip_corewxTreeCtrl.cpp b/sip/cpp/sip_corewxTreeCtrl.cpp
index e6360cef..c736719f 100644
--- sip/cpp/sip_corewxTreeCtrl.cpp
+++ sip/cpp/sip_corewxTreeCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -4611,7 +4611,7 @@ static PyObject *meth_wxTreeCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxTreeCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTreeCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTreeCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4649,7 +4649,7 @@ static PyObject *meth_wxTreeCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTreeCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTreeCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTreeCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4787,7 +4787,7 @@ static PyObject *meth_wxTreeCtrl_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTreeCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxTreeCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxTreeCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxTreeCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -4974,7 +4974,7 @@ static PyObject *meth_wxTreeCtrl_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxTreeCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxTreeCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxTreeCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxTreeCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -5123,7 +5123,7 @@ static PyObject *meth_wxTreeCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTreeCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreeCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreeCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5157,7 +5157,7 @@ static PyObject *meth_wxTreeCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxTreeCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreeCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreeCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5191,7 +5191,7 @@ static PyObject *meth_wxTreeCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTreeCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreeCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreeCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -6125,7 +6125,7 @@ sipClassTypeDef sipTypeDef__core_wxTreeCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTreeCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TreeCtrl,
diff --git a/sip/cpp/sip_corewxTreeEvent.cpp b/sip/cpp/sip_corewxTreeEvent.cpp
index bc40e982..5a4a3a1a 100644
--- sip/cpp/sip_corewxTreeEvent.cpp
+++ sip/cpp/sip_corewxTreeEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -379,7 +379,7 @@ static PyObject *meth_wxTreeEvent_SetToolTip(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxTreeEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxTreeEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxTreeEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxTreeEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -553,7 +553,7 @@ sipClassTypeDef sipTypeDef__core_wxTreeEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTreeEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TreeEvent,
diff --git a/sip/cpp/sip_corewxTreeItemData.cpp b/sip/cpp/sip_corewxTreeItemData.cpp
index da088c22..2fd0bef2 100644
--- sip/cpp/sip_corewxTreeItemData.cpp
+++ sip/cpp/sip_corewxTreeItemData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -80,15 +80,15 @@ sipMappedTypeDef sipTypeDef__core_wxTreeItemData = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxTreeItemData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxTreeItemData,
     array_wxTreeItemData,
diff --git a/sip/cpp/sip_corewxTreeItemId.cpp b/sip/cpp/sip_corewxTreeItemId.cpp
index 122d73f4..b0db0c1b 100644
--- sip/cpp/sip_corewxTreeItemId.cpp
+++ sip/cpp/sip_corewxTreeItemId.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -405,7 +405,7 @@ sipClassTypeDef sipTypeDef__core_wxTreeItemId = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTreeItemId,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TreeItemId,
diff --git a/sip/cpp/sip_corewxTreebook.cpp b/sip/cpp/sip_corewxTreebook.cpp
index 326d586e..ca9df5c3 100644
--- sip/cpp/sip_corewxTreebook.cpp
+++ sip/cpp/sip_corewxTreebook.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1967,7 +1967,7 @@ static PyObject *meth_wxTreebook_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTreebook_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTreebook_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2005,7 +2005,7 @@ static PyObject *meth_wxTreebook_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTreebook_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTreebook_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2143,7 +2143,7 @@ static PyObject *meth_wxTreebook_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxTreebook_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxTreebook_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2330,7 +2330,7 @@ static PyObject *meth_wxTreebook_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxTreebook_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxTreebook_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2479,7 +2479,7 @@ static PyObject *meth_wxTreebook_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreebook_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreebook_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2513,7 +2513,7 @@ static PyObject *meth_wxTreebook_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreebook_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreebook_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2547,7 +2547,7 @@ static PyObject *meth_wxTreebook_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreebook_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreebook_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3229,7 +3229,7 @@ static PyObject *meth_wxTreebook_SetPageImage(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_GetPageText, "GetPageText(self, nPage: int) -> object");
+PyDoc_STRVAR(doc_wxTreebook_GetPageText, "GetPageText(self, nPage: int) -> Any");
 
 extern "C" {static PyObject *meth_wxTreebook_GetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_GetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3268,7 +3268,7 @@ static PyObject *meth_wxTreebook_GetPageText(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_SetPageText, "SetPageText(self, page: int, text: object) -> bool");
+PyDoc_STRVAR(doc_wxTreebook_SetPageText, "SetPageText(self, page: int, text: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxTreebook_SetPageText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_SetPageText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3389,7 +3389,7 @@ static PyObject *meth_wxTreebook_ChangeSelection(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxTreebook_HitTest, "HitTest(self, pt: Point) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreebook_HitTest, "HitTest(self, pt: Point) -> (int, Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreebook_HitTest(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreebook_HitTest(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3713,7 +3713,7 @@ sipClassTypeDef sipTypeDef__core_wxTreebook = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTreebook,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Treebook,
diff --git a/sip/cpp/sip_corewxTwoFingerTapEvent.cpp b/sip/cpp/sip_corewxTwoFingerTapEvent.cpp
index bc9f83d4..c9fe1990 100644
--- sip/cpp/sip_corewxTwoFingerTapEvent.cpp
+++ sip/cpp/sip_corewxTwoFingerTapEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -87,7 +87,7 @@ sipwxTwoFingerTapEvent::~sipwxTwoFingerTapEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxTwoFingerTapEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxTwoFingerTapEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxTwoFingerTapEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxTwoFingerTapEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -239,7 +239,7 @@ sipClassTypeDef sipTypeDef__core_wxTwoFingerTapEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTwoFingerTapEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TwoFingerTapEvent,
diff --git a/sip/cpp/sip_corewxUIActionSimulator.cpp b/sip/cpp/sip_corewxUIActionSimulator.cpp
index 1312faa5..42ab8def 100644
--- sip/cpp/sip_corewxUIActionSimulator.cpp
+++ sip/cpp/sip_corewxUIActionSimulator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -577,7 +577,7 @@ sipClassTypeDef sipTypeDef__core_wxUIActionSimulator = {
         SIP_TYPE_CLASS,
         sipNameNr_wxUIActionSimulator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_UIActionSimulator,
diff --git a/sip/cpp/sip_corewxUIntPtr.cpp b/sip/cpp/sip_corewxUIntPtr.cpp
index 93f03276..6c6de8a8 100644
--- sip/cpp/sip_corewxUIntPtr.cpp
+++ sip/cpp/sip_corewxUIntPtr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -87,15 +87,15 @@ sipMappedTypeDef sipTypeDef__core_wxUIntPtr = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxUIntPtr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxUIntPtr,
     array_wxUIntPtr,
diff --git a/sip/cpp/sip_corewxULongLong.cpp b/sip/cpp/sip_corewxULongLong.cpp
index e72b60be..a5c76213 100644
--- sip/cpp/sip_corewxULongLong.cpp
+++ sip/cpp/sip_corewxULongLong.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -99,15 +99,15 @@ sipMappedTypeDef sipTypeDef__core_wxULongLong = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxULongLong,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxULongLong,
     array_wxULongLong,
diff --git a/sip/cpp/sip_corewxURLDataObject.cpp b/sip/cpp/sip_corewxURLDataObject.cpp
index 6cc4237e..d5c67f52 100644
--- sip/cpp/sip_corewxURLDataObject.cpp
+++ sip/cpp/sip_corewxURLDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -515,7 +515,7 @@ sipClassTypeDef sipTypeDef__core_wxURLDataObject = {
         SIP_TYPE_CLASS,
         sipNameNr_wxURLDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_URLDataObject,
diff --git a/sip/cpp/sip_corewxUniChar.cpp b/sip/cpp/sip_corewxUniChar.cpp
index b697649b..5acda62a 100644
--- sip/cpp/sip_corewxUniChar.cpp
+++ sip/cpp/sip_corewxUniChar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -506,7 +506,7 @@ sipClassTypeDef sipTypeDef__core_wxUniChar = {
         SIP_TYPE_CLASS,
         sipNameNr_wxUniChar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_UniChar,
diff --git a/sip/cpp/sip_corewxUpdateUIEvent.cpp b/sip/cpp/sip_corewxUpdateUIEvent.cpp
index 40295a74..72722479 100644
--- sip/cpp/sip_corewxUpdateUIEvent.cpp
+++ sip/cpp/sip_corewxUpdateUIEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -777,7 +777,7 @@ static PyObject *meth_wxUpdateUIEvent_SetUpdateInterval(PyObject *, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxUpdateUIEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxUpdateUIEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxUpdateUIEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxUpdateUIEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -956,7 +956,7 @@ sipClassTypeDef sipTypeDef__core_wxUpdateUIEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxUpdateUIEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_UpdateUIEvent,
diff --git a/sip/cpp/sip_corewxVListBox.cpp b/sip/cpp/sip_corewxVListBox.cpp
index bd85eb88..2adf69ec 100644
--- sip/cpp/sip_corewxVListBox.cpp
+++ sip/cpp/sip_corewxVListBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2757,7 +2757,7 @@ static PyObject *meth_wxVListBox_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxVListBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxVListBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxVListBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2795,7 +2795,7 @@ static PyObject *meth_wxVListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxVListBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxVListBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxVListBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVListBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2933,7 +2933,7 @@ static PyObject *meth_wxVListBox_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxVListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxVListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxVListBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxVListBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3120,7 +3120,7 @@ static PyObject *meth_wxVListBox_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxVListBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxVListBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxVListBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxVListBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3269,7 +3269,7 @@ static PyObject *meth_wxVListBox_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxVListBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxVListBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxVListBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3303,7 +3303,7 @@ static PyObject *meth_wxVListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxVListBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxVListBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxVListBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3337,7 +3337,7 @@ static PyObject *meth_wxVListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxVListBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxVListBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxVListBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVListBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4407,7 +4407,7 @@ sipClassTypeDef sipTypeDef__core_wxVListBox = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxVListBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VListBox,
diff --git a/sip/cpp/sip_corewxVScrolledWindow.cpp b/sip/cpp/sip_corewxVScrolledWindow.cpp
index 1af49145..997f0620 100644
--- sip/cpp/sip_corewxVScrolledWindow.cpp
+++ sip/cpp/sip_corewxVScrolledWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1915,7 +1915,7 @@ static PyObject *meth_wxVScrolledWindow_AcceptsFocusFromKeyboard(PyObject *sipSe
 }
 
 
-PyDoc_STRVAR(doc_wxVScrolledWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxVScrolledWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxVScrolledWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVScrolledWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1953,7 +1953,7 @@ static PyObject *meth_wxVScrolledWindow_AddChild(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxVScrolledWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxVScrolledWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxVScrolledWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVScrolledWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2091,7 +2091,7 @@ static PyObject *meth_wxVScrolledWindow_OnInternalIdle(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxVScrolledWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxVScrolledWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxVScrolledWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxVScrolledWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2278,7 +2278,7 @@ static PyObject *meth_wxVScrolledWindow_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxVScrolledWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxVScrolledWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxVScrolledWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxVScrolledWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2427,7 +2427,7 @@ static PyObject *meth_wxVScrolledWindow_DoEnable(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxVScrolledWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxVScrolledWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxVScrolledWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVScrolledWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2461,7 +2461,7 @@ static PyObject *meth_wxVScrolledWindow_DoGetPosition(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxVScrolledWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxVScrolledWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxVScrolledWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVScrolledWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2495,7 +2495,7 @@ static PyObject *meth_wxVScrolledWindow_DoGetSize(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxVScrolledWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxVScrolledWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxVScrolledWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxVScrolledWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3691,7 +3691,7 @@ sipClassTypeDef sipTypeDef__core_wxVScrolledWindow = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxVScrolledWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VScrolledWindow,
diff --git a/sip/cpp/sip_corewxValidator.cpp b/sip/cpp/sip_corewxValidator.cpp
index a35e6589..6ce6d149 100644
--- sip/cpp/sip_corewxValidator.cpp
+++ sip/cpp/sip_corewxValidator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -699,7 +699,7 @@ sipClassTypeDef sipTypeDef__core_wxValidator = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxValidator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Validator,
diff --git a/sip/cpp/sip_corewxVarHScrollHelper.cpp b/sip/cpp/sip_corewxVarHScrollHelper.cpp
index 65d68526..a4115235 100644
--- sip/cpp/sip_corewxVarHScrollHelper.cpp
+++ sip/cpp/sip_corewxVarHScrollHelper.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1213,7 +1213,7 @@ sipClassTypeDef sipTypeDef__core_wxVarHScrollHelper = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxVarHScrollHelper,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VarHScrollHelper,
diff --git a/sip/cpp/sip_corewxVarHVScrollHelper.cpp b/sip/cpp/sip_corewxVarHVScrollHelper.cpp
index c7dfbd53..892d2868 100644
--- sip/cpp/sip_corewxVarHVScrollHelper.cpp
+++ sip/cpp/sip_corewxVarHVScrollHelper.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1445,7 +1445,7 @@ sipClassTypeDef sipTypeDef__core_wxVarHVScrollHelper = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxVarHVScrollHelper,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VarHVScrollHelper,
diff --git a/sip/cpp/sip_corewxVarScrollHelperBase.cpp b/sip/cpp/sip_corewxVarScrollHelperBase.cpp
index 2792e860..b51923bd 100644
--- sip/cpp/sip_corewxVarScrollHelperBase.cpp
+++ sip/cpp/sip_corewxVarScrollHelperBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -630,7 +630,7 @@ sipClassTypeDef sipTypeDef__core_wxVarScrollHelperBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxVarScrollHelperBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VarScrollHelperBase,
diff --git a/sip/cpp/sip_corewxVarVScrollHelper.cpp b/sip/cpp/sip_corewxVarVScrollHelper.cpp
index 7a54a775..80b16c73 100644
--- sip/cpp/sip_corewxVarVScrollHelper.cpp
+++ sip/cpp/sip_corewxVarVScrollHelper.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1213,7 +1213,7 @@ sipClassTypeDef sipTypeDef__core_wxVarVScrollHelper = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxVarVScrollHelper,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VarVScrollHelper,
diff --git a/sip/cpp/sip_corewxVariant.cpp b/sip/cpp/sip_corewxVariant.cpp
index 871ccf91..9458c310 100644
--- sip/cpp/sip_corewxVariant.cpp
+++ sip/cpp/sip_corewxVariant.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -84,15 +84,15 @@ sipMappedTypeDef sipTypeDef__core_wxVariant = {
         SIP_TYPE_ALLOW_NONE|SIP_TYPE_MAPPED,
         sipNameNr_wxVariant,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxVariant,
     array_wxVariant,
diff --git a/sip/cpp/sip_corewxVariantList.cpp b/sip/cpp/sip_corewxVariantList.cpp
index e77389ce..0b51ea03 100644
--- sip/cpp/sip_corewxVariantList.cpp
+++ sip/cpp/sip_corewxVariantList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -99,15 +99,15 @@ sipMappedTypeDef sipTypeDef__core_wxVariantList = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxVariantList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxVariantList,
     array_wxVariantList,
diff --git a/sip/cpp/sip_corewxVector0100wxBitmap.cpp b/sip/cpp/sip_corewxVector0100wxBitmap.cpp
index 470ad55f..bdb80293 100644
--- sip/cpp/sip_corewxVector0100wxBitmap.cpp
+++ sip/cpp/sip_corewxVector0100wxBitmap.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -152,15 +152,15 @@ sipMappedTypeDef sipTypeDef__core_wxVector_0100wxBitmap = {
         SIP_TYPE_MAPPED,
         sipNameNr_55351,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxVector_0100wxBitmap,
     array_wxVector_0100wxBitmap,
diff --git a/sip/cpp/sip_corewxVector0100wxBitmapBundle.cpp b/sip/cpp/sip_corewxVector0100wxBitmapBundle.cpp
index 95854796..cc1651d8 100644
--- sip/cpp/sip_corewxVector0100wxBitmapBundle.cpp
+++ sip/cpp/sip_corewxVector0100wxBitmapBundle.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -152,15 +152,15 @@ sipMappedTypeDef sipTypeDef__core_wxVector_0100wxBitmapBundle = {
         SIP_TYPE_MAPPED,
         sipNameNr_23518,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxVector_0100wxBitmapBundle,
     array_wxVector_0100wxBitmapBundle,
diff --git a/sip/cpp/sip_corewxVersionInfo.cpp b/sip/cpp/sip_corewxVersionInfo.cpp
index f82eac62..98f9621a 100644
--- sip/cpp/sip_corewxVersionInfo.cpp
+++ sip/cpp/sip_corewxVersionInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -546,7 +546,7 @@ sipClassTypeDef sipTypeDef__core_wxVersionInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxVersionInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VersionInfo,
diff --git a/sip/cpp/sip_corewxVideoMode.cpp b/sip/cpp/sip_corewxVideoMode.cpp
index 85c8be3d..8709973e 100644
--- sip/cpp/sip_corewxVideoMode.cpp
+++ sip/cpp/sip_corewxVideoMode.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -591,7 +591,7 @@ sipClassTypeDef sipTypeDef__core_wxVideoMode = {
         SIP_TYPE_CLASS,
         sipNameNr_wxVideoMode,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VideoMode,
diff --git a/sip/cpp/sip_corewxVisualAttributes.cpp b/sip/cpp/sip_corewxVisualAttributes.cpp
index 880a5edb..92405292 100644
--- sip/cpp/sip_corewxVisualAttributes.cpp
+++ sip/cpp/sip_corewxVisualAttributes.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -141,7 +141,7 @@ sipClassTypeDef sipTypeDef__core_wxVisualAttributes = {
         SIP_TYPE_CLASS,
         sipNameNr_wxVisualAttributes,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_VisualAttributes,
diff --git a/sip/cpp/sip_corewxWindow.cpp b/sip/cpp/sip_corewxWindow.cpp
index f0e5930c..e1d5d80b 100644
--- sip/cpp/sip_corewxWindow.cpp
+++ sip/cpp/sip_corewxWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -12245,7 +12245,7 @@ static PyObject *meth_wxWindow_SetDimensions(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -12317,7 +12317,7 @@ static PyObject *meth_wxWindow_DoEnable(PyObject *sipSelf, PyObject *sipArgs, Py
 }
 
 
-PyDoc_STRVAR(doc_wxWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -12351,7 +12351,7 @@ static PyObject *meth_wxWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -12385,7 +12385,7 @@ static PyObject *meth_wxWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -13492,7 +13492,7 @@ sipClassTypeDef sipTypeDef__core_wxWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Window,
diff --git a/sip/cpp/sip_corewxWindowBase.cpp b/sip/cpp/sip_corewxWindowBase.cpp
index af4a6074..9f9f6500 100644
--- sip/cpp/sip_corewxWindowBase.cpp
+++ sip/cpp/sip_corewxWindowBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -151,7 +151,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWindowBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowBase,
diff --git a/sip/cpp/sip_corewxWindowChildrenRepositioningGuard.cpp b/sip/cpp/sip_corewxWindowChildrenRepositioningGuard.cpp
index 6b50c1b0..0adfc35b 100644
--- sip/cpp/sip_corewxWindowChildrenRepositioningGuard.cpp
+++ sip/cpp/sip_corewxWindowChildrenRepositioningGuard.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -81,7 +81,7 @@ sipClassTypeDef sipTypeDef__core_wxWindow_ChildrenRepositioningGuard = {
         SIP_TYPE_CLASS,
         sipNameNr_wxWindow__ChildrenRepositioningGuard,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ChildrenRepositioningGuard,
diff --git a/sip/cpp/sip_corewxWindowCreateEvent.cpp b/sip/cpp/sip_corewxWindowCreateEvent.cpp
index 7858731f..b35f52a0 100644
--- sip/cpp/sip_corewxWindowCreateEvent.cpp
+++ sip/cpp/sip_corewxWindowCreateEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -122,7 +122,7 @@ static PyObject *meth_wxWindowCreateEvent_GetWindow(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxWindowCreateEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxWindowCreateEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxWindowCreateEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxWindowCreateEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -279,7 +279,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowCreateEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWindowCreateEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowCreateEvent,
diff --git a/sip/cpp/sip_corewxWindowDC.cpp b/sip/cpp/sip_corewxWindowDC.cpp
index 1db6a797..e8b8e9a9 100644
--- sip/cpp/sip_corewxWindowDC.cpp
+++ sip/cpp/sip_corewxWindowDC.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -157,7 +157,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowDC = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWindowDC,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowDC,
diff --git a/sip/cpp/sip_corewxWindowDestroyEvent.cpp b/sip/cpp/sip_corewxWindowDestroyEvent.cpp
index 633e22cf..ac0370d0 100644
--- sip/cpp/sip_corewxWindowDestroyEvent.cpp
+++ sip/cpp/sip_corewxWindowDestroyEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -122,7 +122,7 @@ static PyObject *meth_wxWindowDestroyEvent_GetWindow(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxWindowDestroyEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxWindowDestroyEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxWindowDestroyEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxWindowDestroyEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -279,7 +279,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowDestroyEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWindowDestroyEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowDestroyEvent,
diff --git a/sip/cpp/sip_corewxWindowDisabler.cpp b/sip/cpp/sip_corewxWindowDisabler.cpp
index fe43b339..ac75a510 100644
--- sip/cpp/sip_corewxWindowDisabler.cpp
+++ sip/cpp/sip_corewxWindowDisabler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -121,7 +121,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowDisabler = {
         SIP_TYPE_CLASS,
         sipNameNr_wxWindowDisabler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowDisabler,
diff --git a/sip/cpp/sip_corewxWindowIDRef.cpp b/sip/cpp/sip_corewxWindowIDRef.cpp
index 2ea3944e..6d23f792 100644
--- sip/cpp/sip_corewxWindowIDRef.cpp
+++ sip/cpp/sip_corewxWindowIDRef.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -554,7 +554,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowIDRef = {
         SIP_TYPE_CLASS,
         sipNameNr_wxWindowIDRef,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowIDRef,
diff --git a/sip/cpp/sip_corewxWindowList.cpp b/sip/cpp/sip_corewxWindowList.cpp
index e406473c..8570fdbd 100644
--- sip/cpp/sip_corewxWindowList.cpp
+++ sip/cpp/sip_corewxWindowList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -32,7 +32,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxWindowList_index, "index(self, obj: Window) -> int");
+PyDoc_STRVAR(doc_wxWindowList_index, "index(self, obj: Optional[Window]) -> int");
 
 extern "C" {static PyObject *meth_wxWindowList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWindowList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -301,7 +301,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxWindowList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowList,
diff --git a/sip/cpp/sip_corewxWindowList_iterator.cpp b/sip/cpp/sip_corewxWindowList_iterator.cpp
index d4db8daa..fd410066 100644
--- sip/cpp/sip_corewxWindowList_iterator.cpp
+++ sip/cpp/sip_corewxWindowList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxWindowList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowList_iterator,
diff --git a/sip/cpp/sip_corewxWindowModalDialogEvent.cpp b/sip/cpp/sip_corewxWindowModalDialogEvent.cpp
index 48cfa73c..09b5f699 100644
--- sip/cpp/sip_corewxWindowModalDialogEvent.cpp
+++ sip/cpp/sip_corewxWindowModalDialogEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -319,7 +319,7 @@ sipClassTypeDef sipTypeDef__core_wxWindowModalDialogEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWindowModalDialogEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WindowModalDialogEvent,
diff --git a/sip/cpp/sip_corewxWithImages.cpp b/sip/cpp/sip_corewxWithImages.cpp
index b5927c8b..8dadf2ba 100644
--- sip/cpp/sip_corewxWithImages.cpp
+++ sip/cpp/sip_corewxWithImages.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -423,7 +423,7 @@ sipClassTypeDef sipTypeDef__core_wxWithImages = {
         SIP_TYPE_CLASS,
         sipNameNr_wxWithImages,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WithImages,
diff --git a/sip/cpp/sip_corewxWrapSizer.cpp b/sip/cpp/sip_corewxWrapSizer.cpp
index 2a69367d..0ac96e38 100644
--- sip/cpp/sip_corewxWrapSizer.cpp
+++ sip/cpp/sip_corewxWrapSizer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -406,7 +406,7 @@ sipClassTypeDef sipTypeDef__core_wxWrapSizer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWrapSizer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WrapSizer,
diff --git a/sip/cpp/sip_corewxXPMHandler.cpp b/sip/cpp/sip_corewxXPMHandler.cpp
index de8c0a64..ab75f362 100644
--- sip/cpp/sip_corewxXPMHandler.cpp
+++ sip/cpp/sip_corewxXPMHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -421,7 +421,7 @@ sipClassTypeDef sipTypeDef__core_wxXPMHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxXPMHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_XPMHandler,
diff --git a/sip/cpp/sip_corewxZoomGestureEvent.cpp b/sip/cpp/sip_corewxZoomGestureEvent.cpp
index 4727ed48..27e8bb6c 100644
--- sip/cpp/sip_corewxZoomGestureEvent.cpp
+++ sip/cpp/sip_corewxZoomGestureEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -161,7 +161,7 @@ static PyObject *meth_wxZoomGestureEvent_SetZoomFactor(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxZoomGestureEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxZoomGestureEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxZoomGestureEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxZoomGestureEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -319,7 +319,7 @@ sipClassTypeDef sipTypeDef__core_wxZoomGestureEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxZoomGestureEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ZoomGestureEvent,
diff --git a/sip/cpp/sip_dataviewcmodule.cpp b/sip/cpp/sip_dataviewcmodule.cpp
index e79984ca..a042c7a3 100644
--- sip/cpp/sip_dataviewcmodule.cpp
+++ sip/cpp/sip_dataviewcmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1406,7 +1406,6 @@ PyMODINIT_FUNC PyInit__dataview()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._dataview",
diff --git a/sip/cpp/sip_dataviewwxDVCVariant.cpp b/sip/cpp/sip_dataviewwxDVCVariant.cpp
index 47abf167..2f774cc5 100644
--- sip/cpp/sip_dataviewwxDVCVariant.cpp
+++ sip/cpp/sip_dataviewwxDVCVariant.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -84,15 +84,15 @@ sipMappedTypeDef sipTypeDef__dataview_wxDVCVariant = {
         SIP_TYPE_ALLOW_NONE|SIP_TYPE_MAPPED,
         sipNameNr_wxDVCVariant,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxDVCVariant,
     array_wxDVCVariant,
diff --git a/sip/cpp/sip_dataviewwxDataViewBitmapRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewBitmapRenderer.cpp
index 589f5626..093851f1 100644
--- sip/cpp/sip_dataviewwxDataViewBitmapRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewBitmapRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -344,7 +344,7 @@ static PyObject *meth_wxDataViewBitmapRenderer_GetDefaultType(PyObject *, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewBitmapRenderer_SetValue, "SetValue(self, value: object) -> bool");
+PyDoc_STRVAR(doc_wxDataViewBitmapRenderer_SetValue, "SetValue(self, value: Optional[Any]) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewBitmapRenderer_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewBitmapRenderer_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -385,7 +385,7 @@ static PyObject *meth_wxDataViewBitmapRenderer_SetValue(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewBitmapRenderer_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewBitmapRenderer_GetValue, "GetValue(self) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewBitmapRenderer_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewBitmapRenderer_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -543,7 +543,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewBitmapRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewBitmapRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewBitmapRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewCheckIconTextRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewCheckIconTextRenderer.cpp
index ea3aadcf..62290781 100644
--- sip/cpp/sip_dataviewwxDataViewCheckIconTextRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewCheckIconTextRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -490,7 +490,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewCheckIconTextRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewCheckIconTextRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewCheckIconTextRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewChoiceRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewChoiceRenderer.cpp
index c401d145..e324d642 100644
--- sip/cpp/sip_dataviewwxDataViewChoiceRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewChoiceRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -386,7 +386,7 @@ static PyObject *meth_wxDataViewChoiceRenderer_GetChoices(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewChoiceRenderer_SetValue, "SetValue(self, value: object) -> bool");
+PyDoc_STRVAR(doc_wxDataViewChoiceRenderer_SetValue, "SetValue(self, value: Optional[Any]) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewChoiceRenderer_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewChoiceRenderer_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -427,7 +427,7 @@ static PyObject *meth_wxDataViewChoiceRenderer_SetValue(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewChoiceRenderer_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewChoiceRenderer_GetValue, "GetValue(self) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewChoiceRenderer_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewChoiceRenderer_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -580,7 +580,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewChoiceRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewChoiceRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewChoiceRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewColumn.cpp b/sip/cpp/sip_dataviewwxDataViewColumn.cpp
index 2e42afbc..331933f1 100644
--- sip/cpp/sip_dataviewwxDataViewColumn.cpp
+++ sip/cpp/sip_dataviewwxDataViewColumn.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -583,7 +583,7 @@ static PyObject *meth_wxDataViewColumn_GetRenderer(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewColumn_SetTitle, "SetTitle(self, title: object)");
+PyDoc_STRVAR(doc_wxDataViewColumn_SetTitle, "SetTitle(self, title: Any)");
 
 extern "C" {static PyObject *meth_wxDataViewColumn_SetTitle(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewColumn_SetTitle(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -623,7 +623,7 @@ static PyObject *meth_wxDataViewColumn_SetTitle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewColumn_GetTitle, "GetTitle(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewColumn_GetTitle, "GetTitle(self) -> Any");
 
 extern "C" {static PyObject *meth_wxDataViewColumn_GetTitle(PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewColumn_GetTitle(PyObject *sipSelf, PyObject *sipArgs)
@@ -1494,7 +1494,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewColumn = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataViewColumn,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewColumn,
diff --git a/sip/cpp/sip_dataviewwxDataViewCtrl.cpp b/sip/cpp/sip_dataviewwxDataViewCtrl.cpp
index fb2ac2f2..ed8c43b0 100644
--- sip/cpp/sip_dataviewwxDataViewCtrl.cpp
+++ sip/cpp/sip_dataviewwxDataViewCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -4240,7 +4240,7 @@ static PyObject *meth_wxDataViewCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDataViewCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDataViewCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4278,7 +4278,7 @@ static PyObject *meth_wxDataViewCtrl_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDataViewCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDataViewCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4416,7 +4416,7 @@ static PyObject *meth_wxDataViewCtrl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxDataViewCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxDataViewCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -4603,7 +4603,7 @@ static PyObject *meth_wxDataViewCtrl_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxDataViewCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxDataViewCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -4752,7 +4752,7 @@ static PyObject *meth_wxDataViewCtrl_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4786,7 +4786,7 @@ static PyObject *meth_wxDataViewCtrl_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4820,7 +4820,7 @@ static PyObject *meth_wxDataViewCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -5739,7 +5739,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewCtrl,
diff --git a/sip/cpp/sip_dataviewwxDataViewCustomRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewCustomRenderer.cpp
index 0e3ae701..3caa1b30 100644
--- sip/cpp/sip_dataviewwxDataViewCustomRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewCustomRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1146,7 +1146,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewCustomRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewCustomRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewCustomRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewDateRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewDateRenderer.cpp
index d5b023ab..ecbb19c9 100644
--- sip/cpp/sip_dataviewwxDataViewDateRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewDateRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -344,7 +344,7 @@ static PyObject *meth_wxDataViewDateRenderer_GetDefaultType(PyObject *, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewDateRenderer_SetValue, "SetValue(self, value: object) -> bool");
+PyDoc_STRVAR(doc_wxDataViewDateRenderer_SetValue, "SetValue(self, value: Optional[Any]) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewDateRenderer_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewDateRenderer_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -385,7 +385,7 @@ static PyObject *meth_wxDataViewDateRenderer_SetValue(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewDateRenderer_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewDateRenderer_GetValue, "GetValue(self) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewDateRenderer_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewDateRenderer_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -543,7 +543,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewDateRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewDateRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewDateRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewEvent.cpp b/sip/cpp/sip_dataviewwxDataViewEvent.cpp
index de4af961..af985808 100644
--- sip/cpp/sip_dataviewwxDataViewEvent.cpp
+++ sip/cpp/sip_dataviewwxDataViewEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1169,7 +1169,7 @@ static PyObject *meth_wxDataViewEvent_SetDropEffect(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxDataViewEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxDataViewEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -1441,7 +1441,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewEvent,
diff --git a/sip/cpp/sip_dataviewwxDataViewIconText.cpp b/sip/cpp/sip_dataviewwxDataViewIconText.cpp
index ace40111..87d6e07b 100644
--- sip/cpp/sip_dataviewwxDataViewIconText.cpp
+++ sip/cpp/sip_dataviewwxDataViewIconText.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -402,7 +402,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewIconText = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewIconText,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewIconText,
diff --git a/sip/cpp/sip_dataviewwxDataViewIconTextRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewIconTextRenderer.cpp
index a19b0c6a..2a4e387f 100644
--- sip/cpp/sip_dataviewwxDataViewIconTextRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewIconTextRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -344,7 +344,7 @@ static PyObject *meth_wxDataViewIconTextRenderer_GetDefaultType(PyObject *, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewIconTextRenderer_SetValue, "SetValue(self, value: object) -> bool");
+PyDoc_STRVAR(doc_wxDataViewIconTextRenderer_SetValue, "SetValue(self, value: Optional[Any]) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewIconTextRenderer_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewIconTextRenderer_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -385,7 +385,7 @@ static PyObject *meth_wxDataViewIconTextRenderer_SetValue(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewIconTextRenderer_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewIconTextRenderer_GetValue, "GetValue(self) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewIconTextRenderer_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewIconTextRenderer_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -544,7 +544,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewIconTextRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewIconTextRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewIconTextRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewIndexListModel.cpp b/sip/cpp/sip_dataviewwxDataViewIndexListModel.cpp
index 04a0b6fb..ef2be3a3 100644
--- sip/cpp/sip_dataviewwxDataViewIndexListModel.cpp
+++ sip/cpp/sip_dataviewwxDataViewIndexListModel.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -948,7 +948,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewIndexListModel = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewIndexListModel,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewIndexListModel,
diff --git a/sip/cpp/sip_dataviewwxDataViewItem.cpp b/sip/cpp/sip_dataviewwxDataViewItem.cpp
index f6035b4b..64e1c614 100644
--- sip/cpp/sip_dataviewwxDataViewItem.cpp
+++ sip/cpp/sip_dataviewwxDataViewItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -423,7 +423,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewItem = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataViewItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewItem,
diff --git a/sip/cpp/sip_dataviewwxDataViewItemArray.cpp b/sip/cpp/sip_dataviewwxDataViewItemArray.cpp
index e3cc48a0..af9b3e92 100644
--- sip/cpp/sip_dataviewwxDataViewItemArray.cpp
+++ sip/cpp/sip_dataviewwxDataViewItemArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewItemArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataViewItemArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewItemArray,
diff --git a/sip/cpp/sip_dataviewwxDataViewItemAttr.cpp b/sip/cpp/sip_dataviewwxDataViewItemAttr.cpp
index d2742020..b2eab591 100644
--- sip/cpp/sip_dataviewwxDataViewItemAttr.cpp
+++ sip/cpp/sip_dataviewwxDataViewItemAttr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -657,7 +657,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewItemAttr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataViewItemAttr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewItemAttr,
diff --git a/sip/cpp/sip_dataviewwxDataViewListCtrl.cpp b/sip/cpp/sip_dataviewwxDataViewListCtrl.cpp
index 78b96a0b..e0b93475 100644
--- sip/cpp/sip_dataviewwxDataViewListCtrl.cpp
+++ sip/cpp/sip_dataviewwxDataViewListCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2541,7 +2541,7 @@ static PyObject *meth_wxDataViewListCtrl_AcceptsFocusFromKeyboard(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDataViewListCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDataViewListCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2579,7 +2579,7 @@ static PyObject *meth_wxDataViewListCtrl_AddChild(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDataViewListCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDataViewListCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2717,7 +2717,7 @@ static PyObject *meth_wxDataViewListCtrl_OnInternalIdle(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxDataViewListCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxDataViewListCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2904,7 +2904,7 @@ static PyObject *meth_wxDataViewListCtrl_SetValidator(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxDataViewListCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxDataViewListCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3053,7 +3053,7 @@ static PyObject *meth_wxDataViewListCtrl_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewListCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewListCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3087,7 +3087,7 @@ static PyObject *meth_wxDataViewListCtrl_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewListCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewListCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3121,7 +3121,7 @@ static PyObject *meth_wxDataViewListCtrl_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewListCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewListCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3951,7 +3951,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewListCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewListCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewListCtrl,
diff --git a/sip/cpp/sip_dataviewwxDataViewListModel.cpp b/sip/cpp/sip_dataviewwxDataViewListModel.cpp
index 66740b51..3d4cce20 100644
--- sip/cpp/sip_dataviewwxDataViewListModel.cpp
+++ sip/cpp/sip_dataviewwxDataViewListModel.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -778,7 +778,7 @@ static PyObject *meth_wxDataViewListModel_IsContainer(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListModel_GetValue, "GetValue(self, item: DataViewItem, col: int) -> object");
+PyDoc_STRVAR(doc_wxDataViewListModel_GetValue, "GetValue(self, item: DataViewItem, col: int) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewListModel_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListModel_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -820,7 +820,7 @@ static PyObject *meth_wxDataViewListModel_GetValue(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewListModel_SetValue, "SetValue(self, variant: object, item: DataViewItem, col: int) -> bool");
+PyDoc_STRVAR(doc_wxDataViewListModel_SetValue, "SetValue(self, variant: Optional[Any], item: DataViewItem, col: int) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewListModel_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewListModel_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1087,7 +1087,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewListModel = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewListModel,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewListModel,
diff --git a/sip/cpp/sip_dataviewwxDataViewListStore.cpp b/sip/cpp/sip_dataviewwxDataViewListStore.cpp
index 59d49b63..f044a3db 100644
--- sip/cpp/sip_dataviewwxDataViewListStore.cpp
+++ sip/cpp/sip_dataviewwxDataViewListStore.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1045,7 +1045,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewListStore = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataViewListStore,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewListStore,
diff --git a/sip/cpp/sip_dataviewwxDataViewModel.cpp b/sip/cpp/sip_dataviewwxDataViewModel.cpp
index 181f81ce..af0202fb 100644
--- sip/cpp/sip_dataviewwxDataViewModel.cpp
+++ sip/cpp/sip_dataviewwxDataViewModel.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1459,7 +1459,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewModel = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewModel,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewModel,
diff --git a/sip/cpp/sip_dataviewwxDataViewModelNotifier.cpp b/sip/cpp/sip_dataviewwxDataViewModelNotifier.cpp
index 73c2fc85..e44075e9 100644
--- sip/cpp/sip_dataviewwxDataViewModelNotifier.cpp
+++ sip/cpp/sip_dataviewwxDataViewModelNotifier.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -779,7 +779,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewModelNotifier = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewModelNotifier,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewModelNotifier,
diff --git a/sip/cpp/sip_dataviewwxDataViewProgressRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewProgressRenderer.cpp
index bb4c3160..217225ed 100644
--- sip/cpp/sip_dataviewwxDataViewProgressRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewProgressRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -344,7 +344,7 @@ static PyObject *meth_wxDataViewProgressRenderer_GetDefaultType(PyObject *, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewProgressRenderer_SetValue, "SetValue(self, value: object) -> bool");
+PyDoc_STRVAR(doc_wxDataViewProgressRenderer_SetValue, "SetValue(self, value: Optional[Any]) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewProgressRenderer_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewProgressRenderer_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -385,7 +385,7 @@ static PyObject *meth_wxDataViewProgressRenderer_SetValue(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewProgressRenderer_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewProgressRenderer_GetValue, "GetValue(self) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewProgressRenderer_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewProgressRenderer_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -548,7 +548,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewProgressRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewProgressRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewProgressRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewRenderer.cpp
index 345406de..9d272ce7 100644
--- sip/cpp/sip_dataviewwxDataViewRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -925,7 +925,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewSpinRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewSpinRenderer.cpp
index b7677e5e..c8a63b0e 100644
--- sip/cpp/sip_dataviewwxDataViewSpinRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewSpinRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -461,7 +461,7 @@ static PyObject *meth_wxDataViewSpinRenderer_GetTextExtent(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewSpinRenderer_SetValue, "SetValue(self, value: object) -> bool");
+PyDoc_STRVAR(doc_wxDataViewSpinRenderer_SetValue, "SetValue(self, value: Optional[Any]) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewSpinRenderer_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewSpinRenderer_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -502,7 +502,7 @@ static PyObject *meth_wxDataViewSpinRenderer_SetValue(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewSpinRenderer_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewSpinRenderer_GetValue, "GetValue(self) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewSpinRenderer_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewSpinRenderer_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -571,7 +571,7 @@ static PyObject *meth_wxDataViewSpinRenderer_GetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewSpinRenderer_Render, "Render(self, cell: Rect, dc: DC, state: int) -> bool");
+PyDoc_STRVAR(doc_wxDataViewSpinRenderer_Render, "Render(self, cell: Rect, dc: Optional[DC], state: int) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewSpinRenderer_Render(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewSpinRenderer_Render(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -733,7 +733,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewSpinRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewSpinRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewSpinRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewTextRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewTextRenderer.cpp
index 40f47788..822d91e3 100644
--- sip/cpp/sip_dataviewwxDataViewTextRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewTextRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -383,7 +383,7 @@ static PyObject *meth_wxDataViewTextRenderer_EnableMarkup(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTextRenderer_SetValue, "SetValue(self, value: object) -> bool");
+PyDoc_STRVAR(doc_wxDataViewTextRenderer_SetValue, "SetValue(self, value: Optional[Any]) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewTextRenderer_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTextRenderer_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -424,7 +424,7 @@ static PyObject *meth_wxDataViewTextRenderer_SetValue(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTextRenderer_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewTextRenderer_GetValue, "GetValue(self) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewTextRenderer_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTextRenderer_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -583,7 +583,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewTextRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewTextRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewTextRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewToggleRenderer.cpp b/sip/cpp/sip_dataviewwxDataViewToggleRenderer.cpp
index 9f619f49..b90bb8c2 100644
--- sip/cpp/sip_dataviewwxDataViewToggleRenderer.cpp
+++ sip/cpp/sip_dataviewwxDataViewToggleRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -379,7 +379,7 @@ static PyObject *meth_wxDataViewToggleRenderer_ShowAsRadio(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewToggleRenderer_SetValue, "SetValue(self, value: object) -> bool");
+PyDoc_STRVAR(doc_wxDataViewToggleRenderer_SetValue, "SetValue(self, value: Optional[Any]) -> bool");
 
 extern "C" {static PyObject *meth_wxDataViewToggleRenderer_SetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewToggleRenderer_SetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -420,7 +420,7 @@ static PyObject *meth_wxDataViewToggleRenderer_SetValue(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewToggleRenderer_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxDataViewToggleRenderer_GetValue, "GetValue(self) -> Optional[Any]");
 
 extern "C" {static PyObject *meth_wxDataViewToggleRenderer_GetValue(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewToggleRenderer_GetValue(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -579,7 +579,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewToggleRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewToggleRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewToggleRenderer,
diff --git a/sip/cpp/sip_dataviewwxDataViewTreeCtrl.cpp b/sip/cpp/sip_dataviewwxDataViewTreeCtrl.cpp
index b0054491..f1e5c519 100644
--- sip/cpp/sip_dataviewwxDataViewTreeCtrl.cpp
+++ sip/cpp/sip_dataviewwxDataViewTreeCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2296,7 +2296,7 @@ static PyObject *meth_wxDataViewTreeCtrl_AcceptsFocusFromKeyboard(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTreeCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDataViewTreeCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDataViewTreeCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTreeCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2334,7 +2334,7 @@ static PyObject *meth_wxDataViewTreeCtrl_AddChild(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTreeCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxDataViewTreeCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxDataViewTreeCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTreeCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2472,7 +2472,7 @@ static PyObject *meth_wxDataViewTreeCtrl_OnInternalIdle(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTreeCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxDataViewTreeCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxDataViewTreeCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTreeCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2659,7 +2659,7 @@ static PyObject *meth_wxDataViewTreeCtrl_SetValidator(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTreeCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxDataViewTreeCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxDataViewTreeCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTreeCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2808,7 +2808,7 @@ static PyObject *meth_wxDataViewTreeCtrl_DoEnable(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTreeCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewTreeCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewTreeCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTreeCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2842,7 +2842,7 @@ static PyObject *meth_wxDataViewTreeCtrl_DoGetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTreeCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewTreeCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewTreeCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTreeCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2876,7 +2876,7 @@ static PyObject *meth_wxDataViewTreeCtrl_DoGetSize(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxDataViewTreeCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxDataViewTreeCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxDataViewTreeCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxDataViewTreeCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3701,7 +3701,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewTreeCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewTreeCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewTreeCtrl,
diff --git a/sip/cpp/sip_dataviewwxDataViewTreeStore.cpp b/sip/cpp/sip_dataviewwxDataViewTreeStore.cpp
index 305b490b..b50e4052 100644
--- sip/cpp/sip_dataviewwxDataViewTreeStore.cpp
+++ sip/cpp/sip_dataviewwxDataViewTreeStore.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1213,7 +1213,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewTreeStore = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewTreeStore,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewTreeStore,
diff --git a/sip/cpp/sip_dataviewwxDataViewValueAdjuster.cpp b/sip/cpp/sip_dataviewwxDataViewValueAdjuster.cpp
index 64fe7f25..043d911c 100644
--- sip/cpp/sip_dataviewwxDataViewValueAdjuster.cpp
+++ sip/cpp/sip_dataviewwxDataViewValueAdjuster.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -212,7 +212,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewValueAdjuster = {
         SIP_TYPE_CLASS,
         sipNameNr_wxDataViewValueAdjuster,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewValueAdjuster,
diff --git a/sip/cpp/sip_dataviewwxDataViewVirtualListModel.cpp b/sip/cpp/sip_dataviewwxDataViewVirtualListModel.cpp
index d40c2386..61e00edd 100644
--- sip/cpp/sip_dataviewwxDataViewVirtualListModel.cpp
+++ sip/cpp/sip_dataviewwxDataViewVirtualListModel.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -949,7 +949,7 @@ sipClassTypeDef sipTypeDef__dataview_wxDataViewVirtualListModel = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxDataViewVirtualListModel,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DataViewVirtualListModel,
diff --git a/sip/cpp/sip_dataviewwxTreeListCtrl.cpp b/sip/cpp/sip_dataviewwxTreeListCtrl.cpp
index 901f4cdd..474cc8ff 100644
--- sip/cpp/sip_dataviewwxTreeListCtrl.cpp
+++ sip/cpp/sip_dataviewwxTreeListCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3183,7 +3183,7 @@ static PyObject *meth_wxTreeListCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxTreeListCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTreeListCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTreeListCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeListCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3221,7 +3221,7 @@ static PyObject *meth_wxTreeListCtrl_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxTreeListCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxTreeListCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxTreeListCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeListCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3359,7 +3359,7 @@ static PyObject *meth_wxTreeListCtrl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxTreeListCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxTreeListCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxTreeListCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxTreeListCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3546,7 +3546,7 @@ static PyObject *meth_wxTreeListCtrl_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxTreeListCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxTreeListCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxTreeListCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxTreeListCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3695,7 +3695,7 @@ static PyObject *meth_wxTreeListCtrl_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxTreeListCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreeListCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreeListCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeListCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3729,7 +3729,7 @@ static PyObject *meth_wxTreeListCtrl_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxTreeListCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreeListCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreeListCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeListCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3763,7 +3763,7 @@ static PyObject *meth_wxTreeListCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxTreeListCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxTreeListCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxTreeListCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxTreeListCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4631,7 +4631,7 @@ sipClassTypeDef sipTypeDef__dataview_wxTreeListCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTreeListCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TreeListCtrl,
diff --git a/sip/cpp/sip_dataviewwxTreeListEvent.cpp b/sip/cpp/sip_dataviewwxTreeListEvent.cpp
index 46a6b86d..9361e0d3 100644
--- sip/cpp/sip_dataviewwxTreeListEvent.cpp
+++ sip/cpp/sip_dataviewwxTreeListEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -192,7 +192,7 @@ static PyObject *meth_wxTreeListEvent_GetColumn(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxTreeListEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxTreeListEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxTreeListEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxTreeListEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -346,7 +346,7 @@ sipClassTypeDef sipTypeDef__dataview_wxTreeListEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxTreeListEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TreeListEvent,
diff --git a/sip/cpp/sip_dataviewwxTreeListItem.cpp b/sip/cpp/sip_dataviewwxTreeListItem.cpp
index 76d87294..8ecb3297 100644
--- sip/cpp/sip_dataviewwxTreeListItem.cpp
+++ sip/cpp/sip_dataviewwxTreeListItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -343,7 +343,7 @@ sipClassTypeDef sipTypeDef__dataview_wxTreeListItem = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTreeListItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TreeListItem,
diff --git a/sip/cpp/sip_dataviewwxTreeListItemComparator.cpp b/sip/cpp/sip_dataviewwxTreeListItemComparator.cpp
index a4073a8b..c35ea940 100644
--- sip/cpp/sip_dataviewwxTreeListItemComparator.cpp
+++ sip/cpp/sip_dataviewwxTreeListItemComparator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -190,7 +190,7 @@ sipClassTypeDef sipTypeDef__dataview_wxTreeListItemComparator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxTreeListItemComparator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TreeListItemComparator,
diff --git a/sip/cpp/sip_dataviewwxVariantVector.cpp b/sip/cpp/sip_dataviewwxVariantVector.cpp
index ca2a456f..0e643423 100644
--- sip/cpp/sip_dataviewwxVariantVector.cpp
+++ sip/cpp/sip_dataviewwxVariantVector.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -85,15 +85,15 @@ sipMappedTypeDef sipTypeDef__dataview_wxVariantVector = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxVariantVector,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxVariantVector,
     array_wxVariantVector,
diff --git a/sip/cpp/sip_dataviewwxVector0100wxDataFormat.cpp b/sip/cpp/sip_dataviewwxVector0100wxDataFormat.cpp
index ea6b947a..a4217aa7 100644
--- sip/cpp/sip_dataviewwxVector0100wxDataFormat.cpp
+++ sip/cpp/sip_dataviewwxVector0100wxDataFormat.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -152,15 +152,15 @@ sipMappedTypeDef sipTypeDef__dataview_wxVector_0100wxDataFormat = {
         SIP_TYPE_MAPPED,
         sipNameNr_1732,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxVector_0100wxDataFormat,
     array_wxVector_0100wxDataFormat,
diff --git a/sip/cpp/sip_glcanvascmodule.cpp b/sip/cpp/sip_glcanvascmodule.cpp
index 6011989d..ac0979cb 100644
--- sip/cpp/sip_glcanvascmodule.cpp
+++ sip/cpp/sip_glcanvascmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -477,7 +477,6 @@ PyMODINIT_FUNC PyInit__glcanvas()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._glcanvas",
diff --git a/sip/cpp/sip_glcanvaswxGLAttribsBase.cpp b/sip/cpp/sip_glcanvaswxGLAttribsBase.cpp
index 5b66adb2..c0f19f08 100644
--- sip/cpp/sip_glcanvaswxGLAttribsBase.cpp
+++ sip/cpp/sip_glcanvaswxGLAttribsBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -345,7 +345,7 @@ sipClassTypeDef sipTypeDef__glcanvas_wxGLAttribsBase = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGLAttribsBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GLAttribsBase,
diff --git a/sip/cpp/sip_glcanvaswxGLAttributes.cpp b/sip/cpp/sip_glcanvaswxGLAttributes.cpp
index 5a675d49..db608ec9 100644
--- sip/cpp/sip_glcanvaswxGLAttributes.cpp
+++ sip/cpp/sip_glcanvaswxGLAttributes.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -757,7 +757,7 @@ sipClassTypeDef sipTypeDef__glcanvas_wxGLAttributes = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGLAttributes,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GLAttributes,
diff --git a/sip/cpp/sip_glcanvaswxGLCanvas.cpp b/sip/cpp/sip_glcanvaswxGLCanvas.cpp
index d0dc7166..0fac39da 100644
--- sip/cpp/sip_glcanvaswxGLCanvas.cpp
+++ sip/cpp/sip_glcanvaswxGLCanvas.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1418,7 +1418,7 @@ static PyObject *meth_wxGLCanvas_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGLCanvas_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGLCanvas_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGLCanvas_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGLCanvas_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1456,7 +1456,7 @@ static PyObject *meth_wxGLCanvas_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxGLCanvas_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGLCanvas_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGLCanvas_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGLCanvas_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1594,7 +1594,7 @@ static PyObject *meth_wxGLCanvas_OnInternalIdle(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxGLCanvas_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGLCanvas_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGLCanvas_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGLCanvas_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1781,7 +1781,7 @@ static PyObject *meth_wxGLCanvas_SetValidator(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxGLCanvas_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGLCanvas_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGLCanvas_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGLCanvas_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1930,7 +1930,7 @@ static PyObject *meth_wxGLCanvas_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxGLCanvas_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGLCanvas_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGLCanvas_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGLCanvas_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1964,7 +1964,7 @@ static PyObject *meth_wxGLCanvas_DoGetPosition(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxGLCanvas_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGLCanvas_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGLCanvas_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGLCanvas_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1998,7 +1998,7 @@ static PyObject *meth_wxGLCanvas_DoGetSize(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxGLCanvas_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGLCanvas_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGLCanvas_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGLCanvas_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2562,7 +2562,7 @@ static PyObject *meth_wxGLCanvas_TryAfter(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxGLCanvas_GetClassDefaultAttributes, "GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes");
+PyDoc_STRVAR(doc_wxGLCanvas_GetClassDefaultAttributes, "GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes");
 
 extern "C" {static PyObject *meth_wxGLCanvas_GetClassDefaultAttributes(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGLCanvas_GetClassDefaultAttributes(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -2808,7 +2808,7 @@ static PyMethodDef methods_wxGLCanvas[] = {
     {sipName_Validate, meth_wxGLCanvas_Validate, METH_VARARGS, doc_wxGLCanvas_Validate}
 };
 
-PyDoc_STRVAR(doc_wxGLCanvas, "GLCanvas(parent, dispAttrs, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=GLCanvasName, palette=NullPalette)\n"
+PyDoc_STRVAR(doc_wxGLCanvas, "GLCanvas(parent, dispAttrs, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=GLCanvasName, palette=wx.NullPalette)\n"
 "GLCanvas(parent, id=wx.ID_ANY, attribList=None, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name='GLCanvas', palette=wx.NullPalette)\n"
 "\n"
 "wxGLCanvas is a class for displaying OpenGL graphics.");
@@ -2822,7 +2822,7 @@ sipClassTypeDef sipTypeDef__glcanvas_wxGLCanvas = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGLCanvas,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GLCanvas,
diff --git a/sip/cpp/sip_glcanvaswxGLContext.cpp b/sip/cpp/sip_glcanvaswxGLContext.cpp
index 75d14cf7..7c829cb1 100644
--- sip/cpp/sip_glcanvaswxGLContext.cpp
+++ sip/cpp/sip_glcanvaswxGLContext.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -252,7 +252,7 @@ sipClassTypeDef sipTypeDef__glcanvas_wxGLContext = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGLContext,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GLContext,
diff --git a/sip/cpp/sip_glcanvaswxGLContextAttrs.cpp b/sip/cpp/sip_glcanvaswxGLContextAttrs.cpp
index 6566455b..8cd9046f 100644
--- sip/cpp/sip_glcanvaswxGLContextAttrs.cpp
+++ sip/cpp/sip_glcanvaswxGLContextAttrs.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -689,7 +689,7 @@ sipClassTypeDef sipTypeDef__glcanvas_wxGLContextAttrs = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGLContextAttrs,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GLContextAttrs,
diff --git a/sip/cpp/sip_gridcmodule.cpp b/sip/cpp/sip_gridcmodule.cpp
index 8aa01458..f0b64b9a 100644
--- sip/cpp/sip_gridcmodule.cpp
+++ sip/cpp/sip_gridcmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1741,7 +1741,6 @@ PyMODINIT_FUNC PyInit__grid()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._grid",
diff --git a/sip/cpp/sip_gridwxGrid.cpp b/sip/cpp/sip_gridwxGrid.cpp
index 8df9fc24..2b9e9686 100644
--- sip/cpp/sip_gridwxGrid.cpp
+++ sip/cpp/sip_gridwxGrid.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -13332,7 +13332,7 @@ static PyObject *meth_wxGrid_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGrid_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGrid_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGrid_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGrid_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -13370,7 +13370,7 @@ static PyObject *meth_wxGrid_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxGrid_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxGrid_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxGrid_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGrid_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -13508,7 +13508,7 @@ static PyObject *meth_wxGrid_OnInternalIdle(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxGrid_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxGrid_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxGrid_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxGrid_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -13695,7 +13695,7 @@ static PyObject *meth_wxGrid_SetValidator(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxGrid_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxGrid_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxGrid_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxGrid_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -13844,7 +13844,7 @@ static PyObject *meth_wxGrid_DoEnable(PyObject *sipSelf, PyObject *sipArgs, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxGrid_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGrid_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGrid_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGrid_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -13878,7 +13878,7 @@ static PyObject *meth_wxGrid_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxGrid_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGrid_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGrid_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGrid_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -13912,7 +13912,7 @@ static PyObject *meth_wxGrid_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGrid_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxGrid_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxGrid_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGrid_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -15282,7 +15282,7 @@ sipClassTypeDef sipTypeDef__grid_wxGrid = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGrid,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Grid,
diff --git a/sip/cpp/sip_gridwxGridActivationResult.cpp b/sip/cpp/sip_gridwxGridActivationResult.cpp
index 9b76d2fe..9c12e530 100644
--- sip/cpp/sip_gridwxGridActivationResult.cpp
+++ sip/cpp/sip_gridwxGridActivationResult.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -183,7 +183,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridActivationResult = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridActivationResult,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridActivationResult,
diff --git a/sip/cpp/sip_gridwxGridActivationSource.cpp b/sip/cpp/sip_gridwxGridActivationSource.cpp
index d194b455..d80d021c 100644
--- sip/cpp/sip_gridwxGridActivationSource.cpp
+++ sip/cpp/sip_gridwxGridActivationSource.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -169,7 +169,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridActivationSource = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridActivationSource,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridActivationSource,
diff --git a/sip/cpp/sip_gridwxGridBlockCoords.cpp b/sip/cpp/sip_gridwxGridBlockCoords.cpp
index d1b01b59..89633cad 100644
--- sip/cpp/sip_gridwxGridBlockCoords.cpp
+++ sip/cpp/sip_gridwxGridBlockCoords.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -919,7 +919,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridBlockCoords = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridBlockCoords,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridBlockCoords,
diff --git a/sip/cpp/sip_gridwxGridBlockDiffResult.cpp b/sip/cpp/sip_gridwxGridBlockDiffResult.cpp
index f80c42a8..40500b2c 100644
--- sip/cpp/sip_gridwxGridBlockDiffResult.cpp
+++ sip/cpp/sip_gridwxGridBlockDiffResult.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -152,7 +152,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridBlockDiffResult = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridBlockDiffResult,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridBlockDiffResult,
diff --git a/sip/cpp/sip_gridwxGridBlocks.cpp b/sip/cpp/sip_gridwxGridBlocks.cpp
index e1428eff..f4ac3394 100644
--- sip/cpp/sip_gridwxGridBlocks.cpp
+++ sip/cpp/sip_gridwxGridBlocks.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -143,7 +143,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridBlocks = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridBlocks,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridBlocks,
diff --git a/sip/cpp/sip_gridwxGridBlocksiterator.cpp b/sip/cpp/sip_gridwxGridBlocksiterator.cpp
index 66a1d081..453ab4c2 100644
--- sip/cpp/sip_gridwxGridBlocksiterator.cpp
+++ sip/cpp/sip_gridwxGridBlocksiterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -243,7 +243,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridBlocks_iterator = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridBlocks__iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_iterator,
diff --git a/sip/cpp/sip_gridwxGridCellActivatableEditor.cpp b/sip/cpp/sip_gridwxGridCellActivatableEditor.cpp
index 0f6ffe4f..bbf9988a 100644
--- sip/cpp/sip_gridwxGridCellActivatableEditor.cpp
+++ sip/cpp/sip_gridwxGridCellActivatableEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -548,7 +548,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellActivatableEditor = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxGridCellActivatableEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellActivatableEditor,
diff --git a/sip/cpp/sip_gridwxGridCellAttr.cpp b/sip/cpp/sip_gridwxGridCellAttr.cpp
index a3e847c7..ecbac97c 100644
--- sip/cpp/sip_gridwxGridCellAttr.cpp
+++ sip/cpp/sip_gridwxGridCellAttr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1688,7 +1688,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellAttr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellAttr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellAttr,
diff --git a/sip/cpp/sip_gridwxGridCellAttrProvider.cpp b/sip/cpp/sip_gridwxGridCellAttrProvider.cpp
index c3c7f7d4..5798bc67 100644
--- sip/cpp/sip_gridwxGridCellAttrProvider.cpp
+++ sip/cpp/sip_gridwxGridCellAttrProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -618,7 +618,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellAttrProvider = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellAttrProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellAttrProvider,
diff --git a/sip/cpp/sip_gridwxGridCellAttrPtr.cpp b/sip/cpp/sip_gridwxGridCellAttrPtr.cpp
index 08053b7d..e98a9293 100644
--- sip/cpp/sip_gridwxGridCellAttrPtr.cpp
+++ sip/cpp/sip_gridwxGridCellAttrPtr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -248,7 +248,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellAttrPtr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellAttrPtr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellAttrPtr,
diff --git a/sip/cpp/sip_gridwxGridCellAutoWrapStringEditor.cpp b/sip/cpp/sip_gridwxGridCellAutoWrapStringEditor.cpp
index 5374e200..3525a74d 100644
--- sip/cpp/sip_gridwxGridCellAutoWrapStringEditor.cpp
+++ sip/cpp/sip_gridwxGridCellAutoWrapStringEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -415,7 +415,7 @@ void sipwxGridCellAutoWrapStringEditor::SetValidator(const  ::wxValidator& valid
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellAutoWrapStringEditor_BeginEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellAutoWrapStringEditor_BeginEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -457,7 +457,7 @@ static PyObject *meth_wxGridCellAutoWrapStringEditor_BeginEdit(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_Clone, "Clone(self) -> GridCellEditor");
+PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_Clone, "Clone(self) -> Optional[GridCellEditor]");
 
 extern "C" {static PyObject *meth_wxGridCellAutoWrapStringEditor_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellAutoWrapStringEditor_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -491,7 +491,7 @@ static PyObject *meth_wxGridCellAutoWrapStringEditor_Clone(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_Create, "Create(self, parent: Window, id: int, evtHandler: EvtHandler)");
+PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_Create, "Create(self, parent: Optional[Window], id: int, evtHandler: Optional[EvtHandler])");
 
 extern "C" {static PyObject *meth_wxGridCellAutoWrapStringEditor_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellAutoWrapStringEditor_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -533,7 +533,7 @@ static PyObject *meth_wxGridCellAutoWrapStringEditor_Create(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellAutoWrapStringEditor_ApplyEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellAutoWrapStringEditor_ApplyEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -608,7 +608,7 @@ static PyObject *meth_wxGridCellAutoWrapStringEditor_Reset(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxGridCellAutoWrapStringEditor_GetValue, "GetValue(self) -> Any");
 
 extern "C" {static PyObject *meth_wxGridCellAutoWrapStringEditor_GetValue(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellAutoWrapStringEditor_GetValue(PyObject *sipSelf, PyObject *sipArgs)
@@ -812,7 +812,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellAutoWrapStringEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellAutoWrapStringEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellAutoWrapStringEditor,
diff --git a/sip/cpp/sip_gridwxGridCellAutoWrapStringRenderer.cpp b/sip/cpp/sip_gridwxGridCellAutoWrapStringRenderer.cpp
index fc85f146..2bc3335f 100644
--- sip/cpp/sip_gridwxGridCellAutoWrapStringRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellAutoWrapStringRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -149,7 +149,7 @@ void sipwxGridCellAutoWrapStringRenderer::Draw( ::wxGrid& grid, ::wxGridCellAttr
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellAutoWrapStringRenderer_Clone, "Clone(self) -> GridCellRenderer");
+PyDoc_STRVAR(doc_wxGridCellAutoWrapStringRenderer_Clone, "Clone(self) -> Optional[GridCellRenderer]");
 
 extern "C" {static PyObject *meth_wxGridCellAutoWrapStringRenderer_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellAutoWrapStringRenderer_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -389,7 +389,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellAutoWrapStringRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellAutoWrapStringRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellAutoWrapStringRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellBoolEditor.cpp b/sip/cpp/sip_gridwxGridCellBoolEditor.cpp
index 25786145..0d876c6c 100644
--- sip/cpp/sip_gridwxGridCellBoolEditor.cpp
+++ sip/cpp/sip_gridwxGridCellBoolEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -465,7 +465,7 @@ static PyObject *meth_wxGridCellBoolEditor_UseStringValues(PyObject *, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellBoolEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellBoolEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellBoolEditor_BeginEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellBoolEditor_BeginEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -507,7 +507,7 @@ static PyObject *meth_wxGridCellBoolEditor_BeginEdit(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellBoolEditor_Clone, "Clone(self) -> GridCellEditor");
+PyDoc_STRVAR(doc_wxGridCellBoolEditor_Clone, "Clone(self) -> Optional[GridCellEditor]");
 
 extern "C" {static PyObject *meth_wxGridCellBoolEditor_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellBoolEditor_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -541,7 +541,7 @@ static PyObject *meth_wxGridCellBoolEditor_Clone(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellBoolEditor_Create, "Create(self, parent: Window, id: int, evtHandler: EvtHandler)");
+PyDoc_STRVAR(doc_wxGridCellBoolEditor_Create, "Create(self, parent: Optional[Window], id: int, evtHandler: Optional[EvtHandler])");
 
 extern "C" {static PyObject *meth_wxGridCellBoolEditor_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellBoolEditor_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -583,7 +583,7 @@ static PyObject *meth_wxGridCellBoolEditor_Create(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellBoolEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellBoolEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellBoolEditor_ApplyEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellBoolEditor_ApplyEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -658,7 +658,7 @@ static PyObject *meth_wxGridCellBoolEditor_Reset(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellBoolEditor_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxGridCellBoolEditor_GetValue, "GetValue(self) -> Any");
 
 extern "C" {static PyObject *meth_wxGridCellBoolEditor_GetValue(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellBoolEditor_GetValue(PyObject *sipSelf, PyObject *sipArgs)
@@ -864,7 +864,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellBoolEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellBoolEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellBoolEditor,
diff --git a/sip/cpp/sip_gridwxGridCellBoolRenderer.cpp b/sip/cpp/sip_gridwxGridCellBoolRenderer.cpp
index 0c80ed48..3680b6ee 100644
--- sip/cpp/sip_gridwxGridCellBoolRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellBoolRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -149,7 +149,7 @@ int sipwxGridCellBoolRenderer::GetBestWidth( ::wxGrid& grid, ::wxGridCellAttr& a
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellBoolRenderer_Clone, "Clone(self) -> GridCellRenderer");
+PyDoc_STRVAR(doc_wxGridCellBoolRenderer_Clone, "Clone(self) -> Optional[GridCellRenderer]");
 
 extern "C" {static PyObject *meth_wxGridCellBoolRenderer_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellBoolRenderer_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -389,7 +389,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellBoolRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellBoolRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellBoolRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellChoiceEditor.cpp b/sip/cpp/sip_gridwxGridCellChoiceEditor.cpp
index a7f88e61..17c0a2f7 100644
--- sip/cpp/sip_gridwxGridCellChoiceEditor.cpp
+++ sip/cpp/sip_gridwxGridCellChoiceEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -437,7 +437,7 @@ static PyObject *meth_wxGridCellChoiceEditor_SetParameters(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellChoiceEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellChoiceEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellChoiceEditor_BeginEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellChoiceEditor_BeginEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -479,7 +479,7 @@ static PyObject *meth_wxGridCellChoiceEditor_BeginEdit(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellChoiceEditor_Clone, "Clone(self) -> GridCellEditor");
+PyDoc_STRVAR(doc_wxGridCellChoiceEditor_Clone, "Clone(self) -> Optional[GridCellEditor]");
 
 extern "C" {static PyObject *meth_wxGridCellChoiceEditor_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellChoiceEditor_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -513,7 +513,7 @@ static PyObject *meth_wxGridCellChoiceEditor_Clone(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellChoiceEditor_Create, "Create(self, parent: Window, id: int, evtHandler: EvtHandler)");
+PyDoc_STRVAR(doc_wxGridCellChoiceEditor_Create, "Create(self, parent: Optional[Window], id: int, evtHandler: Optional[EvtHandler])");
 
 extern "C" {static PyObject *meth_wxGridCellChoiceEditor_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellChoiceEditor_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -555,7 +555,7 @@ static PyObject *meth_wxGridCellChoiceEditor_Create(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellChoiceEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellChoiceEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellChoiceEditor_ApplyEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellChoiceEditor_ApplyEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -630,7 +630,7 @@ static PyObject *meth_wxGridCellChoiceEditor_Reset(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellChoiceEditor_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxGridCellChoiceEditor_GetValue, "GetValue(self) -> Any");
 
 extern "C" {static PyObject *meth_wxGridCellChoiceEditor_GetValue(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellChoiceEditor_GetValue(PyObject *sipSelf, PyObject *sipArgs)
@@ -839,7 +839,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellChoiceEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellChoiceEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellChoiceEditor,
diff --git a/sip/cpp/sip_gridwxGridCellCoords.cpp b/sip/cpp/sip_gridwxGridCellCoords.cpp
index 14be5976..d9493e8b 100644
--- sip/cpp/sip_gridwxGridCellCoords.cpp
+++ sip/cpp/sip_gridwxGridCellCoords.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -499,7 +499,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellCoords = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellCoords,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellCoords,
diff --git a/sip/cpp/sip_gridwxGridCellCoordsArray.cpp b/sip/cpp/sip_gridwxGridCellCoordsArray.cpp
index 9a5ecd34..6adf3613 100644
--- sip/cpp/sip_gridwxGridCellCoordsArray.cpp
+++ sip/cpp/sip_gridwxGridCellCoordsArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -290,7 +290,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellCoordsArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellCoordsArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellCoordsArray,
diff --git a/sip/cpp/sip_gridwxGridCellDateEditor.cpp b/sip/cpp/sip_gridwxGridCellDateEditor.cpp
index 1af4e420..4bb50482 100644
--- sip/cpp/sip_gridwxGridCellDateEditor.cpp
+++ sip/cpp/sip_gridwxGridCellDateEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -376,7 +376,7 @@ void sipwxGridCellDateEditor::DoActivate(int row,int col, ::wxGrid*grid)
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellDateEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellDateEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellDateEditor_BeginEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellDateEditor_BeginEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -418,7 +418,7 @@ static PyObject *meth_wxGridCellDateEditor_BeginEdit(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellDateEditor_Clone, "Clone(self) -> GridCellEditor");
+PyDoc_STRVAR(doc_wxGridCellDateEditor_Clone, "Clone(self) -> Optional[GridCellEditor]");
 
 extern "C" {static PyObject *meth_wxGridCellDateEditor_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellDateEditor_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -452,7 +452,7 @@ static PyObject *meth_wxGridCellDateEditor_Clone(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellDateEditor_Create, "Create(self, parent: Window, id: int, evtHandler: EvtHandler)");
+PyDoc_STRVAR(doc_wxGridCellDateEditor_Create, "Create(self, parent: Optional[Window], id: int, evtHandler: Optional[EvtHandler])");
 
 extern "C" {static PyObject *meth_wxGridCellDateEditor_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellDateEditor_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -494,7 +494,7 @@ static PyObject *meth_wxGridCellDateEditor_Create(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellDateEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellDateEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellDateEditor_ApplyEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellDateEditor_ApplyEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -569,7 +569,7 @@ static PyObject *meth_wxGridCellDateEditor_Reset(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellDateEditor_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxGridCellDateEditor_GetValue, "GetValue(self) -> Any");
 
 extern "C" {static PyObject *meth_wxGridCellDateEditor_GetValue(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellDateEditor_GetValue(PyObject *sipSelf, PyObject *sipArgs)
@@ -782,7 +782,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellDateEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellDateEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellDateEditor,
diff --git a/sip/cpp/sip_gridwxGridCellDateRenderer.cpp b/sip/cpp/sip_gridwxGridCellDateRenderer.cpp
index 546eabc7..1b583657 100644
--- sip/cpp/sip_gridwxGridCellDateRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellDateRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -211,7 +211,7 @@ static PyObject *meth_wxGridCellDateRenderer_SetParameters(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellDateRenderer_Clone, "Clone(self) -> GridCellRenderer");
+PyDoc_STRVAR(doc_wxGridCellDateRenderer_Clone, "Clone(self) -> Optional[GridCellRenderer]");
 
 extern "C" {static PyObject *meth_wxGridCellDateRenderer_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellDateRenderer_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -461,7 +461,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellDateRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellDateRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellDateRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellDateTimeRenderer.cpp b/sip/cpp/sip_gridwxGridCellDateTimeRenderer.cpp
index 46460383..a6c3bb26 100644
--- sip/cpp/sip_gridwxGridCellDateTimeRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellDateTimeRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -168,7 +168,7 @@ void sipwxGridCellDateTimeRenderer::SetParameters(const  ::wxString& params)
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellDateTimeRenderer_Clone, "Clone(self) -> GridCellRenderer");
+PyDoc_STRVAR(doc_wxGridCellDateTimeRenderer_Clone, "Clone(self) -> Optional[GridCellRenderer]");
 
 extern "C" {static PyObject *meth_wxGridCellDateTimeRenderer_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellDateTimeRenderer_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -422,7 +422,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellDateTimeRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellDateTimeRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellDateTimeRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellEditor.cpp b/sip/cpp/sip_gridwxGridCellEditor.cpp
index b248cc35..84b577d4 100644
--- sip/cpp/sip_gridwxGridCellEditor.cpp
+++ sip/cpp/sip_gridwxGridCellEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1433,7 +1433,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellEditor = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxGridCellEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellEditor,
diff --git a/sip/cpp/sip_gridwxGridCellEditorPtr.cpp b/sip/cpp/sip_gridwxGridCellEditorPtr.cpp
index e560c6f4..f87f45dd 100644
--- sip/cpp/sip_gridwxGridCellEditorPtr.cpp
+++ sip/cpp/sip_gridwxGridCellEditorPtr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -248,7 +248,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellEditorPtr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellEditorPtr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellEditorPtr,
diff --git a/sip/cpp/sip_gridwxGridCellEnumEditor.cpp b/sip/cpp/sip_gridwxGridCellEnumEditor.cpp
index 76123e8f..cfa9fc83 100644
--- sip/cpp/sip_gridwxGridCellEnumEditor.cpp
+++ sip/cpp/sip_gridwxGridCellEnumEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -395,7 +395,7 @@ void sipwxGridCellEnumEditor::SetParameters(const  ::wxString& params)
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellEnumEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellEnumEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellEnumEditor_BeginEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellEnumEditor_BeginEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -437,7 +437,7 @@ static PyObject *meth_wxGridCellEnumEditor_BeginEdit(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellEnumEditor_Clone, "Clone(self) -> GridCellEditor");
+PyDoc_STRVAR(doc_wxGridCellEnumEditor_Clone, "Clone(self) -> Optional[GridCellEditor]");
 
 extern "C" {static PyObject *meth_wxGridCellEnumEditor_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellEnumEditor_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -471,7 +471,7 @@ static PyObject *meth_wxGridCellEnumEditor_Clone(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellEnumEditor_Create, "Create(self, parent: Window, id: int, evtHandler: EvtHandler)");
+PyDoc_STRVAR(doc_wxGridCellEnumEditor_Create, "Create(self, parent: Optional[Window], id: int, evtHandler: Optional[EvtHandler])");
 
 extern "C" {static PyObject *meth_wxGridCellEnumEditor_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellEnumEditor_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -513,7 +513,7 @@ static PyObject *meth_wxGridCellEnumEditor_Create(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellEnumEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellEnumEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellEnumEditor_ApplyEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellEnumEditor_ApplyEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -588,7 +588,7 @@ static PyObject *meth_wxGridCellEnumEditor_Reset(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellEnumEditor_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxGridCellEnumEditor_GetValue, "GetValue(self) -> Any");
 
 extern "C" {static PyObject *meth_wxGridCellEnumEditor_GetValue(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellEnumEditor_GetValue(PyObject *sipSelf, PyObject *sipArgs)
@@ -802,7 +802,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellEnumEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellEnumEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellEnumEditor,
diff --git a/sip/cpp/sip_gridwxGridCellEnumRenderer.cpp b/sip/cpp/sip_gridwxGridCellEnumRenderer.cpp
index c59f56d1..3e3f5ed5 100644
--- sip/cpp/sip_gridwxGridCellEnumRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellEnumRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -210,7 +210,7 @@ static PyObject *meth_wxGridCellEnumRenderer_SetParameters(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellEnumRenderer_Clone, "Clone(self) -> GridCellRenderer");
+PyDoc_STRVAR(doc_wxGridCellEnumRenderer_Clone, "Clone(self) -> Optional[GridCellRenderer]");
 
 extern "C" {static PyObject *meth_wxGridCellEnumRenderer_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellEnumRenderer_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -461,7 +461,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellEnumRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellEnumRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellEnumRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellFloatEditor.cpp b/sip/cpp/sip_gridwxGridCellFloatEditor.cpp
index c0008f62..56d049a9 100644
--- sip/cpp/sip_gridwxGridCellFloatEditor.cpp
+++ sip/cpp/sip_gridwxGridCellFloatEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -458,7 +458,7 @@ static PyObject *meth_wxGridCellFloatEditor_SetParameters(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellFloatEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellFloatEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellFloatEditor_BeginEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellFloatEditor_BeginEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -500,7 +500,7 @@ static PyObject *meth_wxGridCellFloatEditor_BeginEdit(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellFloatEditor_Clone, "Clone(self) -> GridCellEditor");
+PyDoc_STRVAR(doc_wxGridCellFloatEditor_Clone, "Clone(self) -> Optional[GridCellEditor]");
 
 extern "C" {static PyObject *meth_wxGridCellFloatEditor_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellFloatEditor_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -534,7 +534,7 @@ static PyObject *meth_wxGridCellFloatEditor_Clone(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellFloatEditor_Create, "Create(self, parent: Window, id: int, evtHandler: EvtHandler)");
+PyDoc_STRVAR(doc_wxGridCellFloatEditor_Create, "Create(self, parent: Optional[Window], id: int, evtHandler: Optional[EvtHandler])");
 
 extern "C" {static PyObject *meth_wxGridCellFloatEditor_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellFloatEditor_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -576,7 +576,7 @@ static PyObject *meth_wxGridCellFloatEditor_Create(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellFloatEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellFloatEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellFloatEditor_ApplyEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellFloatEditor_ApplyEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -651,7 +651,7 @@ static PyObject *meth_wxGridCellFloatEditor_Reset(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellFloatEditor_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxGridCellFloatEditor_GetValue, "GetValue(self) -> Any");
 
 extern "C" {static PyObject *meth_wxGridCellFloatEditor_GetValue(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellFloatEditor_GetValue(PyObject *sipSelf, PyObject *sipArgs)
@@ -866,7 +866,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellFloatEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellFloatEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellFloatEditor,
diff --git a/sip/cpp/sip_gridwxGridCellFloatRenderer.cpp b/sip/cpp/sip_gridwxGridCellFloatRenderer.cpp
index 2aee5adb..44610a0e 100644
--- sip/cpp/sip_gridwxGridCellFloatRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellFloatRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -433,7 +433,7 @@ static PyObject *meth_wxGridCellFloatRenderer_SetWidth(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellFloatRenderer_Clone, "Clone(self) -> GridCellRenderer");
+PyDoc_STRVAR(doc_wxGridCellFloatRenderer_Clone, "Clone(self) -> Optional[GridCellRenderer]");
 
 extern "C" {static PyObject *meth_wxGridCellFloatRenderer_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellFloatRenderer_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -696,7 +696,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellFloatRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellFloatRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellFloatRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellNumberEditor.cpp b/sip/cpp/sip_gridwxGridCellNumberEditor.cpp
index 22f7aba1..79c06465 100644
--- sip/cpp/sip_gridwxGridCellNumberEditor.cpp
+++ sip/cpp/sip_gridwxGridCellNumberEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -457,7 +457,7 @@ static PyObject *meth_wxGridCellNumberEditor_SetParameters(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellNumberEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellNumberEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellNumberEditor_BeginEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellNumberEditor_BeginEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -499,7 +499,7 @@ static PyObject *meth_wxGridCellNumberEditor_BeginEdit(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellNumberEditor_Clone, "Clone(self) -> GridCellEditor");
+PyDoc_STRVAR(doc_wxGridCellNumberEditor_Clone, "Clone(self) -> Optional[GridCellEditor]");
 
 extern "C" {static PyObject *meth_wxGridCellNumberEditor_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellNumberEditor_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -533,7 +533,7 @@ static PyObject *meth_wxGridCellNumberEditor_Clone(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellNumberEditor_Create, "Create(self, parent: Window, id: int, evtHandler: EvtHandler)");
+PyDoc_STRVAR(doc_wxGridCellNumberEditor_Create, "Create(self, parent: Optional[Window], id: int, evtHandler: Optional[EvtHandler])");
 
 extern "C" {static PyObject *meth_wxGridCellNumberEditor_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellNumberEditor_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -575,7 +575,7 @@ static PyObject *meth_wxGridCellNumberEditor_Create(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellNumberEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellNumberEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellNumberEditor_ApplyEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellNumberEditor_ApplyEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -650,7 +650,7 @@ static PyObject *meth_wxGridCellNumberEditor_Reset(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellNumberEditor_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxGridCellNumberEditor_GetValue, "GetValue(self) -> Any");
 
 extern "C" {static PyObject *meth_wxGridCellNumberEditor_GetValue(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellNumberEditor_GetValue(PyObject *sipSelf, PyObject *sipArgs)
@@ -863,7 +863,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellNumberEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellNumberEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellNumberEditor,
diff --git a/sip/cpp/sip_gridwxGridCellNumberRenderer.cpp b/sip/cpp/sip_gridwxGridCellNumberRenderer.cpp
index 9b3b5a1f..de539c89 100644
--- sip/cpp/sip_gridwxGridCellNumberRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellNumberRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -149,7 +149,7 @@ void sipwxGridCellNumberRenderer::Draw( ::wxGrid& grid, ::wxGridCellAttr& attr,
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellNumberRenderer_Clone, "Clone(self) -> GridCellRenderer");
+PyDoc_STRVAR(doc_wxGridCellNumberRenderer_Clone, "Clone(self) -> Optional[GridCellRenderer]");
 
 extern "C" {static PyObject *meth_wxGridCellNumberRenderer_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellNumberRenderer_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -389,7 +389,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellNumberRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellNumberRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellNumberRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellRenderer.cpp b/sip/cpp/sip_gridwxGridCellRenderer.cpp
index 7647541c..f940e421 100644
--- sip/cpp/sip_gridwxGridCellRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -553,7 +553,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxGridCellRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellRendererPtr.cpp b/sip/cpp/sip_gridwxGridCellRendererPtr.cpp
index 4365fea4..446f2ea2 100644
--- sip/cpp/sip_gridwxGridCellRendererPtr.cpp
+++ sip/cpp/sip_gridwxGridCellRendererPtr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -248,7 +248,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellRendererPtr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellRendererPtr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellRendererPtr,
diff --git a/sip/cpp/sip_gridwxGridCellStringRenderer.cpp b/sip/cpp/sip_gridwxGridCellStringRenderer.cpp
index 041afe61..c3d9a728 100644
--- sip/cpp/sip_gridwxGridCellStringRenderer.cpp
+++ sip/cpp/sip_gridwxGridCellStringRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -149,7 +149,7 @@ int sipwxGridCellStringRenderer::GetBestWidth( ::wxGrid& grid, ::wxGridCellAttr&
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellStringRenderer_Clone, "Clone(self) -> GridCellRenderer");
+PyDoc_STRVAR(doc_wxGridCellStringRenderer_Clone, "Clone(self) -> Optional[GridCellRenderer]");
 
 extern "C" {static PyObject *meth_wxGridCellStringRenderer_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellStringRenderer_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -390,7 +390,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellStringRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellStringRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellStringRenderer,
diff --git a/sip/cpp/sip_gridwxGridCellTextEditor.cpp b/sip/cpp/sip_gridwxGridCellTextEditor.cpp
index 8003ea67..74733e47 100644
--- sip/cpp/sip_gridwxGridCellTextEditor.cpp
+++ sip/cpp/sip_gridwxGridCellTextEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -498,7 +498,7 @@ static PyObject *meth_wxGridCellTextEditor_SetValidator(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellTextEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellTextEditor_BeginEdit, "BeginEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellTextEditor_BeginEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellTextEditor_BeginEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -540,7 +540,7 @@ static PyObject *meth_wxGridCellTextEditor_BeginEdit(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellTextEditor_Clone, "Clone(self) -> GridCellEditor");
+PyDoc_STRVAR(doc_wxGridCellTextEditor_Clone, "Clone(self) -> Optional[GridCellEditor]");
 
 extern "C" {static PyObject *meth_wxGridCellTextEditor_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellTextEditor_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -574,7 +574,7 @@ static PyObject *meth_wxGridCellTextEditor_Clone(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellTextEditor_Create, "Create(self, parent: Window, id: int, evtHandler: EvtHandler)");
+PyDoc_STRVAR(doc_wxGridCellTextEditor_Create, "Create(self, parent: Optional[Window], id: int, evtHandler: Optional[EvtHandler])");
 
 extern "C" {static PyObject *meth_wxGridCellTextEditor_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellTextEditor_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -616,7 +616,7 @@ static PyObject *meth_wxGridCellTextEditor_Create(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellTextEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Grid)");
+PyDoc_STRVAR(doc_wxGridCellTextEditor_ApplyEdit, "ApplyEdit(self, row: int, col: int, grid: Optional[Grid])");
 
 extern "C" {static PyObject *meth_wxGridCellTextEditor_ApplyEdit(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellTextEditor_ApplyEdit(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -691,7 +691,7 @@ static PyObject *meth_wxGridCellTextEditor_Reset(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxGridCellTextEditor_GetValue, "GetValue(self) -> object");
+PyDoc_STRVAR(doc_wxGridCellTextEditor_GetValue, "GetValue(self) -> Any");
 
 extern "C" {static PyObject *meth_wxGridCellTextEditor_GetValue(PyObject *, PyObject *);}
 static PyObject *meth_wxGridCellTextEditor_GetValue(PyObject *sipSelf, PyObject *sipArgs)
@@ -903,7 +903,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCellTextEditor = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCellTextEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCellTextEditor,
diff --git a/sip/cpp/sip_gridwxGridColumnHeaderRenderer.cpp b/sip/cpp/sip_gridwxGridColumnHeaderRenderer.cpp
index 3f850e7d..17b05f94 100644
--- sip/cpp/sip_gridwxGridColumnHeaderRenderer.cpp
+++ sip/cpp/sip_gridwxGridColumnHeaderRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -183,7 +183,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridColumnHeaderRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxGridColumnHeaderRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridColumnHeaderRenderer,
diff --git a/sip/cpp/sip_gridwxGridColumnHeaderRendererDefault.cpp b/sip/cpp/sip_gridwxGridColumnHeaderRendererDefault.cpp
index 0a492c55..a8550677 100644
--- sip/cpp/sip_gridwxGridColumnHeaderRendererDefault.cpp
+++ sip/cpp/sip_gridwxGridColumnHeaderRendererDefault.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -259,7 +259,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridColumnHeaderRendererDefault = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridColumnHeaderRendererDefault,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridColumnHeaderRendererDefault,
diff --git a/sip/cpp/sip_gridwxGridCornerHeaderRenderer.cpp b/sip/cpp/sip_gridwxGridCornerHeaderRenderer.cpp
index 1cc1907c..690fad07 100644
--- sip/cpp/sip_gridwxGridCornerHeaderRenderer.cpp
+++ sip/cpp/sip_gridwxGridCornerHeaderRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -183,7 +183,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCornerHeaderRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxGridCornerHeaderRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCornerHeaderRenderer,
diff --git a/sip/cpp/sip_gridwxGridCornerHeaderRendererDefault.cpp b/sip/cpp/sip_gridwxGridCornerHeaderRendererDefault.cpp
index ca45985a..9dce2f22 100644
--- sip/cpp/sip_gridwxGridCornerHeaderRendererDefault.cpp
+++ sip/cpp/sip_gridwxGridCornerHeaderRendererDefault.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -259,7 +259,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridCornerHeaderRendererDefault = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridCornerHeaderRendererDefault,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridCornerHeaderRendererDefault,
diff --git a/sip/cpp/sip_gridwxGridEditorCreatedEvent.cpp b/sip/cpp/sip_gridwxGridEditorCreatedEvent.cpp
index b023ae76..e77bdd22 100644
--- sip/cpp/sip_gridwxGridEditorCreatedEvent.cpp
+++ sip/cpp/sip_gridwxGridEditorCreatedEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -390,7 +390,7 @@ static PyObject *meth_wxGridEditorCreatedEvent_SetWindow(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxGridEditorCreatedEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxGridEditorCreatedEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxGridEditorCreatedEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridEditorCreatedEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -588,7 +588,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridEditorCreatedEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGridEditorCreatedEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridEditorCreatedEvent,
diff --git a/sip/cpp/sip_gridwxGridEvent.cpp b/sip/cpp/sip_gridwxGridEvent.cpp
index c3262db1..31373302 100644
--- sip/cpp/sip_gridwxGridEvent.cpp
+++ sip/cpp/sip_gridwxGridEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -375,7 +375,7 @@ static PyObject *meth_wxGridEvent_ShiftDown(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxGridEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxGridEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxGridEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -579,7 +579,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGridEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridEvent,
diff --git a/sip/cpp/sip_gridwxGridFitMode.cpp b/sip/cpp/sip_gridwxGridFitMode.cpp
index e6e0afb4..740ae171 100644
--- sip/cpp/sip_gridwxGridFitMode.cpp
+++ sip/cpp/sip_gridwxGridFitMode.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -369,7 +369,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridFitMode = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridFitMode,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridFitMode,
diff --git a/sip/cpp/sip_gridwxGridHeaderLabelsRenderer.cpp b/sip/cpp/sip_gridwxGridHeaderLabelsRenderer.cpp
index 6d8b4ff8..039db7b2 100644
--- sip/cpp/sip_gridwxGridHeaderLabelsRenderer.cpp
+++ sip/cpp/sip_gridwxGridHeaderLabelsRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -277,7 +277,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridHeaderLabelsRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxGridHeaderLabelsRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridHeaderLabelsRenderer,
diff --git a/sip/cpp/sip_gridwxGridRangeSelectEvent.cpp b/sip/cpp/sip_gridwxGridRangeSelectEvent.cpp
index 2c17fe13..6146da55 100644
--- sip/cpp/sip_gridwxGridRangeSelectEvent.cpp
+++ sip/cpp/sip_gridwxGridRangeSelectEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -479,7 +479,7 @@ static PyObject *meth_wxGridRangeSelectEvent_ShiftDown(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxGridRangeSelectEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxGridRangeSelectEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxGridRangeSelectEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridRangeSelectEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -689,7 +689,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridRangeSelectEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGridRangeSelectEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridRangeSelectEvent,
diff --git a/sip/cpp/sip_gridwxGridRowHeaderRenderer.cpp b/sip/cpp/sip_gridwxGridRowHeaderRenderer.cpp
index 73fae2f4..42df6e86 100644
--- sip/cpp/sip_gridwxGridRowHeaderRenderer.cpp
+++ sip/cpp/sip_gridwxGridRowHeaderRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -183,7 +183,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridRowHeaderRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxGridRowHeaderRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridRowHeaderRenderer,
diff --git a/sip/cpp/sip_gridwxGridRowHeaderRendererDefault.cpp b/sip/cpp/sip_gridwxGridRowHeaderRendererDefault.cpp
index 8dd3a883..4fe7a2fe 100644
--- sip/cpp/sip_gridwxGridRowHeaderRendererDefault.cpp
+++ sip/cpp/sip_gridwxGridRowHeaderRendererDefault.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -259,7 +259,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridRowHeaderRendererDefault = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridRowHeaderRendererDefault,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridRowHeaderRendererDefault,
diff --git a/sip/cpp/sip_gridwxGridSizeEvent.cpp b/sip/cpp/sip_gridwxGridSizeEvent.cpp
index f47a0271..85d90b6d 100644
--- sip/cpp/sip_gridwxGridSizeEvent.cpp
+++ sip/cpp/sip_gridwxGridSizeEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -304,7 +304,7 @@ static PyObject *meth_wxGridSizeEvent_ShiftDown(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxGridSizeEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxGridSizeEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxGridSizeEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxGridSizeEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -501,7 +501,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridSizeEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGridSizeEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridSizeEvent,
diff --git a/sip/cpp/sip_gridwxGridSizesInfo.cpp b/sip/cpp/sip_gridwxGridSizesInfo.cpp
index 23470995..2c1048a4 100644
--- sip/cpp/sip_gridwxGridSizesInfo.cpp
+++ sip/cpp/sip_gridwxGridSizesInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -217,7 +217,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridSizesInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridSizesInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridSizesInfo,
diff --git a/sip/cpp/sip_gridwxGridStringTable.cpp b/sip/cpp/sip_gridwxGridStringTable.cpp
index 171b5d59..0d4962b6 100644
--- sip/cpp/sip_gridwxGridStringTable.cpp
+++ sip/cpp/sip_gridwxGridStringTable.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1504,7 +1504,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridStringTable = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGridStringTable,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridStringTable,
diff --git a/sip/cpp/sip_gridwxGridTableBase.cpp b/sip/cpp/sip_gridwxGridTableBase.cpp
index 72d9adb1..be39a7b0 100644
--- sip/cpp/sip_gridwxGridTableBase.cpp
+++ sip/cpp/sip_gridwxGridTableBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2512,7 +2512,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridTableBase = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxGridTableBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridTableBase,
diff --git a/sip/cpp/sip_gridwxGridTableMessage.cpp b/sip/cpp/sip_gridwxGridTableMessage.cpp
index ee4eceef..76e304e3 100644
--- sip/cpp/sip_gridwxGridTableMessage.cpp
+++ sip/cpp/sip_gridwxGridTableMessage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -429,7 +429,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridTableMessage = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridTableMessage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridTableMessage,
diff --git a/sip/cpp/sip_gridwxGridUpdateLocker.cpp b/sip/cpp/sip_gridwxGridUpdateLocker.cpp
index eed6861c..b8046dcd 100644
--- sip/cpp/sip_gridwxGridUpdateLocker.cpp
+++ sip/cpp/sip_gridwxGridUpdateLocker.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -134,7 +134,7 @@ sipClassTypeDef sipTypeDef__grid_wxGridUpdateLocker = {
         SIP_TYPE_CLASS,
         sipNameNr_wxGridUpdateLocker,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_GridUpdateLocker,
diff --git a/sip/cpp/sip_html2cmodule.cpp b/sip/cpp/sip_html2cmodule.cpp
index 63916291..3d726d95 100644
--- sip/cpp/sip_html2cmodule.cpp
+++ sip/cpp/sip_html2cmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -686,7 +686,6 @@ PyMODINIT_FUNC PyInit__html2()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._html2",
diff --git a/sip/cpp/sip_html2wxWebView.cpp b/sip/cpp/sip_html2wxWebView.cpp
index 7fd992a9..2d5dcfce 100644
--- sip/cpp/sip_html2wxWebView.cpp
+++ sip/cpp/sip_html2wxWebView.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2855,7 +2855,7 @@ static PyObject *meth_wxWebView_AcceptsFocusFromKeyboard(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxWebView_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxWebView_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxWebView_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWebView_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2893,7 +2893,7 @@ static PyObject *meth_wxWebView_AddChild(PyObject *sipSelf, PyObject *sipArgs, P
 }
 
 
-PyDoc_STRVAR(doc_wxWebView_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxWebView_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxWebView_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxWebView_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3031,7 +3031,7 @@ static PyObject *meth_wxWebView_OnInternalIdle(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxWebView_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxWebView_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxWebView_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxWebView_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3218,7 +3218,7 @@ static PyObject *meth_wxWebView_SetValidator(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxWebView_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxWebView_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxWebView_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxWebView_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3567,7 +3567,7 @@ sipClassTypeDef sipTypeDef__html2_wxWebView = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWebView,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WebView,
diff --git a/sip/cpp/sip_html2wxWebViewArchiveHandler.cpp b/sip/cpp/sip_html2wxWebViewArchiveHandler.cpp
index f61fc89a..51b8ec45 100644
--- sip/cpp/sip_html2wxWebViewArchiveHandler.cpp
+++ sip/cpp/sip_html2wxWebViewArchiveHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -292,7 +292,7 @@ sipClassTypeDef sipTypeDef__html2_wxWebViewArchiveHandler = {
         SIP_TYPE_CLASS,
         sipNameNr_wxWebViewArchiveHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WebViewArchiveHandler,
diff --git a/sip/cpp/sip_html2wxWebViewEvent.cpp b/sip/cpp/sip_html2wxWebViewEvent.cpp
index 57367fea..c3dc92b4 100644
--- sip/cpp/sip_html2wxWebViewEvent.cpp
+++ sip/cpp/sip_html2wxWebViewEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -268,7 +268,7 @@ static PyObject *meth_wxWebViewEvent_IsError(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxWebViewEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxWebViewEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxWebViewEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxWebViewEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -471,7 +471,7 @@ sipClassTypeDef sipTypeDef__html2_wxWebViewEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWebViewEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WebViewEvent,
diff --git a/sip/cpp/sip_html2wxWebViewFSHandler.cpp b/sip/cpp/sip_html2wxWebViewFSHandler.cpp
index 9d87ee17..3f695ebf 100644
--- sip/cpp/sip_html2wxWebViewFSHandler.cpp
+++ sip/cpp/sip_html2wxWebViewFSHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -293,7 +293,7 @@ sipClassTypeDef sipTypeDef__html2_wxWebViewFSHandler = {
         SIP_TYPE_CLASS,
         sipNameNr_wxWebViewFSHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WebViewFSHandler,
diff --git a/sip/cpp/sip_html2wxWebViewFactory.cpp b/sip/cpp/sip_html2wxWebViewFactory.cpp
index f3800c56..0f75f942 100644
--- sip/cpp/sip_html2wxWebViewFactory.cpp
+++ sip/cpp/sip_html2wxWebViewFactory.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -400,7 +400,7 @@ sipClassTypeDef sipTypeDef__html2_wxWebViewFactory = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxWebViewFactory,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WebViewFactory,
diff --git a/sip/cpp/sip_html2wxWebViewHandler.cpp b/sip/cpp/sip_html2wxWebViewHandler.cpp
index 3770f102..75ec2435 100644
--- sip/cpp/sip_html2wxWebViewHandler.cpp
+++ sip/cpp/sip_html2wxWebViewHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -382,7 +382,7 @@ sipClassTypeDef sipTypeDef__html2_wxWebViewHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxWebViewHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WebViewHandler,
diff --git a/sip/cpp/sip_html2wxWebViewHistoryItem.cpp b/sip/cpp/sip_html2wxWebViewHistoryItem.cpp
index c806ec56..f534ecab 100644
--- sip/cpp/sip_html2wxWebViewHistoryItem.cpp
+++ sip/cpp/sip_html2wxWebViewHistoryItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -191,7 +191,7 @@ sipClassTypeDef sipTypeDef__html2_wxWebViewHistoryItem = {
         SIP_TYPE_CLASS,
         sipNameNr_wxWebViewHistoryItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_WebViewHistoryItem,
diff --git a/sip/cpp/sip_htmlcmodule.cpp b/sip/cpp/sip_htmlcmodule.cpp
index 6790257f..84fb66f8 100644
--- sip/cpp/sip_htmlcmodule.cpp
+++ sip/cpp/sip_htmlcmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1809,7 +1809,6 @@ PyMODINIT_FUNC PyInit__html()
         {sipName_HtmlWinParser_AddTagHandler, SIP_MLMETH_CAST(func_HtmlWinParser_AddTagHandler), METH_VARARGS|METH_KEYWORDS, doc_HtmlWinParser_AddTagHandler},
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._html",
diff --git a/sip/cpp/sip_htmlwxHtmlBookRecArray.cpp b/sip/cpp/sip_htmlwxHtmlBookRecArray.cpp
index da714d28..08f6f1b6 100644
--- sip/cpp/sip_htmlwxHtmlBookRecArray.cpp
+++ sip/cpp/sip_htmlwxHtmlBookRecArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlBookRecArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlBookRecArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlBookRecArray,
diff --git a/sip/cpp/sip_htmlwxHtmlBookRecord.cpp b/sip/cpp/sip_htmlwxHtmlBookRecord.cpp
index 729174e0..c1f02fad 100644
--- sip/cpp/sip_htmlwxHtmlBookRecord.cpp
+++ sip/cpp/sip_htmlwxHtmlBookRecord.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -539,7 +539,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlBookRecord = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlBookRecord,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlBookRecord,
diff --git a/sip/cpp/sip_htmlwxHtmlCell.cpp b/sip/cpp/sip_htmlwxHtmlCell.cpp
index 7ff341a7..512a7ef0 100644
--- sip/cpp/sip_htmlwxHtmlCell.cpp
+++ sip/cpp/sip_htmlwxHtmlCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1446,7 +1446,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlCell,
diff --git a/sip/cpp/sip_htmlwxHtmlCellEvent.cpp b/sip/cpp/sip_htmlwxHtmlCellEvent.cpp
index c75161c3..6eac709a 100644
--- sip/cpp/sip_htmlwxHtmlCellEvent.cpp
+++ sip/cpp/sip_htmlwxHtmlCellEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -271,7 +271,7 @@ static PyObject *meth_wxHtmlCellEvent_SetLinkClicked(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlCellEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxHtmlCellEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxHtmlCellEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlCellEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -444,7 +444,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlCellEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlCellEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlCellEvent,
diff --git a/sip/cpp/sip_htmlwxHtmlColourCell.cpp b/sip/cpp/sip_htmlwxHtmlColourCell.cpp
index 697fc1f9..794b10cb 100644
--- sip/cpp/sip_htmlwxHtmlColourCell.cpp
+++ sip/cpp/sip_htmlwxHtmlColourCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -370,7 +370,7 @@ static PyObject *meth_wxHtmlColourCell_DrawInvisible(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlColourCell_GetMouseCursor, "GetMouseCursor(self, window: HtmlWindowInterface) -> Cursor");
+PyDoc_STRVAR(doc_wxHtmlColourCell_GetMouseCursor, "GetMouseCursor(self, window: Optional[HtmlWindowInterface]) -> Cursor");
 
 extern "C" {static PyObject *meth_wxHtmlColourCell_GetMouseCursor(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlColourCell_GetMouseCursor(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -557,7 +557,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlColourCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlColourCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlColourCell,
diff --git a/sip/cpp/sip_htmlwxHtmlContainerCell.cpp b/sip/cpp/sip_htmlwxHtmlContainerCell.cpp
index 74cacf02..0cf21173 100644
--- sip/cpp/sip_htmlwxHtmlContainerCell.cpp
+++ sip/cpp/sip_htmlwxHtmlContainerCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -995,7 +995,7 @@ static PyObject *meth_wxHtmlContainerCell_DrawInvisible(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlContainerCell_GetMouseCursor, "GetMouseCursor(self, window: HtmlWindowInterface) -> Cursor");
+PyDoc_STRVAR(doc_wxHtmlContainerCell_GetMouseCursor, "GetMouseCursor(self, window: Optional[HtmlWindowInterface]) -> Cursor");
 
 extern "C" {static PyObject *meth_wxHtmlContainerCell_GetMouseCursor(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlContainerCell_GetMouseCursor(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1199,7 +1199,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlContainerCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlContainerCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlContainerCell,
diff --git a/sip/cpp/sip_htmlwxHtmlDCRenderer.cpp b/sip/cpp/sip_htmlwxHtmlDCRenderer.cpp
index d59f8f5d..19cca62c 100644
--- sip/cpp/sip_htmlwxHtmlDCRenderer.cpp
+++ sip/cpp/sip_htmlwxHtmlDCRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -558,7 +558,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlDCRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlDCRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlDCRenderer,
diff --git a/sip/cpp/sip_htmlwxHtmlEasyPrinting.cpp b/sip/cpp/sip_htmlwxHtmlEasyPrinting.cpp
index cd757c8a..d3a25eb7 100644
--- sip/cpp/sip_htmlwxHtmlEasyPrinting.cpp
+++ sip/cpp/sip_htmlwxHtmlEasyPrinting.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -818,7 +818,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlEasyPrinting = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlEasyPrinting,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlEasyPrinting,
diff --git a/sip/cpp/sip_htmlwxHtmlFilter.cpp b/sip/cpp/sip_htmlwxHtmlFilter.cpp
index a08fb4d3..3dff0a86 100644
--- sip/cpp/sip_htmlwxHtmlFilter.cpp
+++ sip/cpp/sip_htmlwxHtmlFilter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -291,7 +291,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlFilter = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlFilter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlFilter,
diff --git a/sip/cpp/sip_htmlwxHtmlFontCell.cpp b/sip/cpp/sip_htmlwxHtmlFontCell.cpp
index cd110f72..eb65b685 100644
--- sip/cpp/sip_htmlwxHtmlFontCell.cpp
+++ sip/cpp/sip_htmlwxHtmlFontCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -370,7 +370,7 @@ static PyObject *meth_wxHtmlFontCell_DrawInvisible(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlFontCell_GetMouseCursor, "GetMouseCursor(self, window: HtmlWindowInterface) -> Cursor");
+PyDoc_STRVAR(doc_wxHtmlFontCell_GetMouseCursor, "GetMouseCursor(self, window: Optional[HtmlWindowInterface]) -> Cursor");
 
 extern "C" {static PyObject *meth_wxHtmlFontCell_GetMouseCursor(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlFontCell_GetMouseCursor(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -552,7 +552,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlFontCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlFontCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlFontCell,
diff --git a/sip/cpp/sip_htmlwxHtmlHelpController.cpp b/sip/cpp/sip_htmlwxHtmlHelpController.cpp
index 7085b725..45770fed 100644
--- sip/cpp/sip_htmlwxHtmlHelpController.cpp
+++ sip/cpp/sip_htmlwxHtmlHelpController.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1094,8 +1094,8 @@ static PyObject *meth_wxHtmlHelpController_GetDialog(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpController_Initialize, "Initialize(self, file: object, server: int) -> bool\n"
-"Initialize(self, file: object) -> bool");
+PyDoc_STRVAR(doc_wxHtmlHelpController_Initialize, "Initialize(self, file: Any, server: int) -> bool\n"
+"Initialize(self, file: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxHtmlHelpController_Initialize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpController_Initialize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1165,7 +1165,7 @@ static PyObject *meth_wxHtmlHelpController_Initialize(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpController_SetViewer, "SetViewer(self, viewer: object, flags: int = 0)");
+PyDoc_STRVAR(doc_wxHtmlHelpController_SetViewer, "SetViewer(self, viewer: Any, flags: int = 0)");
 
 extern "C" {static PyObject *meth_wxHtmlHelpController_SetViewer(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpController_SetViewer(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1207,7 +1207,7 @@ static PyObject *meth_wxHtmlHelpController_SetViewer(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpController_LoadFile, "LoadFile(self, file: object = \"\") -> bool");
+PyDoc_STRVAR(doc_wxHtmlHelpController_LoadFile, "LoadFile(self, file: Any = \"\") -> bool");
 
 extern "C" {static PyObject *meth_wxHtmlHelpController_LoadFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpController_LoadFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1250,7 +1250,7 @@ static PyObject *meth_wxHtmlHelpController_LoadFile(PyObject *sipSelf, PyObject
 
 
 PyDoc_STRVAR(doc_wxHtmlHelpController_DisplaySection, "DisplaySection(self, sectionNo: int) -> bool\n"
-"DisplaySection(self, section: object) -> bool");
+"DisplaySection(self, section: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxHtmlHelpController_DisplaySection(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpController_DisplaySection(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1355,7 +1355,7 @@ static PyObject *meth_wxHtmlHelpController_DisplayBlock(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpController_DisplayTextPopup, "DisplayTextPopup(self, text: object, pos: Point) -> bool");
+PyDoc_STRVAR(doc_wxHtmlHelpController_DisplayTextPopup, "DisplayTextPopup(self, text: Any, pos: Point) -> bool");
 
 extern "C" {static PyObject *meth_wxHtmlHelpController_DisplayTextPopup(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpController_DisplayTextPopup(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1506,7 +1506,7 @@ static PyObject *meth_wxHtmlHelpController_OnQuit(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpController_SetFrameParameters, "SetFrameParameters(self, titleFormat: object, size: Size, pos: Point = wxDefaultPosition, newFrameEachTime: bool = False)");
+PyDoc_STRVAR(doc_wxHtmlHelpController_SetFrameParameters, "SetFrameParameters(self, titleFormat: Any, size: Size, pos: Point = wxDefaultPosition, newFrameEachTime: bool = False)");
 
 extern "C" {static PyObject *meth_wxHtmlHelpController_SetFrameParameters(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpController_SetFrameParameters(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1820,7 +1820,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlHelpController = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlHelpController,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlHelpController,
diff --git a/sip/cpp/sip_htmlwxHtmlHelpData.cpp b/sip/cpp/sip_htmlwxHtmlHelpData.cpp
index 05ef130f..86999f23 100644
--- sip/cpp/sip_htmlwxHtmlHelpData.cpp
+++ sip/cpp/sip_htmlwxHtmlHelpData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -392,7 +392,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlHelpData = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlHelpData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlHelpData,
diff --git a/sip/cpp/sip_htmlwxHtmlHelpDataItem.cpp b/sip/cpp/sip_htmlwxHtmlHelpDataItem.cpp
index 5baf0c5a..8da96cd5 100644
--- sip/cpp/sip_htmlwxHtmlHelpDataItem.cpp
+++ sip/cpp/sip_htmlwxHtmlHelpDataItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -375,7 +375,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlHelpDataItem = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlHelpDataItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlHelpDataItem,
diff --git a/sip/cpp/sip_htmlwxHtmlHelpDataItems.cpp b/sip/cpp/sip_htmlwxHtmlHelpDataItems.cpp
index 41589136..272ccef8 100644
--- sip/cpp/sip_htmlwxHtmlHelpDataItems.cpp
+++ sip/cpp/sip_htmlwxHtmlHelpDataItems.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlHelpDataItems = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlHelpDataItems,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlHelpDataItems,
diff --git a/sip/cpp/sip_htmlwxHtmlHelpDialog.cpp b/sip/cpp/sip_htmlwxHtmlHelpDialog.cpp
index c8e7979a..5e1c60fe 100644
--- sip/cpp/sip_htmlwxHtmlHelpDialog.cpp
+++ sip/cpp/sip_htmlwxHtmlHelpDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1442,7 +1442,7 @@ static PyObject *meth_wxHtmlHelpDialog_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlHelpDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1480,7 +1480,7 @@ static PyObject *meth_wxHtmlHelpDialog_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlHelpDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1618,7 +1618,7 @@ static PyObject *meth_wxHtmlHelpDialog_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHtmlHelpDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHtmlHelpDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1805,7 +1805,7 @@ static PyObject *meth_wxHtmlHelpDialog_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHtmlHelpDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHtmlHelpDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1954,7 +1954,7 @@ static PyObject *meth_wxHtmlHelpDialog_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1988,7 +1988,7 @@ static PyObject *meth_wxHtmlHelpDialog_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2022,7 +2022,7 @@ static PyObject *meth_wxHtmlHelpDialog_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2827,7 +2827,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlHelpDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlHelpDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlHelpDialog,
diff --git a/sip/cpp/sip_htmlwxHtmlHelpFrame.cpp b/sip/cpp/sip_htmlwxHtmlHelpFrame.cpp
index 897c8615..fb6a6953 100644
--- sip/cpp/sip_htmlwxHtmlHelpFrame.cpp
+++ sip/cpp/sip_htmlwxHtmlHelpFrame.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1485,7 +1485,7 @@ static PyObject *meth_wxHtmlHelpFrame_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpFrame_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlHelpFrame_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpFrame_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpFrame_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1523,7 +1523,7 @@ static PyObject *meth_wxHtmlHelpFrame_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpFrame_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlHelpFrame_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpFrame_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpFrame_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1661,7 +1661,7 @@ static PyObject *meth_wxHtmlHelpFrame_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHtmlHelpFrame_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHtmlHelpFrame_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpFrame_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1848,7 +1848,7 @@ static PyObject *meth_wxHtmlHelpFrame_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpFrame_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHtmlHelpFrame_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHtmlHelpFrame_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpFrame_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1997,7 +1997,7 @@ static PyObject *meth_wxHtmlHelpFrame_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpFrame_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpFrame_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpFrame_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpFrame_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2031,7 +2031,7 @@ static PyObject *meth_wxHtmlHelpFrame_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpFrame_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpFrame_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpFrame_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpFrame_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2065,7 +2065,7 @@ static PyObject *meth_wxHtmlHelpFrame_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpFrame_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpFrame_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpFrame_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpFrame_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2877,7 +2877,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlHelpFrame = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlHelpFrame,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlHelpFrame,
diff --git a/sip/cpp/sip_htmlwxHtmlHelpWindow.cpp b/sip/cpp/sip_htmlwxHtmlHelpWindow.cpp
index 5761d2fe..5058d2ed 100644
--- sip/cpp/sip_htmlwxHtmlHelpWindow.cpp
+++ sip/cpp/sip_htmlwxHtmlHelpWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1737,7 +1737,7 @@ static PyObject *meth_wxHtmlHelpWindow_AcceptsFocusFromKeyboard(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlHelpWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1775,7 +1775,7 @@ static PyObject *meth_wxHtmlHelpWindow_AddChild(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlHelpWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1913,7 +1913,7 @@ static PyObject *meth_wxHtmlHelpWindow_OnInternalIdle(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHtmlHelpWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHtmlHelpWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2100,7 +2100,7 @@ static PyObject *meth_wxHtmlHelpWindow_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHtmlHelpWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHtmlHelpWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2249,7 +2249,7 @@ static PyObject *meth_wxHtmlHelpWindow_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2283,7 +2283,7 @@ static PyObject *meth_wxHtmlHelpWindow_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2317,7 +2317,7 @@ static PyObject *meth_wxHtmlHelpWindow_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlHelpWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlHelpWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlHelpWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlHelpWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3285,7 +3285,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlHelpWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlHelpWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlHelpWindow,
diff --git a/sip/cpp/sip_htmlwxHtmlLinkEvent.cpp b/sip/cpp/sip_htmlwxHtmlLinkEvent.cpp
index 6c34906b..86c6e53c 100644
--- sip/cpp/sip_htmlwxHtmlLinkEvent.cpp
+++ sip/cpp/sip_htmlwxHtmlLinkEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -123,7 +123,7 @@ static PyObject *meth_wxHtmlLinkEvent_GetLinkInfo(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlLinkEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxHtmlLinkEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxHtmlLinkEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlLinkEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -281,7 +281,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlLinkEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlLinkEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlLinkEvent,
diff --git a/sip/cpp/sip_htmlwxHtmlLinkInfo.cpp b/sip/cpp/sip_htmlwxHtmlLinkInfo.cpp
index 63eb0709..d6b706ba 100644
--- sip/cpp/sip_htmlwxHtmlLinkInfo.cpp
+++ sip/cpp/sip_htmlwxHtmlLinkInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -322,7 +322,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlLinkInfo = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlLinkInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlLinkInfo,
diff --git a/sip/cpp/sip_htmlwxHtmlListBox.cpp b/sip/cpp/sip_htmlwxHtmlListBox.cpp
index 5e0a19bc..985d0969 100644
--- sip/cpp/sip_htmlwxHtmlListBox.cpp
+++ sip/cpp/sip_htmlwxHtmlListBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2250,7 +2250,7 @@ static PyObject *meth_wxHtmlListBox_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlListBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlListBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlListBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2288,7 +2288,7 @@ static PyObject *meth_wxHtmlListBox_AddChild(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlListBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlListBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlListBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlListBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2426,7 +2426,7 @@ static PyObject *meth_wxHtmlListBox_OnInternalIdle(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHtmlListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHtmlListBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlListBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2613,7 +2613,7 @@ static PyObject *meth_wxHtmlListBox_SetValidator(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlListBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHtmlListBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHtmlListBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlListBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2762,7 +2762,7 @@ static PyObject *meth_wxHtmlListBox_DoEnable(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlListBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlListBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlListBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2796,7 +2796,7 @@ static PyObject *meth_wxHtmlListBox_DoGetPosition(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlListBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlListBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlListBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2830,7 +2830,7 @@ static PyObject *meth_wxHtmlListBox_DoGetSize(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlListBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlListBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlListBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlListBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3911,7 +3911,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlListBox = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlListBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlListBox,
diff --git a/sip/cpp/sip_htmlwxHtmlModalHelp.cpp b/sip/cpp/sip_htmlwxHtmlModalHelp.cpp
index f7b4e5e7..abcdffb3 100644
--- sip/cpp/sip_htmlwxHtmlModalHelp.cpp
+++ sip/cpp/sip_htmlwxHtmlModalHelp.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -119,7 +119,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlModalHelp = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlModalHelp,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlModalHelp,
diff --git a/sip/cpp/sip_htmlwxHtmlParser.cpp b/sip/cpp/sip_htmlwxHtmlParser.cpp
index 81fc53d8..ee31d7a1 100644
--- sip/cpp/sip_htmlwxHtmlParser.cpp
+++ sip/cpp/sip_htmlwxHtmlParser.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -580,7 +580,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlParser = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlParser,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlParser,
diff --git a/sip/cpp/sip_htmlwxHtmlPrintout.cpp b/sip/cpp/sip_htmlwxHtmlPrintout.cpp
index e77fce95..f3f56ca2 100644
--- sip/cpp/sip_htmlwxHtmlPrintout.cpp
+++ sip/cpp/sip_htmlwxHtmlPrintout.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -661,7 +661,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlPrintout = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlPrintout,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlPrintout,
diff --git a/sip/cpp/sip_htmlwxHtmlRenderingInfo.cpp b/sip/cpp/sip_htmlwxHtmlRenderingInfo.cpp
index c235dacd..938625e5 100644
--- sip/cpp/sip_htmlwxHtmlRenderingInfo.cpp
+++ sip/cpp/sip_htmlwxHtmlRenderingInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -308,7 +308,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlRenderingInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlRenderingInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlRenderingInfo,
diff --git a/sip/cpp/sip_htmlwxHtmlRenderingState.cpp b/sip/cpp/sip_htmlwxHtmlRenderingState.cpp
index f9ca4b29..02b0fb7c 100644
--- sip/cpp/sip_htmlwxHtmlRenderingState.cpp
+++ sip/cpp/sip_htmlwxHtmlRenderingState.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -412,7 +412,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlRenderingState = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlRenderingState,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlRenderingState,
diff --git a/sip/cpp/sip_htmlwxHtmlRenderingStyle.cpp b/sip/cpp/sip_htmlwxHtmlRenderingStyle.cpp
index 934161a0..78ff5f6e 100644
--- sip/cpp/sip_htmlwxHtmlRenderingStyle.cpp
+++ sip/cpp/sip_htmlwxHtmlRenderingStyle.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -262,7 +262,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlRenderingStyle = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlRenderingStyle,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlRenderingStyle,
diff --git a/sip/cpp/sip_htmlwxHtmlSelection.cpp b/sip/cpp/sip_htmlwxHtmlSelection.cpp
index c47ab70e..83ecaf64 100644
--- sip/cpp/sip_htmlwxHtmlSelection.cpp
+++ sip/cpp/sip_htmlwxHtmlSelection.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -577,7 +577,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlSelection = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlSelection,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlSelection,
diff --git a/sip/cpp/sip_htmlwxHtmlTag.cpp b/sip/cpp/sip_htmlwxHtmlTag.cpp
index 1f85772e..c57436a6 100644
--- sip/cpp/sip_htmlwxHtmlTag.cpp
+++ sip/cpp/sip_htmlwxHtmlTag.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -431,7 +431,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlTag = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlTag,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlTag,
diff --git a/sip/cpp/sip_htmlwxHtmlTagHandler.cpp b/sip/cpp/sip_htmlwxHtmlTagHandler.cpp
index e8783069..04cdab1b 100644
--- sip/cpp/sip_htmlwxHtmlTagHandler.cpp
+++ sip/cpp/sip_htmlwxHtmlTagHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -466,7 +466,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlTagHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlTagHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlTagHandler,
diff --git a/sip/cpp/sip_htmlwxHtmlWidgetCell.cpp b/sip/cpp/sip_htmlwxHtmlWidgetCell.cpp
index d1a1cfd3..21103142 100644
--- sip/cpp/sip_htmlwxHtmlWidgetCell.cpp
+++ sip/cpp/sip_htmlwxHtmlWidgetCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -370,7 +370,7 @@ static PyObject *meth_wxHtmlWidgetCell_DrawInvisible(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWidgetCell_GetMouseCursor, "GetMouseCursor(self, window: HtmlWindowInterface) -> Cursor");
+PyDoc_STRVAR(doc_wxHtmlWidgetCell_GetMouseCursor, "GetMouseCursor(self, window: Optional[HtmlWindowInterface]) -> Cursor");
 
 extern "C" {static PyObject *meth_wxHtmlWidgetCell_GetMouseCursor(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWidgetCell_GetMouseCursor(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -555,7 +555,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlWidgetCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlWidgetCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlWidgetCell,
diff --git a/sip/cpp/sip_htmlwxHtmlWinParser.cpp b/sip/cpp/sip_htmlwxHtmlWinParser.cpp
index 7c6664da..0e5eead5 100644
--- sip/cpp/sip_htmlwxHtmlWinParser.cpp
+++ sip/cpp/sip_htmlwxHtmlWinParser.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1441,7 +1441,7 @@ static PyObject *meth_wxHtmlWinParser_SetLinkColor(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWinParser_GetProduct, "GetProduct(self) -> Object");
+PyDoc_STRVAR(doc_wxHtmlWinParser_GetProduct, "GetProduct(self) -> Optional[Object]");
 
 extern "C" {static PyObject *meth_wxHtmlWinParser_GetProduct(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWinParser_GetProduct(PyObject *sipSelf, PyObject *sipArgs)
@@ -1634,7 +1634,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlWinParser = {
         SIP_TYPE_CLASS,
         sipNameNr_wxHtmlWinParser,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlWinParser,
diff --git a/sip/cpp/sip_htmlwxHtmlWinTagHandler.cpp b/sip/cpp/sip_htmlwxHtmlWinTagHandler.cpp
index e8f8021d..e9b29b3f 100644
--- sip/cpp/sip_htmlwxHtmlWinTagHandler.cpp
+++ sip/cpp/sip_htmlwxHtmlWinTagHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -382,7 +382,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlWinTagHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlWinTagHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlWinTagHandler,
diff --git a/sip/cpp/sip_htmlwxHtmlWindow.cpp b/sip/cpp/sip_htmlwxHtmlWindow.cpp
index ef1a2e17..395135dc 100644
--- sip/cpp/sip_htmlwxHtmlWindow.cpp
+++ sip/cpp/sip_htmlwxHtmlWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2987,7 +2987,7 @@ static PyObject *meth_wxHtmlWindow_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlWindow_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3025,7 +3025,7 @@ static PyObject *meth_wxHtmlWindow_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxHtmlWindow_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3163,7 +3163,7 @@ static PyObject *meth_wxHtmlWindow_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxHtmlWindow_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3350,7 +3350,7 @@ static PyObject *meth_wxHtmlWindow_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxHtmlWindow_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3499,7 +3499,7 @@ static PyObject *meth_wxHtmlWindow_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3533,7 +3533,7 @@ static PyObject *meth_wxHtmlWindow_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3567,7 +3567,7 @@ static PyObject *meth_wxHtmlWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxHtmlWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4169,7 +4169,7 @@ static PyObject *meth_wxHtmlWindow_GetClassDefaultAttributes(PyObject *, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_SetHTMLWindowTitle, "SetHTMLWindowTitle(self, title: object)");
+PyDoc_STRVAR(doc_wxHtmlWindow_SetHTMLWindowTitle, "SetHTMLWindowTitle(self, title: Any)");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_SetHTMLWindowTitle(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_SetHTMLWindowTitle(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4247,7 +4247,7 @@ static PyObject *meth_wxHtmlWindow_OnHTMLLinkClicked(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_OnHTMLOpeningURL, "OnHTMLOpeningURL(self, type: HtmlURLType, url: object) -> Tuple[HtmlOpeningStatus, object]");
+PyDoc_STRVAR(doc_wxHtmlWindow_OnHTMLOpeningURL, "OnHTMLOpeningURL(self, type: HtmlURLType, url: Any) -> (HtmlOpeningStatus, Optional[Any])");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_OnHTMLOpeningURL(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_OnHTMLOpeningURL(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4292,7 +4292,7 @@ static PyObject *meth_wxHtmlWindow_OnHTMLOpeningURL(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_HTMLCoordsToWindow, "HTMLCoordsToWindow(self, cell: HtmlCell, pos: Point) -> Point");
+PyDoc_STRVAR(doc_wxHtmlWindow_HTMLCoordsToWindow, "HTMLCoordsToWindow(self, cell: Optional[HtmlCell], pos: Point) -> Point");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_HTMLCoordsToWindow(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_HTMLCoordsToWindow(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4335,7 +4335,7 @@ static PyObject *meth_wxHtmlWindow_HTMLCoordsToWindow(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_GetHTMLWindow, "GetHTMLWindow(self) -> Window");
+PyDoc_STRVAR(doc_wxHtmlWindow_GetHTMLWindow, "GetHTMLWindow(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_GetHTMLWindow(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_GetHTMLWindow(PyObject *sipSelf, PyObject *sipArgs)
@@ -4369,7 +4369,7 @@ static PyObject *meth_wxHtmlWindow_GetHTMLWindow(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_GetHTMLBackgroundColour, "GetHTMLBackgroundColour(self) -> Colour");
+PyDoc_STRVAR(doc_wxHtmlWindow_GetHTMLBackgroundColour, "GetHTMLBackgroundColour(self) -> Optional[Colour]");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_GetHTMLBackgroundColour(PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_GetHTMLBackgroundColour(PyObject *sipSelf, PyObject *sipArgs)
@@ -4403,7 +4403,7 @@ static PyObject *meth_wxHtmlWindow_GetHTMLBackgroundColour(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_SetHTMLBackgroundColour, "SetHTMLBackgroundColour(self, clr: Colour)");
+PyDoc_STRVAR(doc_wxHtmlWindow_SetHTMLBackgroundColour, "SetHTMLBackgroundColour(self, clr: Optional[Colour])");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_SetHTMLBackgroundColour(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_SetHTMLBackgroundColour(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4483,7 +4483,7 @@ static PyObject *meth_wxHtmlWindow_SetHTMLBackgroundImage(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWindow_SetHTMLStatusText, "SetHTMLStatusText(self, text: object)");
+PyDoc_STRVAR(doc_wxHtmlWindow_SetHTMLStatusText, "SetHTMLStatusText(self, text: Any)");
 
 extern "C" {static PyObject *meth_wxHtmlWindow_SetHTMLStatusText(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWindow_SetHTMLStatusText(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4943,7 +4943,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlWindow,
diff --git a/sip/cpp/sip_htmlwxHtmlWindowInterface.cpp b/sip/cpp/sip_htmlwxHtmlWindowInterface.cpp
index c7e29115..5d9c7696 100644
--- sip/cpp/sip_htmlwxHtmlWindowInterface.cpp
+++ sip/cpp/sip_htmlwxHtmlWindowInterface.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -802,7 +802,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlWindowInterface = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlWindowInterface,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlWindowInterface,
diff --git a/sip/cpp/sip_htmlwxHtmlWordCell.cpp b/sip/cpp/sip_htmlwxHtmlWordCell.cpp
index 5be63cf1..acdac47e 100644
--- sip/cpp/sip_htmlwxHtmlWordCell.cpp
+++ sip/cpp/sip_htmlwxHtmlWordCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -369,7 +369,7 @@ static PyObject *meth_wxHtmlWordCell_DrawInvisible(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWordCell_GetMouseCursor, "GetMouseCursor(self, window: HtmlWindowInterface) -> Cursor");
+PyDoc_STRVAR(doc_wxHtmlWordCell_GetMouseCursor, "GetMouseCursor(self, window: Optional[HtmlWindowInterface]) -> Cursor");
 
 extern "C" {static PyObject *meth_wxHtmlWordCell_GetMouseCursor(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWordCell_GetMouseCursor(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -556,7 +556,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlWordCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlWordCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlWordCell,
diff --git a/sip/cpp/sip_htmlwxHtmlWordWithTabsCell.cpp b/sip/cpp/sip_htmlwxHtmlWordWithTabsCell.cpp
index fd7e5bc9..745837d1 100644
--- sip/cpp/sip_htmlwxHtmlWordWithTabsCell.cpp
+++ sip/cpp/sip_htmlwxHtmlWordWithTabsCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -369,7 +369,7 @@ static PyObject *meth_wxHtmlWordWithTabsCell_DrawInvisible(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxHtmlWordWithTabsCell_GetMouseCursor, "GetMouseCursor(self, window: HtmlWindowInterface) -> Cursor");
+PyDoc_STRVAR(doc_wxHtmlWordWithTabsCell_GetMouseCursor, "GetMouseCursor(self, window: Optional[HtmlWindowInterface]) -> Cursor");
 
 extern "C" {static PyObject *meth_wxHtmlWordWithTabsCell_GetMouseCursor(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxHtmlWordWithTabsCell_GetMouseCursor(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -562,7 +562,7 @@ sipClassTypeDef sipTypeDef__html_wxHtmlWordWithTabsCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxHtmlWordWithTabsCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_HtmlWordWithTabsCell,
diff --git a/sip/cpp/sip_htmlwxSimpleHtmlListBox.cpp b/sip/cpp/sip_htmlwxSimpleHtmlListBox.cpp
index 7087139c..6d4f359d 100644
--- sip/cpp/sip_htmlwxSimpleHtmlListBox.cpp
+++ sip/cpp/sip_htmlwxSimpleHtmlListBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2557,7 +2557,7 @@ static PyObject *meth_wxSimpleHtmlListBox_AcceptsFocusFromKeyboard(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2595,7 +2595,7 @@ static PyObject *meth_wxSimpleHtmlListBox_AddChild(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2733,7 +2733,7 @@ static PyObject *meth_wxSimpleHtmlListBox_OnInternalIdle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2920,7 +2920,7 @@ static PyObject *meth_wxSimpleHtmlListBox_SetValidator(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3069,7 +3069,7 @@ static PyObject *meth_wxSimpleHtmlListBox_DoEnable(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3103,7 +3103,7 @@ static PyObject *meth_wxSimpleHtmlListBox_DoGetPosition(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3137,7 +3137,7 @@ static PyObject *meth_wxSimpleHtmlListBox_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3773,7 +3773,7 @@ static PyObject *meth_wxSimpleHtmlListBox_GetCount(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_GetString, "GetString(self, n: int) -> object");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_GetString, "GetString(self, n: int) -> Any");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_GetString(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_GetString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3812,7 +3812,7 @@ static PyObject *meth_wxSimpleHtmlListBox_GetString(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_SetString, "SetString(self, n: int, s: object)");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_SetString, "SetString(self, n: int, s: Any)");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_SetString(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_SetString(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3926,7 +3926,7 @@ static PyObject *meth_wxSimpleHtmlListBox_GetSelection(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxSimpleHtmlListBox_OnGetItem, "OnGetItem(self, n: int) -> object");
+PyDoc_STRVAR(doc_wxSimpleHtmlListBox_OnGetItem, "OnGetItem(self, n: int) -> Any");
 
 extern "C" {static PyObject *meth_wxSimpleHtmlListBox_OnGetItem(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSimpleHtmlListBox_OnGetItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4196,7 +4196,7 @@ sipClassTypeDef sipTypeDef__html_wxSimpleHtmlListBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSimpleHtmlListBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SimpleHtmlListBox,
diff --git a/sip/cpp/sip_mediacmodule.cpp b/sip/cpp/sip_mediacmodule.cpp
index 4239a8df..541bff16 100644
--- sip/cpp/sip_mediacmodule.cpp
+++ sip/cpp/sip_mediacmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -431,7 +431,6 @@ PyMODINIT_FUNC PyInit__media()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._media",
diff --git a/sip/cpp/sip_mediawxMediaCtrl.cpp b/sip/cpp/sip_mediawxMediaCtrl.cpp
index 4a4b83f2..e7eff049 100644
--- sip/cpp/sip_mediawxMediaCtrl.cpp
+++ sip/cpp/sip_mediawxMediaCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1000,7 +1000,7 @@ static PyObject *meth_wxMediaCtrl_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxMediaCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMediaCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMediaCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMediaCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1034,7 +1034,7 @@ static PyObject *meth_wxMediaCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxMediaCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMediaCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMediaCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMediaCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1068,7 +1068,7 @@ static PyObject *meth_wxMediaCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxMediaCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxMediaCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxMediaCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxMediaCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2522,7 +2522,7 @@ sipClassTypeDef sipTypeDef__media_wxMediaCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMediaCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MediaCtrl,
diff --git a/sip/cpp/sip_mediawxMediaEvent.cpp b/sip/cpp/sip_mediawxMediaEvent.cpp
index 0edf2ba3..ad28ae82 100644
--- sip/cpp/sip_mediawxMediaEvent.cpp
+++ sip/cpp/sip_mediawxMediaEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -86,7 +86,7 @@ sipwxMediaEvent::~sipwxMediaEvent()
 }
 
 
-PyDoc_STRVAR(doc_wxMediaEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxMediaEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxMediaEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxMediaEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -239,7 +239,7 @@ sipClassTypeDef sipTypeDef__media_wxMediaEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMediaEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MediaEvent,
diff --git a/sip/cpp/sip_mswcmodule.cpp b/sip/cpp/sip_mswcmodule.cpp
index b82f1747..b2f4ea60 100644
--- sip/cpp/sip_mswcmodule.cpp
+++ sip/cpp/sip_mswcmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -446,7 +446,6 @@ PyMODINIT_FUNC PyInit__msw()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._msw",
diff --git a/sip/cpp/sip_mswwxCHMHelpController.cpp b/sip/cpp/sip_mswwxCHMHelpController.cpp
index 85ff07c0..67a04e30 100644
--- sip/cpp/sip_mswwxCHMHelpController.cpp
+++ sip/cpp/sip_mswwxCHMHelpController.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -325,7 +325,7 @@ void sipwxCHMHelpController::SetViewer(const  ::wxString& viewer,long flags)
 }
 
 
-PyDoc_STRVAR(doc_wxCHMHelpController_Initialize, "Initialize(self, file: object) -> bool");
+PyDoc_STRVAR(doc_wxCHMHelpController_Initialize, "Initialize(self, file: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxCHMHelpController_Initialize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCHMHelpController_Initialize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -366,7 +366,7 @@ static PyObject *meth_wxCHMHelpController_Initialize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxCHMHelpController_LoadFile, "LoadFile(self, file: object = wxEmptyString) -> bool");
+PyDoc_STRVAR(doc_wxCHMHelpController_LoadFile, "LoadFile(self, file: Any = wxEmptyString) -> bool");
 
 extern "C" {static PyObject *meth_wxCHMHelpController_LoadFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCHMHelpController_LoadFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -443,7 +443,7 @@ static PyObject *meth_wxCHMHelpController_DisplayContents(PyObject *sipSelf, PyO
 
 
 PyDoc_STRVAR(doc_wxCHMHelpController_DisplaySection, "DisplaySection(self, sectionNo: int) -> bool\n"
-"DisplaySection(self, section: object) -> bool");
+"DisplaySection(self, section: Any) -> bool");
 
 extern "C" {static PyObject *meth_wxCHMHelpController_DisplaySection(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCHMHelpController_DisplaySection(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -587,7 +587,7 @@ static PyObject *meth_wxCHMHelpController_DisplayContextPopup(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxCHMHelpController_DisplayTextPopup, "DisplayTextPopup(self, text: object, pos: Point) -> bool");
+PyDoc_STRVAR(doc_wxCHMHelpController_DisplayTextPopup, "DisplayTextPopup(self, text: Any, pos: Point) -> bool");
 
 extern "C" {static PyObject *meth_wxCHMHelpController_DisplayTextPopup(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCHMHelpController_DisplayTextPopup(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -632,7 +632,7 @@ static PyObject *meth_wxCHMHelpController_DisplayTextPopup(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxCHMHelpController_KeywordSearch, "KeywordSearch(self, k: object, mode: HelpSearchMode = wxHELP_SEARCH_ALL) -> bool");
+PyDoc_STRVAR(doc_wxCHMHelpController_KeywordSearch, "KeywordSearch(self, k: Any, mode: HelpSearchMode = wxHELP_SEARCH_ALL) -> bool");
 
 extern "C" {static PyObject *meth_wxCHMHelpController_KeywordSearch(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCHMHelpController_KeywordSearch(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -709,7 +709,7 @@ static PyObject *meth_wxCHMHelpController_Quit(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxCHMHelpController_GetHelpFile, "GetHelpFile(self) -> object");
+PyDoc_STRVAR(doc_wxCHMHelpController_GetHelpFile, "GetHelpFile(self) -> Any");
 
 extern "C" {static PyObject *meth_wxCHMHelpController_GetHelpFile(PyObject *, PyObject *);}
 static PyObject *meth_wxCHMHelpController_GetHelpFile(PyObject *sipSelf, PyObject *sipArgs)
@@ -742,7 +742,7 @@ static PyObject *meth_wxCHMHelpController_GetHelpFile(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxCHMHelpController_ShowContextHelpPopup, "ShowContextHelpPopup(text: object, pos: Point, window: Window) -> bool");
+PyDoc_STRVAR(doc_wxCHMHelpController_ShowContextHelpPopup, "ShowContextHelpPopup(text: Any, pos: Point, window: Optional[Window]) -> bool");
 
 extern "C" {static PyObject *meth_wxCHMHelpController_ShowContextHelpPopup(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxCHMHelpController_ShowContextHelpPopup(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -922,7 +922,7 @@ static PyMethodDef methods_wxCHMHelpController[] = {
     {sipName_ShowContextHelpPopup, SIP_MLMETH_CAST(meth_wxCHMHelpController_ShowContextHelpPopup), METH_VARARGS|METH_KEYWORDS, doc_wxCHMHelpController_ShowContextHelpPopup}
 };
 
-PyDoc_STRVAR(doc_wxCHMHelpController, "\1CHMHelpController(parentWindow: typing.Optional[Window] = None)\n"
+PyDoc_STRVAR(doc_wxCHMHelpController, "\1CHMHelpController(parentWindow: Optional[Window] = None)\n"
 "CHMHelpController(a0: CHMHelpController)");
 
 
@@ -934,7 +934,7 @@ sipClassTypeDef sipTypeDef__msw_wxCHMHelpController = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCHMHelpController,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CHMHelpController,
diff --git a/sip/cpp/sip_mswwxPyAxBaseWindow.cpp b/sip/cpp/sip_mswwxPyAxBaseWindow.cpp
index 8f8844ab..bb4a90e5 100644
--- sip/cpp/sip_mswwxPyAxBaseWindow.cpp
+++ sip/cpp/sip_mswwxPyAxBaseWindow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -934,7 +934,7 @@ static PyObject *meth_wxPyAxBaseWindow_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxPyAxBaseWindow_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPyAxBaseWindow_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPyAxBaseWindow_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPyAxBaseWindow_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -968,7 +968,7 @@ static PyObject *meth_wxPyAxBaseWindow_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPyAxBaseWindow_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPyAxBaseWindow_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPyAxBaseWindow_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPyAxBaseWindow_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1002,7 +1002,7 @@ static PyObject *meth_wxPyAxBaseWindow_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxPyAxBaseWindow_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPyAxBaseWindow_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPyAxBaseWindow_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPyAxBaseWindow_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1827,7 +1827,7 @@ sipClassTypeDef sipTypeDef__msw_wxPyAxBaseWindow = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPyAxBaseWindow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PyAxBaseWindow,
diff --git a/sip/cpp/sip_propgridcmodule.cpp b/sip/cpp/sip_propgridcmodule.cpp
index eaef4b48..2a2d4247 100644
--- sip/cpp/sip_propgridcmodule.cpp
+++ sip/cpp/sip_propgridcmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1999,7 +1999,7 @@ static PyObject *func_PGGetDefaultImageWildcard(PyObject *,PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_testPGVariantTypeName, "testPGVariantTypeName(var: object) -> object");
+PyDoc_STRVAR(doc_testPGVariantTypeName, "testPGVariantTypeName(var: Optional[Any]) -> Any");
 
 extern "C" {static PyObject *func_testPGVariantTypeName(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testPGVariantTypeName(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -2039,7 +2039,7 @@ static PyObject *func_testPGVariantTypeName(PyObject *,PyObject *sipArgs, PyObje
 }
 
 
-PyDoc_STRVAR(doc_testPGVariantTypemap, "testPGVariantTypemap(var: object) -> object");
+PyDoc_STRVAR(doc_testPGVariantTypemap, "testPGVariantTypemap(var: Optional[Any]) -> Optional[Any]");
 
 extern "C" {static PyObject *func_testPGVariantTypemap(PyObject *, PyObject *, PyObject *);}
 static PyObject *func_testPGVariantTypemap(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -2461,7 +2461,6 @@ PyMODINIT_FUNC PyInit__propgrid()
         {sipName_testPGVariantTypemap, SIP_MLMETH_CAST(func_testPGVariantTypemap), METH_VARARGS|METH_KEYWORDS, doc_testPGVariantTypemap},
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._propgrid",
diff --git a/sip/cpp/sip_propgridwxArrayPGProperty.cpp b/sip/cpp/sip_propgridwxArrayPGProperty.cpp
index d550288e..edfad030 100644
--- sip/cpp/sip_propgridwxArrayPGProperty.cpp
+++ sip/cpp/sip_propgridwxArrayPGProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -11,7 +11,7 @@
         #include <wx/propgrid/property.h>
 
 
-PyDoc_STRVAR(doc_wxArrayPGProperty_append, "append(self, obj: PGProperty)");
+PyDoc_STRVAR(doc_wxArrayPGProperty_append, "append(self, obj: Optional[PGProperty])");
 
 extern "C" {static PyObject *meth_wxArrayPGProperty_append(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxArrayPGProperty_append(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -41,7 +41,7 @@ static PyObject *meth_wxArrayPGProperty_append(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxArrayPGProperty_index, "index(self, obj: PGProperty) -> int");
+PyDoc_STRVAR(doc_wxArrayPGProperty_index, "index(self, obj: Optional[PGProperty]) -> int");
 
 extern "C" {static PyObject *meth_wxArrayPGProperty_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxArrayPGProperty_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxArrayPGProperty = {
         SIP_TYPE_CLASS,
         sipNameNr_wxArrayPGProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ArrayPGProperty,
diff --git a/sip/cpp/sip_propgridwxArrayStringProperty.cpp b/sip/cpp/sip_propgridwxArrayStringProperty.cpp
index 54ff7a5a..e0336153 100644
--- sip/cpp/sip_propgridwxArrayStringProperty.cpp
+++ sip/cpp/sip_propgridwxArrayStringProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1100,7 +1100,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxArrayStringProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxArrayStringProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ArrayStringProperty,
diff --git a/sip/cpp/sip_propgridwxBoolProperty.cpp b/sip/cpp/sip_propgridwxBoolProperty.cpp
index 08f3aac2..ecd9026f 100644
--- sip/cpp/sip_propgridwxBoolProperty.cpp
+++ sip/cpp/sip_propgridwxBoolProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -740,7 +740,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxBoolProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxBoolProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_BoolProperty,
diff --git a/sip/cpp/sip_propgridwxColourProperty.cpp b/sip/cpp/sip_propgridwxColourProperty.cpp
index 1c938a03..b3a60183 100644
--- sip/cpp/sip_propgridwxColourProperty.cpp
+++ sip/cpp/sip_propgridwxColourProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -706,7 +706,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxColourProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxColourProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ColourProperty,
diff --git a/sip/cpp/sip_propgridwxColourPropertyValue.cpp b/sip/cpp/sip_propgridwxColourPropertyValue.cpp
index e2be1c50..582fa9be 100644
--- sip/cpp/sip_propgridwxColourPropertyValue.cpp
+++ sip/cpp/sip_propgridwxColourPropertyValue.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -417,7 +417,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxColourPropertyValue = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxColourPropertyValue,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ColourPropertyValue,
diff --git a/sip/cpp/sip_propgridwxCursorProperty.cpp b/sip/cpp/sip_propgridwxCursorProperty.cpp
index 3c10525c..63f26de3 100644
--- sip/cpp/sip_propgridwxCursorProperty.cpp
+++ sip/cpp/sip_propgridwxCursorProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -657,7 +657,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxCursorProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxCursorProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_CursorProperty,
diff --git a/sip/cpp/sip_propgridwxDateProperty.cpp b/sip/cpp/sip_propgridwxDateProperty.cpp
index 3f18afa4..78b1e9a7 100644
--- sip/cpp/sip_propgridwxDateProperty.cpp
+++ sip/cpp/sip_propgridwxDateProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -921,7 +921,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxDateProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDateProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DateProperty,
diff --git a/sip/cpp/sip_propgridwxDirProperty.cpp b/sip/cpp/sip_propgridwxDirProperty.cpp
index 2a71fee6..24588035 100644
--- sip/cpp/sip_propgridwxDirProperty.cpp
+++ sip/cpp/sip_propgridwxDirProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -762,7 +762,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxDirProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxDirProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_DirProperty,
diff --git a/sip/cpp/sip_propgridwxEditEnumProperty.cpp b/sip/cpp/sip_propgridwxEditEnumProperty.cpp
index 784b450b..c566b74a 100644
--- sip/cpp/sip_propgridwxEditEnumProperty.cpp
+++ sip/cpp/sip_propgridwxEditEnumProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -622,7 +622,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxEditEnumProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxEditEnumProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EditEnumProperty,
diff --git a/sip/cpp/sip_propgridwxEditorDialogProperty.cpp b/sip/cpp/sip_propgridwxEditorDialogProperty.cpp
index 9fd67207..c0dbce8e 100644
--- sip/cpp/sip_propgridwxEditorDialogProperty.cpp
+++ sip/cpp/sip_propgridwxEditorDialogProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -697,7 +697,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxEditorDialogProperty = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxEditorDialogProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EditorDialogProperty,
diff --git a/sip/cpp/sip_propgridwxEnumProperty.cpp b/sip/cpp/sip_propgridwxEnumProperty.cpp
index 9d1857f3..8b4ce34f 100644
--- sip/cpp/sip_propgridwxEnumProperty.cpp
+++ sip/cpp/sip_propgridwxEnumProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -959,7 +959,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxEnumProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxEnumProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_EnumProperty,
diff --git a/sip/cpp/sip_propgridwxFileProperty.cpp b/sip/cpp/sip_propgridwxFileProperty.cpp
index 05407dc8..4559de39 100644
--- sip/cpp/sip_propgridwxFileProperty.cpp
+++ sip/cpp/sip_propgridwxFileProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -919,7 +919,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxFileProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFileProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FileProperty,
diff --git a/sip/cpp/sip_propgridwxFlagsProperty.cpp b/sip/cpp/sip_propgridwxFlagsProperty.cpp
index 7cffed1f..433831a4 100644
--- sip/cpp/sip_propgridwxFlagsProperty.cpp
+++ sip/cpp/sip_propgridwxFlagsProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -984,7 +984,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxFlagsProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFlagsProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FlagsProperty,
diff --git a/sip/cpp/sip_propgridwxFloatProperty.cpp b/sip/cpp/sip_propgridwxFloatProperty.cpp
index ed7884e8..3d2ffb48 100644
--- sip/cpp/sip_propgridwxFloatProperty.cpp
+++ sip/cpp/sip_propgridwxFloatProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -868,7 +868,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxFloatProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFloatProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FloatProperty,
diff --git a/sip/cpp/sip_propgridwxFontProperty.cpp b/sip/cpp/sip_propgridwxFontProperty.cpp
index 83436856..b81df5ce 100644
--- sip/cpp/sip_propgridwxFontProperty.cpp
+++ sip/cpp/sip_propgridwxFontProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -796,7 +796,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxFontProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxFontProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_FontProperty,
diff --git a/sip/cpp/sip_propgridwxImageFileProperty.cpp b/sip/cpp/sip_propgridwxImageFileProperty.cpp
index 18f28de7..047f4c5e 100644
--- sip/cpp/sip_propgridwxImageFileProperty.cpp
+++ sip/cpp/sip_propgridwxImageFileProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -756,7 +756,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxImageFileProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxImageFileProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_ImageFileProperty,
diff --git a/sip/cpp/sip_propgridwxIntProperty.cpp b/sip/cpp/sip_propgridwxIntProperty.cpp
index a386e64f..6042dc9b 100644
--- sip/cpp/sip_propgridwxIntProperty.cpp
+++ sip/cpp/sip_propgridwxIntProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -911,7 +911,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxIntProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxIntProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_IntProperty,
diff --git a/sip/cpp/sip_propgridwxLongStringProperty.cpp b/sip/cpp/sip_propgridwxLongStringProperty.cpp
index 7152616f..119050b5 100644
--- sip/cpp/sip_propgridwxLongStringProperty.cpp
+++ sip/cpp/sip_propgridwxLongStringProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -724,7 +724,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxLongStringProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxLongStringProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_LongStringProperty,
diff --git a/sip/cpp/sip_propgridwxMultiChoiceProperty.cpp b/sip/cpp/sip_propgridwxMultiChoiceProperty.cpp
index eea638b5..e374b087 100644
--- sip/cpp/sip_propgridwxMultiChoiceProperty.cpp
+++ sip/cpp/sip_propgridwxMultiChoiceProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -895,7 +895,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxMultiChoiceProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxMultiChoiceProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_MultiChoiceProperty,
diff --git a/sip/cpp/sip_propgridwxNumericProperty.cpp b/sip/cpp/sip_propgridwxNumericProperty.cpp
index 26e97977..3a6dd886 100644
--- sip/cpp/sip_propgridwxNumericProperty.cpp
+++ sip/cpp/sip_propgridwxNumericProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -677,7 +677,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxNumericProperty = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxNumericProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NumericProperty,
diff --git a/sip/cpp/sip_propgridwxNumericPropertyValidator.cpp b/sip/cpp/sip_propgridwxNumericPropertyValidator.cpp
index 4addcc8e..3cfb022e 100644
--- sip/cpp/sip_propgridwxNumericPropertyValidator.cpp
+++ sip/cpp/sip_propgridwxNumericPropertyValidator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -436,7 +436,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxNumericPropertyValidator = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxNumericPropertyValidator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_NumericPropertyValidator,
diff --git a/sip/cpp/sip_propgridwxPGArrayEditorDialog.cpp b/sip/cpp/sip_propgridwxPGArrayEditorDialog.cpp
index bebbc27b..3a4170a5 100644
--- sip/cpp/sip_propgridwxPGArrayEditorDialog.cpp
+++ sip/cpp/sip_propgridwxPGArrayEditorDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1236,7 +1236,7 @@ static PyObject *meth_wxPGArrayEditorDialog_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPGArrayEditorDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGArrayEditorDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGArrayEditorDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGArrayEditorDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1270,7 +1270,7 @@ static PyObject *meth_wxPGArrayEditorDialog_DoGetPosition(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxPGArrayEditorDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGArrayEditorDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGArrayEditorDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGArrayEditorDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1304,7 +1304,7 @@ static PyObject *meth_wxPGArrayEditorDialog_DoGetSize(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPGArrayEditorDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGArrayEditorDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGArrayEditorDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGArrayEditorDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2710,7 +2710,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGArrayEditorDialog = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGArrayEditorDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGArrayEditorDialog,
diff --git a/sip/cpp/sip_propgridwxPGArrayStringEditorDialog.cpp b/sip/cpp/sip_propgridwxPGArrayStringEditorDialog.cpp
index d8e9b4ef..30733377 100644
--- sip/cpp/sip_propgridwxPGArrayStringEditorDialog.cpp
+++ sip/cpp/sip_propgridwxPGArrayStringEditorDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1237,7 +1237,7 @@ static PyObject *meth_wxPGArrayStringEditorDialog_DoEnable(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxPGArrayStringEditorDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGArrayStringEditorDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGArrayStringEditorDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGArrayStringEditorDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1271,7 +1271,7 @@ static PyObject *meth_wxPGArrayStringEditorDialog_DoGetPosition(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxPGArrayStringEditorDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGArrayStringEditorDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGArrayStringEditorDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGArrayStringEditorDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1305,7 +1305,7 @@ static PyObject *meth_wxPGArrayStringEditorDialog_DoGetSize(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxPGArrayStringEditorDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGArrayStringEditorDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGArrayStringEditorDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGArrayStringEditorDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2474,7 +2474,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGArrayStringEditorDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGArrayStringEditorDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGArrayStringEditorDialog,
diff --git a/sip/cpp/sip_propgridwxPGAttributeStorage.cpp b/sip/cpp/sip_propgridwxPGAttributeStorage.cpp
index dadfbc16..3a365956 100644
--- sip/cpp/sip_propgridwxPGAttributeStorage.cpp
+++ sip/cpp/sip_propgridwxPGAttributeStorage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -236,7 +236,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGAttributeStorage = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGAttributeStorage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGAttributeStorage,
diff --git a/sip/cpp/sip_propgridwxPGCell.cpp b/sip/cpp/sip_propgridwxPGCell.cpp
index 12353816..fc9c0db8 100644
--- sip/cpp/sip_propgridwxPGCell.cpp
+++ sip/cpp/sip_propgridwxPGCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -766,7 +766,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGCell,
diff --git a/sip/cpp/sip_propgridwxPGCellData.cpp b/sip/cpp/sip_propgridwxPGCellData.cpp
index ac116ce8..1e53a1a0 100644
--- sip/cpp/sip_propgridwxPGCellData.cpp
+++ sip/cpp/sip_propgridwxPGCellData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -326,7 +326,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGCellData = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGCellData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGCellData,
diff --git a/sip/cpp/sip_propgridwxPGCellRenderer.cpp b/sip/cpp/sip_propgridwxPGCellRenderer.cpp
index 97e08e5d..95e412ec 100644
--- sip/cpp/sip_propgridwxPGCellRenderer.cpp
+++ sip/cpp/sip_propgridwxPGCellRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -567,7 +567,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGCellRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxPGCellRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGCellRenderer,
diff --git a/sip/cpp/sip_propgridwxPGCheckBoxEditor.cpp b/sip/cpp/sip_propgridwxPGCheckBoxEditor.cpp
index 2019628f..8a69ea7f 100644
--- sip/cpp/sip_propgridwxPGCheckBoxEditor.cpp
+++ sip/cpp/sip_propgridwxPGCheckBoxEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -811,7 +811,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGCheckBoxEditor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGCheckBoxEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGCheckBoxEditor,
diff --git a/sip/cpp/sip_propgridwxPGChoiceAndButtonEditor.cpp b/sip/cpp/sip_propgridwxPGChoiceAndButtonEditor.cpp
index d8f15edf..ec919a2c 100644
--- sip/cpp/sip_propgridwxPGChoiceAndButtonEditor.cpp
+++ sip/cpp/sip_propgridwxPGChoiceAndButtonEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -533,7 +533,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGChoiceAndButtonEditor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGChoiceAndButtonEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGChoiceAndButtonEditor,
diff --git a/sip/cpp/sip_propgridwxPGChoiceEditor.cpp b/sip/cpp/sip_propgridwxPGChoiceEditor.cpp
index dff03f46..dd3012ff 100644
--- sip/cpp/sip_propgridwxPGChoiceEditor.cpp
+++ sip/cpp/sip_propgridwxPGChoiceEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -986,7 +986,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGChoiceEditor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGChoiceEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGChoiceEditor,
diff --git a/sip/cpp/sip_propgridwxPGChoiceEntry.cpp b/sip/cpp/sip_propgridwxPGChoiceEntry.cpp
index 7c19e1ae..f7bb4609 100644
--- sip/cpp/sip_propgridwxPGChoiceEntry.cpp
+++ sip/cpp/sip_propgridwxPGChoiceEntry.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -305,7 +305,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGChoiceEntry = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGChoiceEntry,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGChoiceEntry,
diff --git a/sip/cpp/sip_propgridwxPGChoices.cpp b/sip/cpp/sip_propgridwxPGChoices.cpp
index 150dec4b..9173b086 100644
--- sip/cpp/sip_propgridwxPGChoices.cpp
+++ sip/cpp/sip_propgridwxPGChoices.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1292,7 +1292,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGChoices = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGChoices,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGChoices,
diff --git a/sip/cpp/sip_propgridwxPGChoicesData.cpp b/sip/cpp/sip_propgridwxPGChoicesData.cpp
index 988c08c0..2ad47ff1 100644
--- sip/cpp/sip_propgridwxPGChoicesData.cpp
+++ sip/cpp/sip_propgridwxPGChoicesData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -315,7 +315,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGChoicesData = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGChoicesData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGChoicesData,
diff --git a/sip/cpp/sip_propgridwxPGComboBoxEditor.cpp b/sip/cpp/sip_propgridwxPGComboBoxEditor.cpp
index fb02d8e0..ba6d08b7 100644
--- sip/cpp/sip_propgridwxPGComboBoxEditor.cpp
+++ sip/cpp/sip_propgridwxPGComboBoxEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -715,7 +715,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGComboBoxEditor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGComboBoxEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGComboBoxEditor,
diff --git a/sip/cpp/sip_propgridwxPGDefaultRenderer.cpp b/sip/cpp/sip_propgridwxPGDefaultRenderer.cpp
index 1a26dc2a..aabf8139 100644
--- sip/cpp/sip_propgridwxPGDefaultRenderer.cpp
+++ sip/cpp/sip_propgridwxPGDefaultRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -296,7 +296,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGDefaultRenderer = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGDefaultRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGDefaultRenderer,
diff --git a/sip/cpp/sip_propgridwxPGEditor.cpp b/sip/cpp/sip_propgridwxPGEditor.cpp
index 66166915..3edd5075 100644
--- sip/cpp/sip_propgridwxPGEditor.cpp
+++ sip/cpp/sip_propgridwxPGEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1103,7 +1103,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGEditor = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGEditor,
diff --git a/sip/cpp/sip_propgridwxPGEditorDialogAdapter.cpp b/sip/cpp/sip_propgridwxPGEditorDialogAdapter.cpp
index e0811619..013139c6 100644
--- sip/cpp/sip_propgridwxPGEditorDialogAdapter.cpp
+++ sip/cpp/sip_propgridwxPGEditorDialogAdapter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -381,7 +381,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGEditorDialogAdapter = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGEditorDialogAdapter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGEditorDialogAdapter,
diff --git a/sip/cpp/sip_propgridwxPGInDialogValidator.cpp b/sip/cpp/sip_propgridwxPGInDialogValidator.cpp
index 41f0a270..d0bddab7 100644
--- sip/cpp/sip_propgridwxPGInDialogValidator.cpp
+++ sip/cpp/sip_propgridwxPGInDialogValidator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -158,7 +158,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGInDialogValidator = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGInDialogValidator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGInDialogValidator,
diff --git a/sip/cpp/sip_propgridwxPGMultiButton.cpp b/sip/cpp/sip_propgridwxPGMultiButton.cpp
index bd929ed3..864b1d11 100644
--- sip/cpp/sip_propgridwxPGMultiButton.cpp
+++ sip/cpp/sip_propgridwxPGMultiButton.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1456,7 +1456,7 @@ static PyObject *meth_wxPGMultiButton_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxPGMultiButton_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPGMultiButton_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPGMultiButton_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGMultiButton_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1494,7 +1494,7 @@ static PyObject *meth_wxPGMultiButton_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxPGMultiButton_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxPGMultiButton_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxPGMultiButton_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGMultiButton_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1632,7 +1632,7 @@ static PyObject *meth_wxPGMultiButton_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPGMultiButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxPGMultiButton_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxPGMultiButton_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxPGMultiButton_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1819,7 +1819,7 @@ static PyObject *meth_wxPGMultiButton_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPGMultiButton_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxPGMultiButton_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxPGMultiButton_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxPGMultiButton_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -1968,7 +1968,7 @@ static PyObject *meth_wxPGMultiButton_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxPGMultiButton_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGMultiButton_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGMultiButton_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGMultiButton_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2002,7 +2002,7 @@ static PyObject *meth_wxPGMultiButton_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPGMultiButton_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGMultiButton_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGMultiButton_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGMultiButton_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2036,7 +2036,7 @@ static PyObject *meth_wxPGMultiButton_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxPGMultiButton_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPGMultiButton_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPGMultiButton_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPGMultiButton_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2797,7 +2797,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGMultiButton = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGMultiButton,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGMultiButton,
diff --git a/sip/cpp/sip_propgridwxPGPaintData.cpp b/sip/cpp/sip_propgridwxPGPaintData.cpp
index 6c06d169..c94d645f 100644
--- sip/cpp/sip_propgridwxPGPaintData.cpp
+++ sip/cpp/sip_propgridwxPGPaintData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -222,7 +222,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGPaintData = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGPaintData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGPaintData,
diff --git a/sip/cpp/sip_propgridwxPGPropArgCls.cpp b/sip/cpp/sip_propgridwxPGPropArgCls.cpp
index 75160275..887a4924 100644
--- sip/cpp/sip_propgridwxPGPropArgCls.cpp
+++ sip/cpp/sip_propgridwxPGPropArgCls.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -363,7 +363,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGPropArgCls = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGPropArgCls,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGPropArgCls,
diff --git a/sip/cpp/sip_propgridwxPGProperty.cpp b/sip/cpp/sip_propgridwxPGProperty.cpp
index 22a5c268..7c0714b7 100644
--- sip/cpp/sip_propgridwxPGProperty.cpp
+++ sip/cpp/sip_propgridwxPGProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -5551,7 +5551,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGProperty,
diff --git a/sip/cpp/sip_propgridwxPGSpinCtrlEditor.cpp b/sip/cpp/sip_propgridwxPGSpinCtrlEditor.cpp
index 2c0205b0..e0d2bb3b 100644
--- sip/cpp/sip_propgridwxPGSpinCtrlEditor.cpp
+++ sip/cpp/sip_propgridwxPGSpinCtrlEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -573,7 +573,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGSpinCtrlEditor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGSpinCtrlEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGSpinCtrlEditor,
diff --git a/sip/cpp/sip_propgridwxPGTextCtrlAndButtonEditor.cpp b/sip/cpp/sip_propgridwxPGTextCtrlAndButtonEditor.cpp
index 2c337147..121ace98 100644
--- sip/cpp/sip_propgridwxPGTextCtrlAndButtonEditor.cpp
+++ sip/cpp/sip_propgridwxPGTextCtrlAndButtonEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -533,7 +533,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGTextCtrlAndButtonEditor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGTextCtrlAndButtonEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGTextCtrlAndButtonEditor,
diff --git a/sip/cpp/sip_propgridwxPGTextCtrlEditor.cpp b/sip/cpp/sip_propgridwxPGTextCtrlEditor.cpp
index a3dda387..d3209d79 100644
--- sip/cpp/sip_propgridwxPGTextCtrlEditor.cpp
+++ sip/cpp/sip_propgridwxPGTextCtrlEditor.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -850,7 +850,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGTextCtrlEditor = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPGTextCtrlEditor,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGTextCtrlEditor,
diff --git a/sip/cpp/sip_propgridwxPGVIterator.cpp b/sip/cpp/sip_propgridwxPGVIterator.cpp
index f8fdbcb4..75e566af 100644
--- sip/cpp/sip_propgridwxPGVIterator.cpp
+++ sip/cpp/sip_propgridwxPGVIterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -261,7 +261,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGVIterator = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGVIterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGVIterator,
diff --git a/sip/cpp/sip_propgridwxPGValidationInfo.cpp b/sip/cpp/sip_propgridwxPGValidationInfo.cpp
index 2514baf6..ee1b1693 100644
--- sip/cpp/sip_propgridwxPGValidationInfo.cpp
+++ sip/cpp/sip_propgridwxPGValidationInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -297,7 +297,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGValidationInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGValidationInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGValidationInfo,
diff --git a/sip/cpp/sip_propgridwxPGVariant.cpp b/sip/cpp/sip_propgridwxPGVariant.cpp
index aa11ce20..d5945635 100644
--- sip/cpp/sip_propgridwxPGVariant.cpp
+++ sip/cpp/sip_propgridwxPGVariant.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -84,15 +84,15 @@ sipMappedTypeDef sipTypeDef__propgrid_wxPGVariant = {
         SIP_TYPE_ALLOW_NONE|SIP_TYPE_MAPPED,
         sipNameNr_wxPGVariant,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxPGVariant,
     array_wxPGVariant,
diff --git a/sip/cpp/sip_propgridwxPGVariantList.cpp b/sip/cpp/sip_propgridwxPGVariantList.cpp
index 540ff21a..c86233b0 100644
--- sip/cpp/sip_propgridwxPGVariantList.cpp
+++ sip/cpp/sip_propgridwxPGVariantList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -99,15 +99,15 @@ sipMappedTypeDef sipTypeDef__propgrid_wxPGVariantList = {
         SIP_TYPE_MAPPED,
         sipNameNr_wxPGVariantList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         -1,
         {0, 0, 1},
-        0, 0,
-        0, 0,
-        0, 0,
-        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        0, SIP_NULLPTR,
+        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR}
     },
     assign_wxPGVariantList,
     array_wxPGVariantList,
diff --git a/sip/cpp/sip_propgridwxPGWindowList.cpp b/sip/cpp/sip_propgridwxPGWindowList.cpp
index 72d24a86..368084d6 100644
--- sip/cpp/sip_propgridwxPGWindowList.cpp
+++ sip/cpp/sip_propgridwxPGWindowList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -228,7 +228,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPGWindowList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPGWindowList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PGWindowList,
diff --git a/sip/cpp/sip_propgridwxPropertyCategory.cpp b/sip/cpp/sip_propgridwxPropertyCategory.cpp
index 760b954c..187a5ade 100644
--- sip/cpp/sip_propgridwxPropertyCategory.cpp
+++ sip/cpp/sip_propgridwxPropertyCategory.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -709,7 +709,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyCategory = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPropertyCategory,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyCategory,
diff --git a/sip/cpp/sip_propgridwxPropertyGrid.cpp b/sip/cpp/sip_propgridwxPropertyGrid.cpp
index 9ec3ed26..201037d4 100644
--- sip/cpp/sip_propgridwxPropertyGrid.cpp
+++ sip/cpp/sip_propgridwxPropertyGrid.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1273,7 +1273,7 @@ static PyObject *meth_wxPropertyGrid_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxPropertyGrid_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertyGrid_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertyGrid_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertyGrid_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1307,7 +1307,7 @@ static PyObject *meth_wxPropertyGrid_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPropertyGrid_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertyGrid_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertyGrid_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertyGrid_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1341,7 +1341,7 @@ static PyObject *meth_wxPropertyGrid_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxPropertyGrid_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertyGrid_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertyGrid_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertyGrid_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -7062,7 +7062,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGrid = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGrid,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGrid,
diff --git a/sip/cpp/sip_propgridwxPropertyGridEvent.cpp b/sip/cpp/sip_propgridwxPropertyGridEvent.cpp
index 0124097d..8b5cbd18 100644
--- sip/cpp/sip_propgridwxPropertyGridEvent.cpp
+++ sip/cpp/sip_propgridwxPropertyGridEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -601,7 +601,7 @@ static PyObject *meth_wxPropertyGridEvent_WasVetoed(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPropertyGridEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxPropertyGridEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxPropertyGridEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxPropertyGridEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -792,7 +792,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridEvent,
diff --git a/sip/cpp/sip_propgridwxPropertyGridHitTestResult.cpp b/sip/cpp/sip_propgridwxPropertyGridHitTestResult.cpp
index 1b751faa..22ef666e 100644
--- sip/cpp/sip_propgridwxPropertyGridHitTestResult.cpp
+++ sip/cpp/sip_propgridwxPropertyGridHitTestResult.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -262,7 +262,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridHitTestResult = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridHitTestResult,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridHitTestResult,
diff --git a/sip/cpp/sip_propgridwxPropertyGridInterface.cpp b/sip/cpp/sip_propgridwxPropertyGridInterface.cpp
index 5b5ee343..092b6091 100644
--- sip/cpp/sip_propgridwxPropertyGridInterface.cpp
+++ sip/cpp/sip_propgridwxPropertyGridInterface.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -4517,7 +4517,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridInterface = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridInterface,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridInterface,
diff --git a/sip/cpp/sip_propgridwxPropertyGridIterator.cpp b/sip/cpp/sip_propgridwxPropertyGridIterator.cpp
index 410a51c3..96012b9a 100644
--- sip/cpp/sip_propgridwxPropertyGridIterator.cpp
+++ sip/cpp/sip_propgridwxPropertyGridIterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -205,7 +205,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridIterator = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridIterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridIterator,
diff --git a/sip/cpp/sip_propgridwxPropertyGridIteratorBase.cpp b/sip/cpp/sip_propgridwxPropertyGridIteratorBase.cpp
index d720a19c..e34b7650 100644
--- sip/cpp/sip_propgridwxPropertyGridIteratorBase.cpp
+++ sip/cpp/sip_propgridwxPropertyGridIteratorBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -416,7 +416,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridIteratorBase = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridIteratorBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridIteratorBase,
diff --git a/sip/cpp/sip_propgridwxPropertyGridManager.cpp b/sip/cpp/sip_propgridwxPropertyGridManager.cpp
index f4abd4c8..4dbeb7d7 100644
--- sip/cpp/sip_propgridwxPropertyGridManager.cpp
+++ sip/cpp/sip_propgridwxPropertyGridManager.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1155,7 +1155,7 @@ static PyObject *meth_wxPropertyGridManager_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxPropertyGridManager_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertyGridManager_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertyGridManager_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertyGridManager_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1189,7 +1189,7 @@ static PyObject *meth_wxPropertyGridManager_DoGetPosition(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxPropertyGridManager_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertyGridManager_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertyGridManager_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertyGridManager_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1223,7 +1223,7 @@ static PyObject *meth_wxPropertyGridManager_DoGetSize(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxPropertyGridManager_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxPropertyGridManager_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxPropertyGridManager_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertyGridManager_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3460,7 +3460,7 @@ static PyObject *meth_wxPropertyGridManager_GetClassDefaultAttributes(PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxPropertyGridManager_RefreshProperty, "RefreshProperty(self, p: PGProperty)");
+PyDoc_STRVAR(doc_wxPropertyGridManager_RefreshProperty, "RefreshProperty(self, p: Optional[PGProperty])");
 
 extern "C" {static PyObject *meth_wxPropertyGridManager_RefreshProperty(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxPropertyGridManager_RefreshProperty(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3765,7 +3765,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridManager = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridManager,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridManager,
diff --git a/sip/cpp/sip_propgridwxPropertyGridPage.cpp b/sip/cpp/sip_propgridwxPropertyGridPage.cpp
index 95da3962..87cb84fd 100644
--- sip/cpp/sip_propgridwxPropertyGridPage.cpp
+++ sip/cpp/sip_propgridwxPropertyGridPage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -966,7 +966,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridPage = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridPage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridPage,
diff --git a/sip/cpp/sip_propgridwxPropertyGridPageState.cpp b/sip/cpp/sip_propgridwxPropertyGridPageState.cpp
index 6b5dd0a8..de82348d 100644
--- sip/cpp/sip_propgridwxPropertyGridPageState.cpp
+++ sip/cpp/sip_propgridwxPropertyGridPageState.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1040,7 +1040,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridPageState = {
         SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridPageState,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridPageState,
diff --git a/sip/cpp/sip_propgridwxPropertyGridPopulator.cpp b/sip/cpp/sip_propgridwxPropertyGridPopulator.cpp
index f107c01a..0f1a4e2c 100644
--- sip/cpp/sip_propgridwxPropertyGridPopulator.cpp
+++ sip/cpp/sip_propgridwxPropertyGridPopulator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -656,7 +656,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxPropertyGridPopulator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxPropertyGridPopulator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_PropertyGridPopulator,
diff --git a/sip/cpp/sip_propgridwxStringProperty.cpp b/sip/cpp/sip_propgridwxStringProperty.cpp
index 5e41dfaa..cc0dfd6e 100644
--- sip/cpp/sip_propgridwxStringProperty.cpp
+++ sip/cpp/sip_propgridwxStringProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -732,7 +732,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxStringProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStringProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StringProperty,
diff --git a/sip/cpp/sip_propgridwxSystemColourProperty.cpp b/sip/cpp/sip_propgridwxSystemColourProperty.cpp
index 10250f9c..9886c4b0 100644
--- sip/cpp/sip_propgridwxSystemColourProperty.cpp
+++ sip/cpp/sip_propgridwxSystemColourProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1195,7 +1195,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxSystemColourProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSystemColourProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SystemColourProperty,
diff --git a/sip/cpp/sip_propgridwxUIntProperty.cpp b/sip/cpp/sip_propgridwxUIntProperty.cpp
index aac329c2..5fd1e906 100644
--- sip/cpp/sip_propgridwxUIntProperty.cpp
+++ sip/cpp/sip_propgridwxUIntProperty.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -928,7 +928,7 @@ sipClassTypeDef sipTypeDef__propgrid_wxUIntProperty = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxUIntProperty,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_UIntProperty,
diff --git a/sip/cpp/sip_ribboncmodule.cpp b/sip/cpp/sip_ribboncmodule.cpp
index 1090bece..d5cb72b4 100644
--- sip/cpp/sip_ribboncmodule.cpp
+++ sip/cpp/sip_ribboncmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1322,7 +1322,6 @@ PyMODINIT_FUNC PyInit__ribbon()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._ribbon",
diff --git a/sip/cpp/sip_ribbonwxRibbonAUIArtProvider.cpp b/sip/cpp/sip_ribbonwxRibbonAUIArtProvider.cpp
index 3cda36e8..40d625c8 100644
--- sip/cpp/sip_ribbonwxRibbonAUIArtProvider.cpp
+++ sip/cpp/sip_ribbonwxRibbonAUIArtProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2131,7 +2131,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonAUIArtProvider = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRibbonAUIArtProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonAUIArtProvider,
diff --git a/sip/cpp/sip_ribbonwxRibbonArtProvider.cpp b/sip/cpp/sip_ribbonwxRibbonArtProvider.cpp
index 1e11b746..b2fa2d49 100644
--- sip/cpp/sip_ribbonwxRibbonArtProvider.cpp
+++ sip/cpp/sip_ribbonwxRibbonArtProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3190,7 +3190,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonArtProvider = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonArtProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonArtProvider,
diff --git a/sip/cpp/sip_ribbonwxRibbonBar.cpp b/sip/cpp/sip_ribbonwxRibbonBar.cpp
index c4a36d6b..83eb63eb 100644
--- sip/cpp/sip_ribbonwxRibbonBar.cpp
+++ sip/cpp/sip_ribbonwxRibbonBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2209,7 +2209,7 @@ static PyObject *meth_wxRibbonBar_AcceptsFocusFromKeyboard(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2247,7 +2247,7 @@ static PyObject *meth_wxRibbonBar_AddChild(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2385,7 +2385,7 @@ static PyObject *meth_wxRibbonBar_OnInternalIdle(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRibbonBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRibbonBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2572,7 +2572,7 @@ static PyObject *meth_wxRibbonBar_SetValidator(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRibbonBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRibbonBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2721,7 +2721,7 @@ static PyObject *meth_wxRibbonBar_DoEnable(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2755,7 +2755,7 @@ static PyObject *meth_wxRibbonBar_DoGetPosition(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2789,7 +2789,7 @@ static PyObject *meth_wxRibbonBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3610,7 +3610,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonBar,
diff --git a/sip/cpp/sip_ribbonwxRibbonBarEvent.cpp b/sip/cpp/sip_ribbonwxRibbonBarEvent.cpp
index 433fb8c8..5e94e5ce 100644
--- sip/cpp/sip_ribbonwxRibbonBarEvent.cpp
+++ sip/cpp/sip_ribbonwxRibbonBarEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -161,7 +161,7 @@ static PyObject *meth_wxRibbonBarEvent_SetPage(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonBarEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxRibbonBarEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxRibbonBarEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonBarEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -322,7 +322,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonBarEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonBarEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonBarEvent,
diff --git a/sip/cpp/sip_ribbonwxRibbonButtonBar.cpp b/sip/cpp/sip_ribbonwxRibbonButtonBar.cpp
index cb1f6a10..77c0c956 100644
--- sip/cpp/sip_ribbonwxRibbonButtonBar.cpp
+++ sip/cpp/sip_ribbonwxRibbonButtonBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2743,7 +2743,7 @@ static PyObject *meth_wxRibbonButtonBar_AcceptsFocusFromKeyboard(PyObject *sipSe
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonButtonBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonButtonBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonButtonBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonButtonBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2781,7 +2781,7 @@ static PyObject *meth_wxRibbonButtonBar_AddChild(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonButtonBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonButtonBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonButtonBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonButtonBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2919,7 +2919,7 @@ static PyObject *meth_wxRibbonButtonBar_OnInternalIdle(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonButtonBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRibbonButtonBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRibbonButtonBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonButtonBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3106,7 +3106,7 @@ static PyObject *meth_wxRibbonButtonBar_SetValidator(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonButtonBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRibbonButtonBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRibbonButtonBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonButtonBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3255,7 +3255,7 @@ static PyObject *meth_wxRibbonButtonBar_DoEnable(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonButtonBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonButtonBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonButtonBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonButtonBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3289,7 +3289,7 @@ static PyObject *meth_wxRibbonButtonBar_DoGetPosition(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonButtonBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonButtonBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonButtonBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonButtonBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3323,7 +3323,7 @@ static PyObject *meth_wxRibbonButtonBar_DoGetSize(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonButtonBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonButtonBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonButtonBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonButtonBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4153,7 +4153,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonButtonBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonButtonBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonButtonBar,
diff --git a/sip/cpp/sip_ribbonwxRibbonButtonBarButtonBase.cpp b/sip/cpp/sip_ribbonwxRibbonButtonBarButtonBase.cpp
index cc1f18b3..0cc4f31c 100644
--- sip/cpp/sip_ribbonwxRibbonButtonBarButtonBase.cpp
+++ sip/cpp/sip_ribbonwxRibbonButtonBarButtonBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -27,7 +27,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonButtonBarButtonBase = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRibbonButtonBarButtonBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonButtonBarButtonBase,
diff --git a/sip/cpp/sip_ribbonwxRibbonButtonBarEvent.cpp b/sip/cpp/sip_ribbonwxRibbonButtonBarEvent.cpp
index 3c7c6fe9..39b01169 100644
--- sip/cpp/sip_ribbonwxRibbonButtonBarEvent.cpp
+++ sip/cpp/sip_ribbonwxRibbonButtonBarEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -276,7 +276,7 @@ static PyObject *meth_wxRibbonButtonBarEvent_PopupMenu(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonButtonBarEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxRibbonButtonBarEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxRibbonButtonBarEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonButtonBarEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -444,7 +444,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonButtonBarEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonButtonBarEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonButtonBarEvent,
diff --git a/sip/cpp/sip_ribbonwxRibbonControl.cpp b/sip/cpp/sip_ribbonwxRibbonControl.cpp
index 4fc93232..da3c09b0 100644
--- sip/cpp/sip_ribbonwxRibbonControl.cpp
+++ sip/cpp/sip_ribbonwxRibbonControl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1608,7 +1608,7 @@ static PyObject *meth_wxRibbonControl_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonControl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonControl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonControl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonControl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1646,7 +1646,7 @@ static PyObject *meth_wxRibbonControl_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonControl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonControl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonControl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonControl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1784,7 +1784,7 @@ static PyObject *meth_wxRibbonControl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonControl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRibbonControl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRibbonControl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonControl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1971,7 +1971,7 @@ static PyObject *meth_wxRibbonControl_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonControl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRibbonControl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRibbonControl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonControl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2120,7 +2120,7 @@ static PyObject *meth_wxRibbonControl_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonControl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonControl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonControl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonControl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2154,7 +2154,7 @@ static PyObject *meth_wxRibbonControl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonControl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonControl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonControl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonControl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2188,7 +2188,7 @@ static PyObject *meth_wxRibbonControl_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonControl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonControl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonControl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonControl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3093,7 +3093,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonControl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonControl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonControl,
diff --git a/sip/cpp/sip_ribbonwxRibbonGallery.cpp b/sip/cpp/sip_ribbonwxRibbonGallery.cpp
index 96994385..b45c734b 100644
--- sip/cpp/sip_ribbonwxRibbonGallery.cpp
+++ sip/cpp/sip_ribbonwxRibbonGallery.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2063,7 +2063,7 @@ static PyObject *meth_wxRibbonGallery_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonGallery_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonGallery_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonGallery_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonGallery_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2101,7 +2101,7 @@ static PyObject *meth_wxRibbonGallery_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonGallery_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonGallery_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonGallery_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonGallery_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2239,7 +2239,7 @@ static PyObject *meth_wxRibbonGallery_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonGallery_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRibbonGallery_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRibbonGallery_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonGallery_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2426,7 +2426,7 @@ static PyObject *meth_wxRibbonGallery_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonGallery_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRibbonGallery_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRibbonGallery_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonGallery_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2575,7 +2575,7 @@ static PyObject *meth_wxRibbonGallery_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonGallery_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonGallery_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonGallery_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonGallery_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2609,7 +2609,7 @@ static PyObject *meth_wxRibbonGallery_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonGallery_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonGallery_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonGallery_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonGallery_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2643,7 +2643,7 @@ static PyObject *meth_wxRibbonGallery_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonGallery_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonGallery_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonGallery_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonGallery_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3466,7 +3466,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonGallery = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonGallery,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonGallery,
diff --git a/sip/cpp/sip_ribbonwxRibbonGalleryEvent.cpp b/sip/cpp/sip_ribbonwxRibbonGalleryEvent.cpp
index 34b4512d..3bcdb790 100644
--- sip/cpp/sip_ribbonwxRibbonGalleryEvent.cpp
+++ sip/cpp/sip_ribbonwxRibbonGalleryEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -236,7 +236,7 @@ static PyObject *meth_wxRibbonGalleryEvent_SetGalleryItem(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonGalleryEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxRibbonGalleryEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxRibbonGalleryEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonGalleryEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -400,7 +400,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonGalleryEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonGalleryEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonGalleryEvent,
diff --git a/sip/cpp/sip_ribbonwxRibbonGalleryItem.cpp b/sip/cpp/sip_ribbonwxRibbonGalleryItem.cpp
index b4d4a70f..e6baf7a5 100644
--- sip/cpp/sip_ribbonwxRibbonGalleryItem.cpp
+++ sip/cpp/sip_ribbonwxRibbonGalleryItem.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -27,7 +27,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonGalleryItem = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRibbonGalleryItem,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonGalleryItem,
diff --git a/sip/cpp/sip_ribbonwxRibbonMSWArtProvider.cpp b/sip/cpp/sip_ribbonwxRibbonMSWArtProvider.cpp
index a06ef5d3..8f928cdd 100644
--- sip/cpp/sip_ribbonwxRibbonMSWArtProvider.cpp
+++ sip/cpp/sip_ribbonwxRibbonMSWArtProvider.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2971,7 +2971,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonMSWArtProvider = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRibbonMSWArtProvider,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonMSWArtProvider,
diff --git a/sip/cpp/sip_ribbonwxRibbonPage.cpp b/sip/cpp/sip_ribbonwxRibbonPage.cpp
index 0187df2a..5026fbc5 100644
--- sip/cpp/sip_ribbonwxRibbonPage.cpp
+++ sip/cpp/sip_ribbonwxRibbonPage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1742,7 +1742,7 @@ static PyObject *meth_wxRibbonPage_AcceptsFocusFromKeyboard(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPage_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonPage_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonPage_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPage_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1780,7 +1780,7 @@ static PyObject *meth_wxRibbonPage_AddChild(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPage_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonPage_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonPage_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPage_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1918,7 +1918,7 @@ static PyObject *meth_wxRibbonPage_OnInternalIdle(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPage_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRibbonPage_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRibbonPage_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPage_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2105,7 +2105,7 @@ static PyObject *meth_wxRibbonPage_SetValidator(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPage_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRibbonPage_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRibbonPage_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPage_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2254,7 +2254,7 @@ static PyObject *meth_wxRibbonPage_DoEnable(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPage_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonPage_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonPage_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPage_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2288,7 +2288,7 @@ static PyObject *meth_wxRibbonPage_DoGetPosition(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPage_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonPage_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonPage_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPage_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2322,7 +2322,7 @@ static PyObject *meth_wxRibbonPage_DoGetSize(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPage_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonPage_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonPage_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPage_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3129,7 +3129,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonPage = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonPage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonPage,
diff --git a/sip/cpp/sip_ribbonwxRibbonPageTabInfo.cpp b/sip/cpp/sip_ribbonwxRibbonPageTabInfo.cpp
index 7139051a..445e957c 100644
--- sip/cpp/sip_ribbonwxRibbonPageTabInfo.cpp
+++ sip/cpp/sip_ribbonwxRibbonPageTabInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -421,7 +421,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonPageTabInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRibbonPageTabInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonPageTabInfo,
diff --git a/sip/cpp/sip_ribbonwxRibbonPageTabInfoArray.cpp b/sip/cpp/sip_ribbonwxRibbonPageTabInfoArray.cpp
index 6283c273..89051d7d 100644
--- sip/cpp/sip_ribbonwxRibbonPageTabInfoArray.cpp
+++ sip/cpp/sip_ribbonwxRibbonPageTabInfoArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonPageTabInfoArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRibbonPageTabInfoArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonPageTabInfoArray,
diff --git a/sip/cpp/sip_ribbonwxRibbonPanel.cpp b/sip/cpp/sip_ribbonwxRibbonPanel.cpp
index e8beb622..6af9af56 100644
--- sip/cpp/sip_ribbonwxRibbonPanel.cpp
+++ sip/cpp/sip_ribbonwxRibbonPanel.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1819,7 +1819,7 @@ static PyObject *meth_wxRibbonPanel_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPanel_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonPanel_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonPanel_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPanel_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1857,7 +1857,7 @@ static PyObject *meth_wxRibbonPanel_AddChild(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPanel_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonPanel_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonPanel_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPanel_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1995,7 +1995,7 @@ static PyObject *meth_wxRibbonPanel_OnInternalIdle(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPanel_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRibbonPanel_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRibbonPanel_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPanel_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2182,7 +2182,7 @@ static PyObject *meth_wxRibbonPanel_SetValidator(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPanel_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRibbonPanel_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRibbonPanel_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPanel_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2331,7 +2331,7 @@ static PyObject *meth_wxRibbonPanel_DoEnable(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPanel_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonPanel_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonPanel_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPanel_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2365,7 +2365,7 @@ static PyObject *meth_wxRibbonPanel_DoGetPosition(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPanel_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonPanel_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonPanel_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPanel_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2399,7 +2399,7 @@ static PyObject *meth_wxRibbonPanel_DoGetSize(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPanel_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonPanel_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonPanel_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPanel_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3219,7 +3219,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonPanel = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonPanel,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonPanel,
diff --git a/sip/cpp/sip_ribbonwxRibbonPanelEvent.cpp b/sip/cpp/sip_ribbonwxRibbonPanelEvent.cpp
index c66fc253..34ea1f78 100644
--- sip/cpp/sip_ribbonwxRibbonPanelEvent.cpp
+++ sip/cpp/sip_ribbonwxRibbonPanelEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -161,7 +161,7 @@ static PyObject *meth_wxRibbonPanelEvent_SetPanel(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonPanelEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxRibbonPanelEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxRibbonPanelEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonPanelEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -322,7 +322,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonPanelEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonPanelEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonPanelEvent,
diff --git a/sip/cpp/sip_ribbonwxRibbonToolBar.cpp b/sip/cpp/sip_ribbonwxRibbonToolBar.cpp
index 470011b4..d135e949 100644
--- sip/cpp/sip_ribbonwxRibbonToolBar.cpp
+++ sip/cpp/sip_ribbonwxRibbonToolBar.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2858,7 +2858,7 @@ static PyObject *meth_wxRibbonToolBar_AcceptsFocusFromKeyboard(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonToolBar_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonToolBar_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonToolBar_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonToolBar_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2896,7 +2896,7 @@ static PyObject *meth_wxRibbonToolBar_AddChild(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonToolBar_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRibbonToolBar_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRibbonToolBar_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonToolBar_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3034,7 +3034,7 @@ static PyObject *meth_wxRibbonToolBar_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonToolBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRibbonToolBar_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRibbonToolBar_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonToolBar_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3221,7 +3221,7 @@ static PyObject *meth_wxRibbonToolBar_SetValidator(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonToolBar_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRibbonToolBar_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRibbonToolBar_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonToolBar_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3370,7 +3370,7 @@ static PyObject *meth_wxRibbonToolBar_DoEnable(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonToolBar_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonToolBar_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonToolBar_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonToolBar_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3404,7 +3404,7 @@ static PyObject *meth_wxRibbonToolBar_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonToolBar_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonToolBar_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonToolBar_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonToolBar_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3438,7 +3438,7 @@ static PyObject *meth_wxRibbonToolBar_DoGetSize(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonToolBar_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRibbonToolBar_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRibbonToolBar_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonToolBar_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4271,7 +4271,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonToolBar = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonToolBar,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonToolBar,
diff --git a/sip/cpp/sip_ribbonwxRibbonToolBarEvent.cpp b/sip/cpp/sip_ribbonwxRibbonToolBarEvent.cpp
index 596a0669..5a903022 100644
--- sip/cpp/sip_ribbonwxRibbonToolBarEvent.cpp
+++ sip/cpp/sip_ribbonwxRibbonToolBarEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -196,7 +196,7 @@ static PyObject *meth_wxRibbonToolBarEvent_PopupMenu(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRibbonToolBarEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxRibbonToolBarEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxRibbonToolBarEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxRibbonToolBarEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -356,7 +356,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonToolBarEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRibbonToolBarEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonToolBarEvent,
diff --git a/sip/cpp/sip_ribbonwxRibbonToolBarToolBase.cpp b/sip/cpp/sip_ribbonwxRibbonToolBarToolBase.cpp
index 02a8c9e7..787e7e30 100644
--- sip/cpp/sip_ribbonwxRibbonToolBarToolBase.cpp
+++ sip/cpp/sip_ribbonwxRibbonToolBarToolBase.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -27,7 +27,7 @@ sipClassTypeDef sipTypeDef__ribbon_wxRibbonToolBarToolBase = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRibbonToolBarToolBase,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RibbonToolBarToolBase,
diff --git a/sip/cpp/sip_richtextcmodule.cpp b/sip/cpp/sip_richtextcmodule.cpp
index b7a902ff..23fb4b0d 100644
--- sip/cpp/sip_richtextcmodule.cpp
+++ sip/cpp/sip_richtextcmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -4277,7 +4277,6 @@ PyMODINIT_FUNC PyInit__richtext()
         {sipName_RichTextHasStyle, SIP_MLMETH_CAST(func_RichTextHasStyle), METH_VARARGS|METH_KEYWORDS, doc_RichTextHasStyle},
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._richtext",
diff --git a/sip/cpp/sip_richtextwxRichTextAction.cpp b/sip/cpp/sip_richtextwxRichTextAction.cpp
index 4b987b77..eae15a58 100644
--- sip/cpp/sip_richtextwxRichTextAction.cpp
+++ sip/cpp/sip_richtextwxRichTextAction.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1149,7 +1149,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextAction = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextAction,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextAction,
diff --git a/sip/cpp/sip_richtextwxRichTextActionList.cpp b/sip/cpp/sip_richtextwxRichTextActionList.cpp
index 7bba90ce..15a13186 100644
--- sip/cpp/sip_richtextwxRichTextActionList.cpp
+++ sip/cpp/sip_richtextwxRichTextActionList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -34,7 +34,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxRichTextActionList_index, "index(self, obj: RichTextAction) -> int");
+PyDoc_STRVAR(doc_wxRichTextActionList_index, "index(self, obj: Optional[RichTextAction]) -> int");
 
 extern "C" {static PyObject *meth_wxRichTextActionList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextActionList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -303,7 +303,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextActionList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextActionList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextActionList,
diff --git a/sip/cpp/sip_richtextwxRichTextActionList_iterator.cpp b/sip/cpp/sip_richtextwxRichTextActionList_iterator.cpp
index f0405d78..7d5eac08 100644
--- sip/cpp/sip_richtextwxRichTextActionList_iterator.cpp
+++ sip/cpp/sip_richtextwxRichTextActionList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextActionList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextActionList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextActionList_iterator,
diff --git a/sip/cpp/sip_richtextwxRichTextAttr.cpp b/sip/cpp/sip_richtextwxRichTextAttr.cpp
index 8cd45a87..195a4d66 100644
--- sip/cpp/sip_richtextwxRichTextAttr.cpp
+++ sip/cpp/sip_richtextwxRichTextAttr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -628,7 +628,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextAttr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextAttr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextAttr,
diff --git a/sip/cpp/sip_richtextwxRichTextAttrArray.cpp b/sip/cpp/sip_richtextwxRichTextAttrArray.cpp
index 18f1813f..862c42c9 100644
--- sip/cpp/sip_richtextwxRichTextAttrArray.cpp
+++ sip/cpp/sip_richtextwxRichTextAttrArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextAttrArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextAttrArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextAttrArray,
diff --git a/sip/cpp/sip_richtextwxRichTextBox.cpp b/sip/cpp/sip_richtextwxRichTextBox.cpp
index c06ef0d2..58709a35 100644
--- sip/cpp/sip_richtextwxRichTextBox.cpp
+++ sip/cpp/sip_richtextwxRichTextBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2259,7 +2259,7 @@ static PyObject *meth_wxRichTextBox_Layout(PyObject *sipSelf, PyObject *sipArgs,
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextBox_GetRangeSize, "GetRangeSize(self, range: RichTextRange, size: Size, dc: DC, context: RichTextDrawingContext, flags: int, position: Point = wxPoint(0,0), parentSize: Size = wxDefaultSize, partialExtents: typing.Optional[object] = None) -> Tuple[bool, int]");
+PyDoc_STRVAR(doc_wxRichTextBox_GetRangeSize, "GetRangeSize(self, range: RichTextRange, size: Size, dc: DC, context: RichTextDrawingContext, flags: int, position: Point = wxPoint(0, 0), parentSize: Size = wxDefaultSize, partialExtents: Optional[Any] = None) -> (bool, int)");
 
 extern "C" {static PyObject *meth_wxRichTextBox_GetRangeSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextBox_GetRangeSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2490,7 +2490,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextBox,
diff --git a/sip/cpp/sip_richtextwxRichTextBuffer.cpp b/sip/cpp/sip_richtextwxRichTextBuffer.cpp
index 34289ac3..acd04e8b 100644
--- sip/cpp/sip_richtextwxRichTextBuffer.cpp
+++ sip/cpp/sip_richtextwxRichTextBuffer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -6990,7 +6990,7 @@ static PyObject *meth_wxRichTextBuffer_Layout(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextBuffer_GetRangeSize, "GetRangeSize(self, range: RichTextRange, size: Size, dc: DC, context: RichTextDrawingContext, flags: int, position: Point = wxPoint(0,0), parentSize: Size = wxDefaultSize, partialExtents: typing.Optional[object] = None) -> Tuple[bool, int]");
+PyDoc_STRVAR(doc_wxRichTextBuffer_GetRangeSize, "GetRangeSize(self, range: RichTextRange, size: Size, dc: DC, context: RichTextDrawingContext, flags: int, position: Point = wxPoint(0, 0), parentSize: Size = wxDefaultSize, partialExtents: Optional[Any] = None) -> (bool, int)");
 
 extern "C" {static PyObject *meth_wxRichTextBuffer_GetRangeSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextBuffer_GetRangeSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -7333,7 +7333,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextBuffer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextBuffer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextBuffer,
diff --git a/sip/cpp/sip_richtextwxRichTextBufferDataObject.cpp b/sip/cpp/sip_richtextwxRichTextBufferDataObject.cpp
index 9103ddc9..1f3e05aa 100644
--- sip/cpp/sip_richtextwxRichTextBufferDataObject.cpp
+++ sip/cpp/sip_richtextwxRichTextBufferDataObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -637,7 +637,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextBufferDataObject = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextBufferDataObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextBufferDataObject,
diff --git a/sip/cpp/sip_richtextwxRichTextCell.cpp b/sip/cpp/sip_richtextwxRichTextCell.cpp
index 4d4580f9..7816f96c 100644
--- sip/cpp/sip_richtextwxRichTextCell.cpp
+++ sip/cpp/sip_richtextwxRichTextCell.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2460,7 +2460,7 @@ static PyObject *meth_wxRichTextCell_Layout(PyObject *sipSelf, PyObject *sipArgs
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCell_GetRangeSize, "GetRangeSize(self, range: RichTextRange, size: Size, dc: DC, context: RichTextDrawingContext, flags: int, position: Point = wxPoint(0,0), parentSize: Size = wxDefaultSize, partialExtents: typing.Optional[object] = None) -> Tuple[bool, int]");
+PyDoc_STRVAR(doc_wxRichTextCell_GetRangeSize, "GetRangeSize(self, range: RichTextRange, size: Size, dc: DC, context: RichTextDrawingContext, flags: int, position: Point = wxPoint(0, 0), parentSize: Size = wxDefaultSize, partialExtents: Optional[Any] = None) -> (bool, int)");
 
 extern "C" {static PyObject *meth_wxRichTextCell_GetRangeSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCell_GetRangeSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2697,7 +2697,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextCell = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextCell,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextCell,
diff --git a/sip/cpp/sip_richtextwxRichTextCharacterStyleDefinition.cpp b/sip/cpp/sip_richtextwxRichTextCharacterStyleDefinition.cpp
index 92d87372..9ca03ffb 100644
--- sip/cpp/sip_richtextwxRichTextCharacterStyleDefinition.cpp
+++ sip/cpp/sip_richtextwxRichTextCharacterStyleDefinition.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -209,7 +209,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextCharacterStyleDefinition = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextCharacterStyleDefinition,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextCharacterStyleDefinition,
diff --git a/sip/cpp/sip_richtextwxRichTextCommand.cpp b/sip/cpp/sip_richtextwxRichTextCommand.cpp
index c92ba8ee..3bf5aeef 100644
--- sip/cpp/sip_richtextwxRichTextCommand.cpp
+++ sip/cpp/sip_richtextwxRichTextCommand.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -455,7 +455,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextCommand = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextCommand,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextCommand,
diff --git a/sip/cpp/sip_richtextwxRichTextCompositeObject.cpp b/sip/cpp/sip_richtextwxRichTextCompositeObject.cpp
index fbd01bc2..7457d9fc 100644
--- sip/cpp/sip_richtextwxRichTextCompositeObject.cpp
+++ sip/cpp/sip_richtextwxRichTextCompositeObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1930,7 +1930,7 @@ static PyObject *meth_wxRichTextCompositeObject_Move(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCompositeObject_Clone, "Clone(self) -> RichTextObject");
+PyDoc_STRVAR(doc_wxRichTextCompositeObject_Clone, "Clone(self) -> Optional[RichTextObject]");
 
 extern "C" {static PyObject *meth_wxRichTextCompositeObject_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCompositeObject_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -2107,7 +2107,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextCompositeObject = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextCompositeObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextCompositeObject,
diff --git a/sip/cpp/sip_richtextwxRichTextContextMenuPropertiesInfo.cpp b/sip/cpp/sip_richtextwxRichTextContextMenuPropertiesInfo.cpp
index bdfd6f23..97caac0a 100644
--- sip/cpp/sip_richtextwxRichTextContextMenuPropertiesInfo.cpp
+++ sip/cpp/sip_richtextwxRichTextContextMenuPropertiesInfo.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -594,7 +594,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextContextMenuPropertiesInfo = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextContextMenuPropertiesInfo,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextContextMenuPropertiesInfo,
diff --git a/sip/cpp/sip_richtextwxRichTextCtrl.cpp b/sip/cpp/sip_richtextwxRichTextCtrl.cpp
index caf7c129..a5ab32d1 100644
--- sip/cpp/sip_richtextwxRichTextCtrl.cpp
+++ sip/cpp/sip_richtextwxRichTextCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -14212,7 +14212,7 @@ static PyObject *meth_wxRichTextCtrl_AcceptsFocusFromKeyboard(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -14250,7 +14250,7 @@ static PyObject *meth_wxRichTextCtrl_AddChild(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -14354,7 +14354,7 @@ static PyObject *meth_wxRichTextCtrl_OnInternalIdle(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRichTextCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRichTextCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -14541,7 +14541,7 @@ static PyObject *meth_wxRichTextCtrl_SetValidator(PyObject *sipSelf, PyObject *s
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRichTextCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRichTextCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -14690,7 +14690,7 @@ static PyObject *meth_wxRichTextCtrl_DoEnable(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -14724,7 +14724,7 @@ static PyObject *meth_wxRichTextCtrl_DoGetPosition(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -14758,7 +14758,7 @@ static PyObject *meth_wxRichTextCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -16371,7 +16371,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextCtrl,
diff --git a/sip/cpp/sip_richtextwxRichTextDrawingContext.cpp b/sip/cpp/sip_richtextwxRichTextDrawingContext.cpp
index fe4b2f36..97bb095f 100644
--- sip/cpp/sip_richtextwxRichTextDrawingContext.cpp
+++ sip/cpp/sip_richtextwxRichTextDrawingContext.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -936,7 +936,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextDrawingContext = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextDrawingContext,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextDrawingContext,
diff --git a/sip/cpp/sip_richtextwxRichTextDrawingHandler.cpp b/sip/cpp/sip_richtextwxRichTextDrawingHandler.cpp
index d0e2fd6e..d82bb22d 100644
--- sip/cpp/sip_richtextwxRichTextDrawingHandler.cpp
+++ sip/cpp/sip_richtextwxRichTextDrawingHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -657,7 +657,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextDrawingHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextDrawingHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextDrawingHandler,
diff --git a/sip/cpp/sip_richtextwxRichTextDrawingHandlerList.cpp b/sip/cpp/sip_richtextwxRichTextDrawingHandlerList.cpp
index 577a86bd..52a24c21 100644
--- sip/cpp/sip_richtextwxRichTextDrawingHandlerList.cpp
+++ sip/cpp/sip_richtextwxRichTextDrawingHandlerList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -34,7 +34,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxRichTextDrawingHandlerList_index, "index(self, obj: RichTextDrawingHandler) -> int");
+PyDoc_STRVAR(doc_wxRichTextDrawingHandlerList_index, "index(self, obj: Optional[RichTextDrawingHandler]) -> int");
 
 extern "C" {static PyObject *meth_wxRichTextDrawingHandlerList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextDrawingHandlerList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -303,7 +303,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextDrawingHandlerList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextDrawingHandlerList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextDrawingHandlerList,
diff --git a/sip/cpp/sip_richtextwxRichTextDrawingHandlerList_iterator.cpp b/sip/cpp/sip_richtextwxRichTextDrawingHandlerList_iterator.cpp
index 51275c86..801c5357 100644
--- sip/cpp/sip_richtextwxRichTextDrawingHandlerList_iterator.cpp
+++ sip/cpp/sip_richtextwxRichTextDrawingHandlerList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextDrawingHandlerList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextDrawingHandlerList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextDrawingHandlerList_iterator,
diff --git a/sip/cpp/sip_richtextwxRichTextEvent.cpp b/sip/cpp/sip_richtextwxRichTextEvent.cpp
index 2278bbb7..c3fbcb82 100644
--- sip/cpp/sip_richtextwxRichTextEvent.cpp
+++ sip/cpp/sip_richtextwxRichTextEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -879,7 +879,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextEvent,
diff --git a/sip/cpp/sip_richtextwxRichTextField.cpp b/sip/cpp/sip_richtextwxRichTextField.cpp
index c4c97c15..1e789071 100644
--- sip/cpp/sip_richtextwxRichTextField.cpp
+++ sip/cpp/sip_richtextwxRichTextField.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2824,7 +2824,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextField = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextField,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextField,
diff --git a/sip/cpp/sip_richtextwxRichTextFieldType.cpp b/sip/cpp/sip_richtextwxRichTextFieldType.cpp
index 7d578f8d..e13e29fc 100644
--- sip/cpp/sip_richtextwxRichTextFieldType.cpp
+++ sip/cpp/sip_richtextwxRichTextFieldType.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -865,7 +865,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFieldType = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFieldType,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFieldType,
diff --git a/sip/cpp/sip_richtextwxRichTextFieldTypeStandard.cpp b/sip/cpp/sip_richtextwxRichTextFieldTypeStandard.cpp
index 056d440f..6b62b399 100644
--- sip/cpp/sip_richtextwxRichTextFieldTypeStandard.cpp
+++ sip/cpp/sip_richtextwxRichTextFieldTypeStandard.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1645,7 +1645,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFieldTypeStandard = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFieldTypeStandard,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFieldTypeStandard,
diff --git a/sip/cpp/sip_richtextwxRichTextFileHandler.cpp b/sip/cpp/sip_richtextwxRichTextFileHandler.cpp
index 92fdf350..b0710cc1 100644
--- sip/cpp/sip_richtextwxRichTextFileHandler.cpp
+++ sip/cpp/sip_richtextwxRichTextFileHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1194,7 +1194,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFileHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFileHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFileHandler,
diff --git a/sip/cpp/sip_richtextwxRichTextFileHandlerList.cpp b/sip/cpp/sip_richtextwxRichTextFileHandlerList.cpp
index 237bf5f4..11bde66f 100644
--- sip/cpp/sip_richtextwxRichTextFileHandlerList.cpp
+++ sip/cpp/sip_richtextwxRichTextFileHandlerList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -34,7 +34,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxRichTextFileHandlerList_index, "index(self, obj: RichTextFileHandler) -> int");
+PyDoc_STRVAR(doc_wxRichTextFileHandlerList_index, "index(self, obj: Optional[RichTextFileHandler]) -> int");
 
 extern "C" {static PyObject *meth_wxRichTextFileHandlerList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextFileHandlerList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -303,7 +303,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFileHandlerList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFileHandlerList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFileHandlerList,
diff --git a/sip/cpp/sip_richtextwxRichTextFileHandlerList_iterator.cpp b/sip/cpp/sip_richtextwxRichTextFileHandlerList_iterator.cpp
index 1cedf845..c98d9d9c 100644
--- sip/cpp/sip_richtextwxRichTextFileHandlerList_iterator.cpp
+++ sip/cpp/sip_richtextwxRichTextFileHandlerList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFileHandlerList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFileHandlerList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFileHandlerList_iterator,
diff --git a/sip/cpp/sip_richtextwxRichTextFloatCollector.cpp b/sip/cpp/sip_richtextwxRichTextFloatCollector.cpp
index c29dac70..af6029f5 100644
--- sip/cpp/sip_richtextwxRichTextFloatCollector.cpp
+++ sip/cpp/sip_richtextwxRichTextFloatCollector.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -27,7 +27,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFloatCollector = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFloatCollector,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFloatCollector,
diff --git a/sip/cpp/sip_richtextwxRichTextFontTable.cpp b/sip/cpp/sip_richtextwxRichTextFontTable.cpp
index 3c35afa0..074ba578 100644
--- sip/cpp/sip_richtextwxRichTextFontTable.cpp
+++ sip/cpp/sip_richtextwxRichTextFontTable.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -420,7 +420,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFontTable = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFontTable,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFontTable,
diff --git a/sip/cpp/sip_richtextwxRichTextFormattingDialog.cpp b/sip/cpp/sip_richtextwxRichTextFormattingDialog.cpp
index 2a35573c..108fa51c 100644
--- sip/cpp/sip_richtextwxRichTextFormattingDialog.cpp
+++ sip/cpp/sip_richtextwxRichTextFormattingDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2331,7 +2331,7 @@ static PyObject *meth_wxRichTextFormattingDialog_AcceptsFocusFromKeyboard(PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextFormattingDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextFormattingDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextFormattingDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextFormattingDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2369,7 +2369,7 @@ static PyObject *meth_wxRichTextFormattingDialog_AddChild(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextFormattingDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextFormattingDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextFormattingDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextFormattingDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2507,7 +2507,7 @@ static PyObject *meth_wxRichTextFormattingDialog_OnInternalIdle(PyObject *sipSel
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextFormattingDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRichTextFormattingDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRichTextFormattingDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextFormattingDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2694,7 +2694,7 @@ static PyObject *meth_wxRichTextFormattingDialog_SetValidator(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextFormattingDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRichTextFormattingDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRichTextFormattingDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextFormattingDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2843,7 +2843,7 @@ static PyObject *meth_wxRichTextFormattingDialog_DoEnable(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextFormattingDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextFormattingDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextFormattingDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextFormattingDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2877,7 +2877,7 @@ static PyObject *meth_wxRichTextFormattingDialog_DoGetPosition(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextFormattingDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextFormattingDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextFormattingDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextFormattingDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2911,7 +2911,7 @@ static PyObject *meth_wxRichTextFormattingDialog_DoGetSize(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextFormattingDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextFormattingDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextFormattingDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextFormattingDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3750,7 +3750,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFormattingDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFormattingDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFormattingDialog,
diff --git a/sip/cpp/sip_richtextwxRichTextFormattingDialogFactory.cpp b/sip/cpp/sip_richtextwxRichTextFormattingDialogFactory.cpp
index 6cf49e6a..a0ef3056 100644
--- sip/cpp/sip_richtextwxRichTextFormattingDialogFactory.cpp
+++ sip/cpp/sip_richtextwxRichTextFormattingDialogFactory.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -661,7 +661,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextFormattingDialogFactory = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextFormattingDialogFactory,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextFormattingDialogFactory,
diff --git a/sip/cpp/sip_richtextwxRichTextHTMLHandler.cpp b/sip/cpp/sip_richtextwxRichTextHTMLHandler.cpp
index 72024769..1cd5bd1c 100644
--- sip/cpp/sip_richtextwxRichTextHTMLHandler.cpp
+++ sip/cpp/sip_richtextwxRichTextHTMLHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -587,7 +587,7 @@ static PyObject *meth_wxRichTextHTMLHandler_SetFileCounter(PyObject *, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextHTMLHandler_DoLoadFile, "DoLoadFile(self, buffer: RichTextBuffer, stream: InputStream) -> bool");
+PyDoc_STRVAR(doc_wxRichTextHTMLHandler_DoLoadFile, "DoLoadFile(self, buffer: Optional[RichTextBuffer], stream: InputStream) -> bool");
 
 extern "C" {static PyObject *meth_wxRichTextHTMLHandler_DoLoadFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextHTMLHandler_DoLoadFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -630,7 +630,7 @@ static PyObject *meth_wxRichTextHTMLHandler_DoLoadFile(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextHTMLHandler_DoSaveFile, "DoSaveFile(self, buffer: RichTextBuffer, stream: OutputStream) -> bool");
+PyDoc_STRVAR(doc_wxRichTextHTMLHandler_DoSaveFile, "DoSaveFile(self, buffer: Optional[RichTextBuffer], stream: OutputStream) -> bool");
 
 extern "C" {static PyObject *meth_wxRichTextHTMLHandler_DoSaveFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextHTMLHandler_DoSaveFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -837,7 +837,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextHTMLHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextHTMLHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextHTMLHandler,
diff --git a/sip/cpp/sip_richtextwxRichTextHeaderFooterData.cpp b/sip/cpp/sip_richtextwxRichTextHeaderFooterData.cpp
index 9166328a..8cb81a63 100644
--- sip/cpp/sip_richtextwxRichTextHeaderFooterData.cpp
+++ sip/cpp/sip_richtextwxRichTextHeaderFooterData.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -892,7 +892,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextHeaderFooterData = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextHeaderFooterData,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextHeaderFooterData,
diff --git a/sip/cpp/sip_richtextwxRichTextImage.cpp b/sip/cpp/sip_richtextwxRichTextImage.cpp
index 36080306..55288b08 100644
--- sip/cpp/sip_richtextwxRichTextImage.cpp
+++ sip/cpp/sip_richtextwxRichTextImage.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2318,7 +2318,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextImage = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextImage,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextImage,
diff --git a/sip/cpp/sip_richtextwxRichTextImageBlock.cpp b/sip/cpp/sip_richtextwxRichTextImageBlock.cpp
index b62e5726..ebe71295 100644
--- sip/cpp/sip_richtextwxRichTextImageBlock.cpp
+++ sip/cpp/sip_richtextwxRichTextImageBlock.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1225,7 +1225,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextImageBlock = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextImageBlock,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextImageBlock,
diff --git a/sip/cpp/sip_richtextwxRichTextLine.cpp b/sip/cpp/sip_richtextwxRichTextLine.cpp
index fb9abf58..170660c6 100644
--- sip/cpp/sip_richtextwxRichTextLine.cpp
+++ sip/cpp/sip_richtextwxRichTextLine.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -911,7 +911,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextLine = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextLine,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextLine,
diff --git a/sip/cpp/sip_richtextwxRichTextListStyleDefinition.cpp b/sip/cpp/sip_richtextwxRichTextListStyleDefinition.cpp
index d7baa501..572a115a 100644
--- sip/cpp/sip_richtextwxRichTextListStyleDefinition.cpp
+++ sip/cpp/sip_richtextwxRichTextListStyleDefinition.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -555,7 +555,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextListStyleDefinition = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextListStyleDefinition,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextListStyleDefinition,
diff --git a/sip/cpp/sip_richtextwxRichTextObject.cpp b/sip/cpp/sip_richtextwxRichTextObject.cpp
index 71d4f30c..93c8263c 100644
--- sip/cpp/sip_richtextwxRichTextObject.cpp
+++ sip/cpp/sip_richtextwxRichTextObject.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -4705,7 +4705,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextObject = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextObject,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextObject,
diff --git a/sip/cpp/sip_richtextwxRichTextObjectAddress.cpp b/sip/cpp/sip_richtextwxRichTextObjectAddress.cpp
index 3a7ed062..b6c59401 100644
--- sip/cpp/sip_richtextwxRichTextObjectAddress.cpp
+++ sip/cpp/sip_richtextwxRichTextObjectAddress.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -396,7 +396,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextObjectAddress = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextObjectAddress,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextObjectAddress,
diff --git a/sip/cpp/sip_richtextwxRichTextObjectList.cpp b/sip/cpp/sip_richtextwxRichTextObjectList.cpp
index 1037b748..593ac7c5 100644
--- sip/cpp/sip_richtextwxRichTextObjectList.cpp
+++ sip/cpp/sip_richtextwxRichTextObjectList.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -32,7 +32,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxRichTextObjectList_index, "index(self, obj: RichTextObject) -> int");
+PyDoc_STRVAR(doc_wxRichTextObjectList_index, "index(self, obj: Optional[RichTextObject]) -> int");
 
 extern "C" {static PyObject *meth_wxRichTextObjectList_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextObjectList_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -301,7 +301,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextObjectList = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextObjectList,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextObjectList,
diff --git a/sip/cpp/sip_richtextwxRichTextObjectList_.cpp b/sip/cpp/sip_richtextwxRichTextObjectList_.cpp
index ff106860..fb256b39 100644
--- sip/cpp/sip_richtextwxRichTextObjectList_.cpp
+++ sip/cpp/sip_richtextwxRichTextObjectList_.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -34,7 +34,7 @@
         };
 
 
-PyDoc_STRVAR(doc_wxRichTextObjectList__index, "index(self, obj: RichTextObject) -> int");
+PyDoc_STRVAR(doc_wxRichTextObjectList__index, "index(self, obj: Optional[RichTextObject]) -> int");
 
 extern "C" {static PyObject *meth_wxRichTextObjectList__index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextObjectList__index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -303,7 +303,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextObjectList_ = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextObjectList_,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextObjectList_,
diff --git a/sip/cpp/sip_richtextwxRichTextObjectList__iterator.cpp b/sip/cpp/sip_richtextwxRichTextObjectList__iterator.cpp
index 952af4b3..ea8e2385 100644
--- sip/cpp/sip_richtextwxRichTextObjectList__iterator.cpp
+++ sip/cpp/sip_richtextwxRichTextObjectList__iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextObjectList__iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextObjectList__iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextObjectList__iterator,
diff --git a/sip/cpp/sip_richtextwxRichTextObjectList_iterator.cpp b/sip/cpp/sip_richtextwxRichTextObjectList_iterator.cpp
index 14a721e7..01ea72c2 100644
--- sip/cpp/sip_richtextwxRichTextObjectList_iterator.cpp
+++ sip/cpp/sip_richtextwxRichTextObjectList_iterator.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -93,7 +93,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextObjectList_iterator = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextObjectList_iterator,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextObjectList_iterator,
diff --git a/sip/cpp/sip_richtextwxRichTextObjectPtrArray.cpp b/sip/cpp/sip_richtextwxRichTextObjectPtrArray.cpp
index e0953ff4..04208a35 100644
--- sip/cpp/sip_richtextwxRichTextObjectPtrArray.cpp
+++ sip/cpp/sip_richtextwxRichTextObjectPtrArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -11,7 +11,7 @@
         #include <wx/richtext/richtextbuffer.h>
 
 
-PyDoc_STRVAR(doc_wxRichTextObjectPtrArray_append, "append(self, obj: RichTextObject)");
+PyDoc_STRVAR(doc_wxRichTextObjectPtrArray_append, "append(self, obj: Optional[RichTextObject])");
 
 extern "C" {static PyObject *meth_wxRichTextObjectPtrArray_append(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextObjectPtrArray_append(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -41,7 +41,7 @@ static PyObject *meth_wxRichTextObjectPtrArray_append(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextObjectPtrArray_index, "index(self, obj: RichTextObject) -> int");
+PyDoc_STRVAR(doc_wxRichTextObjectPtrArray_index, "index(self, obj: Optional[RichTextObject]) -> int");
 
 extern "C" {static PyObject *meth_wxRichTextObjectPtrArray_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextObjectPtrArray_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -285,7 +285,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextObjectPtrArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextObjectPtrArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextObjectPtrArray,
diff --git a/sip/cpp/sip_richtextwxRichTextObjectPtrArrayArray.cpp b/sip/cpp/sip_richtextwxRichTextObjectPtrArrayArray.cpp
index 1e063a86..a4ed4e5f 100644
--- sip/cpp/sip_richtextwxRichTextObjectPtrArrayArray.cpp
+++ sip/cpp/sip_richtextwxRichTextObjectPtrArrayArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -286,7 +286,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextObjectPtrArrayArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextObjectPtrArrayArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextObjectPtrArrayArray,
diff --git a/sip/cpp/sip_richtextwxRichTextParagraph.cpp b/sip/cpp/sip_richtextwxRichTextParagraph.cpp
index e049f4ef..c5c2a49e 100644
--- sip/cpp/sip_richtextwxRichTextParagraph.cpp
+++ sip/cpp/sip_richtextwxRichTextParagraph.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2731,7 +2731,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextParagraph = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextParagraph,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextParagraph,
diff --git a/sip/cpp/sip_richtextwxRichTextParagraphLayoutBox.cpp b/sip/cpp/sip_richtextwxRichTextParagraphLayoutBox.cpp
index bf4e36af..71773020 100644
--- sip/cpp/sip_richtextwxRichTextParagraphLayoutBox.cpp
+++ sip/cpp/sip_richtextwxRichTextParagraphLayoutBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -5916,7 +5916,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextParagraphLayoutBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextParagraphLayoutBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextParagraphLayoutBox,
diff --git a/sip/cpp/sip_richtextwxRichTextParagraphStyleDefinition.cpp b/sip/cpp/sip_richtextwxRichTextParagraphStyleDefinition.cpp
index 011ad241..78b72537 100644
--- sip/cpp/sip_richtextwxRichTextParagraphStyleDefinition.cpp
+++ sip/cpp/sip_richtextwxRichTextParagraphStyleDefinition.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -295,7 +295,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextParagraphStyleDefinition = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextParagraphStyleDefinition,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextParagraphStyleDefinition,
diff --git a/sip/cpp/sip_richtextwxRichTextPlainText.cpp b/sip/cpp/sip_richtextwxRichTextPlainText.cpp
index 2e4c0aa3..505a8a96 100644
--- sip/cpp/sip_richtextwxRichTextPlainText.cpp
+++ sip/cpp/sip_richtextwxRichTextPlainText.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2074,7 +2074,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextPlainText = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextPlainText,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextPlainText,
diff --git a/sip/cpp/sip_richtextwxRichTextPlainTextHandler.cpp b/sip/cpp/sip_richtextwxRichTextPlainTextHandler.cpp
index a3395605..1a195215 100644
--- sip/cpp/sip_richtextwxRichTextPlainTextHandler.cpp
+++ sip/cpp/sip_richtextwxRichTextPlainTextHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -533,7 +533,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextPlainTextHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextPlainTextHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextPlainTextHandler,
diff --git a/sip/cpp/sip_richtextwxRichTextPrinting.cpp b/sip/cpp/sip_richtextwxRichTextPrinting.cpp
index 55202ef1..78619a58 100644
--- sip/cpp/sip_richtextwxRichTextPrinting.cpp
+++ sip/cpp/sip_richtextwxRichTextPrinting.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1107,7 +1107,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextPrinting = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextPrinting,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextPrinting,
diff --git a/sip/cpp/sip_richtextwxRichTextPrintout.cpp b/sip/cpp/sip_richtextwxRichTextPrintout.cpp
index 2ac36b1d..6fa69211 100644
--- sip/cpp/sip_richtextwxRichTextPrintout.cpp
+++ sip/cpp/sip_richtextwxRichTextPrintout.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -755,7 +755,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextPrintout = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextPrintout,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextPrintout,
diff --git a/sip/cpp/sip_richtextwxRichTextProperties.cpp b/sip/cpp/sip_richtextwxRichTextProperties.cpp
index 97d5cd04..d5dd38a8 100644
--- sip/cpp/sip_richtextwxRichTextProperties.cpp
+++ sip/cpp/sip_richtextwxRichTextProperties.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1122,7 +1122,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextProperties = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextProperties,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextProperties,
diff --git a/sip/cpp/sip_richtextwxRichTextRange.cpp b/sip/cpp/sip_richtextwxRichTextRange.cpp
index 88d258b6..7b6c4190 100644
--- sip/cpp/sip_richtextwxRichTextRange.cpp
+++ sip/cpp/sip_richtextwxRichTextRange.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -910,7 +910,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextRange = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextRange,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextRange,
diff --git a/sip/cpp/sip_richtextwxRichTextRangeArray.cpp b/sip/cpp/sip_richtextwxRichTextRangeArray.cpp
index 7c4fb7ab..e401552d 100644
--- sip/cpp/sip_richtextwxRichTextRangeArray.cpp
+++ sip/cpp/sip_richtextwxRichTextRangeArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -291,7 +291,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextRangeArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextRangeArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextRangeArray,
diff --git a/sip/cpp/sip_richtextwxRichTextRenderer.cpp b/sip/cpp/sip_richtextwxRichTextRenderer.cpp
index 598713cd..b69dfcfe 100644
--- sip/cpp/sip_richtextwxRichTextRenderer.cpp
+++ sip/cpp/sip_richtextwxRichTextRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -527,7 +527,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextRenderer = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextRenderer,
diff --git a/sip/cpp/sip_richtextwxRichTextSelection.cpp b/sip/cpp/sip_richtextwxRichTextSelection.cpp
index 142e40b3..9a731ab7 100644
--- sip/cpp/sip_richtextwxRichTextSelection.cpp
+++ sip/cpp/sip_richtextwxRichTextSelection.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1081,7 +1081,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextSelection = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextSelection,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextSelection,
diff --git a/sip/cpp/sip_richtextwxRichTextStdRenderer.cpp b/sip/cpp/sip_richtextwxRichTextStdRenderer.cpp
index bde2c167..3b7d85c1 100644
--- sip/cpp/sip_richtextwxRichTextStdRenderer.cpp
+++ sip/cpp/sip_richtextwxRichTextStdRenderer.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -519,7 +519,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextStdRenderer = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextStdRenderer,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextStdRenderer,
diff --git a/sip/cpp/sip_richtextwxRichTextStyleComboCtrl.cpp b/sip/cpp/sip_richtextwxRichTextStyleComboCtrl.cpp
index a8d6b078..e91cf94c 100644
--- sip/cpp/sip_richtextwxRichTextStyleComboCtrl.cpp
+++ sip/cpp/sip_richtextwxRichTextStyleComboCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1911,7 +1911,7 @@ static PyObject *meth_wxRichTextStyleComboCtrl_AcceptsFocusFromKeyboard(PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleComboCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleComboCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1949,7 +1949,7 @@ static PyObject *meth_wxRichTextStyleComboCtrl_AddChild(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleComboCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleComboCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2087,7 +2087,7 @@ static PyObject *meth_wxRichTextStyleComboCtrl_OnInternalIdle(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRichTextStyleComboCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleComboCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2274,7 +2274,7 @@ static PyObject *meth_wxRichTextStyleComboCtrl_SetValidator(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRichTextStyleComboCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleComboCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2423,7 +2423,7 @@ static PyObject *meth_wxRichTextStyleComboCtrl_DoEnable(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleComboCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleComboCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2457,7 +2457,7 @@ static PyObject *meth_wxRichTextStyleComboCtrl_DoGetPosition(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleComboCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleComboCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2491,7 +2491,7 @@ static PyObject *meth_wxRichTextStyleComboCtrl_DoGetSize(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleComboCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleComboCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleComboCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3298,7 +3298,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextStyleComboCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextStyleComboCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextStyleComboCtrl,
diff --git a/sip/cpp/sip_richtextwxRichTextStyleDefinition.cpp b/sip/cpp/sip_richtextwxRichTextStyleDefinition.cpp
index f22659db..86c5608f 100644
--- sip/cpp/sip_richtextwxRichTextStyleDefinition.cpp
+++ sip/cpp/sip_richtextwxRichTextStyleDefinition.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -512,7 +512,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextStyleDefinition = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextStyleDefinition,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextStyleDefinition,
diff --git a/sip/cpp/sip_richtextwxRichTextStyleListBox.cpp b/sip/cpp/sip_richtextwxRichTextStyleListBox.cpp
index 7c9d5ca5..b37f8147 100644
--- sip/cpp/sip_richtextwxRichTextStyleListBox.cpp
+++ sip/cpp/sip_richtextwxRichTextStyleListBox.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -2963,7 +2963,7 @@ static PyObject *meth_wxRichTextStyleListBox_AcceptsFocusFromKeyboard(PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListBox_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextStyleListBox_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListBox_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListBox_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3001,7 +3001,7 @@ static PyObject *meth_wxRichTextStyleListBox_AddChild(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListBox_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextStyleListBox_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListBox_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListBox_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3139,7 +3139,7 @@ static PyObject *meth_wxRichTextStyleListBox_OnInternalIdle(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRichTextStyleListBox_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListBox_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListBox_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -3326,7 +3326,7 @@ static PyObject *meth_wxRichTextStyleListBox_SetValidator(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListBox_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRichTextStyleListBox_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListBox_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListBox_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -3475,7 +3475,7 @@ static PyObject *meth_wxRichTextStyleListBox_DoEnable(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListBox_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleListBox_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListBox_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListBox_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3509,7 +3509,7 @@ static PyObject *meth_wxRichTextStyleListBox_DoGetPosition(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListBox_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleListBox_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListBox_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListBox_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3543,7 +3543,7 @@ static PyObject *meth_wxRichTextStyleListBox_DoGetSize(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListBox_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleListBox_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListBox_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListBox_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -4425,7 +4425,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextStyleListBox = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextStyleListBox,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextStyleListBox,
diff --git a/sip/cpp/sip_richtextwxRichTextStyleListCtrl.cpp b/sip/cpp/sip_richtextwxRichTextStyleListCtrl.cpp
index 886b2413..04622927 100644
--- sip/cpp/sip_richtextwxRichTextStyleListCtrl.cpp
+++ sip/cpp/sip_richtextwxRichTextStyleListCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1584,7 +1584,7 @@ static PyObject *meth_wxRichTextStyleListCtrl_AcceptsFocusFromKeyboard(PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListCtrl_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListCtrl_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1622,7 +1622,7 @@ static PyObject *meth_wxRichTextStyleListCtrl_AddChild(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListCtrl_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListCtrl_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1760,7 +1760,7 @@ static PyObject *meth_wxRichTextStyleListCtrl_OnInternalIdle(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListCtrl_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListCtrl_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -1947,7 +1947,7 @@ static PyObject *meth_wxRichTextStyleListCtrl_SetValidator(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListCtrl_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListCtrl_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2096,7 +2096,7 @@ static PyObject *meth_wxRichTextStyleListCtrl_DoEnable(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2130,7 +2130,7 @@ static PyObject *meth_wxRichTextStyleListCtrl_DoGetPosition(PyObject *sipSelf, P
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2164,7 +2164,7 @@ static PyObject *meth_wxRichTextStyleListCtrl_DoGetSize(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleListCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleListCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleListCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2974,7 +2974,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextStyleListCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextStyleListCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextStyleListCtrl,
diff --git a/sip/cpp/sip_richtextwxRichTextStyleOrganiserDialog.cpp b/sip/cpp/sip_richtextwxRichTextStyleOrganiserDialog.cpp
index 0926cc51..f40b8637 100644
--- sip/cpp/sip_richtextwxRichTextStyleOrganiserDialog.cpp
+++ sip/cpp/sip_richtextwxRichTextStyleOrganiserDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1747,7 +1747,7 @@ static PyObject *meth_wxRichTextStyleOrganiserDialog_AcceptsFocusFromKeyboard(Py
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleOrganiserDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleOrganiserDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1785,7 +1785,7 @@ static PyObject *meth_wxRichTextStyleOrganiserDialog_AddChild(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleOrganiserDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleOrganiserDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1923,7 +1923,7 @@ static PyObject *meth_wxRichTextStyleOrganiserDialog_OnInternalIdle(PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxRichTextStyleOrganiserDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleOrganiserDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2110,7 +2110,7 @@ static PyObject *meth_wxRichTextStyleOrganiserDialog_SetValidator(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxRichTextStyleOrganiserDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleOrganiserDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2259,7 +2259,7 @@ static PyObject *meth_wxRichTextStyleOrganiserDialog_DoEnable(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleOrganiserDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleOrganiserDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2293,7 +2293,7 @@ static PyObject *meth_wxRichTextStyleOrganiserDialog_DoGetPosition(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleOrganiserDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleOrganiserDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2327,7 +2327,7 @@ static PyObject *meth_wxRichTextStyleOrganiserDialog_DoGetSize(PyObject *sipSelf
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxRichTextStyleOrganiserDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxRichTextStyleOrganiserDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextStyleOrganiserDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3154,7 +3154,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextStyleOrganiserDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextStyleOrganiserDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextStyleOrganiserDialog,
diff --git a/sip/cpp/sip_richtextwxRichTextStyleSheet.cpp b/sip/cpp/sip_richtextwxRichTextStyleSheet.cpp
index 8feb79d0..54c612a3 100644
--- sip/cpp/sip_richtextwxRichTextStyleSheet.cpp
+++ sip/cpp/sip_richtextwxRichTextStyleSheet.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1201,7 +1201,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextStyleSheet = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextStyleSheet,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextStyleSheet,
diff --git a/sip/cpp/sip_richtextwxRichTextTable.cpp b/sip/cpp/sip_richtextwxRichTextTable.cpp
index 34cbf59f..30f62785 100644
--- sip/cpp/sip_richtextwxRichTextTable.cpp
+++ sip/cpp/sip_richtextwxRichTextTable.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3651,7 +3651,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextTable = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextTable,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextTable,
diff --git a/sip/cpp/sip_richtextwxRichTextVariantArray.cpp b/sip/cpp/sip_richtextwxRichTextVariantArray.cpp
index c237639f..afa87d44 100644
--- sip/cpp/sip_richtextwxRichTextVariantArray.cpp
+++ sip/cpp/sip_richtextwxRichTextVariantArray.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -12,7 +12,7 @@
 
 
 
-PyDoc_STRVAR(doc_wxRichTextVariantArray_append, "append(self, obj: object)");
+PyDoc_STRVAR(doc_wxRichTextVariantArray_append, "append(self, obj: Optional[Any])");
 
 extern "C" {static PyObject *meth_wxRichTextVariantArray_append(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextVariantArray_append(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -44,7 +44,7 @@ static PyObject *meth_wxRichTextVariantArray_append(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextVariantArray_index, "index(self, obj: object) -> int");
+PyDoc_STRVAR(doc_wxRichTextVariantArray_index, "index(self, obj: Optional[Any]) -> int");
 
 extern "C" {static PyObject *meth_wxRichTextVariantArray_index(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextVariantArray_index(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -292,7 +292,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextVariantArray = {
         SIP_TYPE_CLASS,
         sipNameNr_wxRichTextVariantArray,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextVariantArray,
diff --git a/sip/cpp/sip_richtextwxRichTextXMLHandler.cpp b/sip/cpp/sip_richtextwxRichTextXMLHandler.cpp
index 37401b64..4894f131 100644
--- sip/cpp/sip_richtextwxRichTextXMLHandler.cpp
+++ sip/cpp/sip_richtextwxRichTextXMLHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -461,7 +461,7 @@ static PyObject *meth_wxRichTextXMLHandler_ClearNodeToClassMap(PyObject *, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextXMLHandler_DoLoadFile, "DoLoadFile(self, buffer: RichTextBuffer, stream: InputStream) -> bool");
+PyDoc_STRVAR(doc_wxRichTextXMLHandler_DoLoadFile, "DoLoadFile(self, buffer: Optional[RichTextBuffer], stream: InputStream) -> bool");
 
 extern "C" {static PyObject *meth_wxRichTextXMLHandler_DoLoadFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextXMLHandler_DoLoadFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -504,7 +504,7 @@ static PyObject *meth_wxRichTextXMLHandler_DoLoadFile(PyObject *sipSelf, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxRichTextXMLHandler_DoSaveFile, "DoSaveFile(self, buffer: RichTextBuffer, stream: OutputStream) -> bool");
+PyDoc_STRVAR(doc_wxRichTextXMLHandler_DoSaveFile, "DoSaveFile(self, buffer: Optional[RichTextBuffer], stream: OutputStream) -> bool");
 
 extern "C" {static PyObject *meth_wxRichTextXMLHandler_DoSaveFile(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxRichTextXMLHandler_DoSaveFile(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -703,7 +703,7 @@ sipClassTypeDef sipTypeDef__richtext_wxRichTextXMLHandler = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxRichTextXMLHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_RichTextXMLHandler,
diff --git a/sip/cpp/sip_richtextwxSymbolPickerDialog.cpp b/sip/cpp/sip_richtextwxSymbolPickerDialog.cpp
index bc768d67..418fe40a 100644
--- sip/cpp/sip_richtextwxSymbolPickerDialog.cpp
+++ sip/cpp/sip_richtextwxSymbolPickerDialog.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1755,7 +1755,7 @@ static PyObject *meth_wxSymbolPickerDialog_AcceptsFocusFromKeyboard(PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxSymbolPickerDialog_AddChild, "AddChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSymbolPickerDialog_AddChild, "AddChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSymbolPickerDialog_AddChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSymbolPickerDialog_AddChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1793,7 +1793,7 @@ static PyObject *meth_wxSymbolPickerDialog_AddChild(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSymbolPickerDialog_RemoveChild, "RemoveChild(self, child: WindowBase)");
+PyDoc_STRVAR(doc_wxSymbolPickerDialog_RemoveChild, "RemoveChild(self, child: Optional[WindowBase])");
 
 extern "C" {static PyObject *meth_wxSymbolPickerDialog_RemoveChild(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSymbolPickerDialog_RemoveChild(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1931,7 +1931,7 @@ static PyObject *meth_wxSymbolPickerDialog_OnInternalIdle(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxSymbolPickerDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Window");
+PyDoc_STRVAR(doc_wxSymbolPickerDialog_GetMainWindowOfCompositeControl, "GetMainWindowOfCompositeControl(self) -> Optional[Window]");
 
 extern "C" {static PyObject *meth_wxSymbolPickerDialog_GetMainWindowOfCompositeControl(PyObject *, PyObject *);}
 static PyObject *meth_wxSymbolPickerDialog_GetMainWindowOfCompositeControl(PyObject *sipSelf, PyObject *sipArgs)
@@ -2118,7 +2118,7 @@ static PyObject *meth_wxSymbolPickerDialog_SetValidator(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxSymbolPickerDialog_GetValidator, "GetValidator(self) -> Validator");
+PyDoc_STRVAR(doc_wxSymbolPickerDialog_GetValidator, "GetValidator(self) -> Optional[Validator]");
 
 extern "C" {static PyObject *meth_wxSymbolPickerDialog_GetValidator(PyObject *, PyObject *);}
 static PyObject *meth_wxSymbolPickerDialog_GetValidator(PyObject *sipSelf, PyObject *sipArgs)
@@ -2267,7 +2267,7 @@ static PyObject *meth_wxSymbolPickerDialog_DoEnable(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSymbolPickerDialog_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSymbolPickerDialog_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSymbolPickerDialog_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSymbolPickerDialog_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2301,7 +2301,7 @@ static PyObject *meth_wxSymbolPickerDialog_DoGetPosition(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxSymbolPickerDialog_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSymbolPickerDialog_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSymbolPickerDialog_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSymbolPickerDialog_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2335,7 +2335,7 @@ static PyObject *meth_wxSymbolPickerDialog_DoGetSize(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxSymbolPickerDialog_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxSymbolPickerDialog_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxSymbolPickerDialog_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxSymbolPickerDialog_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -3167,7 +3167,7 @@ sipClassTypeDef sipTypeDef__richtext_wxSymbolPickerDialog = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxSymbolPickerDialog,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_SymbolPickerDialog,
diff --git a/sip/cpp/sip_richtextwxTextAttrBorder.cpp b/sip/cpp/sip_richtextwxTextAttrBorder.cpp
index 235723f6..8799664c 100644
--- sip/cpp/sip_richtextwxTextAttrBorder.cpp
+++ sip/cpp/sip_richtextwxTextAttrBorder.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1308,7 +1308,7 @@ sipClassTypeDef sipTypeDef__richtext_wxTextAttrBorder = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextAttrBorder,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextAttrBorder,
diff --git a/sip/cpp/sip_richtextwxTextAttrBorders.cpp b/sip/cpp/sip_richtextwxTextAttrBorders.cpp
index 3d5089fe..ca1dc244 100644
--- sip/cpp/sip_richtextwxTextAttrBorders.cpp
+++ sip/cpp/sip_richtextwxTextAttrBorders.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1010,7 +1010,7 @@ sipClassTypeDef sipTypeDef__richtext_wxTextAttrBorders = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextAttrBorders,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextAttrBorders,
diff --git a/sip/cpp/sip_richtextwxTextAttrDimension.cpp b/sip/cpp/sip_richtextwxTextAttrDimension.cpp
index 8ae46041..5702d3f6 100644
--- sip/cpp/sip_richtextwxTextAttrDimension.cpp
+++ sip/cpp/sip_richtextwxTextAttrDimension.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1039,7 +1039,7 @@ sipClassTypeDef sipTypeDef__richtext_wxTextAttrDimension = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextAttrDimension,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextAttrDimension,
diff --git a/sip/cpp/sip_richtextwxTextAttrDimensionConverter.cpp b/sip/cpp/sip_richtextwxTextAttrDimensionConverter.cpp
index ce1f657a..31192577 100644
--- sip/cpp/sip_richtextwxTextAttrDimensionConverter.cpp
+++ sip/cpp/sip_richtextwxTextAttrDimensionConverter.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -430,7 +430,7 @@ sipClassTypeDef sipTypeDef__richtext_wxTextAttrDimensionConverter = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextAttrDimensionConverter,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextAttrDimensionConverter,
diff --git a/sip/cpp/sip_richtextwxTextAttrDimensions.cpp b/sip/cpp/sip_richtextwxTextAttrDimensions.cpp
index 1a09fb85..efbf227d 100644
--- sip/cpp/sip_richtextwxTextAttrDimensions.cpp
+++ sip/cpp/sip_richtextwxTextAttrDimensions.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -832,7 +832,7 @@ sipClassTypeDef sipTypeDef__richtext_wxTextAttrDimensions = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextAttrDimensions,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextAttrDimensions,
diff --git a/sip/cpp/sip_richtextwxTextAttrShadow.cpp b/sip/cpp/sip_richtextwxTextAttrShadow.cpp
index 829b72b4..be63f2fb 100644
--- sip/cpp/sip_richtextwxTextAttrShadow.cpp
+++ sip/cpp/sip_richtextwxTextAttrShadow.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1521,7 +1521,7 @@ sipClassTypeDef sipTypeDef__richtext_wxTextAttrShadow = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextAttrShadow,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextAttrShadow,
diff --git a/sip/cpp/sip_richtextwxTextAttrSize.cpp b/sip/cpp/sip_richtextwxTextAttrSize.cpp
index 463a4d78..b513835b 100644
--- sip/cpp/sip_richtextwxTextAttrSize.cpp
+++ sip/cpp/sip_richtextwxTextAttrSize.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -812,7 +812,7 @@ sipClassTypeDef sipTypeDef__richtext_wxTextAttrSize = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextAttrSize,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextAttrSize,
diff --git a/sip/cpp/sip_richtextwxTextBoxAttr.cpp b/sip/cpp/sip_richtextwxTextBoxAttr.cpp
index d01bf1ca..e2ed8ffe 100644
--- sip/cpp/sip_richtextwxTextBoxAttr.cpp
+++ sip/cpp/sip_richtextwxTextBoxAttr.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -3448,7 +3448,7 @@ sipClassTypeDef sipTypeDef__richtext_wxTextBoxAttr = {
         SIP_TYPE_CLASS,
         sipNameNr_wxTextBoxAttr,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_TextBoxAttr,
diff --git a/sip/cpp/sip_stccmodule.cpp b/sip/cpp/sip_stccmodule.cpp
index 5a595a24..6a118f25 100644
--- sip/cpp/sip_stccmodule.cpp
+++ sip/cpp/sip_stccmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -6017,7 +6017,6 @@ PyMODINIT_FUNC PyInit__stc()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._stc",
diff --git a/sip/cpp/sip_stcwxStyledTextCtrl.cpp b/sip/cpp/sip_stcwxStyledTextCtrl.cpp
index 0dfe757e..033dd008 100644
--- sip/cpp/sip_stcwxStyledTextCtrl.cpp
+++ sip/cpp/sip_stcwxStyledTextCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1706,7 +1706,7 @@ static PyObject *meth_wxStyledTextCtrl_DoEnable(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_DoGetPosition, "DoGetPosition(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStyledTextCtrl_DoGetPosition, "DoGetPosition(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStyledTextCtrl_DoGetPosition(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStyledTextCtrl_DoGetPosition(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1740,7 +1740,7 @@ static PyObject *meth_wxStyledTextCtrl_DoGetPosition(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_DoGetSize, "DoGetSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStyledTextCtrl_DoGetSize, "DoGetSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStyledTextCtrl_DoGetSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStyledTextCtrl_DoGetSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -1774,7 +1774,7 @@ static PyObject *meth_wxStyledTextCtrl_DoGetSize(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_DoGetClientSize, "DoGetClientSize(self) -> Tuple[int, int]");
+PyDoc_STRVAR(doc_wxStyledTextCtrl_DoGetClientSize, "DoGetClientSize(self) -> (Optional[int], Optional[int])");
 
 extern "C" {static PyObject *meth_wxStyledTextCtrl_DoGetClientSize(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStyledTextCtrl_DoGetClientSize(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -2338,7 +2338,7 @@ static PyObject *meth_wxStyledTextCtrl_TryAfter(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_Create, "Create(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=STCNameStr) -> bool\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_Create, "Create(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=STCNameStr) -> bool\n"
 "\n"
 "Create the UI elements for a STC that was created with the default\n"
 "ctor.");
@@ -5726,7 +5726,7 @@ static PyObject *meth_wxStyledTextCtrl_HideSelection(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_PointFromPosition, "PointFromPosition(pos) -> Point\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_PointFromPosition, "PointFromPosition(pos) -> wx.Point\n"
 "\n"
 "Retrieve the point in the window where a position is displayed.");
 
@@ -8457,7 +8457,7 @@ static PyObject *meth_wxStyledTextCtrl_SetAdditionalCaretForeground(PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetAdditionalCaretForeground, "GetAdditionalCaretForeground() -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetAdditionalCaretForeground, "GetAdditionalCaretForeground() -> wx.Colour\n"
 "\n"
 "Get the foreground colour of additional carets.");
 
@@ -11551,7 +11551,7 @@ static PyObject *meth_wxStyledTextCtrl_StyleSetUnderline(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_StyleGetForeground, "StyleGetForeground(style) -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_StyleGetForeground, "StyleGetForeground(style) -> wx.Colour\n"
 "\n"
 "Get the foreground colour of a style.");
 
@@ -11591,7 +11591,7 @@ static PyObject *meth_wxStyledTextCtrl_StyleGetForeground(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_StyleGetBackground, "StyleGetBackground(style) -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_StyleGetBackground, "StyleGetBackground(style) -> wx.Colour\n"
 "\n"
 "Get the background colour of a style.");
 
@@ -12865,7 +12865,7 @@ static PyObject *meth_wxStyledTextCtrl_SetCaretLineVisible(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetCaretLineBackground, "GetCaretLineBackground() -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetCaretLineBackground, "GetCaretLineBackground() -> wx.Colour\n"
 "\n"
 "Get the colour of the background of the line containing the caret.");
 
@@ -12941,7 +12941,7 @@ static PyObject *meth_wxStyledTextCtrl_SetCaretLineBackground(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetCaretForeground, "GetCaretForeground() -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetCaretForeground, "GetCaretForeground() -> wx.Colour\n"
 "\n"
 "Get the foreground colour of the caret.");
 
@@ -13093,7 +13093,7 @@ static PyObject *meth_wxStyledTextCtrl_SetHotspotActiveForeground(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetHotspotActiveForeground, "GetHotspotActiveForeground() -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetHotspotActiveForeground, "GetHotspotActiveForeground() -> wx.Colour\n"
 "\n"
 "Get the fore colour for active hotspots.");
 
@@ -13171,7 +13171,7 @@ static PyObject *meth_wxStyledTextCtrl_SetHotspotActiveBackground(PyObject *sipS
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetHotspotActiveBackground, "GetHotspotActiveBackground() -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetHotspotActiveBackground, "GetHotspotActiveBackground() -> wx.Colour\n"
 "\n"
 "Get the back colour for active hotspots.");
 
@@ -14336,7 +14336,7 @@ static PyObject *meth_wxStyledTextCtrl_SetMarginBackground(PyObject *sipSelf, Py
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetMarginBackground, "GetMarginBackground(margin) -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetMarginBackground, "GetMarginBackground(margin) -> wx.Colour\n"
 "\n"
 "Retrieve the background colour of a margin.");
 
@@ -17273,7 +17273,7 @@ static PyObject *meth_wxStyledTextCtrl_MarkerDeleteHandle(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_MarkerDefine, "MarkerDefine(markerNumber, markerSymbol, foreground=NullColour, background=NullColour)\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_MarkerDefine, "MarkerDefine(markerNumber, markerSymbol, foreground=wx.NullColour, background=wx.NullColour)\n"
 "\n"
 "Set the symbol used for a particular marker number, and optionally the\n"
 "fore and background colours.");
@@ -18155,7 +18155,7 @@ static PyObject *meth_wxStyledTextCtrl_IndicatorSetForeground(PyObject *sipSelf,
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_IndicatorGetForeground, "IndicatorGetForeground(indicator) -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_IndicatorGetForeground, "IndicatorGetForeground(indicator) -> wx.Colour\n"
 "\n"
 "Retrieve the foreground colour of an indicator.");
 
@@ -18400,7 +18400,7 @@ static PyObject *meth_wxStyledTextCtrl_IndicatorSetHoverForeground(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_IndicatorGetHoverForeground, "IndicatorGetHoverForeground(indicator) -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_IndicatorGetHoverForeground, "IndicatorGetHoverForeground(indicator) -> wx.Colour\n"
 "\n"
 "Retrieve the foreground hover colour of an indicator.");
 
@@ -26827,7 +26827,7 @@ static PyObject *meth_wxStyledTextCtrl_SetEdgeMode(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetEdgeColour, "GetEdgeColour() -> Colour\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetEdgeColour, "GetEdgeColour() -> wx.Colour\n"
 "\n"
 "Retrieve the colour used in edge indication.");
 
@@ -28446,7 +28446,7 @@ static PyObject *meth_wxStyledTextCtrl_StyleSetSpec(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_StyleGetFont, "StyleGetFont(style) -> Font\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_StyleGetFont, "StyleGetFont(style) -> wx.Font\n"
 "\n"
 "Get the font of a style.");
 
@@ -28528,7 +28528,7 @@ static PyObject *meth_wxStyledTextCtrl_StyleSetFont(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_StyleSetFontAttr, "StyleSetFontAttr(styleNum, size, faceName, bold, italic, underline, encoding=FONTENCODING_DEFAULT)\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_StyleSetFontAttr, "StyleSetFontAttr(styleNum, size, faceName, bold, italic, underline, encoding=wx.FONTENCODING_DEFAULT)\n"
 "\n"
 "Set all font style attributes at once.");
 
@@ -30911,7 +30911,7 @@ static PyObject *meth_wxStyledTextCtrl_HitTest(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetLibraryVersionInfo, "GetLibraryVersionInfo() -> VersionInfo\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetLibraryVersionInfo, "GetLibraryVersionInfo() -> wx.VersionInfo\n"
 "\n"
 "Returns the version of the Scintilla library used by this control.");
 
@@ -30944,7 +30944,7 @@ static PyObject *meth_wxStyledTextCtrl_GetLibraryVersionInfo(PyObject *, PyObjec
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl_GetClassDefaultAttributes, "GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes");
+PyDoc_STRVAR(doc_wxStyledTextCtrl_GetClassDefaultAttributes, "GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes");
 
 extern "C" {static PyObject *meth_wxStyledTextCtrl_GetClassDefaultAttributes(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxStyledTextCtrl_GetClassDefaultAttributes(PyObject *, PyObject *sipArgs, PyObject *sipKwds)
@@ -32913,7 +32913,7 @@ sipVariableDef variables_wxStyledTextCtrl[] = {
     {PropertyVariable, sipName_AdditionalCaretForeground, &methods_wxStyledTextCtrl[173], &methods_wxStyledTextCtrl[533], SIP_NULLPTR, SIP_NULLPTR},
 };
 
-PyDoc_STRVAR(doc_wxStyledTextCtrl, "StyledTextCtrl(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=STCNameStr)\n"
+PyDoc_STRVAR(doc_wxStyledTextCtrl, "StyledTextCtrl(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=STCNameStr)\n"
 "StyledTextCtrl()\n"
 "\n"
 "A wxWidgets implementation of the Scintilla source code editing\n"
@@ -32928,7 +32928,7 @@ sipClassTypeDef sipTypeDef__stc_wxStyledTextCtrl = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStyledTextCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StyledTextCtrl,
diff --git a/sip/cpp/sip_stcwxStyledTextEvent.cpp b/sip/cpp/sip_stcwxStyledTextEvent.cpp
index 5bd26157..8f21b223 100644
--- sip/cpp/sip_stcwxStyledTextEvent.cpp
+++ sip/cpp/sip_stcwxStyledTextEvent.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1980,7 +1980,7 @@ static PyObject *meth_wxStyledTextEvent_SetY(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxStyledTextEvent_Clone, "Clone(self) -> Event");
+PyDoc_STRVAR(doc_wxStyledTextEvent_Clone, "Clone(self) -> Optional[Event]");
 
 extern "C" {static PyObject *meth_wxStyledTextEvent_Clone(PyObject *, PyObject *);}
 static PyObject *meth_wxStyledTextEvent_Clone(PyObject *sipSelf, PyObject *sipArgs)
@@ -2227,7 +2227,7 @@ sipClassTypeDef sipTypeDef__stc_wxStyledTextEvent = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxStyledTextEvent,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_StyledTextEvent,
diff --git a/sip/cpp/sip_xmlcmodule.cpp b/sip/cpp/sip_xmlcmodule.cpp
index 25d8c4d6..2a31020b 100644
--- sip/cpp/sip_xmlcmodule.cpp
+++ sip/cpp/sip_xmlcmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -358,7 +358,6 @@ PyMODINIT_FUNC PyInit__xml()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._xml",
diff --git a/sip/cpp/sip_xmlwxXmlAttribute.cpp b/sip/cpp/sip_xmlwxXmlAttribute.cpp
index f2013d59..61bc839b 100644
--- sip/cpp/sip_xmlwxXmlAttribute.cpp
+++ sip/cpp/sip_xmlwxXmlAttribute.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -431,7 +431,7 @@ sipClassTypeDef sipTypeDef__xml_wxXmlAttribute = {
         SIP_TYPE_CLASS,
         sipNameNr_wxXmlAttribute,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_XmlAttribute,
diff --git a/sip/cpp/sip_xmlwxXmlDoctype.cpp b/sip/cpp/sip_xmlwxXmlDoctype.cpp
index 5362a968..27222ff5 100644
--- sip/cpp/sip_xmlwxXmlDoctype.cpp
+++ sip/cpp/sip_xmlwxXmlDoctype.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -353,7 +353,7 @@ sipClassTypeDef sipTypeDef__xml_wxXmlDoctype = {
         SIP_TYPE_CLASS,
         sipNameNr_wxXmlDoctype,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_XmlDoctype,
diff --git a/sip/cpp/sip_xmlwxXmlDocument.cpp b/sip/cpp/sip_xmlwxXmlDocument.cpp
index 68c60e2f..7dd57020 100644
--- sip/cpp/sip_xmlwxXmlDocument.cpp
+++ sip/cpp/sip_xmlwxXmlDocument.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -926,7 +926,7 @@ static PyObject *meth_wxXmlDocument_SetVersion(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxXmlDocument_GetLibraryVersionInfo, "GetLibraryVersionInfo() -> VersionInfo\n"
+PyDoc_STRVAR(doc_wxXmlDocument_GetLibraryVersionInfo, "GetLibraryVersionInfo() -> wx.VersionInfo\n"
 "\n"
 "Get expat library version information.");
 
@@ -1203,7 +1203,7 @@ sipClassTypeDef sipTypeDef__xml_wxXmlDocument = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxXmlDocument,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_XmlDocument,
diff --git a/sip/cpp/sip_xmlwxXmlNode.cpp b/sip/cpp/sip_xmlwxXmlNode.cpp
index c11eb918..c6f2f867 100644
--- sip/cpp/sip_xmlwxXmlNode.cpp
+++ sip/cpp/sip_xmlwxXmlNode.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -1441,7 +1441,7 @@ sipClassTypeDef sipTypeDef__xml_wxXmlNode = {
         SIP_TYPE_CLASS,
         sipNameNr_wxXmlNode,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_XmlNode,
diff --git a/sip/cpp/sip_xrccmodule.cpp b/sip/cpp/sip_xrccmodule.cpp
index 02ed0368..8c97ff60 100644
--- sip/cpp/sip_xrccmodule.cpp
+++ sip/cpp/sip_xrccmodule.cpp
@@ -1,7 +1,7 @@
 /*
  * Module code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -336,7 +336,6 @@ PyMODINIT_FUNC PyInit__xrc()
     static PyMethodDef sip_methods[] = {
         {SIP_NULLPTR, SIP_NULLPTR, 0, SIP_NULLPTR}
     };
-
     static PyModuleDef sip_module_def = {
         PyModuleDef_HEAD_INIT,
         "wx._xrc",
diff --git a/sip/cpp/sip_xrcwxAnimation.cpp b/sip/cpp/sip_xrcwxAnimation.cpp
index 7104413c..f94d108e 100644
--- sip/cpp/sip_xrcwxAnimation.cpp
+++ sip/cpp/sip_xrcwxAnimation.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -27,7 +27,7 @@ sipClassTypeDef sipTypeDef__xrc_wxAnimation = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAnimation,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_Animation,
diff --git a/sip/cpp/sip_xrcwxAnimationCtrl.cpp b/sip/cpp/sip_xrcwxAnimationCtrl.cpp
index 430c920a..9ca3f463 100644
--- sip/cpp/sip_xrcwxAnimationCtrl.cpp
+++ sip/cpp/sip_xrcwxAnimationCtrl.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -27,7 +27,7 @@ sipClassTypeDef sipTypeDef__xrc_wxAnimationCtrl = {
         SIP_TYPE_CLASS,
         sipNameNr_wxAnimationCtrl,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_AnimationCtrl,
diff --git a/sip/cpp/sip_xrcwxXmlResource.cpp b/sip/cpp/sip_xrcwxXmlResource.cpp
index 75d2e91b..a2224eda 100644
--- sip/cpp/sip_xrcwxXmlResource.cpp
+++ sip/cpp/sip_xrcwxXmlResource.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -80,8 +80,8 @@ sipwxXmlResource::~sipwxXmlResource()
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadMenuBar, "LoadMenuBar(parent, name) -> MenuBar\n"
-"LoadMenuBar(name) -> MenuBar\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadMenuBar, "LoadMenuBar(parent, name) -> wx.MenuBar\n"
+"LoadMenuBar(name) -> wx.MenuBar\n"
 "\n"
 "Loads a menubar from resource.\n"
 "");
@@ -153,7 +153,7 @@ static PyObject *meth_wxXmlResource_LoadMenuBar(PyObject *sipSelf, PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadObject, "LoadObject(parent, name, classname) -> Object\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadObject, "LoadObject(parent, name, classname) -> wx.Object\n"
 "LoadObject(instance, parent, name, classname) -> bool\n"
 "\n"
 "Load an object from the resource specifying both the resource name and\n"
@@ -239,7 +239,7 @@ static PyObject *meth_wxXmlResource_LoadObject(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadObjectRecursively, "LoadObjectRecursively(parent, name, classname) -> Object\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadObjectRecursively, "LoadObjectRecursively(parent, name, classname) -> wx.Object\n"
 "LoadObjectRecursively(instance, parent, name, classname) -> bool\n"
 "\n"
 "Load an object from anywhere in the resource tree.\n"
@@ -884,7 +884,7 @@ static PyObject *meth_wxXmlResource_LoadAllFiles(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadBitmap, "LoadBitmap(name) -> Bitmap\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadBitmap, "LoadBitmap(name) -> wx.Bitmap\n"
 "\n"
 "Loads a bitmap resource from a file.");
 
@@ -926,7 +926,7 @@ static PyObject *meth_wxXmlResource_LoadBitmap(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadDialog, "LoadDialog(parent, name) -> Dialog\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadDialog, "LoadDialog(parent, name) -> wx.Dialog\n"
 "LoadDialog(dlg, parent, name) -> bool\n"
 "\n"
 "Loads a dialog.\n"
@@ -1003,7 +1003,7 @@ static PyObject *meth_wxXmlResource_LoadDialog(PyObject *sipSelf, PyObject *sipA
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadFrame, "LoadFrame(parent, name) -> Frame\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadFrame, "LoadFrame(parent, name) -> wx.Frame\n"
 "LoadFrame(frame, parent, name) -> bool\n"
 "\n"
 "Loads a frame from the resource.\n"
@@ -1080,7 +1080,7 @@ static PyObject *meth_wxXmlResource_LoadFrame(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadIcon, "LoadIcon(name) -> Icon\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadIcon, "LoadIcon(name) -> wx.Icon\n"
 "\n"
 "Loads an icon resource from a file.");
 
@@ -1122,7 +1122,7 @@ static PyObject *meth_wxXmlResource_LoadIcon(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadMenu, "LoadMenu(name) -> Menu\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadMenu, "LoadMenu(name) -> wx.Menu\n"
 "\n"
 "Loads menu from resource.");
 
@@ -1164,7 +1164,7 @@ static PyObject *meth_wxXmlResource_LoadMenu(PyObject *sipSelf, PyObject *sipArg
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadPanel, "LoadPanel(parent, name) -> Panel\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadPanel, "LoadPanel(parent, name) -> wx.Panel\n"
 "LoadPanel(panel, parent, name) -> bool\n"
 "\n"
 "Loads a panel.\n"
@@ -1241,7 +1241,7 @@ static PyObject *meth_wxXmlResource_LoadPanel(PyObject *sipSelf, PyObject *sipAr
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_LoadToolBar, "LoadToolBar(parent, name) -> ToolBar\n"
+PyDoc_STRVAR(doc_wxXmlResource_LoadToolBar, "LoadToolBar(parent, name) -> wx.ToolBar\n"
 "\n"
 "Loads a toolbar.");
 
@@ -1518,7 +1518,7 @@ static PyObject *meth_wxXmlResource_Get(PyObject *, PyObject *sipArgs)
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResource_GetXRCID, "GetXRCID(str_id, value_if_not_found=ID_NONE) -> int\n"
+PyDoc_STRVAR(doc_wxXmlResource_GetXRCID, "GetXRCID(str_id, value_if_not_found=wx.ID_NONE) -> int\n"
 "\n"
 "Returns a numeric ID that is equivalent to the string ID used in an\n"
 "XML resource.");
@@ -1820,7 +1820,7 @@ sipClassTypeDef sipTypeDef__xrc_wxXmlResource = {
         SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxXmlResource,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_XmlResource,
diff --git a/sip/cpp/sip_xrcwxXmlResourceHandler.cpp b/sip/cpp/sip_xrcwxXmlResourceHandler.cpp
index 1939a0d8..978b87c8 100644
--- sip/cpp/sip_xrcwxXmlResourceHandler.cpp
+++ sip/cpp/sip_xrcwxXmlResourceHandler.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -391,7 +391,7 @@ void sipwxXmlResourceHandler::sipProtect_ReportParamError(const  ::wxString& par
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_CreateResource, "CreateResource(node, parent, instance) -> Object\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_CreateResource, "CreateResource(node, parent, instance) -> wx.Object\n"
 "\n"
 "Creates an object (menu, dialog, control, ...) from an XML node.");
 
@@ -435,7 +435,7 @@ static PyObject *meth_wxXmlResourceHandler_CreateResource(PyObject *sipSelf, PyO
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_DoCreateResource, "DoCreateResource() -> Object\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_DoCreateResource, "DoCreateResource() -> wx.Object\n"
 "\n"
 "Called from CreateResource after variables were filled.");
 
@@ -723,7 +723,7 @@ static PyObject *meth_wxXmlResourceHandler_CreateChildrenPrivately(PyObject *sip
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_CreateResFromNode, "CreateResFromNode(node, parent, instance=None) -> Object\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_CreateResFromNode, "CreateResFromNode(node, parent, instance=None) -> wx.Object\n"
 "\n"
 "Creates a resource from a node.");
 
@@ -813,8 +813,8 @@ static PyObject *meth_wxXmlResourceHandler_GetAnimation(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetBitmap, "GetBitmap(param=\"bitmap\", defaultArtClient=ART_OTHER, size=DefaultSize) -> Bitmap\n"
-"GetBitmap(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> Bitmap\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetBitmap, "GetBitmap(param=\"bitmap\", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Bitmap\n"
+"GetBitmap(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Bitmap\n"
 "\n"
 "Gets a bitmap.\n"
 "");
@@ -903,8 +903,8 @@ static PyObject *meth_wxXmlResourceHandler_GetBitmap(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetBitmapBundle, "GetBitmapBundle(param=\"bitmap\", defaultArtClient=ART_OTHER, size=DefaultSize) -> BitmapBundle\n"
-"GetBitmapBundle(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> BitmapBundle\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetBitmapBundle, "GetBitmapBundle(param=\"bitmap\", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.BitmapBundle\n"
+"GetBitmapBundle(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.BitmapBundle\n"
 "\n"
 "Gets a bitmap bundle.\n"
 "");
@@ -1038,7 +1038,7 @@ static PyObject *meth_wxXmlResourceHandler_GetBool(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetColour, "GetColour(param, defaultColour=NullColour) -> Colour\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetColour, "GetColour(param, defaultColour=wx.NullColour) -> wx.Colour\n"
 "\n"
 "Gets colour in HTML syntax (#RRGGBB).");
 
@@ -1085,7 +1085,7 @@ static PyObject *meth_wxXmlResourceHandler_GetColour(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetCurFileSystem, "GetCurFileSystem() -> FileSystem\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetCurFileSystem, "GetCurFileSystem() -> wx.FileSystem\n"
 "\n"
 "Returns the current file system.");
 
@@ -1166,7 +1166,7 @@ static PyObject *meth_wxXmlResourceHandler_GetDimension(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetDirection, "GetDirection(param, dirDefault=LEFT) -> Direction\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetDirection, "GetDirection(param, dirDefault=wx.LEFT) -> Direction\n"
 "\n"
 "Gets a direction.");
 
@@ -1210,7 +1210,7 @@ static PyObject *meth_wxXmlResourceHandler_GetDirection(PyObject *sipSelf, PyObj
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetFont, "GetFont(param=\"font\") -> Font\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetFont, "GetFont(param=\"font\") -> wx.Font\n"
 "\n"
 "Gets a font.");
 
@@ -1288,8 +1288,8 @@ static PyObject *meth_wxXmlResourceHandler_GetID(PyObject *sipSelf, PyObject *si
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetIcon, "GetIcon(param=\"icon\", defaultArtClient=ART_OTHER, size=DefaultSize) -> Icon\n"
-"GetIcon(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> Icon\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetIcon, "GetIcon(param=\"icon\", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Icon\n"
+"GetIcon(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Icon\n"
 "\n"
 "Returns an icon.\n"
 "");
@@ -1378,7 +1378,7 @@ static PyObject *meth_wxXmlResourceHandler_GetIcon(PyObject *sipSelf, PyObject *
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetIconBundle, "GetIconBundle(param, defaultArtClient=ART_OTHER) -> IconBundle\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetIconBundle, "GetIconBundle(param, defaultArtClient=wx.ART_OTHER) -> wx.IconBundle\n"
 "\n"
 "Returns an icon bundle.");
 
@@ -1425,7 +1425,7 @@ static PyObject *meth_wxXmlResourceHandler_GetIconBundle(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetImageList, "GetImageList(param=\"imagelist\") -> ImageList\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetImageList, "GetImageList(param=\"imagelist\") -> wx.ImageList\n"
 "\n"
 "Creates an image list from the param markup data.");
 
@@ -1902,7 +1902,7 @@ static PyObject *meth_wxXmlResourceHandler_GetParamValue(PyObject *sipSelf, PyOb
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetPosition, "GetPosition(param=\"pos\") -> Point\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetPosition, "GetPosition(param=\"pos\") -> wx.Point\n"
 "\n"
 "Gets the position (may be in dialog units).");
 
@@ -1945,7 +1945,7 @@ static PyObject *meth_wxXmlResourceHandler_GetPosition(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetSize, "GetSize(param=\"size\", windowToUse=0) -> Size\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetSize, "GetSize(param=\"size\", windowToUse=0) -> wx.Size\n"
 "\n"
 "Gets the size (may be in dialog units).");
 
@@ -2430,7 +2430,7 @@ static PyObject *meth_wxXmlResourceHandler_GetClass(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetParent, "GetParent() -> Object\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetParent, "GetParent() -> wx.Object\n"
 "\n"
 "After CreateResource has been called this will return the current\n"
 "item's parent, if any.");
@@ -2466,7 +2466,7 @@ static PyObject *meth_wxXmlResourceHandler_GetParent(PyObject *sipSelf, PyObject
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetInstance, "GetInstance() -> Object\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetInstance, "GetInstance() -> wx.Object\n"
 "\n"
 "After CreateResource has been called this will return the instance\n"
 "that the XML resource content should be created upon, if it has\n"
@@ -2503,7 +2503,7 @@ static PyObject *meth_wxXmlResourceHandler_GetInstance(PyObject *sipSelf, PyObje
 }
 
 
-PyDoc_STRVAR(doc_wxXmlResourceHandler_GetParentAsWindow, "GetParentAsWindow() -> Window\n"
+PyDoc_STRVAR(doc_wxXmlResourceHandler_GetParentAsWindow, "GetParentAsWindow() -> wx.Window\n"
 "\n"
 "After CreateResource has been called this will return the item's\n"
 "parent as a wxWindow.");
@@ -2717,7 +2717,7 @@ sipClassTypeDef sipTypeDef__xrc_wxXmlResourceHandler = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
         sipNameNr_wxXmlResourceHandler,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_XmlResourceHandler,
diff --git a/sip/cpp/sip_xrcwxXmlSubclassFactory.cpp b/sip/cpp/sip_xrcwxXmlSubclassFactory.cpp
index 86509989..e25fb035 100644
--- sip/cpp/sip_xrcwxXmlSubclassFactory.cpp
+++ sip/cpp/sip_xrcwxXmlSubclassFactory.cpp
@@ -1,7 +1,7 @@
 /*
  * Interface wrapper code.
  *
- * Generated by SIP 6.7.9
+ * Generated by SIP 6.8.3
  *
  *     Copyright: (c) 2020 by Total Control Software
  *     License:   wxWindows License
@@ -66,7 +66,7 @@ sipwxXmlSubclassFactory::~sipwxXmlSubclassFactory()
 }
 
 
-PyDoc_STRVAR(doc_wxXmlSubclassFactory_Create, "Create(className) -> Object");
+PyDoc_STRVAR(doc_wxXmlSubclassFactory_Create, "Create(className) -> wx.Object");
 
 extern "C" {static PyObject *meth_wxXmlSubclassFactory_Create(PyObject *, PyObject *, PyObject *);}
 static PyObject *meth_wxXmlSubclassFactory_Create(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
@@ -201,7 +201,7 @@ sipClassTypeDef sipTypeDef__xrc_wxXmlSubclassFactory = {
         SIP_TYPE_ABSTRACT|SIP_TYPE_CLASS,
         sipNameNr_wxXmlSubclassFactory,
         SIP_NULLPTR,
-        SIP_NULLPTR
+        SIP_NULLPTR,
     },
     {
         sipNameNr_XmlSubclassFactory,
diff --git a/sip/gen/_glcanvas.sip b/sip/gen/_glcanvas.sip
index 2cc74a58..ee6a7954 100644
--- sip/gen/_glcanvas.sip
+++ sip/gen/_glcanvas.sip
@@ -706,7 +706,7 @@ public:
 class wxGLCanvas : wxWindow
 {
     %Docstring
-        GLCanvas(parent, dispAttrs, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=GLCanvasName, palette=NullPalette)
+        GLCanvas(parent, dispAttrs, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=GLCanvasName, palette=wx.NullPalette)
         GLCanvas(parent, id=wx.ID_ANY, attribList=None, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name='GLCanvas', palette=wx.NullPalette)
         
         wxGLCanvas is a class for displaying OpenGL graphics.
@@ -869,7 +869,7 @@ public:
         wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
     );
     %Docstring
-        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
+        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
     %End
     %PreMethodCode
         if (!wxPyCheckForApp()) return NULL;
diff --git a/sip/gen/_stc.sip b/sip/gen/_stc.sip
index daa43c7d..4f4b7649 100644
--- sip/gen/_stc.sip
+++ sip/gen/_stc.sip
@@ -2342,7 +2342,7 @@ const char* wxSTCNameStr;
 class wxStyledTextCtrl : wxControl
 {
     %Docstring
-        StyledTextCtrl(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=STCNameStr)
+        StyledTextCtrl(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=STCNameStr)
         StyledTextCtrl()
         
         A wxWidgets implementation of the Scintilla source code editing
@@ -2381,7 +2381,7 @@ public:
         const wxString & name = wxSTCNameStr
     );
     %Docstring
-        Create(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=STCNameStr) -> bool
+        Create(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=STCNameStr) -> bool
         
         Create the UI elements for a STC that was created with the default
         ctor.
@@ -3137,7 +3137,7 @@ public:
         int pos
     );
     %Docstring
-        PointFromPosition(pos) -> Point
+        PointFromPosition(pos) -> wx.Point
         
         Retrieve the point in the window where a position is displayed.
     %End
@@ -3750,7 +3750,7 @@ public:
 
     wxColour GetAdditionalCaretForeground() const;
     %Docstring
-        GetAdditionalCaretForeground() -> Colour
+        GetAdditionalCaretForeground() -> wx.Colour
         
         Get the foreground colour of additional carets.
     %End
@@ -4453,7 +4453,7 @@ public:
         int style
     ) const;
     %Docstring
-        StyleGetForeground(style) -> Colour
+        StyleGetForeground(style) -> wx.Colour
         
         Get the foreground colour of a style.
     %End
@@ -4462,7 +4462,7 @@ public:
         int style
     ) const;
     %Docstring
-        StyleGetBackground(style) -> Colour
+        StyleGetBackground(style) -> wx.Colour
         
         Get the background colour of a style.
     %End
@@ -4753,7 +4753,7 @@ public:
 
     wxColour GetCaretLineBackground() const;
     %Docstring
-        GetCaretLineBackground() -> Colour
+        GetCaretLineBackground() -> wx.Colour
         
         Get the colour of the background of the line containing the caret.
     %End
@@ -4769,7 +4769,7 @@ public:
 
     wxColour GetCaretForeground() const;
     %Docstring
-        GetCaretForeground() -> Colour
+        GetCaretForeground() -> wx.Colour
         
         Get the foreground colour of the caret.
     %End
@@ -4802,7 +4802,7 @@ public:
 
     wxColour GetHotspotActiveForeground() const;
     %Docstring
-        GetHotspotActiveForeground() -> Colour
+        GetHotspotActiveForeground() -> wx.Colour
         
         Get the fore colour for active hotspots.
     %End
@@ -4819,7 +4819,7 @@ public:
 
     wxColour GetHotspotActiveBackground() const;
     %Docstring
-        GetHotspotActiveBackground() -> Colour
+        GetHotspotActiveBackground() -> wx.Colour
         
         Get the back colour for active hotspots.
     %End
@@ -5082,7 +5082,7 @@ public:
         int margin
     ) const;
     %Docstring
-        GetMarginBackground(margin) -> Colour
+        GetMarginBackground(margin) -> wx.Colour
         
         Retrieve the background colour of a margin.
     %End
@@ -5752,7 +5752,7 @@ public:
         const wxColour & background = wxNullColour
     );
     %Docstring
-        MarkerDefine(markerNumber, markerSymbol, foreground=NullColour, background=NullColour)
+        MarkerDefine(markerNumber, markerSymbol, foreground=wx.NullColour, background=wx.NullColour)
         
         Set the symbol used for a particular marker number, and optionally the
         fore and background colours.
@@ -5973,7 +5973,7 @@ public:
         int indicator
     ) const;
     %Docstring
-        IndicatorGetForeground(indicator) -> Colour
+        IndicatorGetForeground(indicator) -> wx.Colour
         
         Retrieve the foreground colour of an indicator.
     %End
@@ -6030,7 +6030,7 @@ public:
         int indicator
     ) const;
     %Docstring
-        IndicatorGetHoverForeground(indicator) -> Colour
+        IndicatorGetHoverForeground(indicator) -> wx.Colour
         
         Retrieve the foreground hover colour of an indicator.
     %End
@@ -7957,7 +7957,7 @@ public:
 
     wxColour GetEdgeColour() const;
     %Docstring
-        GetEdgeColour() -> Colour
+        GetEdgeColour() -> wx.Colour
         
         Retrieve the colour used in edge indication.
     %End
@@ -8321,7 +8321,7 @@ public:
         int style
     );
     %Docstring
-        StyleGetFont(style) -> Font
+        StyleGetFont(style) -> wx.Font
         
         Get the font of a style.
     %End
@@ -8347,7 +8347,7 @@ public:
         wxFontEncoding encoding = wxFONTENCODING_DEFAULT
     );
     %Docstring
-        StyleSetFontAttr(styleNum, size, faceName, bold, italic, underline, encoding=FONTENCODING_DEFAULT)
+        StyleSetFontAttr(styleNum, size, faceName, bold, italic, underline, encoding=wx.FONTENCODING_DEFAULT)
         
         Set all font style attributes at once.
     %End
@@ -8920,7 +8920,7 @@ public:
     static
     wxVersionInfo GetLibraryVersionInfo();
     %Docstring
-        GetLibraryVersionInfo() -> VersionInfo
+        GetLibraryVersionInfo() -> wx.VersionInfo
         
         Returns the version of the Scintilla library used by this control.
     %End
@@ -8930,7 +8930,7 @@ public:
         wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL
     );
     %Docstring
-        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
+        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
     %End
     %PreMethodCode
         if (!wxPyCheckForApp()) return NULL;
diff --git a/sip/gen/_xml.sip b/sip/gen/_xml.sip
index a10d91f1..461b2667 100644
--- sip/gen/_xml.sip
+++ sip/gen/_xml.sip
@@ -660,7 +660,7 @@ public:
     static
     wxVersionInfo GetLibraryVersionInfo();
     %Docstring
-        GetLibraryVersionInfo() -> VersionInfo
+        GetLibraryVersionInfo() -> wx.VersionInfo
         
         Get expat library version information.
     %End
diff --git a/sip/gen/_xrc.sip b/sip/gen/_xrc.sip
index 6d303200..c2a8c51c 100644
--- sip/gen/_xrc.sip
+++ sip/gen/_xrc.sip
@@ -108,8 +108,8 @@ public:
         const wxString & name
     );
     %Docstring
-        LoadMenuBar(parent, name) -> MenuBar
-        LoadMenuBar(name) -> MenuBar
+        LoadMenuBar(parent, name) -> wx.MenuBar
+        LoadMenuBar(name) -> wx.MenuBar
         
         Loads a menubar from resource.
     %End
@@ -124,7 +124,7 @@ public:
         const wxString & classname
     );
     %Docstring
-        LoadObject(parent, name, classname) -> Object
+        LoadObject(parent, name, classname) -> wx.Object
         LoadObject(instance, parent, name, classname) -> bool
         
         Load an object from the resource specifying both the resource name and
@@ -144,7 +144,7 @@ public:
         const wxString & classname
     );
     %Docstring
-        LoadObjectRecursively(parent, name, classname) -> Object
+        LoadObjectRecursively(parent, name, classname) -> wx.Object
         LoadObjectRecursively(instance, parent, name, classname) -> bool
         
         Load an object from anywhere in the resource tree.
@@ -287,7 +287,7 @@ public:
         const wxString & name
     );
     %Docstring
-        LoadBitmap(name) -> Bitmap
+        LoadBitmap(name) -> wx.Bitmap
         
         Loads a bitmap resource from a file.
     %End
@@ -297,7 +297,7 @@ public:
         const wxString & name
     );
     %Docstring
-        LoadDialog(parent, name) -> Dialog
+        LoadDialog(parent, name) -> wx.Dialog
         LoadDialog(dlg, parent, name) -> bool
         
         Loads a dialog.
@@ -314,7 +314,7 @@ public:
         const wxString & name
     );
     %Docstring
-        LoadFrame(parent, name) -> Frame
+        LoadFrame(parent, name) -> wx.Frame
         LoadFrame(frame, parent, name) -> bool
         
         Loads a frame from the resource.
@@ -330,7 +330,7 @@ public:
         const wxString & name
     );
     %Docstring
-        LoadIcon(name) -> Icon
+        LoadIcon(name) -> wx.Icon
         
         Loads an icon resource from a file.
     %End
@@ -339,7 +339,7 @@ public:
         const wxString & name
     );
     %Docstring
-        LoadMenu(name) -> Menu
+        LoadMenu(name) -> wx.Menu
         
         Loads menu from resource.
     %End
@@ -349,7 +349,7 @@ public:
         const wxString & name
     );
     %Docstring
-        LoadPanel(parent, name) -> Panel
+        LoadPanel(parent, name) -> wx.Panel
         LoadPanel(panel, parent, name) -> bool
         
         Loads a panel.
@@ -366,7 +366,7 @@ public:
         const wxString & name
     );
     %Docstring
-        LoadToolBar(parent, name) -> ToolBar
+        LoadToolBar(parent, name) -> wx.ToolBar
         
         Loads a toolbar.
     %End
@@ -433,7 +433,7 @@ public:
         int value_if_not_found = wxID_NONE
     );
     %Docstring
-        GetXRCID(str_id, value_if_not_found=ID_NONE) -> int
+        GetXRCID(str_id, value_if_not_found=wx.ID_NONE) -> int
         
         Returns a numeric ID that is equivalent to the string ID used in an
         XML resource.
@@ -537,7 +537,7 @@ public:
         wxObject * instance
     );
     %Docstring
-        CreateResource(node, parent, instance) -> Object
+        CreateResource(node, parent, instance) -> wx.Object
         
         Creates an object (menu, dialog, control, ...) from an XML node.
     %End
@@ -545,7 +545,7 @@ public:
     virtual
     wxObject * DoCreateResource() = 0   /Factory/;
     %Docstring
-        DoCreateResource() -> Object
+        DoCreateResource() -> wx.Object
         
         Called from CreateResource after variables were filled.
     %End
@@ -636,7 +636,7 @@ protected:
         wxObject * instance = NULL
     );
     %Docstring
-        CreateResFromNode(node, parent, instance=None) -> Object
+        CreateResFromNode(node, parent, instance=None) -> wx.Object
         
         Creates a resource from a node.
     %End
@@ -658,8 +658,8 @@ protected:
         wxSize size = wxDefaultSize
     );
     %Docstring
-        GetBitmap(param="bitmap", defaultArtClient=ART_OTHER, size=DefaultSize) -> Bitmap
-        GetBitmap(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> Bitmap
+        GetBitmap(param="bitmap", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Bitmap
+        GetBitmap(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Bitmap
         
         Gets a bitmap.
     %End
@@ -676,8 +676,8 @@ protected:
         wxSize size = wxDefaultSize
     );
     %Docstring
-        GetBitmapBundle(param="bitmap", defaultArtClient=ART_OTHER, size=DefaultSize) -> BitmapBundle
-        GetBitmapBundle(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> BitmapBundle
+        GetBitmapBundle(param="bitmap", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.BitmapBundle
+        GetBitmapBundle(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.BitmapBundle
         
         Gets a bitmap bundle.
     %End
@@ -704,14 +704,14 @@ protected:
         const wxColour & defaultColour = wxNullColour
     );
     %Docstring
-        GetColour(param, defaultColour=NullColour) -> Colour
+        GetColour(param, defaultColour=wx.NullColour) -> wx.Colour
         
         Gets colour in HTML syntax (#RRGGBB).
     %End
 
     wxFileSystem & GetCurFileSystem();
     %Docstring
-        GetCurFileSystem() -> FileSystem
+        GetCurFileSystem() -> wx.FileSystem
         
         Returns the current file system.
     %End
@@ -732,7 +732,7 @@ protected:
         wxDirection dirDefault = wxLEFT
     );
     %Docstring
-        GetDirection(param, dirDefault=LEFT) -> Direction
+        GetDirection(param, dirDefault=wx.LEFT) -> Direction
         
         Gets a direction.
     %End
@@ -741,7 +741,7 @@ protected:
         const wxString & param = "font"
     );
     %Docstring
-        GetFont(param="font") -> Font
+        GetFont(param="font") -> wx.Font
         
         Gets a font.
     %End
@@ -759,8 +759,8 @@ protected:
         wxSize size = wxDefaultSize
     );
     %Docstring
-        GetIcon(param="icon", defaultArtClient=ART_OTHER, size=DefaultSize) -> Icon
-        GetIcon(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> Icon
+        GetIcon(param="icon", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Icon
+        GetIcon(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Icon
         
         Returns an icon.
     %End
@@ -776,7 +776,7 @@ protected:
         const wxArtClient & defaultArtClient = wxART_OTHER
     );
     %Docstring
-        GetIconBundle(param, defaultArtClient=ART_OTHER) -> IconBundle
+        GetIconBundle(param, defaultArtClient=wx.ART_OTHER) -> wx.IconBundle
         
         Returns an icon bundle.
     %End
@@ -785,7 +785,7 @@ protected:
         const wxString & param = "imagelist"
     );
     %Docstring
-        GetImageList(param="imagelist") -> ImageList
+        GetImageList(param="imagelist") -> wx.ImageList
         
         Creates an image list from the param markup data.
     %End
@@ -889,7 +889,7 @@ protected:
         const wxString & param = "pos"
     );
     %Docstring
-        GetPosition(param="pos") -> Point
+        GetPosition(param="pos") -> wx.Point
         
         Gets the position (may be in dialog units).
     %End
@@ -899,7 +899,7 @@ protected:
         wxWindow * windowToUse = 0
     );
     %Docstring
-        GetSize(param="size", windowToUse=0) -> Size
+        GetSize(param="size", windowToUse=0) -> wx.Size
         
         Gets the size (may be in dialog units).
     %End
@@ -1005,7 +1005,7 @@ protected:
 
     wxObject * GetParent() const;
     %Docstring
-        GetParent() -> Object
+        GetParent() -> wx.Object
         
         After CreateResource has been called this will return the current
         item's parent, if any.
@@ -1013,7 +1013,7 @@ protected:
 
     wxObject * GetInstance() const;
     %Docstring
-        GetInstance() -> Object
+        GetInstance() -> wx.Object
         
         After CreateResource has been called this will return the instance
         that the XML resource content should be created upon, if it has
@@ -1022,7 +1022,7 @@ protected:
 
     wxWindow * GetParentAsWindow() const;
     %Docstring
-        GetParentAsWindow() -> Window
+        GetParentAsWindow() -> wx.Window
         
         After CreateResource has been called this will return the item's
         parent as a wxWindow.
@@ -1080,7 +1080,7 @@ public:
         const wxString& className
     ) = 0   /Factory/;
     %Docstring
-        Create(className) -> Object
+        Create(className) -> wx.Object
     %End
 
 };  // end of class wxXmlSubclassFactory
diff --git a/sip/gen/menu.sip b/sip/gen/menu.sip
index 4fcd4144..3071c79f 100644
--- sip/gen/menu.sip
+++ sip/gen/menu.sip
@@ -875,7 +875,7 @@ public:
 
     static
     void MacSetCommonMenuBar(
-        wxMenuBar * menubar
+        wxMenuBar * menubar   /Transfer/
     );
     %Docstring
         MacSetCommonMenuBar(menubar)
diff --git a/sip/siplib/PKG-INFO b/sip/siplib/PKG-INFO
index 033a7ef1..1f795a9e 100644
--- sip/siplib/PKG-INFO
+++ sip/siplib/PKG-INFO
@@ -1,6 +1,6 @@
 Metadata-Version: 2.1
 Name: wx_siplib
-Version: 12.12.1
+Version: 12.14.0
 Summary: The sip module support for wx
 Home-page: https://www.riverbankcomputing.com/software/sip/
 Author: Riverbank Computing Limited
@@ -9,7 +9,7 @@ License: SIP
 Platform: X11
 Platform: macOS
 Platform: Windows
-Requires-Python: >=3.7
+Requires-Python: >=3.8
 License-File: LICENSE
 License-File: LICENSE-GPL2
 License-File: LICENSE-GPL3
diff --git a/sip/siplib/descriptors.c b/sip/siplib/descriptors.c
index 6fbcd559..ba1e0e5e 100644
--- sip/siplib/descriptors.c
+++ sip/siplib/descriptors.c
@@ -105,9 +105,7 @@ PyTypeObject sipMethodDescr_Type = {
     0,                      /* tp_del */
     0,                      /* tp_version_tag */
     0,                      /* tp_finalize */
-#if PY_VERSION_HEX >= 0x03080000
     0,                      /* tp_vectorcall */
-#endif
 };
 
 
@@ -308,9 +306,7 @@ PyTypeObject sipVariableDescr_Type = {
     0,                      /* tp_del */
     0,                      /* tp_version_tag */
     0,                      /* tp_finalize */
-#if PY_VERSION_HEX >= 0x03080000
     0,                      /* tp_vectorcall */
-#endif
 };
 
 
diff --git a/sip/siplib/setup.py b/sip/siplib/setup.py
index cec1318d..e699fc41 100644
--- sip/siplib/setup.py
+++ sip/siplib/setup.py
@@ -1,4 +1,4 @@
-# Copyright (c) 2022, Riverbank Computing Limited
+# Copyright (c) 2023, Riverbank Computing Limited
 # All rights reserved.
 #
 # This copy of SIP is licensed for use under the terms of the SIP License
@@ -38,8 +38,8 @@ module = Extension('wx.siplib', module_src)
 # Do the setup.
 setup(
         name='wx_siplib',
-        version='12.12.1',
+        version='12.14.0',
         license='SIP',
-        python_requires='>=3.7',
+        python_requires='>=3.8',
         ext_modules=[module]
      )
diff --git a/sip/siplib/sip.h b/sip/siplib/sip.h
index bb04f354..7e2858a6 100644
--- sip/siplib/sip.h
+++ sip/siplib/sip.h
@@ -24,8 +24,8 @@
 #include <Python.h>
 
 /* Sanity check on the Python version. */
-#if PY_VERSION_HEX < 0x03070000
-#error "This version of wx.siplib requires Python v3.7 or later"
+#if PY_VERSION_HEX < 0x03080000
+#error "This version of wx.siplib requires Python v3.8 or later"
 #endif
 
 
@@ -45,13 +45,21 @@ extern "C" {
 
 /* The version of the ABI. */
 #define SIP_ABI_MAJOR_VERSION       12
-#define SIP_ABI_MINOR_VERSION       12
-#define SIP_MODULE_PATCH_VERSION    1
+#define SIP_ABI_MINOR_VERSION       14
+#define SIP_MODULE_PATCH_VERSION    0
 
 
 /*
  * The change history of the ABI.
  *
+ * v12.14
+ *  - Python v3.8 or later is required.
+ *
+ * v12.13
+ *  - Added support for Python v3.12.
+ *  - Added sipPyTypeDictRef().
+ *  - Deprecated sipPyTypeDict().
+ *
  * v12.12
  *  - Added the '#' conversion character to the argument parsers.
  *
@@ -73,8 +81,8 @@ extern "C" {
 
 
 /* The version of the code generator. */
-#define SIP_VERSION                 0x60709
-#define SIP_VERSION_STR             "6.7.9"
+#define SIP_VERSION                 0x60803
+#define SIP_VERSION_STR             "6.8.3"
 
 /* These are all dependent on the user-specified name of the sip module. */
 #define _SIP_MODULE_FQ_NAME         "wx.siplib"
@@ -1668,6 +1676,11 @@ typedef struct _sipAPIDef {
     PyObject *(*api_is_py_method_12_8)(sip_gilstate_t *gil, char *pymc,
             sipSimpleWrapper **sipSelfp, const char *cname, const char *mname);
     sipExceptionHandler (*api_next_exception_handler)(void **statep);
+
+    /*
+     * The following are part of the public API.
+     */
+    PyObject *(*api_py_type_dict_ref)(PyTypeObject *);
 } sipAPIDef;
 
 const sipAPIDef *sip_init_library(PyObject *mod_dict);
diff --git a/sip/siplib/sip_array.c b/sip/siplib/sip_array.c
index e2e3c3ea..b76a1188 100644
--- sip/siplib/sip_array.c
+++ sip/siplib/sip_array.c
@@ -1,7 +1,7 @@
 /*
  * This file implements the API for the array type.
  *
- * Copyright (c) 2022 Riverbank Computing Limited <info@riverbankcomputing.com>
+ * Copyright (c) 2023 Riverbank Computing Limited <info@riverbankcomputing.com>
  *
  * This file is part of SIP.
  *
@@ -283,6 +283,8 @@ static PyMappingMethods sipArray_MappingMethods = {
 static int sipArray_getbuffer(PyObject *self, Py_buffer *view, int flags)
 {
     sipArrayObject *array = (sipArrayObject *)self;
+    const char *format;
+    Py_ssize_t itemsize;
 
     if (view == NULL)
         return 0;
@@ -296,23 +298,28 @@ static int sipArray_getbuffer(PyObject *self, Py_buffer *view, int flags)
     view->obj = self;
     Py_INCREF(self);
 
+    /*
+     * If there is no format, ie. it is a wrapped type, then present it as
+     * bytes.
+     */
+    if ((format = array->format) == NULL)
+    {
+        format = "B";
+        itemsize = sizeof (unsigned char);
+    }
+    else
+    {
+        itemsize = array->stride;
+    }
+
     view->buf = array->data;
     view->len = array->len * array->stride;
     view->readonly = (array->flags & SIP_READ_ONLY);
-    view->itemsize = array->stride;
+    view->itemsize = itemsize;
 
     view->format = NULL;
     if ((flags & PyBUF_FORMAT) == PyBUF_FORMAT)
-    {
-        if (array->format == NULL)
-        {
-            PyErr_SetString(PyExc_BufferError,
-                    "format has not been specified");
-            return -1;
-        }
-
-        view->format = (char *)array->format;
-    }
+        view->format = format;
 
     view->ndim = 1;
 
@@ -474,9 +481,7 @@ PyTypeObject sipArray_Type = {
     0,                      /* tp_del */
     0,                      /* tp_version_tag */
     0,                      /* tp_finalize */
-#if PY_VERSION_HEX >= 0x03080000
     0,                      /* tp_vectorcall */
-#endif
 };
 
 
diff --git a/sip/siplib/siplib.c b/sip/siplib/siplib.c
index 95563e5c..5337e3f2 100644
--- sip/siplib/siplib.c
+++ sip/siplib/siplib.c
@@ -102,9 +102,7 @@ PyTypeObject sipWrapperType_Type = {
     0,                      /* tp_del */
     0,                      /* tp_version_tag */
     0,                      /* tp_finalize */
-#if PY_VERSION_HEX >= 0x03080000
     0,                      /* tp_vectorcall */
-#endif
 };
 
 
@@ -170,9 +168,7 @@ static sipWrapperType sipWrapper_Type = {
             0,              /* tp_del */
             0,              /* tp_version_tag */
             0,              /* tp_finalize */
-#if PY_VERSION_HEX >= 0x03080000
             0,              /* tp_vectorcall */
-#endif
         },
         {
             0,              /* am_await */
@@ -381,6 +377,7 @@ static sipNewUserTypeFunc sip_api_set_new_user_type_handler(
 static void sip_api_set_type_user_data(sipWrapperType *wt, void *data);
 static void *sip_api_get_type_user_data(const sipWrapperType *wt);
 static PyObject *sip_api_py_type_dict(const PyTypeObject *py_type);
+static PyObject *sip_api_py_type_dict_ref(PyTypeObject *py_type);
 static const char *sip_api_py_type_name(const PyTypeObject *py_type);
 static int sip_api_get_method(PyObject *obj, sipMethodDef *method);
 static PyObject *sip_api_from_method(const sipMethodDef *method);
@@ -620,6 +617,10 @@ static const sipAPIDef sip_api = {
      */
     sip_api_is_py_method_12_8,
     sip_api_next_exception_handler,
+    /*
+     * The following are part of the public API.
+     */
+    sip_api_py_type_dict_ref,
 };
 
 
@@ -781,9 +782,7 @@ static PyTypeObject sipEnumType_Type = {
     0,                      /* tp_del */
     0,                      /* tp_version_tag */
     0,                      /* tp_finalize */
-#if PY_VERSION_HEX >= 0x03080000
     0,                      /* tp_vectorcall */
-#endif
 };
 
 
@@ -2147,7 +2146,7 @@ void *sip_api_malloc(size_t nbytes)
 {
     void *mem;
 
-    if ((mem = PyMem_Malloc(nbytes)) == NULL)
+    if ((mem = PyMem_RawMalloc(nbytes)) == NULL)
         PyErr_NoMemory();
 
     return mem;
@@ -2159,7 +2158,7 @@ void *sip_api_malloc(size_t nbytes)
  */
 void sip_api_free(void *mem)
 {
-    PyMem_Free(mem);
+    PyMem_RawFree(mem);
 }
 
 
@@ -3897,7 +3896,7 @@ static int parsePass1(PyObject **parseErrp, sipSimpleWrapper **selfp,
     {
     case '#':
             /* A ctor has an argument with the /Transfer/ annotation. */
-            *selfp = va_arg(va, PyObject *);
+            *selfp = (sipSimpleWrapper *)va_arg(va, PyObject *);
             break;
 
     case 'B':
@@ -10902,9 +10901,7 @@ sipWrapperType sipSimpleWrapper_Type = {
             0,              /* tp_del */
             0,              /* tp_version_tag */
             0,              /* tp_finalize */
-#if PY_VERSION_HEX >= 0x03080000
             0,              /* tp_vectorcall */
-#endif
         },
         {
             0,              /* am_await */
@@ -12593,14 +12590,37 @@ static void *sip_api_get_type_user_data(const sipWrapperType *wt)
 
 
 /*
- * Get the dict of a Python type (on behalf of the limited API).
+ * Get a borrowed reference to the dict of a Python type (on behalf of the
+ * limited API).  This is deprecated in ABI v12.13 and must not be used with
+ * Python v3.12 and later.
  */
 static PyObject *sip_api_py_type_dict(const PyTypeObject *py_type)
 {
+    PyErr_WarnEx(PyExc_DeprecationWarning,
+            "sipPyTypeDict() is deprecated, the extension module should use "
+            "sipPyTypeDictRef() instead",
+            1);
+
     return py_type->tp_dict;
 }
 
 
+/*
+ * Get a new reference to the dict of a Python type (on behalf of the limited
+ * API).
+ */
+static PyObject *sip_api_py_type_dict_ref(PyTypeObject *py_type)
+{
+#if PY_VERSION_HEX >= 0x030c0000
+    return PyType_GetDict(py_type);
+#else
+    PyObject *ref = py_type->tp_dict;
+    Py_XINCREF(ref);
+    return ref;
+#endif
+}
+
+
 /*
  * Get the name of a Python type (on behalf of the limited API).
  */
diff --git a/sip/siplib/voidptr.c b/sip/siplib/voidptr.c
index cf878f36..fa812867 100644
--- sip/siplib/voidptr.c
+++ sip/siplib/voidptr.c
@@ -1,7 +1,7 @@
 /*
  * This file implements the API for the voidptr type.
  *
- * Copyright (c) 2022 Riverbank Computing Limited <info@riverbankcomputing.com>
+ * Copyright (c) 2023 Riverbank Computing Limited <info@riverbankcomputing.com>
  *
  * This file is part of SIP.
  *
@@ -520,9 +520,7 @@ PyTypeObject sipVoidPtr_Type = {
     0,                      /* tp_del */
     0,                      /* tp_version_tag */
     0,                      /* tp_finalize */
-#if PY_VERSION_HEX >= 0x03080000
     0,                      /* tp_vectorcall */
-#endif
 };
 
 
diff --git a/wx/glcanvas.pyi b/wx/glcanvas.pyi
index 04351379..898a016a 100644
--- wx/glcanvas.pyi
+++ wx/glcanvas.pyi
@@ -355,7 +355,7 @@ class GLContextAttrs(GLAttribsBase):
 # end of class GLContextAttrs
 
 
-class GLContext(Object):
+class GLContext(wx.Object):
     """
     GLContext(win, other=None, ctxAttrs=None)
     
@@ -389,9 +389,9 @@ class GLContext(Object):
 # end of class GLContext
 
 
-class GLCanvas(Window):
+class GLCanvas(wx.Window):
     """
-    GLCanvas(parent, dispAttrs, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=GLCanvasName, palette=NullPalette)
+    GLCanvas(parent, dispAttrs, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=GLCanvasName, palette=wx.NullPalette)
     GLCanvas(parent, id=wx.ID_ANY, attribList=None, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name='GLCanvas', palette=wx.NullPalette)
     
     wxGLCanvas is a class for displaying OpenGL graphics.
@@ -399,7 +399,7 @@ class GLCanvas(Window):
 
     def __init__(self, *args, **kw):
         """
-        GLCanvas(parent, dispAttrs, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=GLCanvasName, palette=NullPalette)
+        GLCanvas(parent, dispAttrs, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=GLCanvasName, palette=wx.NullPalette)
         GLCanvas(parent, id=wx.ID_ANY, attribList=None, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name='GLCanvas', palette=wx.NullPalette)
         
         wxGLCanvas is a class for displaying OpenGL graphics.
@@ -448,9 +448,9 @@ class GLCanvas(Window):
         """
 
     @staticmethod
-    def GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL):
+    def GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL):
         """
-        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
+        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
         """
 # end of class GLCanvas
 
diff --git a/wx/stc.pyi b/wx/stc.pyi
index 5b01abb1..a2d6f0ef 100644
--- wx/stc.pyi
+++ wx/stc.pyi
@@ -2280,7 +2280,7 @@ STCNameStr = ""
 
 class StyledTextCtrl(wx.Control, wx.TextEntry):
     """
-    StyledTextCtrl(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=STCNameStr)
+    StyledTextCtrl(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=STCNameStr)
     StyledTextCtrl()
     
     A wxWidgets implementation of the Scintilla source code editing
@@ -2289,16 +2289,16 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def __init__(self, *args, **kw):
         """
-        StyledTextCtrl(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=STCNameStr)
+        StyledTextCtrl(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=STCNameStr)
         StyledTextCtrl()
         
         A wxWidgets implementation of the Scintilla source code editing
         component.
         """
 
-    def Create(self, parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=STCNameStr):
+    def Create(self, parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=STCNameStr):
         """
-        Create(parent, id=ID_ANY, pos=DefaultPosition, size=DefaultSize, style=0, name=STCNameStr) -> bool
+        Create(parent, id=wx.ID_ANY, pos=wx.DefaultPosition, size=wx.DefaultSize, style=0, name=STCNameStr) -> bool
         
         Create the UI elements for a STC that was created with the default
         ctor.
@@ -2928,7 +2928,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def PointFromPosition(self, pos):
         """
-        PointFromPosition(pos) -> Point
+        PointFromPosition(pos) -> wx.Point
         
         Retrieve the point in the window where a position is displayed.
         """
@@ -3439,7 +3439,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def GetAdditionalCaretForeground(self):
         """
-        GetAdditionalCaretForeground() -> Colour
+        GetAdditionalCaretForeground() -> wx.Colour
         
         Get the foreground colour of additional carets.
         """
@@ -4027,14 +4027,14 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def StyleGetForeground(self, style):
         """
-        StyleGetForeground(style) -> Colour
+        StyleGetForeground(style) -> wx.Colour
         
         Get the foreground colour of a style.
         """
 
     def StyleGetBackground(self, style):
         """
-        StyleGetBackground(style) -> Colour
+        StyleGetBackground(style) -> wx.Colour
         
         Get the background colour of a style.
         """
@@ -4262,7 +4262,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def GetCaretLineBackground(self):
         """
-        GetCaretLineBackground() -> Colour
+        GetCaretLineBackground() -> wx.Colour
         
         Get the colour of the background of the line containing the caret.
         """
@@ -4276,7 +4276,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def GetCaretForeground(self):
         """
-        GetCaretForeground() -> Colour
+        GetCaretForeground() -> wx.Colour
         
         Get the foreground colour of the caret.
         """
@@ -4304,7 +4304,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def GetHotspotActiveForeground(self):
         """
-        GetHotspotActiveForeground() -> Colour
+        GetHotspotActiveForeground() -> wx.Colour
         
         Get the fore colour for active hotspots.
         """
@@ -4318,7 +4318,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def GetHotspotActiveBackground(self):
         """
-        GetHotspotActiveBackground() -> Colour
+        GetHotspotActiveBackground() -> wx.Colour
         
         Get the back colour for active hotspots.
         """
@@ -4530,7 +4530,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def GetMarginBackground(self, margin):
         """
-        GetMarginBackground(margin) -> Colour
+        GetMarginBackground(margin) -> wx.Colour
         
         Retrieve the background colour of a margin.
         """
@@ -5076,9 +5076,9 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
         Delete a marker.
         """
 
-    def MarkerDefine(self, markerNumber, markerSymbol, foreground=NullColour, background=NullColour):
+    def MarkerDefine(self, markerNumber, markerSymbol, foreground=wx.NullColour, background=wx.NullColour):
         """
-        MarkerDefine(markerNumber, markerSymbol, foreground=NullColour, background=NullColour)
+        MarkerDefine(markerNumber, markerSymbol, foreground=wx.NullColour, background=wx.NullColour)
         
         Set the symbol used for a particular marker number, and optionally the
         fore and background colours.
@@ -5235,7 +5235,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def IndicatorGetForeground(self, indicator):
         """
-        IndicatorGetForeground(indicator) -> Colour
+        IndicatorGetForeground(indicator) -> wx.Colour
         
         Retrieve the foreground colour of an indicator.
         """
@@ -5277,7 +5277,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def IndicatorGetHoverForeground(self, indicator):
         """
-        IndicatorGetHoverForeground(indicator) -> Colour
+        IndicatorGetHoverForeground(indicator) -> wx.Colour
         
         Retrieve the foreground hover colour of an indicator.
         """
@@ -6954,7 +6954,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def GetEdgeColour(self):
         """
-        GetEdgeColour() -> Colour
+        GetEdgeColour() -> wx.Colour
         
         Retrieve the colour used in edge indication.
         """
@@ -7254,7 +7254,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 
     def StyleGetFont(self, style):
         """
-        StyleGetFont(style) -> Font
+        StyleGetFont(style) -> wx.Font
         
         Get the font of a style.
         """
@@ -7267,9 +7267,9 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
         wxFont's attributes.
         """
 
-    def StyleSetFontAttr(self, styleNum, size, faceName, bold, italic, underline, encoding=FONTENCODING_DEFAULT):
+    def StyleSetFontAttr(self, styleNum, size, faceName, bold, italic, underline, encoding=wx.FONTENCODING_DEFAULT):
         """
-        StyleSetFontAttr(styleNum, size, faceName, bold, italic, underline, encoding=FONTENCODING_DEFAULT)
+        StyleSetFontAttr(styleNum, size, faceName, bold, italic, underline, encoding=wx.FONTENCODING_DEFAULT)
         
         Set all font style attributes at once.
         """
@@ -7698,15 +7698,15 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
     @staticmethod
     def GetLibraryVersionInfo():
         """
-        GetLibraryVersionInfo() -> VersionInfo
+        GetLibraryVersionInfo() -> wx.VersionInfo
         
         Returns the version of the Scintilla library used by this control.
         """
 
     @staticmethod
-    def GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL):
+    def GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL):
         """
-        GetClassDefaultAttributes(variant=WINDOW_VARIANT_NORMAL) -> VisualAttributes
+        GetClassDefaultAttributes(variant=wx.WINDOW_VARIANT_NORMAL) -> wx.VisualAttributes
         """
 
     def AutoComplete(self, *args, **kw):
@@ -8017,7 +8017,7 @@ class StyledTextCtrl(wx.Control, wx.TextEntry):
 # end of class StyledTextCtrl
 
 
-class StyledTextEvent(CommandEvent):
+class StyledTextEvent(wx.CommandEvent):
     """
     StyledTextEvent(commandType=0, id=0)
     StyledTextEvent(event)
diff --git a/wx/xml.pyi b/wx/xml.pyi
index a2d7c045..bbf8d564 100644
--- wx/xml.pyi
+++ wx/xml.pyi
@@ -495,7 +495,7 @@ class XmlDocument(wx.Object):
     @staticmethod
     def GetLibraryVersionInfo():
         """
-        GetLibraryVersionInfo() -> VersionInfo
+        GetLibraryVersionInfo() -> wx.VersionInfo
         
         Get expat library version information.
         """
diff --git a/wx/xrc.pyi b/wx/xrc.pyi
index 77381e4a..de5ccbc1 100644
--- wx/xrc.pyi
+++ wx/xrc.pyi
@@ -30,7 +30,7 @@ XRC_NO_SUBCLASSING = 0
 XRC_NO_RELOADING = 0
 XRC_USE_ENVVARS = 0
 
-class XmlResource(Object):
+class XmlResource(wx.Object):
     """
     XmlResource(filemask, flags=XRC_USE_LOCALE, domain=wx.EmptyString)
     XmlResource(flags=XRC_USE_LOCALE, domain=wx.EmptyString)
@@ -50,15 +50,15 @@ class XmlResource(Object):
 
     def LoadMenuBar(self, *args, **kw):
         """
-        LoadMenuBar(parent, name) -> MenuBar
-        LoadMenuBar(name) -> MenuBar
+        LoadMenuBar(parent, name) -> wx.MenuBar
+        LoadMenuBar(name) -> wx.MenuBar
         
         Loads a menubar from resource.
         """
 
     def LoadObject(self, *args, **kw):
         """
-        LoadObject(parent, name, classname) -> Object
+        LoadObject(parent, name, classname) -> wx.Object
         LoadObject(instance, parent, name, classname) -> bool
         
         Load an object from the resource specifying both the resource name and
@@ -67,7 +67,7 @@ class XmlResource(Object):
 
     def LoadObjectRecursively(self, *args, **kw):
         """
-        LoadObjectRecursively(parent, name, classname) -> Object
+        LoadObjectRecursively(parent, name, classname) -> wx.Object
         LoadObjectRecursively(instance, parent, name, classname) -> bool
         
         Load an object from anywhere in the resource tree.
@@ -177,14 +177,14 @@ class XmlResource(Object):
 
     def LoadBitmap(self, name):
         """
-        LoadBitmap(name) -> Bitmap
+        LoadBitmap(name) -> wx.Bitmap
         
         Loads a bitmap resource from a file.
         """
 
     def LoadDialog(self, *args, **kw):
         """
-        LoadDialog(parent, name) -> Dialog
+        LoadDialog(parent, name) -> wx.Dialog
         LoadDialog(dlg, parent, name) -> bool
         
         Loads a dialog.
@@ -192,7 +192,7 @@ class XmlResource(Object):
 
     def LoadFrame(self, *args, **kw):
         """
-        LoadFrame(parent, name) -> Frame
+        LoadFrame(parent, name) -> wx.Frame
         LoadFrame(frame, parent, name) -> bool
         
         Loads a frame from the resource.
@@ -200,21 +200,21 @@ class XmlResource(Object):
 
     def LoadIcon(self, name):
         """
-        LoadIcon(name) -> Icon
+        LoadIcon(name) -> wx.Icon
         
         Loads an icon resource from a file.
         """
 
     def LoadMenu(self, name):
         """
-        LoadMenu(name) -> Menu
+        LoadMenu(name) -> wx.Menu
         
         Loads menu from resource.
         """
 
     def LoadPanel(self, *args, **kw):
         """
-        LoadPanel(parent, name) -> Panel
+        LoadPanel(parent, name) -> wx.Panel
         LoadPanel(panel, parent, name) -> bool
         
         Loads a panel.
@@ -222,7 +222,7 @@ class XmlResource(Object):
 
     def LoadToolBar(self, parent, name):
         """
-        LoadToolBar(parent, name) -> ToolBar
+        LoadToolBar(parent, name) -> wx.ToolBar
         
         Loads a toolbar.
         """
@@ -274,9 +274,9 @@ class XmlResource(Object):
         """
 
     @staticmethod
-    def GetXRCID(str_id, value_if_not_found=ID_NONE):
+    def GetXRCID(str_id, value_if_not_found=wx.ID_NONE):
         """
-        GetXRCID(str_id, value_if_not_found=ID_NONE) -> int
+        GetXRCID(str_id, value_if_not_found=wx.ID_NONE) -> int
         
         Returns a numeric ID that is equivalent to the string ID used in an
         XML resource.
@@ -306,7 +306,7 @@ class XmlResource(Object):
 # end of class XmlResource
 
 
-class XmlResourceHandler(Object):
+class XmlResourceHandler(wx.Object):
     """
     XmlResourceHandler()
     
@@ -324,14 +324,14 @@ class XmlResourceHandler(Object):
 
     def CreateResource(self, node, parent, instance):
         """
-        CreateResource(node, parent, instance) -> Object
+        CreateResource(node, parent, instance) -> wx.Object
         
         Creates an object (menu, dialog, control, ...) from an XML node.
         """
 
     def DoCreateResource(self):
         """
-        DoCreateResource() -> Object
+        DoCreateResource() -> wx.Object
         
         Called from CreateResource after variables were filled.
         """
@@ -399,7 +399,7 @@ class XmlResourceHandler(Object):
 
     def CreateResFromNode(self, node, parent, instance=None):
         """
-        CreateResFromNode(node, parent, instance=None) -> Object
+        CreateResFromNode(node, parent, instance=None) -> wx.Object
         
         Creates a resource from a node.
         """
@@ -414,16 +414,16 @@ class XmlResourceHandler(Object):
 
     def GetBitmap(self, *args, **kw):
         """
-        GetBitmap(param="bitmap", defaultArtClient=ART_OTHER, size=DefaultSize) -> Bitmap
-        GetBitmap(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> Bitmap
+        GetBitmap(param="bitmap", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Bitmap
+        GetBitmap(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Bitmap
         
         Gets a bitmap.
         """
 
     def GetBitmapBundle(self, *args, **kw):
         """
-        GetBitmapBundle(param="bitmap", defaultArtClient=ART_OTHER, size=DefaultSize) -> BitmapBundle
-        GetBitmapBundle(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> BitmapBundle
+        GetBitmapBundle(param="bitmap", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.BitmapBundle
+        GetBitmapBundle(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.BitmapBundle
         
         Gets a bitmap bundle.
         """
@@ -436,16 +436,16 @@ class XmlResourceHandler(Object):
         false).
         """
 
-    def GetColour(self, param, defaultColour=NullColour):
+    def GetColour(self, param, defaultColour=wx.NullColour):
         """
-        GetColour(param, defaultColour=NullColour) -> Colour
+        GetColour(param, defaultColour=wx.NullColour) -> wx.Colour
         
         Gets colour in HTML syntax (#RRGGBB).
         """
 
     def GetCurFileSystem(self):
         """
-        GetCurFileSystem() -> FileSystem
+        GetCurFileSystem() -> wx.FileSystem
         
         Returns the current file system.
         """
@@ -457,16 +457,16 @@ class XmlResourceHandler(Object):
         Gets a dimension (may be in dialog units).
         """
 
-    def GetDirection(self, param, dirDefault=LEFT):
+    def GetDirection(self, param, dirDefault=wx.LEFT):
         """
-        GetDirection(param, dirDefault=LEFT) -> Direction
+        GetDirection(param, dirDefault=wx.LEFT) -> Direction
         
         Gets a direction.
         """
 
     def GetFont(self, param="font"):
         """
-        GetFont(param="font") -> Font
+        GetFont(param="font") -> wx.Font
         
         Gets a font.
         """
@@ -480,22 +480,22 @@ class XmlResourceHandler(Object):
 
     def GetIcon(self, *args, **kw):
         """
-        GetIcon(param="icon", defaultArtClient=ART_OTHER, size=DefaultSize) -> Icon
-        GetIcon(node, defaultArtClient=ART_OTHER, size=DefaultSize) -> Icon
+        GetIcon(param="icon", defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Icon
+        GetIcon(node, defaultArtClient=wx.ART_OTHER, size=wx.DefaultSize) -> wx.Icon
         
         Returns an icon.
         """
 
-    def GetIconBundle(self, param, defaultArtClient=ART_OTHER):
+    def GetIconBundle(self, param, defaultArtClient=wx.ART_OTHER):
         """
-        GetIconBundle(param, defaultArtClient=ART_OTHER) -> IconBundle
+        GetIconBundle(param, defaultArtClient=wx.ART_OTHER) -> wx.IconBundle
         
         Returns an icon bundle.
         """
 
     def GetImageList(self, param="imagelist"):
         """
-        GetImageList(param="imagelist") -> ImageList
+        GetImageList(param="imagelist") -> wx.ImageList
         
         Creates an image list from the param markup data.
         """
@@ -573,14 +573,14 @@ class XmlResourceHandler(Object):
 
     def GetPosition(self, param="pos"):
         """
-        GetPosition(param="pos") -> Point
+        GetPosition(param="pos") -> wx.Point
         
         Gets the position (may be in dialog units).
         """
 
     def GetSize(self, param="size", windowToUse=0):
         """
-        GetSize(param="size", windowToUse=0) -> Size
+        GetSize(param="size", windowToUse=0) -> wx.Size
         
         Gets the size (may be in dialog units).
         """
@@ -663,7 +663,7 @@ class XmlResourceHandler(Object):
 
     def GetParent(self):
         """
-        GetParent() -> Object
+        GetParent() -> wx.Object
         
         After CreateResource has been called this will return the current
         item's parent, if any.
@@ -671,7 +671,7 @@ class XmlResourceHandler(Object):
 
     def GetInstance(self):
         """
-        GetInstance() -> Object
+        GetInstance() -> wx.Object
         
         After CreateResource has been called this will return the instance
         that the XML resource content should be created upon, if it has
@@ -680,7 +680,7 @@ class XmlResourceHandler(Object):
 
     def GetParentAsWindow(self):
         """
-        GetParentAsWindow() -> Window
+        GetParentAsWindow() -> wx.Window
         
         After CreateResource has been called this will return the item's
         parent as a wxWindow.
@@ -719,7 +719,7 @@ class XmlSubclassFactory(object):
 
     def Create(self, className):
         """
-        Create(className) -> Object
+        Create(className) -> wx.Object
         """
 # end of class XmlSubclassFactory
 
