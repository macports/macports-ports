# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python      1.0

name                py-wxpython-4.0
python.rootname     wxPython
# check kicad's version before updating
version             4.1.1
revision            7

categories-append   graphics devel
license             wxwidgets-3.1
platforms           darwin
maintainers         nomaintainer

description         Python interface to the wxWidgets 4.1 cross platform GUI
long_description    wxPython is a GUI toolkit for the Python programming \
                    language. It allows Python programmers to create \
                    programs with a robust, highly functional graphical \
                    user interface, simply and easily. It is implemented \
                    as a Python extension module (native code) that wraps \
                    the wxWidgets cross platform GUI library, written in C++.

homepage            https://www.wxpython.org/

checksums           rmd160  e0d66dfb24bd7738306e70588ed0a5f6f7116de1 \
                    sha256  00e5e3180ac7f2852f342ad341d57c44e7e4326de0b550b9a5c4a8361b6c3528 \
                    size    66043287

python.versions     37 38 39 310

if {${name} ne ${subport}} {
    patchfiles-append   fix_cc_cxx.patch webkit.patch webkit2.patch build.patch
    patch.pre_args      -p1

    depends_build-append \
        port:py${python.version}-setuptools

    if {${python.version} < 38} {
        depends_lib-append \
            port:py${python.version}-importlib-metadata
    }

    depends_run-append \
        port:py${python.version}-numpy \
        port:py${python.version}-pillow \
        port:py${python.version}-six \
        port:py${python.version}-sip4 \
        port:py${python.version}-pathlib2

    build.env-append SIP=${python.prefix}/bin/sip
    build.env-append PATH=${python.prefix}/bin:$env(PATH)
    set wxpython_options "--no_magic --release --python ${python.bin} --osx_cocoa --nodoc --prefix=${python.prefix}"
    build.cmd ${python.bin} build.py
    build.target build ${wxpython_options}
    destroot.cmd ${python.bin} build.py
    destroot.target install
    destroot.destdir --destdir=${destroot} ${wxpython_options}

    post-patch {
        reinplace "s|MACOSX_DEPLOYMENT_TARGET = \"10.10\"|MACOSX_DEPLOYMENT_TARGET = \"${macosx_deployment_target}\"|" \
            ${worksrcpath}/wscript
    }

    test.run yes
    test.cmd "${python.bin} -c 'import wx ; print(wx.__version__)'"
    test.target
}
