# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               python 1.0
PortGroup               active_variants 1.1
PortGroup               github 1.0
PortGroup               compilers 1.0
PortGroup               compiler_blacklist_versions 1.0
PortGroup               boost 1.0
PortGroup               legacysupport 1.1

# __sincos https://trac.macports.org/ticket/63233
legacysupport.newest_darwin_requires_legacy 12

github.setup            scipy   scipy 1.11.4 v
github.tarball_from     releases
revision                1

checksums               rmd160  8120272e76e1065f8f6b5aaf3fa7fd450d56e4c3 \
                        sha256  90a2b78e7f5733b9de748f589f09225013685f9b218275257f8a8168ededaeaa \
                        size    56336202

name                    py-scipy
license                 BSD
maintainers             {michaelld @michaelld} openmaintainer
description             An opensource library of scientific tools for Python
long_description        {*}${description}

homepage                https://www.scipy.org/

python.versions         38 39 310 311 312

python.add_archflags    no
universal_variant       no

compilers.setup         require_fortran -clang -gcc44 -gcc45 -gcc46 \
                        -gcc47 -gcc48 -g95

github.livecheck.regex {([0-9.-]+)}

if {${name} ne ${subport}} {
    depends_build-append \
                    port:py${python.version}-pythran \
                    port:swig-python

    depends_lib-append \
                    port:py${python.version}-meson-python \
                    port:py${python.version}-numpy \
                    port:py${python.version}-pybind11 \
                    port:py${python.version}-mypy

    compiler.c_standard 2011
    compiler.cxx_standard 2014
    compiler.thread_local_storage yes
    # Requires threads.h, missing in Xcode clang
    # https://build.macports.org/builders/ports-10.11_x86_64-builder/builds/136856/steps/install-port/logs/stdio
    compiler.blacklist-append {clang < 900}

    boost.version       1.76
    patchfiles-append   patch-allow-MP-boost.diff patch-pyproject.toml.diff

    # force disable STDC THREADS from <threads.h> and instead just use __thread
    # https://trac.macports.org/ticket/62488
    patchfiles-append   patch-use__STDC_NO_THREADS__.diff

    worksrcdir              ${distname}
    build.env-append        "CCFLAGS=-I${prefix}/include -L${prefix}/lib"
    destroot.env-append     "CCFLAGS=-I${prefix}/include -L${prefix}/lib"
    configure.fflags-append -fno-second-underscore

    pre-configure {
        build.env-append    CC=${configure.cc} \
                            CXX=${configure.cxx} \
                            CFLAGS=${configure.cc_archflags} \
                            CXXFLAGS=${configure.cxx_archflags} \
                            CPPFLAGS=${configure.cppflags} \
                            FC=${configure.fc} \
                            F77=${configure.f77} \
                            F90=${configure.f90} \
                            FFLAGS=${configure.f77_archflags} ${configure.fflags} \
                            F90FLAGS=${configure.f90_archflags} ${configure.fflags} \
                            PKG_CONFIG_PATH=${python.pkgd}/pybind11/share/pkgconfig
        destroot.env-append CC=${configure.cc} \
                            CXX=${configure.cxx} \
                            CFLAGS=${configure.cc_archflags} \
                            CXXFLAGS=${configure.cxx_archflags} \
                            CPPFLAGS=${configure.cppflags}

        reinplace "s|'pythran', native: true|'pythran', native: true, dirs: \['${python.prefix}/bin'\]|g" ${worksrcpath}/meson.build
        reinplace "s|numpy==|numpy>=|g" ${worksrcpath}/pyproject.toml
    }

    post-destroot {
        # for some reason read-world is not set
        system "chmod -R a+r ${destroot}${prefix}"
    }

    variant atlas conflicts openblas mkl description "Use MacPorts ATLAS libraries" {
        depends_lib-append  port:atlas
    }

    variant openblas conflicts atlas mkl description "Use MacPorts OpenBLAS Libraries" {
        depends_lib-append  path:lib/libopenblas.dylib:OpenBLAS
    }

    variant mkl conflicts atlas openblas description "Use MacPorts MKL Libraries" {
        depends_lib-append  port:py${python.version}-mkl \
                            port:py${python.version}-mkl-include
    }

    # Make +openblas a default variant, at least temporarily, to
    # overcome issues with Apple's /usr/lib/libblas.* and
    # /usr/lib/liblapack.* missing a symbol. see also:
    # https://trac.macports.org/ticket/57829
    if {![variant_isset atlas] &&
        ![variant_isset openblas] &&
        ![variant_isset mkl]} {
        default_variants +openblas
    }

    if {[variant_isset atlas]} {
        # use MacPorts atlas
        build.env-append    OPENBLAS=None \
                            MKLROOT=None \
                            ATLAS=${prefix}/lib \
                            LAPACK=${prefix}/lib \
                            BLAS=${prefix}/lib
        destroot.env-append OPENBLAS=None \
                            MKLROOT=None \
                            ATLAS=${prefix}/lib \
                            LAPACK=${prefix}/lib \
                            BLAS=${prefix}/lib

        pre-fetch {
            # scipy needs fortran; so we only need to check if atlas is
            # compiled with +nofortran
            if {![catch {set result [active_variants atlas "" nofortran]}]} {
                if {!$result} {
                    return -code error \
"You have selected the +atlas variant but atlas was built with +nofortran.\
scipy needs a fortran enabled atlas. Please rebuild atlas without the +nofortran\
variant."
                }
            }

            # also check that numpy has the atlas variant active
            if {![catch {set result [active_variants py${python.version}-numpy atlas ""]}]} {
                if {!$result} {

                    return -code error \
"You have selected the +atlas variant but py${python.version}-numpy does not\
have the +atlas variant active. Please ensure that numpy is activated with the\
+atlas variant."
                }
            }
        }

    } elseif {[variant_isset openblas]} {
        # use MacPorts OpenBLAS
        build.env-append    OPENBLAS=${prefix}/lib \
                            ATLAS=None \
                            MKLROOT=None
        destroot.env-append OPENBLAS=${prefix}/lib \
                            ATLAS=None \
                            MKLROOT=None

    } elseif {[variant_isset mkl]} {
        # use MacPorts MKL
        build.env-append    OPENBLAS=None \
                            ATLAS=None \
                            MKLROOT=${python.prefix}
        destroot.env-append OPENBLAS=None \
                            ATLAS=None \
                            MKLROOT=${python.prefix}

        pre-fetch {
            # check that numpy has the mkl variant active
            if {![catch {set result [active_variants py${python.version}-numpy mkl ""]}]} {
                if {!$result} {

                    return -code error \
"You have selected the +mkl variant but py${python.version}-numpy does not\
have the +mkl variant active. Please ensure that numpy is activated with the\
+mkl variant."
                }
            }
        }

        # set absolute path to remove references to @rpath/libmkl_rt.2.dylib
        post-destroot {
            foreach soname [exec find ${destroot}${python.pkgd}/scipy -name "*.so"] {
                system "install_name_tool -change @rpath/libmkl_rt.2.dylib ${python.prefix}/lib/libmkl_rt.2.dylib ${soname}"
                }
        }

    } else {
        # use Accelerate BLAS
        build.env-append    OPENBLAS=None \
                            ATLAS=None \
                            LAPACK=/usr/lib \
                            BLAS=/usr/lib
        destroot.env-append OPENBLAS=None \
                            ATLAS=None \
                            LAPACK=/usr/lib \
                            BLAS=/usr/lib
    }
}
