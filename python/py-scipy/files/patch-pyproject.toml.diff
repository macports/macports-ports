--- pyproject.toml.orig	2024-01-11 23:28:08
+++ pyproject.toml	2024-01-11 23:40:38
@@ -11,13 +11,13 @@
 build-backend = 'mesonpy'
 requires = [
     # Reason for `<`: future-proofing (0.14.0 released and known to work)
-    "meson-python>=0.12.1,<0.15.0",
+    "meson-python>=0.12.1",
     # Reason for `<`: we want to build the 1.11.x releases with 0.29.x (too many changes in 3.0)
-    "Cython>=0.29.35,<3.0",   # when updating version, also update check in meson.build
+    "Cython>=0.29.35",   # when updating version, also update check in meson.build
     # Reason for `<`: future-proofing (2.11.1 is the most recent version)
-    "pybind11>=2.10.4,<2.11.1",
+    "pybind11>=2.10.4",
     # Reason for `<`: future-proofing (0.14.0 released and known to work)
-    "pythran>=0.12.0,<0.15.0",
+    "pythran>=0.12.0",
 
     # NumPy dependencies - to update these, sync from
     # https://github.com/scipy/oldest-supported-numpy/, and then
@@ -27,22 +27,22 @@
     # now matches minimum supported version, keep here as separate requirement
     # to be able to sync more easily with oldest-supported-numpy
     # loongarch64 requires numpy>=1.22.0
-    "numpy==1.22.0; python_version<'3.11' and platform_machine=='loongarch64'",
+    #"numpy==1.22.0; python_version<'3.11' and platform_machine=='loongarch64'",
 
     # On Windows we need to avoid 1.21.6, 1.22.0 and 1.22.1 because they were
     # built with vc142. 1.22.3 is the first version that has 32-bit Windows
     # wheels *and* was built with vc141. So use that:
-    "numpy==1.22.3; python_version=='3.9' and platform_system=='Windows' and platform_python_implementation != 'PyPy' and platform_machine!='loongarch64'",
-    "numpy==1.22.3; python_version=='3.10' and platform_system=='Windows' and platform_python_implementation != 'PyPy' and platform_machine!='loongarch64'",
+    #"numpy==1.22.3; python_version=='3.9' and platform_system=='Windows' and platform_python_implementation != 'PyPy' and platform_machine!='loongarch64'",
+    #"numpy==1.22.3; python_version=='3.10' and platform_system=='Windows' and platform_python_implementation != 'PyPy' and platform_machine!='loongarch64'",
 
     # default numpy requirements
-    "numpy==1.21.6; python_version=='3.9' and (platform_system!='Windows' and platform_machine!='loongarch64') and platform_python_implementation != 'PyPy'",
+    #"numpy==1.21.6; python_version=='3.9' and (platform_system!='Windows' and platform_machine!='loongarch64') and platform_python_implementation != 'PyPy'",
     # Note that 1.21.3 was the first version with a complete set of 3.10 wheels,
     # however macOS was broken and it's safe C API/ABI-wise to build against 1.21.6
     # (see oldest-supported-numpy issues gh-28 and gh-45)
-    "numpy==1.21.6; python_version=='3.10' and (platform_system!='Windows' and platform_machine!='loongarch64') and platform_python_implementation != 'PyPy'",
-    "numpy==1.23.2; python_version=='3.11' and platform_python_implementation != 'PyPy'",
-    "numpy>=1.26.0,<1.27.0; python_version=='3.12'",  # no `==` because we expect relevant bug fixes in 1.26.1/2
+    #"numpy==1.21.6; python_version=='3.10' and (platform_system!='Windows' and platform_machine!='loongarch64') and platform_python_implementation != 'PyPy'",
+    #"numpy==1.23.2; python_version=='3.11' and platform_python_implementation != 'PyPy'",
+    #"numpy>=1.26.0,<1.27.0; python_version=='3.12'",  # no `==` because we expect relevant bug fixes in 1.26.1/2
 
     # For Python versions which aren't yet officially supported,
     # we specify an unpinned NumPy which allows source distributions
