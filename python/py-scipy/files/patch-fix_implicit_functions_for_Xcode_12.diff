Fix:

error: implicit declaration of function 'ccopy_' is invalid in C99
error: implicit declaration of function 'dcopy_' is invalid in C99
error: implicit declaration of function 'idamax_' is invalid in C99
error: implicit declaration of function 'input_error' is invalid in C99
error: implicit declaration of function 'scopy_' is invalid in C99
error: implicit declaration of function 'zcopy_' is invalid in C99
error: implicitly declaring library function 'strncmp' with type 'int (const char *, const char *, unsigned long)'

https://github.com/scipy/scipy/pull/12957
https://github.com/scipy/scipy/issues/12935
--- scipy/sparse/linalg/dsolve/SuperLU/SRC/clacon2.c.orig
+++ scipy/sparse/linalg/dsolve/SuperLU/SRC/clacon2.c
@@ -106,6 +106,7 @@ clacon2_(int *n, complex *v, complex *x, float *est, int *kase, int isave[3])
     extern float smach(char *);
     extern int icmax1_slu(int *, complex *, int *);
     extern double scsum1_slu(int *, complex *, int *);
+    extern void ccopy_(int *, complex [], int *, complex [], int *);
 
     safmin = smach("Safe minimum");  /* lamch_("Safe minimum"); */
     if ( *kase == 0 ) {
--- scipy/sparse/linalg/dsolve/SuperLU/SRC/dmach.c.orig
+++ scipy/sparse/linalg/dsolve/SuperLU/SRC/dmach.c
@@ -11,6 +11,7 @@ at the top-level directory.
 #include <float.h>
 #include <math.h>
 #include <stdio.h>
+#include <string.h>
 
 double dmach(char *cmach)
 {
--- scipy/sparse/linalg/dsolve/SuperLU/SRC/ilu_cdrop_row.c.orig
+++ scipy/sparse/linalg/dsolve/SuperLU/SRC/ilu_cdrop_row.c
@@ -23,6 +23,7 @@ at the top-level directory.
 #include <stdlib.h>
 #include "slu_cdefs.h"
 
+extern void scopy_(int *, float [], int *, float [], int *);
 extern void cswap_(int *, complex [], int *, complex [], int *);
 extern void caxpy_(int *, complex *, complex [], int *, complex [], int *);
 extern void ccopy_(int *, complex [], int *, complex [], int *);
--- scipy/sparse/linalg/dsolve/SuperLU/SRC/ilu_zdrop_row.c.orig
+++ scipy/sparse/linalg/dsolve/SuperLU/SRC/ilu_zdrop_row.c
@@ -23,6 +23,7 @@ at the top-level directory.
 #include <stdlib.h>
 #include "slu_zdefs.h"
 
+extern void dcopy_(int *, double [], int *, double [], int *);
 extern void zswap_(int *, doublecomplex [], int *, doublecomplex [], int *);
 extern void zaxpy_(int *, doublecomplex *, doublecomplex [], int *, doublecomplex [], int *);
 extern void zcopy_(int *, doublecomplex [], int *, doublecomplex [], int *);
--- scipy/sparse/linalg/dsolve/SuperLU/SRC/slacon2.c.orig
+++ scipy/sparse/linalg/dsolve/SuperLU/SRC/slacon2.c
@@ -100,10 +100,12 @@ slacon2_(int *n, float *v, float *x, int *isgn, float *est, int *kase, int isave
     float temp;
 #ifdef _CRAY
     extern int ISAMAX(int *, float *, int *);
+    extern int IDAMAX(int *, float *, int *);
     extern float SASUM(int *, float *, int *);
     extern int SCOPY(int *, float *, int *, float *, int *);
 #else
     extern int isamax_(int *, float *, int *);
+    extern int idamax_(int *, float *, int *);
     extern float sasum_(int *, float *, int *);
     extern int scopy_(int *, float *, int *, float *, int *);
 #endif
--- scipy/sparse/linalg/dsolve/SuperLU/SRC/smach.c.orig
+++ scipy/sparse/linalg/dsolve/SuperLU/SRC/smach.c
@@ -11,6 +11,7 @@ at the top-level directory.
 #include <float.h>
 #include <math.h>
 #include <stdio.h>
+#include <string.h>
 
 float smach(char *cmach)
 {
--- scipy/sparse/linalg/dsolve/SuperLU/SRC/sp_ienv.c.orig
+++ scipy/sparse/linalg/dsolve/SuperLU/SRC/sp_ienv.c
@@ -68,6 +68,7 @@ at the top-level directory.
 int
 sp_ienv(int ispec)
 {
+    extern int input_error(char *, int *);
     int i;
 
     switch (ispec) {
--- scipy/sparse/linalg/dsolve/SuperLU/SRC/zlacon2.c.orig
+++ scipy/sparse/linalg/dsolve/SuperLU/SRC/zlacon2.c
@@ -106,6 +106,7 @@ zlacon2_(int *n, doublecomplex *v, doublecomplex *x, double *est, int *kase, int
     extern double dmach(char *);
     extern int izmax1_slu(int *, doublecomplex *, int *);
     extern double dzsum1_slu(int *, doublecomplex *, int *);
+    extern void zcopy_(int *, doublecomplex [], int *, doublecomplex [], int *);
 
     safmin = dmach("Safe minimum");  /* lamch_("Safe minimum"); */
     if ( *kase == 0 ) {
--- scipy/spatial/qhull_src/src/libqhull_r.h.orig
+++ scipy/spatial/qhull_src/src/libqhull_r.h
@@ -37,6 +37,7 @@
 #include <limits.h>
 #include <time.h>
 #include <stdio.h>
+#include <string.h>
 
 #ifndef __STDC__
 #ifndef __cplusplus
@@ -1176,6 +1177,7 @@ void    qh_initqhull_start2(qhT *qh, FILE *infile, FILE *outfile, FILE *errfile)
 void    qh_initthresholds(qhT *qh, char *command);
 void    qh_lib_check(int qhullLibraryType, int qhTsize, int vertexTsize, int ridgeTsize, int facetTsize, int setTsize, int qhmemTsize);
 void    qh_option(qhT *qh, const char *option, int *i, realT *r);
+void    qh_setfeasible(qhT *qh, int dim);
 void    qh_zero(qhT *qh, FILE *errfile);
 
 /***** -io_r.c prototypes (duplicated from io_r.h) ***********************/
@@ -1184,6 +1186,7 @@ void    qh_dfacet(qhT *qh, unsigned int id);
 void    qh_dvertex(qhT *qh, unsigned int id);
 void    qh_printneighborhood(qhT *qh, FILE *fp, qh_PRINT format, facetT *facetA, facetT *facetB, boolT printall);
 void    qh_produce_output(qhT *qh);
+void    qh_prepare_output(qhT *qh);
 coordT *qh_readpoints(qhT *qh, int *numpoints, int *dimension, boolT *ismalloc);
 
 
