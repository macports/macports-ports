--- scipy/integrate/setup.py.orig
+++ scipy/integrate/setup.py
@@ -37,9 +37,9 @@
     config.add_library('mach', sources=mach_src, config_fc={'noopt': (__file__, 1)},
                        _pre_build_hook=pre_build_hook)
     config.add_library('quadpack', sources=quadpack_src, _pre_build_hook=pre_build_hook)
-    config.add_library('lsoda', sources=lsoda_src, _pre_build_hook=pre_build_hook)
-    config.add_library('vode', sources=vode_src, _pre_build_hook=pre_build_hook)
-    config.add_library('dop', sources=dop_src, _pre_build_hook=pre_build_hook)
+    config.add_library('lsoda', sources=lsoda_src, _pre_build_hook=pre_build_hook, macros=[('__STDC_NO_THREADS__',1)])
+    config.add_library('vode', sources=vode_src, _pre_build_hook=pre_build_hook, macros=[('__STDC_NO_THREADS__',1)])
+    config.add_library('dop', sources=dop_src, _pre_build_hook=pre_build_hook, macros=[('__STDC_NO_THREADS__',1)])
 
     # Extensions
     # quadpack:
--- scipy/linalg/setup.py.orig
+++ scipy/linalg/setup.py
@@ -59,7 +59,8 @@
     config.add_extension('_flapack',
                          sources=sources,
                          depends=depends,
-                         extra_info=lapack_opt
+                         extra_info=lapack_opt,
+                         define_macros=[('__STDC_NO_THREADS__',1)]
                          )
 
     if uses_blas64():
@@ -96,7 +97,8 @@
     ext = config.add_extension('_interpolative',
                                sources=[join('src', 'id_dist', 'src', '*.f'),
                                         "interpolative.pyf"],
-                               extra_info=lapack_opt
+                               extra_info=lapack_opt,
+                               define_macros=[('__STDC_NO_THREADS__',1)]
                                )
     ext._pre_build_hook = gfortran_legacy_flag_hook
 
--- scipy/optimize/setup.py.orig
+++ scipy/optimize/setup.py
@@ -78,10 +78,13 @@
                          depends=[join('tnc', 'tnc.h')],
                          **numpy_nodepr_api)
 
+    local_macros = numpy_nodepr_api
+    local_macros['define_macros'].append(('__STDC_NO_THREADS__',1))
+
     config.add_extension('_cobyla',
                          sources=[join('cobyla', x) for x in [
                              'cobyla.pyf', 'cobyla2.f', 'trstlp.f']],
-                         **numpy_nodepr_api)
+                         **local_macros)
 
     sources = ['minpack2.pyf', 'dcsrch.f', 'dcstep.f']
     config.add_extension('minpack2',
