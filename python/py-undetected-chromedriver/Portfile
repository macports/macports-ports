# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-undetected-chromedriver
version             3.1.3
categories-append   python www
maintainers         nomaintainer
license             GPL-3
supported_archs     noarch

description         Custom Selenium Chromedriver
long_description    {*}${description} | Zero-Config | \
                    Passes ALL bot mitigation systems \
                    (like Distil / Imperva/ Datadadome / CloudFlare IUAM)

homepage            https://github.com/ultrafunkamsterdam/undetected-chromedriver

checksums           rmd160  487c1f61efb09340b7db6bd2cd201a0a6c01ba26 \
                    sha256  d8884a9d2a65fbe272c184d4c8f92fc6c8e686aa49bf441dd63bf92ff58007e8 \
                    size    39157

python.versions     37 38 39 310

if {${name} ne ${subport}} {
    depends_build-append \
                    port:python${python.version} \
                    port:py${python.version}-requests \
                    port:py${python.version}-setuptools \
                    port:py${python.version}-websockets

    depends_lib-append \
                    port:py${python.version}-selenium

    depends_test-append \
                    port:py${python.version}-pytest

    post-patch {
        fs-traverse f ${worksrcpath}/undetected_chromedriver {
            if {[file isfile ${f}] && [string match "*.py" ${f}]} {
                reinplace -E -q \
                    "1s|^(#!\[\[:space:]]*)/usr/bin/env\[\[:space:]]+python3|\\1${python.bin}|" \
                    ${f}
            }
        }
    }

    test.run        yes
    test.env-append PYTHONPATH=${worksrcpath}/build/lib
    test.cmd        py.test-${python.branch}
    test.target     tests/v2/test_uc.py
}

variant port_chromedriver_binary \
    description {Patch the chromedriver port binary.} {
    if {${name} ne ${subport}} {
        # diff -Naurd ./uc-orig/undetected_chromedriver/__init__.py ./uc-new/undetected_chromedriver/__init__.py | sed -E -e 's/\.\/uc-(orig|new)\//.\//g' | sed -E -e 's|/opt/local|@PREFIX@|g' > ~/Downloads/patch-undetected_chromedriver-__init__-py.diff
        patchfiles-append \
                    patch-undetected_chromedriver-__init__-py.diff \
                    patch-undetected_chromedriver-patcher-py.diff
        post-patch {
            reinplace "s|@PREFIX@|${prefix}|g" \
                    ${worksrcpath}/undetected_chromedriver/__init__.py
            reinplace "s|@NAME@|chromedriver|g" \
                    ${worksrcpath}/undetected_chromedriver/__init__.py
        }
    }

    notes-append \
        "This package is intended to be used with the port

    chromedriver +undetected

and the Python code:

    import undetected_chromedriver as uc
    driver = uc.Chrome()

To use separate chromedriver binaries with distinct signatures, use:

    driver = uc.Chrome(executable_path='${prefix}/bin/chromedriver-original', executable_path_mkdtemp=True)
    driver.delete_executable_path_mkdtemp()
"
}

default_variants-append \
                    +port_chromedriver_binary
