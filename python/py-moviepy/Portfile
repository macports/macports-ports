# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-moviepy
version             1.0.3
revision            0
categories-append   graphics

license             MIT
maintainers         nomaintainer
platforms           darwin

description         Video editing with Python

long_description    MoviePy (full documentation) is a Python library \
                    for video editing: cutting, concatenations, title \
                    insertions, video compositing (a.k.a. non-linear \
                    editing), video processing, and creation of \
                    custom\ effects. See the gallery for some examples \
                    of use.MoviePy can read and write all the most \
                    common audio and video formats, including GIF, and \
                    runs on Windows/Mac/Linux, with Python 2.7+ and 3 \
                    (or only Python 3.4+ from v.1.0).

homepage            https://zulko.github.io/moviepy/

checksums           rmd160  2b449ca890bd83e89096e1c5dd954c14ccde1dc2 \
                    sha256  2884e35d1788077db3ff89e763c5ba7bfddbd7ae9108c9bc809e7ba58fa433f5 \
                    size    388311

supported_archs     noarch

python.versions     37 38

if {${name} ne ${subport}} {
    depends_build-append \
                    port:py${python.version}-setuptools

    depends_run-append \
                    port:py${python.version}-decorator \
                    port:py${python.version}-imageio \
                    port:py${python.version}-imageio-ffmpeg \
                    port:py${python.version}-numpy \
                    port:py${python.version}-proglog \
                    port:py${python.version}-requests

    depends_test-append \
                    port:py${python.version}-coverage \
                    port:py${python.version}-python-coveralls \
                    port:py${python.version}-pytest \
                    port:py${python.version}-pytest-cov

    post-destroot {
        set docdir ${prefix}/share/doc/${subport}
        xinstall -d ${destroot}${docdir}
        xinstall -m 0644 -W ${worksrcpath} README.rst \
            ${destroot}${docdir}
    }

    test.run        yes
    test.cmd        py.test-${python.branch}
    test.target
    test.env-append \
                    PYTHONPATH=${worksrcpath}/build/lib

    livecheck.type  none
}
