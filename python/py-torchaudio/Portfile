# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           python 1.0

github.setup        pytorch audio 0.8.1 v
revision            1
name                py-torchaudio

categories-append   audio
platforms           darwin
license             BSD
maintainers         nomaintainer
fetch.type          git

description         Data manipulation and transformation for audio \
                    signal processing, powered by PyTorch

long_description    The aim of torchaudio is to apply PyTorch to the \
                    audio domain. By supporting PyTorch, torchaudio \
                    follows the same philosophy of providing strong \
                    GPU acceleration, having a focus on trainable \
                    features through the autograd system, and having \
                    consistent style (tensor names and dimension \
                    names). Therefore, it is primarily a machine \
                    learning library and not a general signal \
                    processing library. The benefits of PyTorch can be \
                    seen in torchaudio through having all the \
                    computations be through PyTorch operations which\
                    makes it easy to use and feel like a natural \
                    extension.

checksums           rmd160  fe693d72d64b1a651351619aae0a58106bbd9ce3 \
                    sha256  c0ae4b1573526d8b04e581393dec74bd31b999a34f377595aecdeef766d79f48 \
                    size    3503436

python.versions     37 38 39

if {${name} ne ${subport}} {
    depends_build-append \
                    path:bin/cmake:cmake \
                    port:ninja \
                    port:py${python.version}-setuptools

    depends_lib-append \
                    port:py${python.version}-pytorch \
                    port:sox

    depends_test-append \
                    port:py${python.version}-pytest

    post-fetch {
        system -W ${worksrcpath} "git submodule update --init --recursive"
    }

    post-destroot {
        set docdir ${prefix}/share/doc/${subport}
        xinstall -d ${destroot}${docdir}
        xinstall -m 0644 -W ${worksrcpath} LICENSE README.md \
            ${destroot}${docdir}
    }

    test.run        yes
    test.cmd        py.test-${python.branch}
    test.env        PYTHONPATH=${worksrcpath}/build/lib

    livecheck.type  none
}
