# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-pyobjc

categories-append   devel
license             MIT
maintainers         nomaintainer
platforms           darwin
description         bidirectional bridge between python and Objective C
long_description    The PyObjC project aims to provide a bridge between \
                    the Python and Objective-C programming languages. The \
                    bridge is intended to be fully bidirectional, allowing \
                    the Python programmer to take full advantage of the \
                    power provided by various Objective-C based toolkits \
                    and the Objective-C programmer transparent access to \
                    Python based functionality.
homepage            https://pyobjc.readthedocs.io

version             6.1
master_sites        pypi:p/pyobjc-core/

python.versions     27 34 35 36 37 38

if {${name} ne ${subport}} {
    if {${python.version} == 27 ||
        ${python.version} == 34 ||
        ${python.version} == 35} {
        # peg at the final version for these Python versions
        version   5.3
        revision  0
        distname  pyobjc-core-${version}
        checksums rmd160 6c2f3aa3d444bc5d577a3b59a116241374787587 \
                  sha256 07554c7fb02a980a2a648f567441cd0bf031a15a7afe284cda197bd4d8b443e3 \
                  size   811139
    } else {
        revision  0
        distname  pyobjc-core-${version}
        checksums rmd160 dc2368d6c2bad5c7c64dfdffcb660df309aaba68 \
                  sha256 1a0fbf012fb575e0adf8c18cfd4453e657cc2c0deb2660c529bf524ba4c9149a \
                  size   791075
    }

    depends_lib-append \
                    port:libffi \
                    port:py${python.version}-setuptools \
                    port:py${python.version}-py2app

    post-patch {
        reinplace "s|use-system-libffi = 0|\\
use-system-libffi = 1\\
deployment-target = ${macosx_deployment_target}\\
|" ${worksrcpath}/setup.cfg
    }

    if {${configure.sdkroot} eq ""} {
        set sdkroot "/"
    } else {
        set sdkroot ${configure.sdkroot}
    }

    build.env-append    SDKROOT=${sdkroot}
    destroot.env-append SDKROOT=${sdkroot}

    platform darwin 8 {
        depends_lib
        pre-fetch {
            ui_error "${subport} @${version} requires Mac OS X 10.5 or later"
            return -code error "incompatible Mac OS X version"
        }
    }

    post-destroot {
        xinstall -m 0644 -W ${worksrcpath} HISTORIC.txt License.txt README.txt \
            ${destroot}${prefix}/share/doc/${subport}
        delete ${destroot}${prefix}/share/doc/${subport}/examples
        copy ${worksrcpath}/Examples \
            ${destroot}${prefix}/share/doc/${subport}/examples
    }

    livecheck.type  none
} else {
    livecheck.type  regex
    livecheck.url   https://pypi.python.org/pypi/pyobjc-core/
    livecheck.regex {pyobjc-core ([0-9.]+)}
}
