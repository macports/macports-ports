# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               python 1.0

name                    poetry
version                 2.0.0
revision                0
categories-append       devel
platforms               {darwin any}
license                 MIT
supported_archs         noarch

maintainers             {gmail.com:davidgilman1 @dgilman} openmaintainer

description             Python dependency management and packaging made easy.

long_description        Poetry: Dependency Management for Python. \
                        \
                        Poetry helps you declare, manage and install \
                        dependencies of Python projects, ensuring you have \
                        the right stack everywhere.

homepage                https://python-poetry.org/

checksums               rmd160  1ba27c2d996f3ef6c988e0d2b99eb898d1819fe7 \
                        sha256  9416b1e3657ed02cda9599ae73b604bd68f187adaa2d8d1bcc804dacfa9bcd1f \
                        size    2844621

variant python39 conflicts python310 python311 python312 description {Use Python 3.9} {}
variant python310 conflicts python39 python311 python312 description {Use Python 3.10} {}
variant python311 conflicts python39 python310 python312 description {Use Python 3.11} {}
variant python312 conflicts python39 python310 python311 description {Use Python 3.12} {}
variant python313 conflicts python39 python310 python311 description {Use Python 3.13} {}

if {![variant_isset python39] && ![variant_isset python310] && ![variant_isset python311] && ![variant_isset python312] } {
    default_variants +python313
}

foreach pv {313 312 311 310 39} {
    if {[variant_isset python${pv}]} {
        python.default_version  ${pv}
        break
    }
}

python.pep517       yes
python.pep517_backend poetry

# These are in pyproject.toml order
depends_lib-append \
    port:py${python.version}-poetry-core \
    port:py${python.version}-poetry-plugin-export \
    port:py${python.version}-poetry-plugin-shell \
    port:py${python.version}-build \
    port:py${python.version}-cachecontrol \
    port:py${python.version}-filelock \
    port:py${python.version}-cleo \
    port:py${python.version}-crashtest \
    port:py${python.version}-dulwich \
    port:py${python.version}-fastjsonschema \
    port:py${python.version}-installer \
    port:py${python.version}-keyring \
    port:py${python.version}-packaging \
    port:py${python.version}-pkginfo \
    port:py${python.version}-platformdirs \
    port:py${python.version}-pyproject_hooks \
    port:py${python.version}-requests \
    port:py${python.version}-requests-toolbelt \
    port:py${python.version}-shellingham \
    port:py${python.version}-tomlkit \
    port:py${python.version}-trove-classifiers \
    port:py${python.version}-virtualenv \
    port:py${python.version}-xattr

if {${python.version} < 311} {
    depends_lib-append \
        port:py${python.version}-tomli
}

if {${python.version} < 310} {
    depends_lib-append \
        port:py${python.version}-importlib-metadata
}

# Shell completion
post-destroot {
    xinstall -d "${destroot}${prefix}/etc/bash_completion.d"
    xinstall -d "${destroot}${prefix}/share/zsh/site-functions"
    xinstall -d "${destroot}${prefix}/share/fish/vendor_completions.d"
    system "PYTHONPATH=${destroot}${python.pkgd} ${destroot}${python.prefix}/bin/poetry completions bash > ${destroot}${prefix}/etc/bash_completion.d/poetry"
    system "PYTHONPATH=${destroot}${python.pkgd} ${destroot}${python.prefix}/bin/poetry completions zsh > ${destroot}${prefix}/share/zsh/site-functions/_poetry"
    system "PYTHONPATH=${destroot}${python.pkgd} ${destroot}${python.prefix}/bin/poetry completions fish > ${destroot}${prefix}/share/fish/vendor_completions.d/poetry.fish"
    reinplace "s|${destroot}||g" \
        ${destroot}${prefix}/etc/bash_completion.d/poetry \
        ${destroot}${prefix}/share/zsh/site-functions/_poetry \
        ${destroot}${prefix}/share/fish/vendor_completions.d/poetry.fish
}

test.run                yes
test.cmd                ${python.bin}
test.target             -m poetry
