# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0
PortGroup           select 1.0

name                py-autopep8
set realname        autopep8
version             1.3.5
categories-append   devel
platforms           darwin
supported_archs     noarch
license             MIT
maintainers         {@reneeotten gmail.com:ottenr.work} openmaintainer

description         A tool that automatically formats Python code to \
                    conform to the PEP 8 style guide
long_description    autopep8 automatically formats Python code to \
                    conform to the PEP 8 style guide. It uses the \
                    pycodestyle utility to determine what parts of \
                    the code needs to be formatted. autopep8 is \
                    capable of fixing most of the formatting issues \
                    that can be reported by pycodestyle.

homepage            https://pypi.python.org/pypi/${realname}

master_sites        pypi:a/${realname}
distname            ${realname}-${version}

checksums           md5     9d0dfe251d003edb8f6a95dc4929b7b7 \
                    rmd160  98c2eeb12ae464628d0b1e2ae5ba090be11ee94b \
                    sha256  2284d4ae2052fedb9f466c09728e30d2e231cfded5ffd7b1a20c34123fdc4ba4 \
                    size    109415

python.versions     27 34 35 36

if {${name} ne ${subport}} {
    depends_build-append    port:py${python.version}-setuptools
    depends_run-append      port:${realname}_select \
                            port:py${python.version}-codestyle

    test.run                yes
    test.cmd                ${python.bin} setup.py

    select.group            ${realname}
    select.file             ${filespath}/${realname}-${python.version}
    notes "
To make the Python ${python.branch} version of autopep8 the one that is run\
when you execute the commands without a version suffix, e.g. 'autopep8', run:

    sudo port select --set ${select.group} [file tail ${select.file}]
"

    livecheck.type  none
} else {
    livecheck.type  pypi
}
