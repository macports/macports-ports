# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           python 1.0

github.setup        pyca cryptography 3.4.7
name                py-${github.project}
revision            0
categories-append   devel
platforms           darwin
license             BSD

python.versions     27 36 37 38 39

maintainers         {stromnov @stromnov} openmaintainer

description         cryptography is a package designed to expose \
                    cryptographic primitives and recipes to Python developers.

long_description    {*}${description}

checksums           ${distname}${extract.suffix} \
                    rmd160  f579f749a23d076f7204bd6cf66d8dceb2ab3866 \
                    sha256  9eb1a420f9f50e131f451b9dc8950c4f3b2a1298ee9d6e25ba873d3f66354a80 \
                    size    35737283

# See:
# * https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst
# * https://ports.macports.org/port/rust/summary
set cryptography_darwin_min_ver 13

if {${name} ne ${subport}
    && [string match "py*-${github.project}" ${subport}]} {
    depends_build-append \
                    port:py${python.version}-setuptools

    depends_lib-append \
                    path:lib/libssl.dylib:openssl \
                    port:py${python.version}-cffi

    # legacy support
    if {${python.version} eq 27
        || ${os.platform} eq "darwin" && ${os.major} < ${cryptography_darwin_min_ver}} {
        github.setup    pyca cryptography 2.9.2
        revision        0

        description     Legacy support of Python cryptography.

        long_description    {*}${description}

        checksums       rmd160  61fb86fd231710d5875428a3a1cefcd5c1d0c99e \
                        sha256  a0c30272fb4ddda5f5ffc1089d7405b7a71b0b0f51993cb4e5dbb4590b2fc229 \
                        size    517571

        if {${os.platform} eq "darwin" && ${os.major} < 11} {
            # https://trac.macports.org/ticket/54519
            patchfiles-append   patch-src__cffi_src_build_openssl.py.diff
        }

        depends_lib-append \
                        port:py${python.version}-six

        if {${python.version} eq 27} {
            depends_lib-append \
                        port:py${python.version}-enum34 \
                        port:py${python.version}-ipaddress
        }

        notes-append \
            "This is a legacy version of ${python.rootname} that contains\
            CVE CVE-2020-36242."
    } else {
        PortGroup   cargo_fetch 1.0

        depends_build-append \
                    port:py${python.version}-setuptools-rust

        depends_test-append \
                    port:py${python.version}-cryptography_vectors \
                    port:py${python.version}-hypothesis \
                    port:py${python.version}-iso8601 \
                    port:py${python.version}-pretend \
                    port:py${python.version}-pytest \
                    port:py${python.version}-pytest-cov \
                    port:py${python.version}-pytest-subtests \
                    port:py${python.version}-pytest-xdist \
                    port:py${python.version}-tz

        # cd ${worksrcpath}/src/rust
        # sudo cargo update
        # egrep -e '^(name|version|checksum) = ' Cargo.lock | perl -pe 's/^(?:name|version|checksum) = "(.+)"/$1/' | tr '\n' ' ' | perl -pe 's|([0-9a-f]{64})|\1 \\\n|g' | pbcopy
        cargo.crates \
                    bitflags 1.2.1 cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693 \
                    cfg-if 1.0.0 baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd \
                    ctor 0.1.19 e8f45d9ad417bcef4817d614a501ab55cdd96a6fdb24f49aab89a54acfd66b19 \
                    ghost 0.1.2 1a5bcf1bbeab73aa4cf2fde60a846858dc036163c7c33bec309f8d17de785479 \
                    indoc 0.3.6 47741a8bc60fb26eb8d6e0238bbb26d8575ff623fdc97b1a2c00c050b9684ed8 \
                    indoc-impl 0.3.6 ce046d161f000fffde5f432a0d034d0341dc152643b2598ed5bfce44c4f3a8f0 \
                    instant 0.1.9 61124eeebbd69b8190558df225adf7e4caafce0d743919e5d6b19652314ec5ec \
                    inventory 0.1.10 0f0f7efb804ec95e33db9ad49e4252f049e37e8b0a4652e3cd61f7999f2eff7f \
                    inventory-impl 0.1.10 75c094e94816723ab936484666968f5b58060492e880f3c8d00489a1e244fa51 \
                    libc 0.2.85 7ccac4b00700875e6a07c6cde370d44d32fa01c5a65cdd2fca6858c479d28bb3 \
                    lock_api 0.4.2 dd96ffd135b2fd7b973ac026d28085defbe8983df057ced3eb4f2130b0831312 \
                    parking_lot 0.11.1 6d7744ac029df22dca6284efe4e898991d28e3085c706c972bcd7da4a27a15eb \
                    parking_lot_core 0.8.3 fa7a782938e745763fe6907fc6ba86946d72f49fe7e21de074e08128a99fb018 \
                    paste 0.1.18 45ca20c77d80be666aef2b45486da86238fabe33e38306bd3118fe4af33fa880 \
                    paste-impl 0.1.18 d95a7db200b97ef370c8e6de0088252f7e0dfff7d047a28528e47456c0fc98b6 \
                    proc-macro-hack 0.5.19 dbf0c48bc1d91375ae5c3cd81e3722dff1abcf81a30960240640d223f59fe0e5 \
                    proc-macro2 1.0.24 1e0704ee1a7e00d7bb417d0770ea303c1bccbabf0ef1667dae92b5967f5f8a71 \
                    pyo3 0.13.2 4837b8e8e18a102c23f79d1e9a110b597ea3b684c95e874eb1ad88f8683109c3 \
                    pyo3-macros 0.13.2 a47f2c300ceec3e58064fd5f8f5b61230f2ffd64bde4970c81fdd0563a2db1bb \
                    pyo3-macros-backend 0.13.2 87b097e5d84fcbe3e167f400fbedd657820a375b034c78bd852050749a575d66 \
                    quote 1.0.9 c3d0b9745dc2debf507c8422de05d7226cc1f0644216dfdfead988f9b1ab32a7 \
                    redox_syscall 0.2.4 05ec8ca9416c5ea37062b502703cd7fcb207736bc294f6e0cf367ac6fc234570 \
                    scopeguard 1.1.0 d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd \
                    smallvec 1.6.1 fe0f37c9e8f3c5a4a66ad655a93c74daac4ad00c441533bf5c6e7990bb42604e \
                    syn 1.0.60 c700597eca8a5a762beb35753ef6b94df201c81cca676604f547495a0d7f0081 \
                    unicode-xid 0.2.1 f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564 \
                    unindent 0.1.7 f14ee04d9415b52b3aeab06258a3f07093182b88ba0f9b8d203f211a7a7d41c7 \
                    winapi 0.3.9 5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419 \
                    winapi-i686-pc-windows-gnu 0.4.0 ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6 \
                    winapi-x86_64-pc-windows-gnu 0.4.0 712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f \

        pre-test {
            test.env-append \
                    PYTHONPATH=[glob -nocomplain ${worksrcpath}/build/lib*]
        }
    
        test.run    yes
        test.cmd    py.test-${python.branch}
        test.target tests
    }

    livecheck.type  none
}

# package cryptography_vectors
regsub 27 ${python.versions} "" python_versions_no27
foreach python_version ${python_versions_no27} {
    subport py${python_version}-cryptography_vectors {
        supported_archs noarch

        depends_build-append \
                    port:py${python_version}-setuptools

        if {${os.platform} eq "darwin" && ${os.major} < ${cryptography_darwin_min_ver}} {
            known_fail yes
            pre-fetch {
                ui_error "${subport} requires macOS 10.[expr ${cryptography_darwin_min_ver} - 4] or later"
                return -code error "unsupported macOS version"
            }
        }

        build.dir   ${worksrcpath}/vectors

        livecheck.type  none
    }
}
