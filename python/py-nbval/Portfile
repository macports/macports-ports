# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0
PortGroup           github 1.0

github.setup        computationalmodelling nbval 0.10.0
revision            0

checksums           rmd160  130761daff52917b8db16470f213c5da403fbdca \
                    sha256  3d1fffaab0fd7772504d8b7f6bd7a8966e6e05f995f1f0678c2d1f853a7bc113 \
                    size    63820

name                py-${github.project}
categories-append   science

supported_archs     noarch
platforms           {darwin any}

license             BSD

maintainers         nomaintainer

description         A py.test plugin to validate Jupyter notebooks

long_description    The plugin adds functionality to py.test to \
                    recognise and collect Jupyter notebooks. The \
                    intended purpose of the tests is to determine \
                    whether execution of the stored inputs match the \
                    stored outputs of the .ipynb file. Whilst also \
                    ensuring that the notebooks are running without \
                    errors.

python.versions     37 38 39 310 311

if {${name} ne ${subport}} {
    depends_build-append \
        port:py${python.version}-setuptools

    depends_run-append \
        port:py${python.version}-coverage \
        port:py${python.version}-ipykernel \
        port:py${python.version}-jupyter_client \
        port:py${python.version}-nbformat \
        port:py${python.version}-pytest \
        port:py${python.version}-six

    depends_test-append \
        port:py${python.version}-matplotlib \
        port:py${python.version}-pytest-cov \
        port:py${python.version}-sympy

    post-patch {
        reinplace "s|\"py.test\"|\"py.test-${python.branch}\"|g" \
            ${worksrcpath}/tests/test_unit_tests_in_notebooks.py
    }

    test.run        yes
    test.cmd        py.test-${python.branch}
    test.target     tests
    test.env        PYTHONPATH=${worksrcpath}/build/lib
}
