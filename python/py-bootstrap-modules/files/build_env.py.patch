From 0fffa1271bfd58ab1f1278f27c1f780b5917a773 Mon Sep 17 00:00:00 2001
From: Ravi Teja Gannavarapu <45204340+IamRaviTejaG@users.noreply.github.com>
Date: Sat, 23 Oct 2021 20:22:47 +0530
Subject: [PATCH] env: only import packaging wherever required

PR #395

Co-authored-by: Ravi Teja Gannavarapu <raviteja@clevertap.com>
---
 src/build/env.py  | 7 ++++---
 tests/test_env.py | 2 +-
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git src/build/env.py src/build/env.py
index 4b0725ad..e6d22b5d 100644
--- src/build/env.py
+++ src/build/env.py
@@ -15,9 +15,6 @@
 from types import TracebackType
 from typing import Callable, Iterable, List, Optional, Tuple, Type
 
-import packaging.requirements
-import packaging.version
-
 import build
 
 
@@ -62,6 +59,8 @@ def install(self, requirements: Iterable[str]) -> None:
 
 @functools.lru_cache(maxsize=None)
 def _should_use_virtualenv() -> bool:
+    import packaging.requirements
+
     # virtualenv might be incompatible if it was installed separately
     # from build. This verifies that virtualenv and all of its
     # dependencies are installed as specified by build.
@@ -254,6 +253,8 @@ def _create_isolated_env_venv(path: str) -> Tuple[str, str]:
     """
     import venv
 
+    import packaging.version
+
     venv.EnvBuilder(with_pip=True, symlinks=_fs_supports_symlink()).create(path)
     executable, script_dir, purelib = _find_executable_and_scripts(path)
 
--- src/build/env.py.orig	2021-11-03 04:19:39.000000000 +1100
+++ src/build/env.py	2021-11-03 04:21:28.000000000 +1100
@@ -17,12 +17,6 @@
 
 import build
 
-
-if sys.version_info < (3, 8):
-    import importlib_metadata as metadata
-else:
-    from importlib import metadata
-
 try:
     import virtualenv
 except ModuleNotFoundError:
@@ -255,6 +249,11 @@
 
     import packaging.version
 
+    if sys.version_info < (3, 8):
+        import importlib_metadata as metadata
+    else:
+        from importlib import metadata
+
     venv.EnvBuilder(with_pip=True, symlinks=_fs_supports_symlink()).create(path)
     executable, script_dir, purelib = _find_executable_and_scripts(path)
 
