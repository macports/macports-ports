# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-flask
version             2.1.1
revision            0

checksums           rmd160  8f419a29ea56e60d989f8a36f557746df5534233 \
                    sha256  a8c9bd3e558ec99646d177a9739c41df1ded0629480b4c8d2975412f3c9519c8 \
                    size    630996

python.versions     27 37 38 39 310
platforms           darwin
maintainers         {@catap korins.ky:kirill} openmaintainer
license             BSD
supported_archs     noarch

description         microframework for Python based on Werkzeug and Jinja2

long_description    Flask is a {*}${description}, intended for small-scale applications

homepage            https://palletsprojects.com/p/flask/
master_sites        pypi:F/Flask/
default distname    {Flask-${version}}

if {${name} ne ${subport}} {
    # The last supported version for 27
    # See: https://github.com/pallets/flask/blob/main/CHANGES.rst#version-200
    if {${python.version} <= 27} {
        version             1.1.4
        revision            0
        checksums           rmd160  03b23def022b1cf6afdcae01cb840f4623288c43 \
                            sha256  0fbeb6180d383a9186d0d6ed954e0042ad9f18e0e8de088b2b419d526927d196 \
                            size    635920
    }

    depends_build-append    port:py${python.version}-setuptools

    depends_lib-append      port:py${python.version}-jinja2 \
                            port:py${python.version}-werkzeug \
                            port:py${python.version}-itsdangerous \
                            port:py${python.version}-click

    if {${python.version} < 310} {
        depends_lib-append  port:py${python.version}-importlib-metadata
    }

    depends_test-append     port:py${python.version}-pytest

    # test before 2.x requires missed py-pathlib
    if {${python.version} > 27} {
        test.run            yes
        test.cmd            py.test-${python.branch}
        test.target         tests
        test.env            PYTHONPATH=${build.dir}/build/lib
    }

    livecheck.type      none
}
