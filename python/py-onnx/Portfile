# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-onnx
version             1.14.1

checksums           md5 2ae765ea11027f44228b4f012b256cd3 \
                    rmd160 189124ae50eb0f3a8f3aaeeb51497a3cce8e96ef \
                    sha256 70903afe163643bd71195c78cedcc3f4fa05a2af651fd950ef3acbb15175b2d1

categories-append   science

license             Apache-2

maintainers         nomaintainer

description         Open Neural Network Exchange

long_description    {*}${description} (ONNX) is an open\
                    ecosystem that empowers AI developers to choose\
                    the right tools as their project evolves. ONNX\
                    provides an open source format for AI models, both\
                    deep learning and traditional ML. It defines an\
                    extensible computation graph model, as well as\
                    definitions of built-in operators and standard\
                    data types. Currently we focus on the capabilities\
                    needed for inferencing (scoring).

homepage            https://onnx.ai/

python.versions     37 38 39 310 311

if {${name} ne ${subport}} {

    compiler.cxx_standard 2011

    depends_build-append \
        path:bin/cmake:cmake \
        port:py${python.version}-pytest-runner \
        port:pybind11

    depends_lib-append \
        port:py${python.version}-numpy \
        port:py${python.version}-protobuf3 \
        port:py${python.version}-typing_extensions

    depends_test-append \
        port:py${python.version}-nbval \
        port:py${python.version}-pytest \
        port:py${python.version}-tabulate

    post-destroot {
        set docdir ${prefix}/share/doc/${subport}
        xinstall -d ${destroot}${docdir}
        xinstall -m 0644 -W ${worksrcpath} LICENSE README.md \
            ${destroot}${docdir}
    }

    pre-test {
        test.env    PYTHONPATH=[glob -nocomplain ${worksrcpath}/build/lib*]
    }

    test.run        yes
    test.cmd        py.test-${python.branch}
    test.target     onnx/test
}
