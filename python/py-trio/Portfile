# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0

name                py-trio
version             0.12.1
categories-append   devel
platforms           darwin
supported_archs     noarch
license             {Apache-2 MIT}

python.versions     36 37

maintainers         {@jandemter demter.de:jan} openmaintainer

description         Friendly Python library for async concurrency and I/O
long_description    The Trio project's goal is to produce a \
                    production-quality, permissively licensed, \
                    async/await-native I/O library for Python. Like all \
                    async libraries, its main purpose is to help you write \
                    programs that do multiple things at the same time with \
                    parallelized I/O.

homepage            https://github.com/python-trio/trio/
master_sites        pypi:t/trio

distname            trio-${version}

checksums           rmd160  6694bfcdc1241765e86e4c25cf53ea2e5f42dd81 \
                    sha256  149a280a4c66ef08d058626e3f48bf979e6e079777d1fc5cae71676586ced672 \
                    size    381536

patchfiles          patch-trio-_socket.py-select-fix.diff

if {${name} ne ${subport}} {
    depends_build-append    port:py${python.version}-setuptools
    depends_run-append      port:py${python.version}-sortedcontainers \
                            port:py${python.version}-async_generator \
                            port:py${python.version}-attrs \
                            port:py${python.version}-idna \
                            port:py${python.version}-outcome \
                            port:py${python.version}-sniffio
    depends_test-append     port:py${python.version}-astor \
                            port:py${python.version}-openssl \
                            port:py${python.version}-yapf \
                            port:py${python.version}-trustme \
                            port:py${python.version}-jedi \
                            port:py${python.version}-pylint \
                            port:py${python.version}-pytest

    if {${python.version} < 37} {
        depends_lib-append  port:py${python.version}-contextvars
    }

    test.run            yes
    test.cmd            py.test-${python.branch}
    test.target
    test.env            PYTHONPATH=${worksrcpath}/build/lib

    livecheck.type      none
}
