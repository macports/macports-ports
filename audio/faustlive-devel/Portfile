# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0

name                    faustlive-devel
version                 2.45-20170105
git.branch              d2ee69d542b4e89872b01f5970a5635341d1983f
categories              audio
platforms               darwin
maintainers             ryandesign gmail.com:aggraef
license                 GPL-3

description             a graphical frontend to the Faust compiler

long_description        FaustLive is ${description}. \
                        It provides an advanced self-contained prototyping \
                        environment for the Faust programming language with \
                        an ultra-short edit-compile-run cycle. \
                        Thanks to its fully embedded compilation chain, \
                        FaustLive is simple to install and doesn't require \
                        any external compiler, development toolchain or SDK \
                        to run. Faust programs can be compiled and run on the \
                        fly by simple drag and drop. They can even be edited \
                        and recompiled while running without interrupting \
                        sound or disconnecting the Jack audio server.

homepage                http://faust.grame.fr/
fetch.type              git
git.url                 git://git.code.sf.net/p/faudiostream/faustlive

set llvm_version        3.4
set llvm_prefix         ${prefix}/libexec/llvm-${llvm_version}
build.env               PATH=${llvm_prefix}/bin:$env(PATH)

depends_build           port:faust2-devel \
                        port:clang-${llvm_version} \
                        port:llvm-${llvm_version}

depends_lib             port:curl \
                        port:libmicrohttpd \
                        port:liblo \
                        port:libsndfile \
                        path:lib/libssl.dylib:openssl \
                        port:qrencode

use_configure           no

build.args              STATIC=1

destroot.args           APPDIR=${applications_dir}

post-destroot {
    set docdir ${destroot}${prefix}/share/doc/${subport}
    xinstall -d ${docdir}/FilesToConfigure
    xinstall -m 644 -W ${worksrcpath} \
        GPL.txt \
        Build/Darwin/README.txt \
        Build/Darwin/Distributions/READ_ME_BEFORE_YOU_START.pdf \
        Build/Darwin/Distributions/Whats_New.pdf \
        Documentation/faust-quick-reference.pdf \
        Documentation/UserManual.pdf \
        ${docdir}
    xinstall -m 644 -W ${worksrcpath}/Build/Darwin/Distributions \
        DefaultDSP.dsp \
        DefaultDSP.lib \
        process.svg \
        ${docdir}/FilesToConfigure
}

variant jack description {Enable Jack support} {
    depends_lib-append  port:jack
    build.args-append   JACK=1
}

variant qt4 conflicts qt5 description {Build with Qt4 support} {
    depends_lib-append  port:qt4-mac
    build.args-append   qm=${prefix}/libexec/qt4/bin/qmake
}

variant qt5 conflicts qt4 description {Build with Qt5 support} {
    depends_lib-append  port:qt5
    build.args-append   qm=${prefix}/libexec/qt5/bin/qmake
}

if {![variant_isset qt4] && ![variant_isset qt5]} {
    default_variants    +qt4
}

# fixme
livecheck.type          none
