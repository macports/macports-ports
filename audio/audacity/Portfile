# -*- coding: utf-8; mode: tcl; tab-width: 4; truncate-lines: t; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:et:sw=4:ts=4:sts=4

PortSystem          1.0

PortGroup           active_variants 1.1
PortGroup           compiler_blacklist_versions 1.0
PortGroup           github 1.0
PortGroup           wxWidgets 1.0

name                audacity

description         A Free, Cross-Platform Digital Audio Editor.
long_description    Audacity is a free, easy-to-use, multi-track audio editor and recorder \
                    for Windows, Mac OS X, GNU/Linux and other operating systems. The interface is translated \
                    into many languages. You can use Audacity to: \n\
                    Record live audio. \n\
                    Record computer playback on any Windows Vista or later machine. \n\
                    Convert tapes and records into digital recordings or CDs. \n\
                    Edit WAV, AIFF, FLAC, MP2, MP3 or Ogg Vorbis sound files. \n\
                    AC3, M4A/M4R (AAC), WMA and other formats supported using optional libraries. \n\
                    Cut, copy, splice or mix sounds together. \n\
                    Numerous effects including change the speed or pitch of a recording. \n\
                    And more!

subport             audacity-devel {
    long_description A port of the Audacity audio editor aimed at development purposes.
}


if {${subport} eq "${name}"} {
    # use the release tarball from github because it contains all required external libs
    # incl. those not in MacPorts.
    github.setup    audacity audacity 2.2.0 Audacity-
    distname        Audacity-${version}
    checksums       rmd160  1404ebe51fd7e9503081ba5f471260c68760b3f3 \
                    sha256  921e527a8e52516f208f8cfe34fa61238c470fd16f2c96839a8d29f41dc0b4f6
    set PPREFIX     ./
} else {
    # git describe --tags : Audacity-2.2.0-1-gfd3813f
    github.setup    audacity audacity fd3813fa30e4f733ea4e1c86bb5cb986c34b5e3c
    version         2.2.0.1
    # this port is intended to facilitate development efforts shared with "upstreams"
    # so using git instead of a tarball fetch type is more appropriate.
    fetch.type      git
    distname        audacity-git
    set PPREFIX     devel/
    variant wx32 description {Use wxWidgets 3.2 - experimental!} {}
}

categories          audio

platforms           darwin
license             GPL-2+
# openssl is a dependency of curl in cmake
license_noconflict  openssl
maintainers         {gmail.com:rjvbertin @RJVB} openmaintainer
universal_variant   no
use_parallel_build  yes

homepage            http://www.audacityteam.org/

compiler.blacklist  {*gcc-[234].[0-8]}

if {[variant_exists wx32] && [variant_isset wx32]} {
    # we want to use the wxWidgets-3.2 "bleeding edge" port!
    wxWidgets.use   wxWidgets-3.2
    patchfiles-append \
                    patch-wxw-31x.diff
} else {
    wxWidgets.use   wxWidgets-3.0
}

depends_build-append \
                    port:${wxWidgets.port}

if {![catch {set wxw_stdlib [active_variants ${wxWidgets.port} stdlib]} err]} {
    if {${wxw_stdlib}} {
        long_description-append "This port needs ${wxWidgets.port} without the +stdlib variant."
        pre-fetch {
            ui_error "This port needs ${wxWidgets.port} without the +stdlib variant."
            return -code error "reinstall port:${wxWidgets.port} without the +stdlib variant"
        }
    }
}

depends_build-append \
                    port:cmake \
                    port:pkgconfig \
                    port:python27
depends_build-append \
                    port:freetype \
                    port:harfbuzz \
                    port:libid3tag \
                    port:libmad \
                    port:soundtouch \
                    port:soxr \
                    port:twolame
depends_lib-append  port:expat \
                    path:lib/libavcodec.dylib:ffmpeg \
                    port:flac \
                    port:lame \
                    port:libogg \
                    port:libsndfile \
                    port:libvorbis \
                    port:portaudio
# audacity could use port:lv2 and port:lilv but would also require a port:suil for that to be possible.

patch.pre_args      -Np1

# address issues in the build system:
# - build and link VSTControlOSX.mm instead of the GTk interface
# - address a visibility issue with the slider_array variable in libnyquist
# - make the AudioUnits plugin support build; on 64bit and also include AUControl.mm
platform darwin {
    patchfiles-append \
                    fix-minsrc-autoreconf.patch                             \
                    libvamp-Makefile-for-osx.diff                           \
                    src-Makefile-for-osx.diff                               \
                    portaudio-no-universal-build.diff                       \
                    buildinfo-clarify-no-gstreamer.diff                     \
                    add_enGB_translation.diff                               \
                    patch-avoid-clang-choke-on-confbase.diff                \
                    patch-more-decent-font-sizes.diff                       \
                    patch-python.diff                                       \
                    patch-vstcontrolosx.diff \
                    patch-libnyquist-symbol-visibility.diff \
                    patch-fix-casts.diff \
                    patch-add-MenusMac.diff \
                    patch-skip-gcc-version-test.diff \
                    patch-fix-audiounits.diff \
                    patch-temp-fixes.diff
    # for building against wxWidgets 3.0.3:
    patchfiles-append \
                    patch-wxw-303.diff
}

post-patch {
    set python_bin ${prefix}/bin/python2.7
    reinplace -W ${worksrcpath} "s|@@PYTHON@@|${python_bin}|g" \
                                lib-src/lv2/build \
                                lib-src/lv2/configure
    reinplace -W ${worksrcpath} "s|/usr/local|${prefix}|g" \
                                src/effects/ladspa/LadspaEffect.cpp \
                                src/export/ExportMP3.cpp \
                                lib-src/lv2/lilv/wscript \
                                lib-src/lv2/lilv/test/lilv_test.c
    reinplace -W ${worksrcpath} "s|/Library/Audio/Plug-Ins/Vamp|/Library/Audio/Plug-Ins/Vamp:${prefix}/lib/vamp|g" \
                                lib-src/libvamp/src/vamp-hostsdk/PluginHostAdapter.cpp
    reinplace -W ${worksrcpath} "s|/Library/Application Support/audacity/libs|${prefix}/lib|g" \
                                src/FFmpeg.h
    reinplace -W ${worksrcpath} "s| -Werror||g" \
                                lib-src/portaudio-v19/configure.in \
                                lib-src/portaudio-v19/configure
    platform darwin {
        # audacity 2.1.2 contains C++ files that include system SDK headers and ObjC code on OS X;
        # they must thus be built as ObjC++
        set make_objcpp { \
            {CommandManager src/commands    {src/Makefile.in src/Makefile.am}} \
            {Effect         src/effects     {src/Makefile.in src/Makefile.am}} \
            {LV2Effect      src/effects/lv2 {src/Makefile.in src/Makefile.am}} \
        }
        foreach mm ${make_objcpp} {
            set f  [lindex ${mm} 0]
            set d  [lindex ${mm} 1]
            set mk [lindex ${mm} 2]
            foreach m ${mk} {
                reinplace -W ${worksrcpath} "s|/${f}.cpp|/${f}.mm|g" ${m}
            }
            # it's easiest to symlink f.mm to f.cpp; clang++ will do the rest.
            if {![file exists ${worksrcpath}/${d}/${f}.mm]} {
                ln -s ${f}.cpp ${worksrcpath}/${d}/${f}.mm
            }
        }
        reinplace -W ${worksrcpath} "s|/VSTControlGTK.cpp|/VSTControlOSX.mm|g" \
                src/Makefile.in src/Makefile.am
        if {[file exists ${worksrcpath}/src/MenusMac.cpp] && ![file exists ${worksrcpath}/src/MenusMac.mm]} {
            ln -s MenusMac.cpp ${worksrcpath}/src/MenusMac.mm
        }
    }
}

configure.args-append \
                    --disable-dependency-tracking \
                    --disable-quicktime \
                    --disable-static \
                    --disable-universal_binary \
                    --enable-audiounits \
                    --enable-shared \
                    --enable-sse \
                    --with-ffmpeg \
                    --with-lame \
                    --with-libflac \
                    --with-libmad \
                    --with-libsoxr \
                    --with-libvamp=local \
                    --with-libvorbis \
                    --with-lv2=local \
                    --with-portmixer \
                    --with-sbsms=local \
                    --with-soundtouch \
                    --with-twolame \
                    --with-widgetextra=local \
                    CPPFLAGS=-I${prefix}/include \
                    WX_CONFIG=${wxWidgets.wxconfig}

# The embedded portmidi is linux-only as of v2.2.0.
# building against the system portaudio leads to missing symbols due to
# mismatched symbol visibility which I haven't managed to address.
configure.args-append \
                    --with-portmidi=system \
                    --with-portaudio=local
configure.env-append \
                    PORTMIDI_CFLAGS=-I${prefix}/include \
                    PORTMIDI_LIBS=${prefix}/lib/libportmidi.dylib
depends_lib-append \
                    port:portmidi

build.args-append   V=1 VERBOSE=1

platform darwin {
    set aud_app_path    ${applications_dir}/Audacity.app
    destroot.keepdirs   ${destroot}${aud_app_path}/Contents/Resources/en.lproj

    post-destroot {
        # create the app bundle infrastructure
        xinstall -m 755 -d ${destroot}${aud_app_path}/Contents/MacOS
        xinstall -m 755 -d ${destroot}${aud_app_path}/Contents/Resources
        # the BundleExec:
        file rename ${destroot}${prefix}/bin/audacity ${destroot}${aud_app_path}/Contents/MacOS/Audacity
        # install the Info.plist provided by Audacity
        xinstall -m 644 ${worksrcpath}/mac/Info.plist ${destroot}${aud_app_path}/Contents/
        # adapt the provided Info.plist
        reinplace "s|AUDACITY_EXECUTABLE|Audacity|g" ${destroot}${aud_app_path}/Contents/Info.plist
        reinplace "s|AUDACITY_INFO_VERSION|${version} (MacPorts)|g" ${destroot}${aud_app_path}/Contents/Info.plist
        # install the provided icons into the Resources directory
        foreach r [glob -nocomplain ${worksrcpath}/mac/Resources/*.icns] {
            xinstall -m 644 ${r} ${destroot}${aud_app_path}/Contents/Resources/
        }
        # allow the application to find certain things where it expects them on OS X (= inside the app bundle)
        foreach r [glob -nocomplain ${destroot}${prefix}/share/audacity/*] {
            ln -s ${prefix}/share/audacity/[file tail ${r}] ${destroot}${aud_app_path}/Contents/Resources
        }
        # install translation resources
        foreach l [glob -nocomplain ${destroot}${prefix}/share/locale/*] {
            set lang [file tail ${l}]
            xinstall -m 755 -d ${destroot}${aud_app_path}/Contents/Resources/${lang}.lproj
            ln -s ${prefix}/share/locale/${lang}/LC_MESSAGES/audacity.mo ${destroot}${aud_app_path}/Contents/Resources/${lang}.lproj/
        }
        foreach l [glob -nocomplain ${wxWidgets.prefix}/share/locale/*] {
            set lang [file tail ${l}]
            xinstall -m 755 -d ${destroot}${aud_app_path}/Contents/Resources/${lang}.lproj
            ln -s ${l}/LC_MESSAGES/wxstd.mo ${destroot}${aud_app_path}/Contents/Resources/${lang}.lproj/
        }
        # install a wrapper script in ${prefix}/bin
        system "echo \"#!/bin/sh\nexec \\\"${aud_app_path}/Contents/MacOS/Audacity\\\" \\\"\\\$\@\\\"\" > ${destroot}${prefix}/bin/audacity"
        system "chmod 755 ${destroot}${prefix}/bin/audacity"
    }
}

notes "
    In case Audacity complains about finding FFmpeg or Lame, please locate these libraries\
    under ${prefix}/lib in the Libraries section of the Preferences dialog (see\
    http://manual.audacityteam.org/man/installing_and_updating_audacity_on_mac_os_x.html#locate)
"

# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax Tcl/Tk; tab-indents true; tab-width 4;
