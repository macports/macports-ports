diff --git a/lib-src/FileDialog/mac/FileDialogPrivate.h b/lib-src/FileDialog/mac/FileDialogPrivate.h
index 697969fd2a31d24501361b71bfc076f37671f813..a2db97e9f21661e874984c01d8375b44d93ecd16 100644
--- a/lib-src/FileDialog/mac/FileDialogPrivate.h
+++ b/lib-src/FileDialog/mac/FileDialogPrivate.h
@@ -96,7 +96,9 @@ protected:
     int m_firstFileTypeFilter;
     wxArrayString m_currentExtensions;
     WX_NSObject m_delegate;
+#if !wxCHECK_VERSION(3, 0, 3)
     WX_NSObject m_sheetDelegate;
+#endif
     wxString m_noOverwritePromptFilename;
 #endif
 
diff --git a/lib-src/FileDialog/mac/FileDialogPrivate.mm b/lib-src/FileDialog/mac/FileDialogPrivate.mm
index 508d8b8002dc18b17c8700f9eb7061c4178e0e6b..a9429f90f5418035152b678108dd7a97c9158653 100644
--- a/lib-src/FileDialog/mac/FileDialogPrivate.mm
+++ b/lib-src/FileDialog/mac/FileDialogPrivate.mm
@@ -143,7 +143,9 @@ void FileDialog::Init()
 {
     m_filterIndex = -1;
     m_delegate = nil;
+#if !wxCHECK_VERSION(3, 0, 3)
     m_sheetDelegate = nil;
+#endif
     m_filterPanel = NULL;
     m_filterChoice = NULL;
 }
@@ -154,14 +156,17 @@ void FileDialog::Create(
     long style, const wxPoint& pos, const wxSize& sz, const wxString& name)
 {
     FileDialogBase::Create(parent, message, defaultDir, defaultFileName, wildCard, style, pos, sz, name);
-
+#if !wxCHECK_VERSION(3, 0, 3)
     m_sheetDelegate = [[ModalDialogDelegate alloc] init];
     [(ModalDialogDelegate*)m_sheetDelegate setImplementation: this];
+#endif
 }
 
 FileDialog::~FileDialog()
 {
+#if !wxCHECK_VERSION(3, 0, 3)
     [m_sheetDelegate release];
+#endif
 }
 
 bool FileDialog::SupportsExtraControl() const
@@ -311,12 +316,26 @@ void FileDialog::ShowWindowModal()
         [sPanel setAllowsOtherFileTypes:NO];
         
         NSWindow* nativeParent = parentWindow->GetWXWindow();
+#if wxCHECK_VERSION(3, 0, 3)
+        // the ModalDialogDelegate class is no longer exported, but the
+        // beginSheetForDirectory: message has been deprecated since 10.6 
+        // Use the modern equivalent:
+        [sPanel setDirectoryURL:[NSURL fileURLWithPath:dir.AsNSString() isDirectory:YES]];
+        [sPanel setNameFieldStringValue:file.AsNSString()];
+        [sPanel beginSheetModalForWindow:nativeParent completionHandler:^(NSInteger result) {
+            if (result == NSFileHandlingPanelOKButton) {
+                NSLog(@"Saved file %@", [sPanel URL]);
+            }
+        }];
+#else
         [sPanel beginSheetForDirectory:dir.AsNSString() file:file.AsNSString()
-            modalForWindow: nativeParent modalDelegate: m_sheetDelegate
+            modalForWindow: nativeParent
+            modalDelegate: m_sheetDelegate
             didEndSelector: @selector(sheetDidEnd:returnCode:contextInfo:)
             contextInfo: nil];
+#endif
     }
-    else 
+    else
     {
         NSOpenPanel* oPanel = [NSOpenPanel openPanel];
         
@@ -330,11 +349,22 @@ void FileDialog::ShowWindowModal()
         [oPanel setAllowsMultipleSelection: (HasFlag(wxFD_MULTIPLE) ? YES : NO )];
         
         NSWindow* nativeParent = parentWindow->GetWXWindow();
+#if wxCHECK_VERSION(3, 0, 3)
+        [oPanel setDirectoryURL:[NSURL fileURLWithPath:dir.AsNSString() isDirectory:YES]];
+        [oPanel setNameFieldStringValue:file.AsNSString()];
+        [oPanel setAllowedFileTypes:types];
+        [oPanel beginSheetModalForWindow:nativeParent completionHandler:^(NSInteger result) {
+            if (result == NSFileHandlingPanelOKButton) {
+                NSLog(@"Opened file(s) %@", [oPanel URLs]);
+            }
+        }];
+#else
         [oPanel beginSheetForDirectory:dir.AsNSString() file:file.AsNSString()
             types: types modalForWindow: nativeParent
             modalDelegate: m_sheetDelegate
             didEndSelector: @selector(sheetDidEnd:returnCode:contextInfo:)
             contextInfo: nil];
+#endif
     }
 }
 
