# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               github 1.0

github.setup            grame-cncm faust d353536f673dafdb1c78a26569cfc4950a4c37e6
# When updating faust2-devel to a new version, please rebuild faustlive-devel
# simultaneously by increasing its revision or updating it to a new version.
version                 2.0-20170313

checksums               rmd160  0f14e70aca6bb9e3c3234e1d3daf95109567f695 \
                        sha256  2f84462c6a32105c3bc52a4d74c4352a60d63fb4ddf6e13350edb6d703393b56

name                    faust2-devel
conflicts               faust faust-devel
categories              audio lang
platforms               darwin
maintainers             ryandesign gmail.com:aggraef
license                 GPL-2
homepage                http://faust.grame.fr/

description             functional programming language for realtime audio

long_description        Faust is a functional programming language \
                        specifically designed for realtime audio applications \
                        and plugins. This is the Faust2 branch which offers \
                        additional backends for C, Java and LLVM bitcode.

set llvm_version        3.4
if {${os.platform} eq "darwin" && ${os.major} > 14} {
    # clang 3.4 isn't supported in the latest macOS versions any more, go with LLVM 3.9 instead.
    set llvm_version    3.9
}

set llvm_prefix         ${prefix}/libexec/llvm-${llvm_version}
build.env               PATH=${llvm_prefix}/bin:$env(PATH)

depends_build           port:pkgconfig

depends_lib             port:clang-${llvm_version} \
                        port:libmicrohttpd \
                        port:libsndfile \
                        port:llvm-${llvm_version} \
                        path:lib/libssl.dylib:openssl

post-patch {
    reinplace "s|/usr/local/|/usr/./local/|g" \
        ${worksrcpath}/tools/faust2appls/faust2faustvst
    reinplace "s|/usr/local|${prefix}|g" \
        ${worksrcpath}/compiler/parser/enrobage.cpp \
        ${worksrcpath}/compiler/tlib/compatibility.cpp \
        ${worksrcpath}/tools/scbuilder/scbuilder \
        {*}[glob ${worksrcpath}/tools/faust2appls/faust2*]
    fs-traverse f ${worksrcpath} {
        switch [file rootname [file tail ${f}]] {
            Makefile {
                reinplace "s|/usr/local|${prefix}|g" ${f}
                reinplace "s|/opt/local|${prefix}|g" ${f}
            }
        }
    }
    reinplace "s|/usr/./local/|/usr/local/|g" \
        ${worksrcpath}/tools/faust2appls/faust2faustvst
}

use_configure           no

variant universal {}

build.args-append       ARCHFLAGS="[get_canonical_archflags cxx]" \
                        CXX="${configure.cxx} [get_canonical_archflags cxx]"
build.target            world

post-destroot {
    set docdir ${destroot}${prefix}/share/doc/${subport}
    xinstall -d ${docdir}
    xinstall -m 644 -W ${worksrcpath} \
        COPYING \
        README.md \
        WHATSNEW \
        ${docdir}
}

# fixme
livecheck.type          none
