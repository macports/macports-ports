# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           gitlab 1.0
PortGroup           compiler_blacklist_versions 1.0

gitlab.instance     https://code.uplex.de
gitlab.setup        stefan audiowmark 0.6.1
revision            0

categories          audio
maintainers         {@aeiouaeiouaeiouaeiouaeiouaeiou outlook.com:aeioudev} openmaintainer
license             GPL-3+

description         Audiowmark is an Open Source (GPL) solution for \
                    audio watermarking.

long_description    {*}${description} A sound file is read by the software, \
                    and a 128-bit message is stored in a watermark in the \
                    output sound file. For human listeners, the files typically \
                    sound the same. However, the 128-bit message can be \
                    retrieved from the output sound file. The process of \
                    retrieving the message does not need the original audio \
                    file (blind decoding). Internally, audiowmark is using \
                    the patchwork algorithm to hide the data in the spectrum \
                    of the audio file.

homepage            https://uplex.de/audiowmark/

checksums           rmd160  f75ca985537eeb87b3f29f4f6e508b84c2524f62 \
                    sha256  7e1b121bfc7acd14119c537e871596a83b7c177ce78c8e71f4accbea06d14bc9 \
                    size    84867

depends_build       port:pkgconfig \
                    port:autoconf-archive

depends_lib         port:fftw-3-single \
                    port:libsndfile \
                    port:libgcrypt \
                    port:libzita-resampler \
                    port:mpg123

compiler.cxx_standard \
                    2014
# Random generator is incompatible with LLVM 15;
# also do not use Xcode Clang due to failing buildbots
# https://github.com/swesterfeld/audiowmark/issues/29
compiler.blacklist  {clang} macports-clang-15

variant ffmpeg description {Build with HTTP Live Streaming support} {
     depends_lib-append path:lib/libavcodec.dylib:ffmpeg
     configure.args-append \
                    --with-ffmpeg
}

use_autoreconf      yes

livecheck.url       https://code.uplex.de/stefan/${name}/tags
livecheck.regex     tags/(\\d+(?:\\.\\d+)*)
