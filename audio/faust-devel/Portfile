# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               github 1.0

github.setup            grame-cncm faust c1b89ad933bf97376d0ae714164aa54e7383fee8
version                 0.9.96-20170305

checksums               rmd160  7fd375dd7b6cd44b974793390da507ef3c801bfd \
                        sha256  c0248efcbb5b0b57c464018d2075d51f2f2198621b7a06811d7a75edb8441b69

name                    faust-devel
conflicts               faust faust2-devel
categories              audio lang
platforms               darwin
maintainers             ryandesign gmail.com:aggraef
license                 GPL-2
homepage                http://faust.grame.fr/

description             functional programming language for realtime audio

long_description        Faust is a functional programming language \
                        specifically designed for realtime audio applications \
                        and plugins.

depends_build           port:pkgconfig

depends_lib             port:libmicrohttpd \
                        port:libsndfile \
                        path:lib/libssl.dylib:openssl

post-patch {
    reinplace "s|/usr/local/|/usr/./local/|g" \
        ${worksrcpath}/tools/faust2appls/faust2faustvst
    reinplace "s|/usr/local|${prefix}|g" \
        ${worksrcpath}/compiler/parser/enrobage.cpp \
        ${worksrcpath}/compiler/tlib/compatibility.cpp \
        ${worksrcpath}/tools/scbuilder/scbuilder \
        {*}[glob ${worksrcpath}/tools/faust2appls/faust2*]
    fs-traverse f ${worksrcpath} {
        switch [file rootname [file tail ${f}]] {
            Makefile {
                reinplace "s|/usr/local|${prefix}|g" ${f}
                reinplace "s|/opt/local|${prefix}|g" ${f}
            }
        }
    }
    reinplace "s|/usr/./local/|/usr/local/|g" \
        ${worksrcpath}/tools/faust2appls/faust2faustvst
}

use_configure           no

variant universal {}

build.args-append       ARCHFLAGS="[get_canonical_archflags cxx]" \
                        CXX="${configure.cxx} [get_canonical_archflags cxx]"
build.target            world

post-destroot {
    set docdir ${destroot}${prefix}/share/doc/${subport}
    xinstall -d ${docdir}
    xinstall -m 644 -W ${worksrcpath} \
        COPYING \
        README.md \
        WHATSNEW \
        ${docdir}
}

# fixme
livecheck.type          none
