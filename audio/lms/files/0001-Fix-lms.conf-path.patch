From ecf3b2ac7ff058d5a33a498b194fa65af427f2bf Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Sat, 14 Sep 2024 14:02:57 +0800
Subject: [PATCH] Fix lms.conf path

---
 src/lms/main.cpp                               | 2 +-
 src/tools/cover/LmsCover.cpp                   | 2 +-
 src/tools/db-generator/LmsDbGenerator.cpp      | 2 +-
 src/tools/recommendation/LmsRecommendation.cpp | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git src/lms/main.cpp src/lms/main.cpp
index 63cb1309..7e231261 100644
--- src/lms/main.cpp
+++ src/lms/main.cpp
@@ -211,7 +211,7 @@ namespace lms
 
     int main(int argc, char* argv[])
     {
-        std::filesystem::path configFilePath{ "/etc/lms.conf" };
+        std::filesystem::path configFilePath{ "/opt/local/etc/lms.conf" };
         int res{ EXIT_FAILURE };
 
         assert(argc > 0);
diff --git src/tools/cover/LmsCover.cpp src/tools/cover/LmsCover.cpp
index ce5f5320..fb44d219 100644
--- src/tools/cover/LmsCover.cpp
+++ src/tools/cover/LmsCover.cpp
@@ -66,7 +66,7 @@ int main(int argc, char* argv[])
         core::Service<core::logging::ILogger> logger{ std::make_unique<core::logging::StreamLogger>(std::cout) };
 
         po::options_description desc{ "Allowed options" };
-        desc.add_options()("help,h", "print usage message")("conf,c", po::value<std::string>()->default_value("/etc/lms.conf"), "LMS config file")("default-cover,d", po::value<std::string>(), "Default cover path")("tracks,t", "dump covers for tracks")("size,s", po::value<unsigned>()->default_value(512), "Requested cover size")("quality,q", po::value<unsigned>()->default_value(75), "JPEG quality (1-100)");
+        desc.add_options()("help,h", "print usage message")("conf,c", po::value<std::string>()->default_value("/opt/local/etc/lms.conf"), "LMS config file")("default-cover,d", po::value<std::string>(), "Default cover path")("tracks,t", "dump covers for tracks")("size,s", po::value<unsigned>()->default_value(512), "Requested cover size")("quality,q", po::value<unsigned>()->default_value(75), "JPEG quality (1-100)");
 
         po::variables_map vm;
         po::store(po::parse_command_line(argc, argv, desc), vm);
diff --git src/tools/db-generator/LmsDbGenerator.cpp src/tools/db-generator/LmsDbGenerator.cpp
index e41882ed..fe1a06a9 100644
--- src/tools/db-generator/LmsDbGenerator.cpp
+++ src/tools/db-generator/LmsDbGenerator.cpp
@@ -177,7 +177,7 @@ int main(int argc, char* argv[])
         const GeneratorParameters defaultParams;
 
         program_options::options_description options{ "Options" };
-        options.add_options()("conf,c", program_options::value<std::string>()->default_value("/etc/lms.conf"), "lms config file")("media-library-count", program_options::value<unsigned>()->default_value(defaultParams.mediaLibraryCount), "Number of media libraries to use")("release-count-per-batch", program_options::value<unsigned>()->default_value(defaultParams.releaseCountPerBatch), "Number of releases to generate before committing transaction")("release-count", program_options::value<unsigned>()->default_value(defaultParams.releaseCount), "Number of releases to generate")("track-count-per-release", program_options::value<unsigned>()->default_value(defaultParams.trackCountPerRelease), "Number of tracks per release")("compilation-ratio", program_options::value<float>()->default_value(defaultParams.compilationRatio), "Compilation ratio (compilation means all tracks have a different artist)")("track-path", program_options::value<std::string>()->required(), "Path of a valid track file, that will be used for all generated tracks")("genre-count", program_options::value<unsigned>()->default_value(defaultParams.genreCount), "Number of genres to generate")("genre-count-per-track", program_options::value<unsigned>()->default_value(defaultParams.genreCountPerTrack), "Number of genres to assign to each track")("mood-count", program_options::value<unsigned>()->default_value(defaultParams.moodCount), "Number of moods to generate")("mood-count-per-track", program_options::value<unsigned>()->default_value(defaultParams.moodCountPerTrack), "Number of moods to assign to each track")("help,h", "produce help message");
+        options.add_options()("conf,c", program_options::value<std::string>()->default_value("/opt/local/etc/lms.conf"), "lms config file")("media-library-count", program_options::value<unsigned>()->default_value(defaultParams.mediaLibraryCount), "Number of media libraries to use")("release-count-per-batch", program_options::value<unsigned>()->default_value(defaultParams.releaseCountPerBatch), "Number of releases to generate before committing transaction")("release-count", program_options::value<unsigned>()->default_value(defaultParams.releaseCount), "Number of releases to generate")("track-count-per-release", program_options::value<unsigned>()->default_value(defaultParams.trackCountPerRelease), "Number of tracks per release")("compilation-ratio", program_options::value<float>()->default_value(defaultParams.compilationRatio), "Compilation ratio (compilation means all tracks have a different artist)")("track-path", program_options::value<std::string>()->required(), "Path of a valid track file, that will be used for all generated tracks")("genre-count", program_options::value<unsigned>()->default_value(defaultParams.genreCount), "Number of genres to generate")("genre-count-per-track", program_options::value<unsigned>()->default_value(defaultParams.genreCountPerTrack), "Number of genres to assign to each track")("mood-count", program_options::value<unsigned>()->default_value(defaultParams.moodCount), "Number of moods to generate")("mood-count-per-track", program_options::value<unsigned>()->default_value(defaultParams.moodCountPerTrack), "Number of moods to assign to each track")("help,h", "produce help message");
 
         program_options::variables_map vm;
         program_options::store(program_options::parse_command_line(argc, argv, options), vm);
diff --git src/tools/recommendation/LmsRecommendation.cpp src/tools/recommendation/LmsRecommendation.cpp
index 578de0ba..4a1a4a73 100644
--- src/tools/recommendation/LmsRecommendation.cpp
+++ src/tools/recommendation/LmsRecommendation.cpp
@@ -132,7 +132,7 @@ int main(int argc, char* argv[])
         core::Service<core::logging::ILogger> logger{ std::make_unique<core::logging::StreamLogger>(std::cout) };
 
         po::options_description desc{ "Allowed options" };
-        desc.add_options()("help,h", "print usage message")("conf,c", po::value<std::string>()->default_value("/etc/lms.conf"), "LMS config file")("artists,a", "Display recommendation for artists")("releases,r", "Display recommendation for releases")("tracks,t", "Display recommendation for tracks")("max,m", po::value<unsigned>()->default_value(3), "Max similarity result count");
+        desc.add_options()("help,h", "print usage message")("conf,c", po::value<std::string>()->default_value("/opt/local/etc/lms.conf"), "LMS config file")("artists,a", "Display recommendation for artists")("releases,r", "Display recommendation for releases")("tracks,t", "Display recommendation for tracks")("max,m", po::value<unsigned>()->default_value(3), "Max similarity result count");
 
         po::variables_map vm;
         po::store(po::parse_command_line(argc, argv, desc), vm);


From 4de02058a1a6db8600c476c2759925b76a52434d Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Sat, 14 Sep 2024 15:24:22 +0800
Subject: [PATCH] Fix lms.conf

---
 conf/lms.conf | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git conf/lms.conf conf/lms.conf
index 4fcca840..14aa01ce 100644
--- conf/lms.conf
+++ conf/lms.conf
@@ -2,10 +2,10 @@
 
 # Path to the working directory
 # Must have write privileges in order to create and modify this directory
-working-dir = "/var/lms/";
+working-dir = "/opt/local/var/lms/";
 
 # ffmpeg location
-ffmpeg-file = "/usr/bin/ffmpeg";
+ffmpeg-file = "/opt/local/bin/ffmpeg";
 
 # Log files, empty means stdout
 log-file = "";
@@ -22,14 +22,14 @@ behind-reverse-proxy = false;
 
 # If enabled, these files have to exist and have correct permissions
 tls-enable = false;
-tls-cert = "/var/lms/cert.pem";
-tls-key = "/var/lms/privkey.pem";
-tls-dh = "/var/lms/dh2048.pem";
+tls-cert = "/opt/local/var/lms/cert.pem";
+tls-key = "/opt/local/var/lms/privkey.pem";
+tls-dh = "/opt/local/var/lms/dh2048.pem";
 
 # Path to the resources used by the web interface.
-wt-resources = "/usr/share/Wt/resources";
-docroot = "/usr/share/lms/docroot/;/resources,/css,/images,/js,/favicon.ico";
-approot = "/usr/share/lms/approot";
+wt-resources = "/opt/local/share/Wt/resources";
+docroot = "/opt/local/share/lms/docroot/;/resources,/css,/images,/js,/favicon.ico";
+approot = "/opt/local/share/lms/approot";
 # Location for deployment (See README if you want to deploy on a non root path)
 deploy-path = "/";
 
