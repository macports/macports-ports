# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           cmake 1.0

name                charm
version             1.10.0

github.setup        KDAB Charm ${version}

maintainers         gmail.com:rjvbertin mk openmaintainer
categories          office
license             GPL-2+ LGPL-2.1+
description         Charm - the Cross-Platform Time Tracker
long_description    Charm is a program for OS X, Linux and Windows that helps to keep track of time. It is built around two major ideas - tasks and events. Tasks are the things time is spend on, repeatedly. For example, ironing laundry is a task. The laundry done for two hours on last Tuesday is an event in that task. When doing laundry multiple times, the events will be accumulated, and can later be printed in activity reports or weekly/monthly time sheets. So in case laundry would be done for three hours on Wednesday again, the activity report for the "Ironing Laundry" task would list the event on tuesday, the event on wednesday and a total of five hours.
platforms           darwin

subport ${name}-qt5 {
    PortGroup       qt5 1.0

    conflicts       ${name}
    depends_lib-append      port:qt5-sqlite-plugin
    configure.args-append   -DWITH_QT4:BOOL=OFF
}

if {${subport} ne "${name}-qt5"} {
    PortGroup       qt4 1.0

    revision        20151018

    conflicts       ${name}-qt5
    depends_build-append    port:automoc
    depends_lib-append      port:qt4-mac-sqlite3-plugin
    configure.args-append   -DWITH_QT4:BOOL=ON
}

checksums           rmd160  40184c4f0de2b7f9fe328b7fd2f0d47922be6e1c \
                    sha256  5c7ea12da4ad1324a9aaf1f5d29612fc1d789a70bbcbfa2f57766b96f04275e1

configure.args-append   -DCharm_VERSION="${version}"

# These patches have still do be adapted to the current version:
#patchfiles          adapt-to-osx-macports.patch

post-extract                {file mkdir ${workpath}/build}
# standard post-arg, where to find the primary CMakeLists.txt file.
default configure.post_args {../${worksrcdir}}
default configure.dir       {${workpath}/build}
default build.dir           {${workpath}/build}

use_parallel_build  yes

destroot {
    xinstall -m 0755 -d ${destroot}${applications_dir}
    file copy ${workpath}/build/Charm/Charm.app ${destroot}${applications_dir}
}

