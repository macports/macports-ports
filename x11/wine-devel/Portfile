# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   muniversal 1.1
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   legacysupport 1.1

# ntdll requires "_fstatat", since wine-5.9
legacysupport.use_static yes
legacysupport.newest_darwin_requires_legacy 13

# Please keep the wine, wine-devel and wine-crossover ports as similar as possible.

name                        wine-devel
conflicts                   wine wine-crossover
set my_name                 wine
version                     7.13
revision                    0
set branch                  [lindex [split ${version} .] 0].x
license                     LGPL-2.1+
categories                  x11
supported_archs             i386 x86_64
maintainers                 {ryandesign @ryandesign} openmaintainer
homepage                    https://www.winehq.org
use_xz                      yes
distname                    ${my_name}-${version}
dist_subdir                 ${my_name}
set wine_distfile           ${distname}${extract.suffix}
set wine_gecko_version      2.47.3
set wine_gecko_distfile     wine-gecko-${wine_gecko_version}-x86${extract.suffix}
set wine_gecko64_distfile   wine-gecko-${wine_gecko_version}-x86_64${extract.suffix}
set wine_mono_version       7.3.0
set wine_mono_distfile      wine-mono-${wine_mono_version}-x86${extract.suffix}

description                 A Windows API implementation

long_description            Wine is a compatibility layer capable of running \
                            Windows applications. \
                            Instead of simulating internal Windows logic like \
                            a virtual machine or emulator, Wine translates \
                            Windows API calls into POSIX calls on-the-fly, \
                            eliminating the performance and memory penalties \
                            of other methods and allowing you to cleanly \
                            integrate Windows applications into your desktop.

master_sites                http://mirrors.ibiblio.org/wine/source/${branch}/:winesource \
                            http://dl.winehq.org/wine/source/${branch}/:winesource \
                            sourceforge:project/wine/Source/:winesource \
                            http://dl.winehq.org/wine/wine-gecko/${wine_gecko_version}/:winegecko \
                            sourceforge:project/wine/Wine%20Gecko/${wine_gecko_version}/:winegecko \
                            http://dl.winehq.org/wine/wine-mono/${wine_mono_version}/:winemono \
                            sourceforge:project/wine/Wine%20Mono/${wine_mono_version}/:winemono

distfiles                   ${wine_distfile}:winesource \
                            ${wine_gecko_distfile}:winegecko \
                            ${wine_gecko64_distfile}:winegecko \
                            ${wine_mono_distfile}:winemono

checksums                   ${wine_distfile} \
                            rmd160  eb5672e98e8d9d62c2aec0d65ece1be9ffc0620f \
                            sha256  6bfebe933daa509569ae79b0bf6a1f1b4f07e1bf8afc16a59bee13748b92ca64 \
                            size    28237664  \
                            ${wine_gecko_distfile} \
                            rmd160  7b456b3b58d5116429eae1c0db78024eb46a88d6 \
                            sha256  08d318f3dd6440a8a777cf044ccab039b0d9c8809991d2180eb3c9f903135db3 \
                            size    43291212 \
                            ${wine_gecko64_distfile} \
                            rmd160  e7ed01bbfbf9dca6df471bc90fc233151ead790e \
                            sha256  0beac419c20ee2e68a1227b6e3fa8d59fec0274ed5e82d0da38613184716ef75 \
                            size    42325312 \
                            ${wine_mono_distfile} \
                            rmd160  47b94e94273c0fc6b6e5710fb3bfd3fcfb4de752 \
                            sha256  60314f255031b2f4dc49f22eacfcd2b3b8b2b491120d703b4b62cc1fef0f9bdd \
                            size    43557004

depends_build               port:bison \
                            port:cctools \
                            port:flex \
                            port:gettext \
                            port:ld64 \
                            port:mingw-w64 \
                            port:pkgconfig

depends_lib                 port:freetype \
                            port:gstreamer1 \
                            port:gstreamer1-gst-plugins-base \
                            port:gstreamer1-gst-plugins-good \
                            port:gnutls \
                            port:libpcap \
                            port:libsdl2 \
                            port:openal-soft

# https://bugs.winehq.org/show_bug.cgi?id=34166#c103
patchfiles-append           0001-winemac.drv-No-Flicker-patch.diff

# layer backed views only works on macOS Mojave and later, since wine-6.17
# https://bugs.winehq.org/show_bug.cgi?id=52354
if {${os.major} < 18} {
    patchfiles-append       1001-Revert-winemac.drv-Remove-now-unused-WineContentView.diff \
                            1002-Revert-winemac.drv-Set-the-surface-contents-directly.diff \
                            1003-Revert-winemac.drv-Move-GL-context-update-code-to-vi.diff \
                            1004-Revert-winemac.drv-Use-a-mask-layer-to-support-windo.diff \
                            1005-Revert-winemac.drv-Enable-layer-backed-views.diff
}

post-extract {
    set fp [open ${worksrcpath}/dlls/appwiz.cpl/addons.c r]
    set file_contents [read ${fp}]
    close ${fp}
    set ok yes
    foreach addon {gecko mono} {
        set addon_version_var wine_${addon}_version
        set addon_version_in_port [set ${addon_version_var}]
        if {[regexp -lineanchor "^#define [string toupper $addon]_VERSION \"(\[^\"\]+)\"$" ${file_contents} -> addon_version_in_file] == 1} {
            if {${addon_version_in_port} ne ${addon_version_in_file}} {
                set ok no
                ui_error "${addon_version_var} should be ${addon_version_in_file} not ${addon_version_in_port}"
            }
        } else {
            set ok no
            ui_error "Could not determine what ${addon_version_var} should be"
        }
    }
    if {!${ok}} {
        return -code error
    }
}

configure.checks.implicit_function_declaration.whitelist-append \
                            __clear_cache \
                            fallocate \
                            gethostbyaddr_r \
                            gethostbyname_r \
                            sched_setaffinity

# wine requires the program specified in INSTALL to create intermediate
# directories; /usr/bin/install doesn't.
# https://bugs.winehq.org/show_bug.cgi?id=35310
configure.install           ${worksrcpath}/tools/install-sh

configure.args              --without-alsa \
                            --without-capi \
                            --with-coreaudio \
                            --with-cups \
                            --without-dbus \
                            --without-fontconfig \
                            --with-freetype \
                            --with-gettext \
                            --without-gettextpo \
                            --without-gphoto \
                            --with-gnutls \
                            --without-gssapi \
                            --with-gstreamer \
                            --without-inotify \
                            --without-krb5 \
                            --with-ldap \
                            --with-mingw \
                            --without-netapi \
                            --with-openal \
                            --with-opencl \
                            --with-opengl \
                            --without-oss \
                            --with-pcap \
                            --with-pthread \
                            --without-pulse \
                            --without-sane \
                            --with-sdl \
                            --without-udev \
                            --with-unwind \
                            --without-usb \
                            --without-v4l2 \
                            --without-vulkan \
                            --without-x

# wine has a native display driver, since wine-1.5.26
variant x11 {
    depends_lib-append          port:libGLU \
                                port:mesa \
                                port:xorg-libX11 \
                                port:xorg-libXcomposite \
                                port:xorg-libXcursor \
                                port:xorg-libXext \
                                port:xorg-libXi \
                                port:xorg-libXinerama \
                                port:xorg-libXrandr \
                                port:xorg-libXxf86vm \
                                port:xorg-libsm \
                                port:xorg-xorgproto \
                                port:xrender

    configure.args-delete       --without-x

    configure.args-append       --with-osmesa \
                                --with-xcomposite \
                                --with-xcursor \
                                --with-xfixes \
                                --with-xinerama \
                                --with-xinput \
                                --with-xinput2 \
                                --with-xrandr \
                                --with-xrender \
                                --with-xshape \
                                --with-xxf86vm \
                                --with-x \
                                --x-include=${prefix}/include \
                                --x-lib=${prefix}/lib
}

# Workaround weirdness with GSTREAMER_CFLAGS not always getting set from pkgconfig
configure.args-append \
    GSTREAMER_CFLAGS="-I${prefix}/include/gstreamer-1.0 -I${prefix}/include/glib-2.0 -I${prefix}/lib/glib-2.0/include -I${prefix}/include/orc-0.4"

if {${os.platform} ne "darwin" || (${os.major} >= 9 && ${os.major} <= 17)} {
    default_variants        +x11
}

configure.args.i386-append      --with-wine64=${workpath}/${worksrcdir}-x86_64
configure.args.x86_64-append    --enable-win64

# We always want the 32Bit loader where supported so force this
if {[llength ${supported_archs}] > 1} {
    variant_set universal
}

# Avoid weird linker errors with Xcode 10 and later
if {${os.major} > 18} {
    macosx_deployment_target    10.14
}

# wine requires clang >= 3.8
# FSF GCC cannot compile code using Apple's "blocks" language extensions
compiler.blacklist-append   {*gcc*} {clang < 800} {macports-clang-3.*}
compiler.fallback-append    macports-clang-5.0

platform darwin {
    # On macOS, Core Text is used instead of fontconfig since Wine 1.5.10
    depends_lib-delete          port:fontconfig
    configure.args-delete       --with-fontconfig
    configure.args-append       --without-fontconfig

    # Vulkan is supported on macOS through MoltenVK since Wine 3.13, but because
    # it uses Metal it only works on 64-bit
    if {${os.major} >= 16} {
        depends_lib-append                      port:MoltenVK
        depends_skip_archcheck-append           MoltenVK
        configure.args.x86_64-delete            --without-vulkan
        configure.args.x86_64-append            --with-vulkan \
                                                ac_cv_lib_soname_MoltenVK=${prefix}/lib/libMoltenVK.dylib \
                                                ac_cv_lib_soname_vulkan=
    }

    if {${os.major} == 12 || ${os.major} == 13} {
        depends_build-append        port:MacOSX10.11.sdk
        configure.sdkroot           ${prefix}/Developer/SDKs/MacOSX10.11.sdk

        # Need to disable metal GPU support or rev-upgrade will cry
        # Support GPU initialization via Metal, since wine-4.15
        # https://gitlab.winehq.org/wine/wine/-/commit/0699089f0ea65c8d66b2cdcdb0731c432720969e
        configure.args-append       ac_cv_header_Metal_Metal_h=
    }

    notes {
        When using the Mac Driver, it might be useful to enable RetinaMode\
        when you're using a high DPI monitor. To do that, open up Wine's\
        Registry Editor:

          wine regedit

        and then navigate to:

          [HKEY_CURRENT_USER\Software\Wine\Mac Driver]

        and then set "RetinaMode" to "y". You may also want to adjust your\
        DPI under the Graphics tab in winecfg.}

    if {${os.major} < 12} {
        known_fail yes
        archive_sites
        distfiles
        depends_build
        depends_lib
        pre-fetch {
            ui_error "${name} @${version} requires Mac OS X 10.8 or later."
            return -code error "incompatible Mac OS X version"
        }
    }
}

if {${os.endian} eq "big"} {
    known_fail yes
    archive_sites
    distfiles
    depends_build
    depends_lib
    pre-fetch {
        ui_error "${name} can only be used on an Intel Mac or other computer with a little-endian processor."
        return -code error "incompatible processor"
    }
}

post-destroot {
    xinstall -d ${destroot}${prefix}/share/wine/gecko
    copy ${workpath}/wine-gecko-${wine_gecko_version}-x86 ${destroot}${prefix}/share/wine/gecko
    copy ${workpath}/wine-gecko-${wine_gecko_version}-x86_64 ${destroot}${prefix}/share/wine/gecko

    xinstall -d ${destroot}${prefix}/share/wine/mono
    copy ${workpath}/wine-mono-${wine_mono_version} ${destroot}${prefix}/share/wine/mono

    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        ANNOUNCE \
        AUTHORS \
        COPYING.LIB \
        LICENSE \
        README \
        ${destroot}${docdir}
}

if {${universal_possible} && [variant_isset universal]} {
    notes-append "
        \n
        Wine supports both 32-bit and 64-bit now. It is compatible with your\
        existing 32-bit wine prefix, but it will now default to 64-bit when you\
        create a new wine prefix. The architecture can be selected using the\
        WINEARCH environment variable which can be set to either \"win32\" or\
        \"win64\".

        To create a new pure 32-bit prefix, you can run:
            \$ WINEARCH=win32 WINEPREFIX=~/.wine32 winecfg

        See the Wine FAQ for details: https://wiki.winehq.org/FAQ#Wineprefixes
    "
}

livecheck.type              regex
livecheck.regex             {"/announce/([^"]+)"}
