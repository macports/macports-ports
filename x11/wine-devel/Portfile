# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   muniversal 1.0
PortGroup                   compiler_blacklist_versions 1.0

# Please keep the wine, wine-devel and wine-crossover ports as similar as possible.

# When updating the version of wine, update wine_gecko and wine_mono to compatible versions
# as referenced in the source code. Check here by replacing X.Y with the version:
# https://source.winehq.org/git/wine.git/blob/refs/tags/wine-X.Y:/dlls/appwiz.cpl/addons.c
# see also http://wiki.winehq.org/Gecko and http://wiki.winehq.org/Mono

name                        wine-devel
conflicts                   wine wine-crossover
set my_name                 wine
version                     3.4
set branch                  [lindex [split ${version} .] 0].x
revision                    1
license                     LGPL-2.1+
categories                  x11
maintainers                 {ryandesign @ryandesign} openmaintainer
homepage                    https://www.winehq.org
platforms                   darwin
supported_archs             i386 x86_64
use_xz                      yes
distname                    ${my_name}-${version}
dist_subdir                 ${my_name}
set wine_distfile           ${distname}${extract.suffix}
set wine_gecko_version      2.47
set wine_gecko_distfile     wine_gecko-${wine_gecko_version}-x86.msi
set wine_gecko64_distfile   wine_gecko-${wine_gecko_version}-x86_64.msi
set wine_mono_version       4.7.1
set wine_mono_distfile      wine-mono-${wine_mono_version}.msi
use_parallel_build          yes

description                 A Windows API implementation

long_description            Wine is a compatibility layer capable of running \
                            Windows applications. Instead of simulating \
                            internal Windows logic like a virtual machine \
                            or emulator, Wine translates Windows API calls \
                            into POSIX calls on-the-fly, eliminating the \
                            performance and memory penalties of other methods \
                            and allowing you to cleanly integrate Windows \
                            applications into your desktop.

master_sites                http://mirrors.ibiblio.org/wine/source/${branch}/:winesource \
                            http://dl.winehq.org/wine/source/${branch}/:winesource \
                            sourceforge:project/wine/Source/:winesource \
                            http://dl.winehq.org/wine/wine-gecko/${wine_gecko_version}/:winegecko \
                            sourceforge:project/wine/Wine%20Gecko/${wine_gecko_version}/:winegecko \
                            http://dl.winehq.org/wine/wine-mono/${wine_mono_version}/:winemono \
                            sourceforge:project/wine/Wine%20Mono/${wine_mono_version}/:winemono

extract.only                ${wine_distfile}

distfiles                   ${wine_distfile}:winesource \
                            ${wine_gecko_distfile}:winegecko \
                            ${wine_gecko64_distfile}:winegecko \
                            ${wine_mono_distfile}:winemono

checksums                   ${wine_distfile} \
                            rmd160  1a5d1650ce60663b210f835f8403a0d4f6e0729a \
                            sha256  a483247ac93f325d623a463438590b7355ec26c670af15d356b0ce6c46398e93 \
                            size    19932472 \
                            ${wine_gecko_distfile} \
                            rmd160  abf7cc78b49dd0623bc8fe87ae0e32bb8694e13d \
                            sha256  3b8a361f5d63952d21caafd74e849a774994822fb96c5922b01d554f1677643a \
                            size    49266176 \
                            ${wine_gecko64_distfile} \
                            rmd160  254da21cb2503f20d065167b385b3e83ea3ab327 \
                            sha256  c565ea25e50ea953937d4ab01299e4306da4a556946327d253ea9b28357e4a7d \
                            size    50806272 \
                            ${wine_mono_distfile} \
                            rmd160  3e2932960dabff8283f02b32dc573b0dda6adfac \
                            sha256  2c8d5db7f833c3413b2519991f5af1f433d59a927564ec6f38a3f1f8b2c629aa \
                            size    56470528

# Note: Most of the X11 libs are dlopen()'d
depends_lib                 port:fontconfig \
                            port:freetype \
                            port:gstreamer1 \
                            port:gstreamer1-gst-plugins-base \
                            port:jpeg \
                            port:lcms2 \
                            port:libiconv \
                            port:libpcap \
                            port:libpng \
                            port:libxml2 \
                            port:libxslt \
                            port:ncurses \
                            port:gnutls \
                            port:openal-soft \
                            port:tiff \
                            port:zlib

depends_build               port:bison \
                            port:flex \
                            port:pkgconfig

patchfiles                  BOOL.patch \
                            cups_headers.patch \
                            fix-flicker.patch \
                            mach_machine.patch

pre-configure {
    if {[variant_isset universal]} {
        foreach arch ${universal_archs_to_use} {
            file mkdir ${worksrcpath}-${arch}
        }

        configure.cmd ${worksrcpath}/configure
    }
}

# Wine requires the program specified in INSTALL to create intermediate
# directories; /usr/bin/install doesn't.
# http://bugs.winehq.org/show_bug.cgi?id=35310
configure.install           ${worksrcpath}/tools/install-sh

configure.args              --without-alsa \
                            --without-capi \
                            --with-cms \
                            --with-coreaudio \
                            --with-cups \
                            --with-curses \
                            --without-dbus \
                            --with-fontconfig \
                            --with-freetype \
                            --without-gettext \
                            --without-gettextpo \
                            --without-gphoto \
                            --with-glu \
                            --with-gnutls \
                            --without-gsm \
                            --with-gstreamer \
                            --without-hal \
                            --with-jpeg \
                            --without-ldap \
                            --without-mpg123 \
                            --without-netapi \
                            --with-openal \
                            --with-opencl \
                            --with-opengl \
                            --without-osmesa \
                            --without-oss \
                            --with-pcap \
                            --with-png \
                            --with-pthread \
                            --without-pulse \
                            --without-sane \
                            --with-tiff \
                            --without-udev \
                            --without-v4l \
                            --without-xcomposite \
                            --without-xcursor \
                            --without-xinerama \
                            --without-xinput \
                            --without-xinput2 \
                            --with-xml \
                            --without-xrandr \
                            --without-xrender \
                            --without-xshape \
                            --without-xshm \
                            --with-xslt \
                            --without-xxf86vm \
                            --with-zlib \
                            --without-x

# Wine has a native macOS driver since 1.5.26 so X11 is optional
variant x11 {
    depends_lib-append          port:libGLU \
                                port:mesa \
                                port:xorg-libX11 \
                                port:xorg-libXcomposite \
                                port:xorg-libXcursor \
                                port:xorg-libXext \
                                port:xorg-libXi \
                                port:xorg-libXinerama \
                                port:xorg-libXrandr \
                                port:xorg-libXxf86vm \
                                port:xorg-libsm \
                                port:xorg-xf86vidmodeproto \
                                port:xrender

    configure.args-delete       --without-osmesa \
                                --without-xcomposite \
                                --without-xcursor \
                                --without-xinerama \
                                --without-xinput \
                                --without-xrandr \
                                --without-xrender \
                                --without-xshape \
                                --without-xxf86vm \
                                --without-x

    configure.args-append       --with-osmesa \
                                --with-xcomposite \
                                --with-xcursor \
                                --with-xinerama \
                                --with-xinput \
                                --with-xrandr \
                                --with-xrender \
                                --with-xshape \
                                --with-xxf86vm \
                                --with-x \
                                --x-include=${prefix}/include \
                                --x-lib=${prefix}/lib
}

default_variants            +x11

configure.universal_args

set merger_build_args(x86_64)     "dlldir=\\\\\${libdir}/wine64"
set merger_destroot_args(x86_64)  "dlldir=\\\\\${libdir}/wine64"
set merger_configure_args(x86_64) "--enable-win64 --libdir=${prefix}/lib"
set merger_configure_args(i386)   --with-wine64=${workpath}/${worksrcdir}-x86_64

if {${build_arch} eq "x86_64"} {
    default_variants            +universal
}

# error: Xcode 3.x cannot build 16-bit code correctly
compiler.blacklist-append   {gcc-4.2 < 5600}

# llvm-gcc-4.2 doesn't respect force_align_arg_pointer; wine builds but fails to run
# http://bugs.winehq.org/show_bug.cgi?id=28030
compiler.blacklist-append   *llvm-gcc-4.2

# clang < 3.1 fails to build wine with "error: invalid operand for instruction lretw"
# http://bugs.winehq.org/show_bug.cgi?id=32872
# clang < 3.2 have code generation problems:
# http://llvm.org/bugs/show_bug.cgi?id=9707
compiler.blacklist-append   {clang < 500}

# FSF GCC cannot compile code using Apple's "blocks" language extensions
compiler.blacklist-append   macports-gcc-*

platform darwin {
    # On macOS, Core Text is used instead of fontconfig since Wine 1.5.10
    depends_lib-delete          port:fontconfig
    configure.args-delete       --with-fontconfig
    configure.args-append       --without-fontconfig

    # Wine uses the native Security framework on macOS since Wine 1.3.16
    depends_lib-delete          port:gnutls
    configure.args-delete       --with-gnutls
    configure.args-append       --without-gnutls

    if {${os.major} < 10} {
        configure.args-delete   --with-opencl
    }

    notes {
        When using the Mac Driver, it might be useful to enable RetinaMode\
        when you're using a high DPI monitor. To do that, open up Wine's\
        Registry Editor:

          wine regedit

        and then navigate to:

          [HKEY_CURRENT_USER\Software\Wine\Mac Driver]

        and then set "RetinaMode" to "y". You may also want to adjust your\
        DPI under the Graphics tab in winecfg.}
}

pre-fetch {
    if {${os.endian} eq "big"} {
        ui_error "${name} can only be used on an Intel Mac or other computer with a little-endian processor."
        return -code error "incompatible processor"
    }

    if {${os.platform} eq "darwin" && ${os.major} < 9} {
        ui_error "${name} ${version} requires OS X 10.5 or greater."
        return -code error "incompatible OS X version"
    }
}

post-destroot {
    xinstall -d ${destroot}${prefix}/libexec/wine
    file rename ${destroot}${prefix}/bin/wine ${destroot}${prefix}/libexec/wine/wine

    xinstall ${filespath}/wine.in ${destroot}${prefix}/bin/wine
    reinplace s|@PREFIX@|${prefix}|g ${destroot}${prefix}/bin/wine

    xinstall -d ${destroot}${prefix}/share/wine/gecko
    xinstall -m 644 ${distpath}/${wine_gecko_distfile} ${destroot}${prefix}/share/wine/gecko

    xinstall -d ${destroot}${prefix}/share/wine/gecko
    xinstall -m 644 ${distpath}/${wine_gecko64_distfile} ${destroot}${prefix}/share/wine/gecko

    xinstall -d ${destroot}${prefix}/share/wine/mono
    xinstall -m 644 ${distpath}/${wine_mono_distfile} ${destroot}${prefix}/share/wine/mono

    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 644 -W ${worksrcpath} \
        ANNOUNCE \
        AUTHORS \
        COPYING.LIB \
        LICENSE \
        README \
        ${destroot}${docdir}
}

if {[variant_isset universal]} {
    notes-append "
        \n
        Wine supports both 32-bit and 64-bit now. It is compatible with your\
        existing 32-bit wine prefix, but it will now default to 64-bit when you\
        create a new wine prefix. The architecture can be selected using the\
        WINEARCH environment variable which can be set to either \"win32\" or
        \"win64\".

        To create a new pure 32-bit prefix, you can run:
            \$ WINEARCH=win32 WINEPREFIX=~/.wine32 winecfg

        See the Wine FAQ for details: https://wiki.winehq.org/FAQ#Wineprefixes
    "
}
livecheck.type              regex
livecheck.regex             {"/announce/([^"]+)"}
