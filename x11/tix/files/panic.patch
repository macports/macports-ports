--- generic/tixDiStyle.c.orig	2004-03-27 20:44:56.000000000 -0600
+++ generic/tixDiStyle.c	2020-12-10 01:14:46.000000000 -0600
@@ -785,7 +785,7 @@
 
     hashPtr = Tcl_CreateHashEntry(&stylePtr->base.items, (char*)iPtr, &isNew);
     if (!isNew) {
-	panic("DItem is already associated with style");
+	Tcl_Panic("DItem is already associated with style");
     } else {
 	Tcl_SetHashValue(hashPtr, (char*)iPtr);
     }
@@ -801,7 +801,7 @@
 
     hashPtr = Tcl_FindHashEntry(&stylePtr->base.items, (char*)iPtr);
     if (hashPtr == NULL) {
-	panic("DItem is not associated with style");
+	Tcl_Panic("DItem is not associated with style");
     }
     Tcl_DeleteHashEntry(hashPtr);
     stylePtr->base.refCount--;
--- generic/tixForm.c.orig	2004-03-27 20:44:56.000000000 -0600
+++ generic/tixForm.c	2020-12-10 02:42:48.000000000 -0600
@@ -802,7 +802,7 @@
      * Now set all the client's geometry
      */
     if (PlaceAllClients(masterPtr) != TCL_OK) {
-	panic("circular dependency");
+	Tcl_Panic("circular dependency");
     }
 
     for (clientPtr = masterPtr->client; clientPtr; clientPtr=clientPtr->next) {
--- generic/tixGrid.c.orig	2008-02-27 22:10:43.000000000 -0600
+++ generic/tixGrid.c	2020-12-10 02:45:16.000000000 -0600
@@ -831,7 +831,7 @@
 	 * All mapped windows should have been unmapped when the
 	 * the entries were deleted
 	 */
-	panic("tixGrid: mappedWindows not NULL");
+	Tcl_Panic("tixGrid: mappedWindows not NULL");
     }
 
     Tk_FreeOptions(configSpecs, (char *) wPtr, wPtr->dispData.display, 0);
--- generic/tixGrData.c.orig	2004-03-27 20:44:56.000000000 -0600
+++ generic/tixGrData.c	2020-12-10 02:47:45.000000000 -0600
@@ -296,7 +296,7 @@
 	Tcl_DeleteHashEntry(cy);
     }
     else {
-	panic("Inconsistent grid dataset: (%d,%d) : %x %x", x, y, cx, cy);
+	Tcl_Panic("Inconsistent grid dataset: (%d,%d) : %x %x", x, y, cx, cy);
     }
 
     return 1;
--- generic/tixHList.c.orig	2008-02-27 22:05:29.000000000 -0600
+++ generic/tixHList.c	2020-12-10 03:30:30.000000000 -0600
@@ -2036,7 +2036,7 @@
 	    break;
 	}
 	if (wPtr->headerWin != NULL) {
-	    panic("HList: header subwindow deleted illegally\n");
+	    Tcl_Panic("HList: header subwindow deleted illegally\n");
 	}
 #endif
 	break;
@@ -2117,7 +2117,7 @@
 	 * All mapped windows should have been unmapped when the
 	 * the entries were deleted
 	 */
-	panic("tixHList: mappedWindows not NULL");
+	Tcl_Panic("tixHList: mappedWindows not NULL");
     }
     if (wPtr->headerWin) {
 	wPtr->headerWin = NULL;
--- generic/tixTList.c.orig	2008-02-27 22:05:29.000000000 -0600
+++ generic/tixTList.c	2020-12-10 03:34:18.000000000 -0600
@@ -1208,7 +1208,7 @@
 	    sprintf(buff, "%d", i);
 	    Tcl_AppendResult(interp, buff, NULL);
 	} else {
-	    panic("TList list entry is invalid");
+	    Tcl_Panic("TList list entry is invalid");
 	}
     } else {
 	Tcl_ResetResult(interp);
--- generic/tixImgXpm.c.orig	2008-02-27 22:05:29.000000000 -0600
+++ generic/tixImgXpm.c	2020-12-10 03:41:43.000000000 -0600
@@ -1213,7 +1213,7 @@
     PixmapMaster *masterPtr = (PixmapMaster *) masterData;
 
     if (masterPtr->instancePtr != NULL) {
-	panic("tried to delete pixmap image when instances still exist");
+	Tcl_Panic("tried to delete pixmap image when instances still exist");
     }
     masterPtr->tkMaster = NULL;
     if (masterPtr->imageCmd != NULL) {
