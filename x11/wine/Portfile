# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   legacysupport 1.1
PortGroup                   muniversal 1.1

# ntdll requires fstatat, since wine-5.9
# https://github.com/wine-staging/wine-staging/commit/762c0e704003f802a5f3470aedd80799cb18c9ef
legacysupport.newest_darwin_requires_legacy 13

# Must be statically linked or wine(64)-preloader breaks
legacysupport.use_static yes

# Please keep the wine, wine-devel and wine-crossover ports as similar as possible.

name                        wine
conflicts                   wine-devel wine-crossover
set my_name                 wine
version                     8.0-rc5
revision                    0
set branch                  [lindex [split ${version} .] 0].0
license                     LGPL-2.1+
categories                  x11
supported_archs             i386 x86_64
maintainers                 {ryandesign @ryandesign} openmaintainer
homepage                    https://www.winehq.org
platforms                   {darwin >= 12}
use_xz                      yes
distname                    ${my_name}-${version}
dist_subdir                 ${my_name}
set wine_distfile           ${distname}${extract.suffix}
set wine_gecko_version      2.47.3
set wine_gecko_distfile     wine-gecko-${wine_gecko_version}-x86.msi
set wine_gecko64_distfile   wine-gecko-${wine_gecko_version}-x86_64.msi
set wine_mono_version       7.4.0
set wine_mono_distfile      wine-mono-${wine_mono_version}-x86.msi

description                 A Windows API implementation

long_description            Wine is a compatibility layer capable of running \
                            Windows applications. \
                            Instead of simulating internal Windows logic like \
                            a virtual machine or emulator, Wine translates \
                            Windows API calls into POSIX calls on-the-fly, \
                            eliminating the performance and memory penalties \
                            of other methods and allowing you to cleanly \
                            integrate Windows applications into your desktop.

master_sites                http://mirrors.ibiblio.org/wine/source/${branch}/:winesource \
                            http://dl.winehq.org/wine/source/${branch}/:winesource \
                            sourceforge:project/wine/Source/:winesource \
                            http://dl.winehq.org/wine/wine-gecko/${wine_gecko_version}/:winegecko \
                            http://dl.winehq.org/wine/wine-mono/${wine_mono_version}/:winemono \
                            sourceforge:project/wine/Wine%20Mono/${wine_mono_version}/:winemono

extract.only                ${wine_distfile}

distfiles                   ${wine_distfile}:winesource \
                            ${wine_gecko_distfile}:winegecko \
                            ${wine_gecko64_distfile}:winegecko \
                            ${wine_mono_distfile}:winemono

checksums                   ${wine_distfile} \
                            rmd160  3330c0fd28139f16bb404a2f31e3de1686aaa5c8 \
                            sha256  067417954fb1fe6d5b6ad36634d739d26b6bd992bc2c00022795cededeae5eda \
                            size    29043124 \
                            ${wine_gecko_distfile} \
                            rmd160  50c27b55cb9d6852903f5b466c31e2122f45892f \
                            sha256  e5b9b06d3ce355646a8d2e72e044e37e1e0c8d18464eb1985adcd187a7f48e01 \
                            size    55686144 \
                            ${wine_gecko64_distfile} \
                            rmd160  1688b0a932b95207c58a293e76f0548d300de057 \
                            sha256  a53ee954392b6d1fe3d68545f6e4e2a97afbc8dc8b03a8b443349545ce139675 \
                            size    54623744 \
                            ${wine_mono_distfile} \
                            rmd160  efb7d419d3c61a12898d5f439e0396f746f2217a \
                            sha256  6413ff328ebbf7ec7689c648feb3546d8102ded865079d1fbf0331b14b3ab0ec \
                            size    87334912

depends_build               port:bison \
                            port:flex \
                            port:mingw-w64 \
                            port:pkgconfig

# Note: Most of the X11 libs are dlopen()'d
depends_lib                 port:fontconfig \
                            port:freetype \
                            path:lib/pkgconfig/gnutls.pc:gnutls \
                            port:gstreamer1 \
                            port:gstreamer1-gst-plugins-base \
                            port:gstreamer1-gst-plugins-good \
                            port:libpcap \
                            port:libsdl2

post-extract {
    set fp [open ${worksrcpath}/dlls/appwiz.cpl/addons.c r]
    set file_contents [read ${fp}]
    close ${fp}
    set ok yes
    foreach addon {gecko mono} {
        set addon_version_var wine_${addon}_version
        set addon_version_in_port [set ${addon_version_var}]
        if {[regexp -lineanchor "^#define [string toupper $addon]_VERSION \"(\[^\"\]+)\"$" ${file_contents} -> addon_version_in_file] == 1} {
            if {${addon_version_in_port} ne ${addon_version_in_file}} {
                set ok no
                ui_error "${addon_version_var} should be ${addon_version_in_file} not ${addon_version_in_port}"
            }
        } else {
            set ok no
            ui_error "Could not determine what ${addon_version_var} should be"
        }
    }
    if {!${ok}} {
        return -code error
    }
}

patchfiles                  fix-flicker.patch

pre-configure {
    # https://gitlab.winehq.org/wine/wine/-/commit/c7a97b5d5d56ef00a0061b75412c6e0e489fdc99
    reinplace -q "/PKG_CONFIG_LIBDIR/d"     ${worksrcpath}/configure
}

# Wine requires the program specified in INSTALL to create intermediate
# directories; /usr/bin/install doesn't.
# http://bugs.winehq.org/show_bug.cgi?id=35310
configure.install           ${worksrcpath}/tools/install-sh

configure.args              --without-alsa \
                            --without-capi \
                            --with-coreaudio \
                            --with-cups \
                            --without-dbus \
                            --with-fontconfig \
                            --with-freetype \
                            --without-gettext \
                            --without-gettextpo \
                            --without-gphoto \
                            --with-gnutls \
                            --without-gssapi \
                            --with-gstreamer \
                            --without-inotify \
                            --without-krb5 \
                            --with-mingw \
                            --without-netapi \
                            --with-opencl \
                            --with-opengl \
                            --without-oss \
                            --with-pcap \
                            --with-pthread \
                            --without-pulse \
                            --without-sane \
                            --with-sdl \
                            --without-udev \
                            --with-unwind \
                            --without-usb \
                            --without-v4l2 \
                            --without-x

# Wine has a native macOS driver since 1.5.26 so X11 is optional
variant x11 {
    depends_lib-append          port:libGLU \
                                port:mesa \
                                port:xorg-libX11 \
                                port:xorg-libXcomposite \
                                port:xorg-libXcursor \
                                port:xorg-libXext \
                                port:xorg-libXi \
                                port:xorg-libXinerama \
                                port:xorg-libXrandr \
                                port:xorg-libXxf86vm \
                                port:xorg-libsm \
                                port:xorg-xorgproto \
                                port:xrender

    configure.args-delete       --without-x

    configure.args-append       --with-osmesa \
                                --with-xcomposite \
                                --with-xcursor \
                                --with-xinerama \
                                --with-xinput \
                                --with-xrandr \
                                --with-xrender \
                                --with-xshape \
                                --with-xxf86vm \
                                --with-x \
                                --x-include=${prefix}/include \
                                --x-lib=${prefix}/lib
}

if {${os.platform} ne "darwin" || (${os.major} >= 9 && ${os.major} <= 17)} {
    default_variants            +x11
}

configure.args.x86_64           --enable-win64

if {${build_arch} eq "x86_64" && ${os.major} < 18} {
    default_variants-append     +universal
}

if {${universal_possible} && [variant_isset universal]} {
    configure.args.i386         --with-wine64=${workpath}/${worksrcdir}-x86_64
} elseif {${universal_possible} && ![variant_isset universal]} {
    supported_archs             i386
}

# wine requires clang >= 3.8
# FSF GCC cannot compile code using Apple's "blocks" language extensions
compiler.blacklist-append   {*gcc*} {clang < 800} {macports-clang-3.*}
compiler.fallback-append    macports-clang-5.0

platform darwin {
    # On macOS, Core Text is used instead of fontconfig since Wine 1.5.10
    depends_lib-delete          port:fontconfig
    configure.args-replace      --with-fontconfig --without-fontconfig

     if {${os.major} > 18} {
         # Avoid weird linker errors with Xcode 10 and later
         macosx_deployment_target 10.14

         # Build i386 & x86_64 PE binaries for WoW64
         configure.args.x86_64-append    --enable-archs=i386,x86_64
     }

    # Vulkan is supported on macOS through MoltenVK since Wine 3.13, but because
    # it uses Metal it only works on 64-bit
    if {${os.major} >= 16 && ${universal_possible} && [variant_isset universal]} {
        depends_lib-append                      port:MoltenVK
        if {"i386" in ${configure.universal_archs}} { depends_skip_archcheck-append MoltenVK }
        configure.args.x86_64-append            --with-vulkan ac_cv_lib_soname_vulkan=
        configure.args.i386-append              --without-vulkan
    } else {
        configure.args-append   --without-vulkan
    }

    notes {
        When using the Mac Driver, it might be useful to enable RetinaMode\
        when you're using a high DPI monitor. To do that, open up Wine's\
        Registry Editor:

          wine regedit

        and then navigate to:

          [HKEY_CURRENT_USER\Software\Wine\Mac Driver]

        and then set "RetinaMode" to "y". You may also want to adjust your\
        DPI under the Graphics tab in winecfg.
    }
}

post-destroot {
    xinstall -d ${destroot}${prefix}/share/wine/gecko
    xinstall -m 0644 -W ${distpath} ${wine_gecko_distfile} ${wine_gecko64_distfile} ${destroot}${prefix}/share/wine/gecko

    xinstall -d ${destroot}${prefix}/share/wine/mono
    xinstall -m 0644 ${distpath}/${wine_mono_distfile} ${destroot}${prefix}/share/wine/mono

    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} \
        ANNOUNCE \
        AUTHORS \
        COPYING.LIB \
        LICENSE \
        README \
        ${destroot}${docdir}
}

if {${universal_possible} && [variant_isset universal]} {
    notes-append "
        \n
        Wine supports both 32-bit and 64-bit now. It is compatible with your\
        existing 32-bit wine prefix, but it will now default to 64-bit when you\
        create a new wine prefix. The architecture can be selected using the\
        WINEARCH environment variable which can be set to either \"win32\" or\
        \"win64\".

        To create a new pure 32-bit prefix, you can run:
            \$ WINEARCH=win32 WINEPREFIX=~/.wine32 winecfg

        See the Wine FAQ for details: https://wiki.winehq.org/FAQ#Wineprefixes
    "
}

livecheck.type              regex
livecheck.regex             {"/announce/([0-9]+\.0(\.[0-9]+)*)"}
