# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           legacysupport 1.1
PortGroup           makefile 1.0

# _faccessat, _clock_gettime
legacysupport.newest_darwin_requires_legacy 15

name                hamclock
version             4.19
revision            0
categories          x11
license             MIT
maintainers         nomaintainer
description         Handy clock with features for amateur radio operators
long_description    {*}${description}
homepage            https://www.clearskyinstitute.com/ham/HamClock
master_sites        ${homepage}/
distname            ESPHamClock-V${version}
extract.suffix      .tgz
checksums           rmd160  59d0d2a4eb4d28f49315584cdc80033c88eed8b1 \
                    sha256  1fde1f683a5f2cf748ccc2dfbecb25d30f2c07888e5a2169055432e9fde8fcfd \
                    size    1966386

worksrcdir          ESPHamClock

variant native description "Build with native cpu optimizations" {}

post-patch {
    # Respect build environment:
    reinplace "s|CXXFLAGS =|CXXFLAGS +=|" ${worksrcpath}/Makefile
    reinplace "s|LIBS =|LIBS +=|" ${worksrcpath}/Makefile
    reinplace "s|CXX =|CXX ?=|" ${worksrcpath}/ArduinoLib/Makefile
    # Fix X11 paths:
    reinplace "s|/opt/X11|${prefix}|g" ${worksrcpath}/Makefile

    # No cpu-specific opts by default:
    if {![variant_isset native]} {
        reinplace "s|-march=native||" ${worksrcpath}/Makefile
    } elseif {${configure.build_arch} in [list ppc ppc64]} {
        # On PowerPC there is no -march= flag:
        reinplace "s|-march=native|-mtune=native|" ${worksrcpath}/Makefile
    }
}

depends_lib-append  port:curl \
                    port:xorg-libX11

depends_run-append  port:desktop-file-utils

compiler.cxx_standard   2017

# If desired, there are targets for bigger sizes.
build.target            hamclock-800x480

if {${os.platform} eq "darwin" && ${os.major} < 16} {
    build.env-append    LIBS=-lMacportsLegacySupport
}

destroot {
    copy ${worksrcpath}/${build.target} ${destroot}${prefix}/bin
    # Make a symlink, so that it can be invoked with ${name}
    ln -s ${build.target} ${destroot}${prefix}/bin/${name}
    xinstall -d ${destroot}${prefix}/share/applications
    xinstall -d ${destroot}${prefix}/share/icons/hicolor/48x48/apps
    copy ${worksrcpath}/${name}.desktop ${destroot}${prefix}/share/applications
    copy ${worksrcpath}/${name}.png ${destroot}${prefix}/share/icons/hicolor/48x48/apps
}

# Only run this for applications, not icons, to avoid GTK dependency:
post-activate {
    system "${prefix}/bin/update-desktop-database ${prefix}/share/applications"
}
