Description: Remaining unsplit changes from previous packager
 Includes the rest of the changes that were applied to the source code by
 previous packager.
Author: Paul E. Johnson (Debian Packaging) <pauljohn32@freefaculty.org>

--- a/configure.in
+++ b/configure.in
@@ -349,7 +349,7 @@
   old_flags="$CFLAGS"
   CFLAGS="-g -lm"
   AC_MSG_CHECKING([whether DBL_EPSILON can be computed])
-  AC_TRY_RUN_WITH_OUTPUT(blt_cv_dbl_epsilon, [
+  AC_TRY_RUN_WITH_OUTPUT([blt_cv_dbl_epsilon], [
 main () {
     double e, u;
     /* 
--- a/generic/bltTree.c
+++ b/generic/bltTree.c
@@ -114,16 +114,18 @@
 
 #define REBUILD_MULTIPLIER	3
 
-#define START_LOGSIZE		5 /* Initial hash table size is 32. */
-#define MAX_LIST_VALUES		21 /* Convert to hash table when node
-				    * value list gets bigger than this
-				    * many values. */
-
 #if (SIZEOF_VOID_P == 8)
 #define RANDOM_INDEX(i)		HashOneWord(mask, downshift, i)
 #define BITSPERWORD		64
+#define START_LOGSIZE		10 
+#define MAX_LIST_VALUES		40 
 #else 
 
+#define START_LOGSIZE		5 /* Initial hash table size is 32. */
+#define MAX_LIST_VALUES		21 /* Convert to hash table when node
+				    * value list gets bigger than this
+				    * many values. */
+
 /*
  * The following macro takes a preliminary integer hash value and
  * produces an index into a hash tables bucket list.  The idea is
--- a/generic/bltText.c
+++ b/generic/bltText.c
@@ -881,6 +881,9 @@
     Pixmap bitmap;
     int active;
 
+    if (!textPtr)
+	return;
+    
     display = Tk_Display(tkwin);
     theta = FMOD(tsPtr->theta, (double)360.0);
     if (theta < 0.0) {
--- a/generic/bltNsUtil.h
+++ b/generic/bltNsUtil.h
@@ -54,7 +54,7 @@
 #ifndef WIN32
 #if 0
 EXTERN Tcl_Command Tcl_FindCommand _ANSI_ARGS_((Tcl_Interp *interp,
-	char *name, Tcl_Namespace *nsPtr, int flags));
+	CONST char *name, Tcl_Namespace *nsPtr, int flags));
 
 
 /*
@@ -66,15 +66,15 @@
 
 #if (TCL_MAJOR_VERSION >= 8)
 EXTERN Tcl_Namespace *Tcl_CreateNamespace _ANSI_ARGS_((Tcl_Interp *interp,
-	char *name, ClientData clientData, Tcl_NamespaceDeleteProc *nsDelProc));
+	CONST char *name, ClientData clientData, Tcl_NamespaceDeleteProc *nsDelProc));
 
 EXTERN void Tcl_DeleteNamespace _ANSI_ARGS_((Tcl_Namespace *nsPtr));
 
 EXTERN Tcl_Namespace *Tcl_FindNamespace _ANSI_ARGS_((Tcl_Interp *interp,
-	char *name, Tcl_Namespace *context, int flags));
+	CONST char *name, Tcl_Namespace *context, int flags));
 
 EXTERN int Tcl_Export _ANSI_ARGS_((Tcl_Interp *interp, Tcl_Namespace *nsPtr,
-	char *name, int resetFlag));
+	CONST char *name, int resetFlag));
 
 EXTERN Tcl_Var Tcl_FindNamespaceVar _ANSI_ARGS_((Tcl_Interp *interp, char *name,
 	Tcl_Namespace *contextNsPtr, int flags));
--- a/demos/scripts/page.tcl
+++ b/demos/scripts/page.tcl
@@ -1,4 +1,4 @@
-#!/usr/local/bin/tclsh
+#!/usr/bin/tclsh8.6
 
 array set page "
     rows	2
--- a/demos/scripts/xcolors.tcl
+++ b/demos/scripts/xcolors.tcl
@@ -1,3 +1,4 @@
+#
 #!../bltwish
 #
 #  Tk version of xcolors
