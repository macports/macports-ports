Description: Documentation fixes
 Corrections in spelling in the blt documentation.
Author: Paul E. Johnson (Debian Packaging) <pauljohn32@freefaculty.org>

--- a/man/barchart.mann
+++ b/man/barchart.mann
@@ -1954,7 +1954,7 @@
 .TP
 \fB\-fill \fIcolor\fR
 Sets the background color of the line.  This color is used with
-striped lines (see the \fB\-fdashes\R option). If \fIcolor\fR is
+striped lines (see the \fB\-fdashes\fR option).  If \fIcolor\fR is
 the empty string, no background color is drawn (the line will be
 dashed, not striped).  The default background color is \fB""\fR.
 .TP
--- a/man/tree.mann
+++ b/man/tree.mann
@@ -393,7 +393,7 @@
 Reverse the direction of the copy.
 .TP
 \fB\-tags\fR
-Copy tag inforation.  Normally the following node is copied: its 
+Copy tag information.  Normally the following node is copied: its
 label and data fields.  This indicates to copy tags as well.
 .RE
 .TP
@@ -1804,7 +1804,7 @@
           set nams {}
           set vals {}
           foreach nam $s(*) {
-              lappend vals \$s($nam)
+              lappend vals $s($nam)
               lappend nams $nam
           }
           set vals [join $vals ,]
--- a/man/bitmap.mann
+++ b/man/bitmap.mann
@@ -82,9 +82,9 @@
 Tk will recognize "gray1" as a bitmap which can now be used with any
 widget that accepts bitmaps.
 .CS
-.barchart element configure elem1 -stipple gray1
+\&.barchart element configure elem1 -stipple gray1
 .CE
-The bitmap data can be specified in a mulitude of forms.
+The bitmap data can be specified in a multitude of forms.
 The following commands are all equivalent.
 .CS
 bitmap define gray1 {
--- a/man/eps.mann
+++ b/man/eps.mann
@@ -55,7 +55,7 @@
 .DE
 The \fBeps\fR item creates a new canvas item. \fICanvas\fR is the name
 of a \fBcanvas\fR widget.  You must supply the X-Y coordinate of
-the new eps item.  How the coordinate is exactly interpretered is 
+the new eps item.  How the coordinate is exactly interpreted is
 controlled by the \fB\-anchor\fR option (see below).
 .PP
 Additional options may be specified on the command line to configure
--- a/man/tabset.mann
+++ b/man/tabset.mann
@@ -86,7 +86,7 @@
 tabs and the sizes of the Tk widgets embedded inside each folder.
 The widest widget determines the width of the folder. The tallest
 determines the height.  If no folders contain an embedded widget, the
-size is detemined solely by the size of the tabs.  
+size is determined solely by the size of the tabs.
 .PP
 You can override either dimension with the tabset's \fB\-width\fR
 and \fB\-height\fR options.
@@ -767,7 +767,7 @@
 \fBcenter\fR.
 .TP
 \fB\-background \fIcolor\fR
-Sets the background color for \fInameOrIndex\fR.  Setting this option overides the 
+Sets the background color for \fInameOrIndex\fR.  Setting this option overrides the
 widget's \fB\-tabbackground\fR option.
 .TP
 \fB\-bindtags \fItagList\fR
--- a/man/hiertable.mann
+++ b/man/hiertable.mann
@@ -1395,7 +1395,7 @@
 The default is \fBsingle\fR.
 .TP
 \fB\-separator \fIstring\fR
-Specifies the character sequence to use when spliting the path components.  
+Specifies the character sequence to use when splitting the path components.
 The separator may be several characters wide (such as "::")
 Consecutive separators in a pathname are treated as one.
 If \fIstring\fR is the empty string, the pathnames are Tcl lists. 
--- a/man/treeview.mann
+++ b/man/treeview.mann
@@ -2037,7 +2037,7 @@
 Set a tile background image to use for selection.
 .TP
 \fB\-separator \fIstring\fR
-Specifies the character sequence to use when spliting the path components.  
+Specifies the character sequence to use when splitting the path components.
 The separator may be several characters wide (such as "::")
 Consecutive separators in a pathname are treated as one.
 If \fIstring\fR is the empty string, the pathnames are Tcl lists. 
--- a/man/hierbox.mann
+++ b/man/hierbox.mann
@@ -1395,7 +1395,7 @@
 The default is \fBsingle\fR.
 .TP
 \fB\-separator \fIstring\fR
-Specifies the character sequence to use when spliting the path components.  
+Specifies the character sequence to use when splitting the path components.
 The separator may be several characters wide (such as "::")
 Consecutive separators in a pathname are treated as one.
 If \fIstring\fR is the empty string, the pathnames are Tcl lists. 
--- a/man/container.mann
+++ b/man/container.mann
@@ -187,7 +187,7 @@
 tabs and the sizes of the Tk widgets embedded inside each folder.
 The widest widget determines the width of the folder. The tallest
 determines the height.  If no folders contain an embedded widget, the
-size is detemined solely by the size of the tabs.  
+size is determined solely by the size of the tabs.
 .PP
 You can override either dimension with the container's \fB\-width\fR
 and \fB\-height\fR options.
--- a/html/eps.html
+++ b/html/eps.html
@@ -15,10 +15,10 @@
 create eps <I>x y </I></B></I>?<I>option value</I>?... 
 <H2><A NAME="sect2" HREF="#toc2">Description</A></H2>
 The <B>eps</B> canvas item lets you place
-encapulated PostScript (EPS) on a canvas, controlling its size and placement.
+encapsulated PostScript (EPS) on a canvas, controlling its size and placement.
  The EPS item is displayed either as a solid rectangle or a preview image.
  The preview image is designated in one of two ways: 1) the EPS file contains
-an ASCII hexidecimal preview, or 2) a Tk photo image.  When the canvas generates
+an ASCII hexadecimal preview, or 2) a Tk photo image.  When the canvas generates
 PostScript output, the EPS will be inserted with the proper translation
 and scaling to match that of the EPS item. So can use the canvas widget
 as a page layout tool. 
@@ -39,7 +39,7 @@
 <CODE><I>canvas <B>create eps <I>x y </I></B></I>?<I>option value</I>?...<BR>
 </CODE><P>The <B>eps</B> item creates a new canvas item. <I>Canvas</I> is the name of a <B>canvas</B> widget.
  You must supply the X-Y coordinate of the new eps item.  How the coordinate
-is exactly interpretered is  controlled by the <B>-anchor</B> option (see below).
+is exactly interpreted is controlled by the <B>-anchor</B> option (see below).
 <P>
 Additional options may be specified on the command line to configure aspects
 of the eps item such as its color, stipple, and font.  The following <I>option</I>
--- a/html/container.html
+++ b/html/container.html
@@ -136,7 +136,7 @@
 size of the container window is determined the number of tiers of tabs
 and the sizes of the Tk widgets embedded inside each folder. The widest
 widget determines the width of the folder. The tallest determines the height.
- If no folders contain an embedded widget, the size is detemined solely
+ If no folders contain an embedded widget, the size is determined solely
 by the size of the tabs.   <P>
 You can override either dimension with the container's
 <B>-width</B> and <B>-height</B> options. 
--- a/html/hierbox.html
+++ b/html/hierbox.html
@@ -1446,7 +1446,7 @@
 
 <DT><B>-separator <I>string</I></B> </DT>
 <DD>Specifies the character sequence
-to use when spliting the path components.   The separator may be several
+to use when splitting the path components.  The separator may be several
 characters wide (such as "::") Consecutive separators in a pathname are
 treated as one. If <I>string</I> is the empty string, the pathnames are Tcl lists.
  Each element is a path component.   The default is <I>""</I>. </DD>
--- a/html/bitmap.html
+++ b/html/bitmap.html
@@ -58,7 +58,8 @@
 label .l -bitmap gray1<BR>
 </CODE><P>Tk will recognize "gray1" as a bitmap which can now be used with any widget
 that accepts bitmaps. <BR>
-<CODE></CODE><P>The bitmap data can be specified in a mulitude of forms. The following commands
+<CODE>.barchart element configure elem1 -stipple gray1<BR>
+</CODE><P>The bitmap data can be specified in a multitude of forms. The following commands
 are all equivalent. <BR>
 <CODE>bitmap define gray1 {<BR>
     #define gray1_width 2<BR>
@@ -128,7 +129,7 @@
 <DD>Specifies the scale of
 the bitmap. <I>Value</I> is a real number representing the scale.  A scale of 1.0
 indicates no scaling is necessary, while 2.0 would double the size of the
-bitmap.  There is no way to specify differents scales for the width and
+bitmap.  There is no way to specify different scales for the width and
 height of the bitmap. The default scale is <I>1.0</I>. </DD>
 </DL>
 </blockquote>
@@ -161,7 +162,7 @@
 <DT><B>-scale <I>value</I></B> </DT>
 <DD>Specifies how to scale the bitmap. <I>Value</I> is a real number representing
 the scale.  A scale of 1.0 indicates no scaling is necessary, while 2.0 would
-double the size of the bitmap.  There is no way to specify differents scales
+double the size of the bitmap.  There is no way to specify different scales
 for the width and height of the bitmap. The default scale is <I>1.0</I>. </DD>
 </DL>
 </blockquote>
--- a/html/tree.html
+++ b/html/tree.html
@@ -641,7 +641,7 @@
 <P><DT><A NAME="M55"><B>-reverse</B></A><DD>
 Reverse the direction of the copy.
 <P><DT><A NAME="M56"><B>-tags</B></A><DD>
-Copy tag inforation.  Normally the following node is copied: its 
+Copy tag information.  Normally the following node is copied: its 
 label and data fields.  This indicates to copy tags as well.
 <P></DL>
 <P><DT><A NAME="M57"><I>treeName</I> <B>create</B> ?<I>switches</I>?</A><DD>
@@ -870,7 +870,7 @@
 <P>
 <DL class="tree operations">
 <DT><A NAME="M120"><B>breadthfirst</B></A><DD>
-Process the node and the subtrees at each sucessive level. Each node
+Process the node and the subtrees at each successive level. Each node
 on a level is processed before going to the next level.
 <P><DT><A NAME="M121"><B>inorder</B></A><DD>
 Recursively process the nodes of the first subtree, the node itself,
@@ -1587,7 +1587,7 @@
 indicating the operations that are traced (it's in the same
 form as <I>ops</I>) and, the command prefix.
 <P><DT><A NAME="M267"><I>treeName</I> <B>trace names</B></A><DD>
-Returns a list of identifers for all the current traces.
+Returns a list of identifiers for all the current traces.
 <P></DL>
 <H3><A NAME="M268">NOTIFY OPERATIONS</A></H3>
 Tree objects can be shared among many clients, such as a
@@ -1672,7 +1672,7 @@
 It consists of the notify id, a sublist of event flags (it's in the same
 form as <I>flags</I>) and, the command prefix.
 <P><DT><A NAME="M283"><I>treeName</I> <B>notify names</B></A><DD>
-Returns a list of identifers for all the current notifiers.
+Returns a list of identifiers for all the current notifiers.
 
 <P></DL>
 <H3><A NAME="M284">TABLE EXAMPLE</A></H3>
--- a/html/spline.html
+++ b/html/spline.html
@@ -32,7 +32,7 @@
 curve.  Spline interpolation is the mathematical equivalent.  The curves
 between adjacent knots are piecewise functions such that the resulting
 spline runs exactly through all the knots.  The order and coefficients of
-the polynominal determine the "looseness" or "tightness" of the curve fit
+the polynomial determine the "looseness" or "tightness" of the curve fit
 from the line segments formed by the knots. <P>
 The <B>spline</B> command performs
 spline interpolation using cubic ("natural") or quadratic polynomial functions.
@@ -87,7 +87,7 @@
 .graph element create spline -x sx -y sy -color red<BR>
 table . .graph<BR>
 </CODE><P>The <B>natural</B> operation employs a cubic interpolant when forming the spline.
- In terms of the draftmen's spline, a <I>natural spline</I> requires the least
+ In terms of the draftsmen's spline, a <I>natural spline</I> requires the least
 amount of energy to bend the spline (strip of wood), while still passing
 through each knot.  In mathematical terms, the second derivatives of the
 first and last points are zero. <P>
@@ -139,7 +139,7 @@
 by D.F.Mcallister &amp; J.A.Roulier
 Coded by S.L.Dodd &amp; M.Roulier N.C.State University.
 
-</PRE>The original code for the quadratric spline can be found in TOMS #574. 
+</PRE>The original code for the quadratic spline can be found in TOMS #574. 
 <H2><A NAME="sect7" HREF="#toc7">Keywords</A></H2>
 spline,
 vector, graph <P>
--- a/html/bgexec.html
+++ b/html/bgexec.html
@@ -122,7 +122,7 @@
 Specifies the encoding of the stderr channel. This affects only data returned
 to the Tcl interpreter.  No translation  is done on file redirection. <BR>
 For example if data is to be converted from Unicode for use in Tcl, you
-would use the "unicode" encoding. The default is that no  tranlation is
+would use the "unicode" encoding. The default is that no  translation is
 performed. </DD>
 
 <DT><B>-decodeoutput <I>encodingName</I></B>  </DT>
@@ -130,7 +130,7 @@
 Specifies the encoding of the stdout channels. This affects only data returned
 to the Tcl interpreter.  No translation  is done on file redirection. <BR>
 For example if data is to be converted from Unicode for use in Tcl, you
-would use the "unicode" encoding. The default is that no  tranlation is
+would use the "unicode" encoding. The default is that no  translation is
 performed. </DD>
 
 <DT><B>-error <I>varName</I></B>  </DT>
@@ -234,7 +234,7 @@
 <P>
 </CODE><P>The biggest advantage of <B>bgexec</B> is that, unlike <B>fileevent</B>, it requires
 no additional Tcl code to run a program.  It's simpler and less error prone.
- You don't have to worry about non-blocking I/O. It's handled tranparently
+ You don't have to worry about non-blocking I/O. It's handled transparently
 for you. <P>
 <B>Bgexec</B> runs programs that <B>fileevent</B> can not. <B>Fileevent</B> assumes that
 the when stdout is closed the program has completed.  But some programs,
--- a/html/table.html
+++ b/html/table.html
@@ -29,7 +29,7 @@
 <B>table search <I>container</I></B> ?<I>switch arg</I>?... 
 <H2><A NAME="sect2" HREF="#toc2">Description</A></H2>
 The <B>table</B> command
-arranges widgets in a table.  The alignment of widgets is detemined by their
+arranges widgets in a table.  The alignment of widgets is determined by their
 row and column positions and the number of rows or columns that they span.
 
 <H2><A NAME="sect3" HREF="#toc3">Introduction</A></H2>
@@ -241,7 +241,7 @@
 of a widget.  <I>Item</I> can be in any form describe in the <B>configure</B> operation
 below. If no <I>item</I> argument is provided, then the configuration option is
 for the table itself.  <I>Option</I> may be any one of the options described in
-the appropiate section for <I>item</I>. </DD>
+the appropriate section for <I>item</I>. </DD>
 
 <DT><B>table configure</B> <I>container item</I>... ?<I>option
 value</I>?...  </DT>
--- a/html/tabset.html
+++ b/html/tabset.html
@@ -241,7 +241,7 @@
 tabs and the sizes of the Tk widgets embedded inside each folder.
 The widest widget determines the width of the folder. The tallest
 determines the height.  If no folders contain an embedded widget, the
-size is detemined solely by the size of the tabs.  
+size is determined solely by the size of the tabs.  
 <P>
 You can override either dimension with the tabset's <B>-width</B>
 and <B>-height</B> options.
@@ -762,7 +762,7 @@
 be aligned with the leftmost edge of the folder. The default value is
 <B>center</B>.
 <P><DT><A NAME="M110"><B>-background </B><I>color</I></A><DD>
-Sets the background color for <I>nameOrIndex</I>.  Setting this option overides the 
+Sets the background color for <I>nameOrIndex</I>.  Setting this option overrides the 
 widget's <B>-tabbackground</B> option.
 <P><DT><A NAME="M111"><B>-bindtags </B><I>tagList</I></A><DD>
 Specifies the binding tags for this tab.  <I>TagList</I> is a list of
--- a/html/barchart.html
+++ b/html/barchart.html
@@ -332,7 +332,7 @@
 
 <DT><B>-barwidth <I>value</I></B>  </DT>
 <DD>Specifies the width
-of the bars.  This value can be overrided by the individual elements using
+of the bars.  This value can be overridden by the individual elements using
 their <B>-barwidth</B> configuration option. <I>Value</I> is the width in terms of graph
 coordinates.  The default width is <I>1.0</I>. </DD>
 
--- a/html/winop.html
+++ b/html/winop.html
@@ -51,7 +51,7 @@
 <H2><A NAME="sect2" HREF="#toc2">Description</A></H2>
 The <B>winop</B> command performs various window
 and image operations on Tk windows using low-level Xlib function calls to
-work around window manager pecularities. 
+work around window manager peculiarities. 
 <H2><A NAME="sect3" HREF="#toc3">Introduction</A></H2>
 Tk has several commands
 for manipulating its windows: <B>raise</B>, <B>lower</B>, <B>wm</B>, etc.  These commands ask
--- a/man/stripchart.mann
+++ b/man/stripchart.mann
@@ -1,3 +1,4 @@
+'\"
 '\" Copyright 1991-1997 by Bell Labs Innovations for Lucent Technologies.
 '\"
 '\" Permission to use, copy, modify, and distribute this software and its
@@ -2061,7 +2062,7 @@
 terminates that script and skips any remaining scripts for the event, 
 just as for the bind command.
 .sp
-The \fB\-bindtags\R option for these components controls addition
+The \fB\-bindtags\fR option for these components controls addition
 tag names which can be matched.  Implicitly elements and markers
 always have tags matching their names.  Setting the value of
 the \fB\-bindtags\fR option doesn't change this.
@@ -2160,9 +2161,8 @@
 .CS
 # Works for now.
 \&.s legend configure -mapped no
-
 # Instead use this.
 \&.s legend configure -hide yes    
-.CE 
+.CE
 .SH KEYWORDS
 stripchart, graph, widget
--- a/man/vector.mann
+++ b/man/vector.mann
@@ -1277,7 +1277,7 @@
 .CS
 #include <tcl.h>
 #include <blt.h>				
-...
+\&...
 Blt_Vector *vecPtr;
 double *newArr;
 FILE *f;
--- a/man/Blt_TreeGetNode.man3
+++ b/man/Blt_TreeGetNode.man3
@@ -58,7 +58,7 @@
 unsigned int number;
 Blt_TreeNode node;
 Blt_TreeToken token;
-...
+\&...
 node = Blt_TreeGetNode(token, number);
 if (node == NULL) {
     printf("no node with ID %d exists\\n", number);
