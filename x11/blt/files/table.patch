Description: Patch restores blt::table command which was renamed to
    blt::blttable in 2.5.3.
    TODO: Make the blttable alias if necessary.
Author: Sergei Golovan
Last-Modified: Fri, 04 Jul 2014 09:22:10 +0400

--- a/demos/tour.tcl
+++ b/demos/tour.tcl
@@ -22,7 +22,7 @@
 # --------------------------------------------------------------------------
 if { $tcl_version >= 8.0 } {
     namespace import -force blt::*
-    interp alias {} table {} blttable
+    #interp alias {} table {} blttable
     #namespace import -force blt::tile::*
 }
 source scripts/demo.tcl
--- a/generic/bltTable.c
+++ b/generic/bltTable.c
@@ -24,7 +24,7 @@
  * out of or in connection with the use or performance of this
  * software.
  *
- *	The "blttable" geometry manager was created by George Howlett.
+ *	The "table" geometry manager was created by George Howlett.
  */
 
 /*
@@ -85,7 +85,7 @@
 
 static Tk_GeomMgr tableMgrInfo =
 {
-    "blttable",			/* Name of geometry manager used by winfo */
+    "table",			/* Name of geometry manager used by winfo */
     WidgetGeometryProc,		/* Procedure to for new geometry requests */
     WidgetCustodyProc,		/* Procedure when widget is taken away */
 };
@@ -4955,7 +4955,7 @@
 Blt_TableInit(interp)
     Tcl_Interp *interp;
 {
-    static Blt_CmdSpec cmdSpec = {"blttable", TableCmd, };
+    static Blt_CmdSpec cmdSpec = {"table", TableCmd, };
     TableInterpData *dataPtr;
 
     dataPtr = GetTableInterpData(interp);
--- a/library/graph.tcl
+++ b/library/graph.tcl
@@ -434,50 +434,50 @@
     set row 1
     set col 0
     label $top.title -text "PostScript Options"
-    blttable $top $top.title -cspan 7
+    blt::table $top $top.title -cspan 7
     foreach bool { center landscape maxpect preview decorations } {
 	set w $top.$bool-label
 	label $w -text "-$bool" -font *courier*-r-*12* 
-	blttable $top $row,$col $w -anchor e -pady { 2 0 } -padx { 0 4 }
+	blt::table $top $row,$col $w -anchor e -pady { 2 0 } -padx { 0 4 }
 	set w $top.$bool-yes
 	global $graph.$bool
 	radiobutton $w -text "yes" -variable $graph.$bool -value 1
-	blttable $top $row,$col+1 $w -anchor w
+	blt::table $top $row,$col+1 $w -anchor w
 	set w $top.$bool-no
 	radiobutton $w -text "no" -variable $graph.$bool -value 0
-	blttable $top $row,$col+2 $w -anchor w
+	blt::table $top $row,$col+2 $w -anchor w
 	incr row
     }
     label $top.modes -text "-colormode" -font *courier*-r-*12* 
-    blttable $top $row,0 $top.modes -anchor e  -pady { 2 0 } -padx { 0 4 }
+    blt::table $top $row,0 $top.modes -anchor e  -pady { 2 0 } -padx { 0 4 }
     set col 1
     foreach m { color greyscale } {
 	set w $top.$m
 	radiobutton $w -text $m -variable $graph.colormode -value $m
-	blttable $top $row,$col $w -anchor w
+	blt::table $top $row,$col $w -anchor w
 	incr col
     }
     set row 1
     frame $top.sep -width 2 -bd 1 -relief sunken
-    blttable $top $row,3 $top.sep -fill y -rspan 6
+    blt::table $top $row,3 $top.sep -fill y -rspan 6
     set col 4
     foreach value { padx pady paperwidth paperheight width height } {
 	set w $top.$value-label
 	label $w -text "-$value" -font *courier*-r-*12* 
-	blttable $top $row,$col $w -anchor e  -pady { 2 0 } -padx { 0 4 }
+	blt::table $top $row,$col $w -anchor e  -pady { 2 0 } -padx { 0 4 }
 	set w $top.$value-entry
 	global $graph.$value
 	entry $w -textvariable $graph.$value -width 8
-	blttable $top $row,$col+1 $w -cspan 2 -anchor w -padx 8
+	blt::table $top $row,$col+1 $w -cspan 2 -anchor w -padx 8
 	incr row
     }
-    blttable configure $top c3 -width .125i
+    blt::table configure $top c3 -width .125i
     button $top.cancel -text "Cancel" -command "destroy $top"
-    blttable $top $row,0 $top.cancel  -width 1i -pady 2 -cspan 3
+    blt::table $top $row,0 $top.cancel  -width 1i -pady 2 -cspan 3
     button $top.reset -text "Reset" -command "destroy $top"
-    #blttable $top $row,1 $top.reset  -width 1i
+    #blt::table $top $row,1 $top.reset  -width 1i
     button $top.print -text "Print" -command "blt::ResetPostScript $graph"
-    blttable $top $row,4 $top.print  -width 1i -pady 2 -cspan 2
+    blt::table $top $row,4 $top.print  -width 1i -pady 2 -cspan 2
 }
 
 proc blt::ResetPostScript { graph } {
--- a/library/tabnotebook.tcl
+++ b/library/tabnotebook.tcl
@@ -215,7 +215,7 @@
     set top "$widget.toplevel-$id"
     toplevel $top
     $widget tab tearoff $tab $top.container
-    blttable $top $top.container -fill both
+    table $top $top.container -fill both
 
     incr rootX 10 ; incr rootY 10
     wm geometry $top +$rootX+$rootY
